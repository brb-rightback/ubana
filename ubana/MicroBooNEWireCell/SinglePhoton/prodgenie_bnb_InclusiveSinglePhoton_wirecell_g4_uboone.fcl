#include "services_microboone.fcl"
#include "genie_microboone_default+MEC.fcl"
#include "filters.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "time_memory_tracker_microboone.fcl"


process_name: GenieGenFiltered

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "genie_g4_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_gen_services
  @table::microboone_g4_services
  IFDH:         {}
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10000          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::microboone_genie_simple
   rns:       { module_type: "RandomNumberSaver" }
   largeant: @local::microboone_largeant
   drift:    {
                 module_type: SimDriftElectrons
                 SimulationLabel: "largeant:TPCActive"
             }
   ionization: {
                 module_type: "larsim/ElectronDrift/ShiftEdepSCE"
                 EDepTag:     "largeant:TPCActive"
                 MakeAnaTree: false
               }
    mcreco:    @local::standard_mcreco
 }

 filters:
 {

   InclusiveSinglePhotonGenieFilter:
   {
     module_type: "InclusiveSinglePhotonGenie"
   }

   InclusiveSinglePhotonFilter:
   {
     module_type: "InclusiveSinglePhoton"
   }

 }

 #define the producer and filter modules for this path, order matters,
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, generator, InclusiveSinglePhotonGenieFilter, largeant, InclusiveSinglePhotonFilter, ionization, mcreco]

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #ie filters and producers
 trigger_paths: [simulate]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prodgenie_bnb_nu_filtered_InclusiveSinglePhoton_uboone_%tc_gen_g4.root"
   dataTier:    "generated"
   SelectEvents: [ simulate ]
   compressionLevel: 1
 }
}

#outputs.out1.fileName: "prodgenie_bnb_nu_filtered_InclusiveSinglePhoton_uboone_%tc_gen.root"

#source.maxEvents: 100

physics.producers.generator: @local::microboone_genie_simple
physics.producers.generator.GlobalTimeOffset: 3125.
physics.producers.generator.RandomTimeOffset: 1600.
physics.producers.generator.TopVolume: "volCryostat"
physics.producers.generator.BeamName: "booster"
physics.producers.generator.EventGeneratorList: "Default+CCMEC+NCMEC"
physics.producers.generator.GeomScan:     "flux: 10000 1.3 1"

services.LArG4Parameters.FillSimEnergyDeposits:       true
#services.LArG4Parameters.NoElectronPropagation:       true
services.LArG4Parameters.InitialSimEnergyDepositSize: 100000

# Switching to the "drift" for SimChannels
#physics.producers.mcreco.G4ModName:                   "drift"

physics.producers.largeant.KeepParticlesInVolumes: ["volCryostat"] #only keep MCParticles that cross the cryostat

physics.producers.mcreco.MCParticleLabel: "largeant"
physics.producers.mcreco.SimChannelLabel: "ionization" # "driftWC:simpleSC"
physics.producers.mcreco.UseSimEnergyDeposit: true
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,1000010020,1000010030,1000020030,1000020040]

services.SpaceCharge.EnableSimSpatialSCE:          true
services.SpaceCharge.EnableSimEfieldSCE:           true
services.DetectorClocksService.InheritClockConfig: false

#services.SpaceCharge.CalibrationInputFilename: "SpaceCharge/SCEoffsets_dataDriven_combined_bkwd_Jan18.root"
#services.SpaceCharge.EnableCalEfieldSCE: true
#services.SpaceCharge.EnableCalSpatialSCE: true
#services.SpaceCharge.EnableCorrSCE: true
#services.SpaceCharge.EnableSimSpatialSCE: true
#services.SpaceCharge.EnableSimEfieldSCE: true
#services.SpaceCharge.InputFilename: "SpaceCharge/SCEoffsets_dataDriven_combined_fwd_Jan18.root"
#services.SpaceCharge.ResponseType: "Voxelized_TH3"
#services.SpaceCharge.service_provider: "SpaceChargeServiceMicroBooNE"
