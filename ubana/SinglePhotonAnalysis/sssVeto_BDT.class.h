// Class: ReadBDT
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDT
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.10/02       [395778]
Creator        : mark
Date           : Mon Aug 26 17:02:59 2019
Host           : Linux SFT-ubuntu-2 4.4.0-78-generic #99-Ubuntu SMP Thu Apr 27 15:29:09 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /home/mark/work/uBooNE/HIVE2.0/hellstroms_hive/hive/build/bin
Training events: 11650
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "1500" [Number of trees in the forest]
MaxDepth: "5" [Max depth of the decision tree allowed]
MinNodeSize: "2.5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
nCuts: "-1" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "AdaBoost" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
UseBaggedBoost: "True" [Use only a random subsample of all events for growing the trees in each boost iteration.]
AdaBoostBeta: "1.000000e-01" [Learning rate  for AdaBoost algorithm]
BaggedSampleFraction: "5.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
SeparationType: "giniindex" [Separation criterion for node splitting]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
Shrinkage: "1.000000e+00" [Learning rate for GradBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "4" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Poisson distribution in each split with RandomisedTree option]
UseYesNoLeaf: "False" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "inverseboostnegweights" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in training sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
RegressionLossFunctionBDTG: "huber" [Loss function for BDTG regression.]
HuberQuantile: "7.000000e-01" [In the Huber loss function this is the quantile that separates the core from the tails in the residuals distribution.]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
SkipNormalization: "False" [Skip normalization at initialization, to keep expectation value of BDT output according to the fraction of events]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "5.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
new BDTNodeodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 14
sss_candidate_num_hits        sss_candidate_num_hits        sss_candidate_num_hits        sss_candidate_num_hits                                          'F'    [6,662]
sss_candidate_num_wires       sss_candidate_num_wires       sss_candidate_num_wires       sss_candidate_num_wires                                         'F'    [3,431]
sss_candidate_num_ticks       sss_candidate_num_ticks       sss_candidate_num_ticks       sss_candidate_num_ticks                                         'F'    [4,471]
sss_candidate_PCA             sss_candidate_PCA             sss_candidate_PCA             sss_candidate_PCA                                               'F'    [0.508788645267,0.999899625778]
log10(sss_candidate_impact_parameter) log10_sss_candidate_impact_parameter_ log10(sss_candidate_impact_parameter) log10(sss_candidate_impact_parameter)                                           'F'    [-3.17021036148,2.94243240356]
log10(sss_candidate_min_dist) log10_sss_candidate_min_dist_ log10(sss_candidate_min_dist) log10(sss_candidate_min_dist)                                   'F'    [-1.96084904671,3.00111413002]
sss_candidate_impact_parameter/sss_candidate_min_dist   sss_candidate_impact_parameter_D_sss_candidate_min_dist sss_candidate_impact_parameter/sss_candidate_min_dist   sss_candidate_impact_parameter/sss_candidate_min_dist                                                               'F'    [2.99125094898e-05,38.3977737427]
sss_candidate_energy          sss_candidate_energy          sss_candidate_energy          sss_candidate_energy                                            'F'    [2.39316010475,1988.95678711]
sss_candidate_angle_to_shower sss_candidate_angle_to_shower sss_candidate_angle_to_shower sss_candidate_angle_to_shower                                   'F'    [1.90641767404e-05,3.14147377014]
sss_reco_shower_energy        sss_reco_shower_energy        sss_reco_shower_energy        sss_reco_shower_energy                                          'F'    [1.84410631657,5651.78173828]
sss_candidate_energy/sss_reco_shower_energy   sss_candidate_energy_D_sss_reco_shower_energy sss_candidate_energy/sss_reco_shower_energy   sss_candidate_energy/sss_reco_shower_energy                                                     'F'    [0.00167675281409,114.510406494]
sss_candidate_fit_slope       sss_candidate_fit_slope       sss_candidate_fit_slope       sss_candidate_fit_slope                                         'F'    [-229.137939453,231.591659546]
sss_candidate_fit_constant    sss_candidate_fit_constant    sss_candidate_fit_constant    sss_candidate_fit_constant                                      'F'    [-294510.625,417570.625]
sss_candidate_plane           sss_candidate_plane           sss_candidate_plane           sss_candidate_plane                                             'F'    [0,2]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

//#define new BDTNode new BDTNode
   
#ifndef BDTNode__def
#define BDTNode__def
   
class BDTNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTNode ( BDTNode* left,BDTNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTNode();

   // test event if it descends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTNode* GetRight( void )  {return fRight; };

   // test event if it descends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTNode*   fLeft;     // pointer to the left daughter node
   BDTNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value applied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTNode::~BDTNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
} 
   
//_______________________________________________________________________
bool BDTNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it descends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDT : public IClassifierReader {

 public:

   // constructor
   ReadBDT( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDT" ),
        fNvars( 14 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "sss_candidate_num_hits", "sss_candidate_num_wires", "sss_candidate_num_ticks", "sss_candidate_PCA", "log10(sss_candidate_impact_parameter)", "log10(sss_candidate_min_dist)", "sss_candidate_impact_parameter/sss_candidate_min_dist", "sss_candidate_energy", "sss_candidate_angle_to_shower", "sss_reco_shower_energy", "sss_candidate_energy/sss_reco_shower_energy", "sss_candidate_fit_slope", "sss_candidate_fit_constant", "sss_candidate_plane" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;
      fVmin[4] = 0;
      fVmax[4] = 0;
      fVmin[5] = 0;
      fVmax[5] = 0;
      fVmin[6] = 0;
      fVmax[6] = 0;
      fVmin[7] = 0;
      fVmax[7] = 0;
      fVmin[8] = 0;
      fVmax[8] = 0;
      fVmin[9] = 0;
      fVmax[9] = 0;
      fVmin[10] = 0;
      fVmax[10] = 0;
      fVmin[11] = 0;
      fVmax[11] = 0;
      fVmin[12] = 0;
      fVmax[12] = 0;
      fVmin[13] = 0;
      fVmax[13] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';
      fType[10] = 'F';
      fType[11] = 'F';
      fType[12] = 'F';
      fType[13] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDT() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[14];
   double fVmax[14];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[14];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDT::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetPurity();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
}

void ReadBDT::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.0833983574508089);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.907933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800932,-99) , 
6, 0.401329, 1, 0, 0.857927,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.808886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672048,-99) , 
4, 0.765451, 1, 0, 0.737344,-99) , 
13, 1.5, 0, 0, 0.778728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446564,-99) , 
7, 8.68701, 0, 0, 0.763018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357374,-99) , 
8, 0.927585, 1, 0, 0.471766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0892726,-99) , 
7, 50.7238, 1, 0, 0.384957,-99) , 
4, 1.48135, 1, 0, 0.703433,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558128,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2981,-99) , 
6, 0.181257, 0, 0, 0.433593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122179,-99) , 
8, 0.136053, 1, 0, 0.191858,-99) , 
4, 1.71112, 1, 0, 0.294704,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150135,-99) , 
6, 0.42518, 1, 0, 0.220092,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165157,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0716629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00883413,-99) , 
4, 1.76602, 1, 0, 0.0295833,-99) , 
9, 44.3268, 1, 0, 0.0587958,-99) , 
5, 1.99776, 1, 0, 0.105514,-99) , 
8, 0.450881, 1, 0, 0.167609,-99) , 
5, 1.84719, 1, 0, 0.498809,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.0810791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.928339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.820163,-99) , 
6, 0.664337, 1, 0, 0.897689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728411,-99) , 
0, 15.5, 0, 0, 0.849495,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.775946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571087,-99) , 
2, 9.5, 0, 0, 0.749929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409014,-99) , 
7, 32.3587, 1, 0, 0.568236,-99) , 
4, 1.14984, 1, 0, 0.701514,-99) , 
13, 1.5, 0, 0, 0.749656,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337939,-99) , 
8, 1.08468, 1, 0, 0.434067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0795141,-99) , 
7, 48.8862, 1, 0, 0.346378,-99) , 
4, 1.47746, 1, 0, 0.684407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321649,-99) , 
1, 12.5, 0, 0, 0.465437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118575,-99) , 
7, 26.7031, 0, 0, 0.233015,-99) , 
5, 2.15873, 1, 0, 0.350653,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306751,-99) , 
6, 0.240868, 1, 0, 0.370681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0369509,-99) , 
9, 75.483, 1, 0, 0.101373,-99) , 
4, 1.70531, 1, 0, 0.226213,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101113,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0673048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00374985,-99) , 
13, 1.5, 0, 0, 0.0205941,-99) , 
9, 46.4902, 1, 0, 0.0419993,-99) , 
5, 2.07974, 1, 0, 0.121867,-99) , 
8, 0.392139, 1, 0, 0.189357,-99) , 
5, 1.84611, 1, 0, 0.495126,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.0714457);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.820288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695471,-99) , 
0, 16.5, 0, 0, 0.775448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541809,-99) , 
7, 132.297, 1, 0, 0.761053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450011,-99) , 
7, 9.07275, 0, 0, 0.7437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21633,-99) , 
7, 30.4186, 1, 0, 0.361373,-99) , 
4, 1.51507, 1, 0, 0.707634,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471732,-99) , 
4, 1.06137, 1, 0, 0.557466,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0870856,-99) , 
9, 148.457, 1, 0, 0.234948,-99) , 
6, 0.541771, 1, 0, 0.411152,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263654,-99) , 
9, 124.821, 0, 0, 0.380018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149854,-99) , 
8, 0.795488, 1, 0, 0.212567,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0309278,-99) , 
9, 71.3315, 1, 0, 0.0650529,-99) , 
5, 2.07184, 1, 0, 0.11441,-99) , 
8, 0.185928, 1, 0, 0.15942,-99) , 
5, 1.93683, 1, 0, 0.237539,-99) , 
5, 1.74351, 1, 0, 0.49209,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.0759055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.84968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726256,-99) , 
1, 12.5, 0, 0, 0.82278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604556,-99) , 
7, 118.617, 1, 0, 0.805243,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530577,-99) , 
5, 1.25391, 0, 0, 0.654684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483849,-99) , 
3, 0.967528, 0, 0, 0.592995,-99) , 
2, 11.5, 0, 0, 0.757843,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479642,-99) , 
5, 1.7308, 1, 0, 0.564506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358665,-99) , 
3, 0.954036, 0, 0, 0.521863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.140426,-99) , 
7, 64.2837, 1, 0, 0.45474,-99) , 
4, 1.34753, 1, 0, 0.684022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397902,-99) , 
8, 1.24827, 1, 0, 0.546549,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0402846,-99) , 
8, 0.695136, 1, 0, 0.185273,-99) , 
5, 2.15125, 1, 0, 0.373675,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155075,-99) , 
10, 0.443059, 1, 0, 0.349467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136955,-99) , 
2, 11.5, 0, 0, 0.265845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.066598,-99) , 
9, 30.1308, 0, 0, 0.189437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00761825,-99) , 
5, 2.03479, 1, 0, 0.0527927,-99) , 
9, 60.8858, 1, 0, 0.0951523,-99) , 
8, 0.448676, 1, 0, 0.147494,-99) , 
13, 1.5, 0, 0, 0.210305,-99) , 
5, 1.84776, 1, 0, 0.498024,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.0726137);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.929452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.833016,-99) , 
6, 0.164629, 1, 0, 0.865877,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579294,-99) , 
9, 39.6536, 0, 0, 0.736739,-99) , 
13, 1.5, 0, 0, 0.781853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501652,-99) , 
7, 10.4042, 0, 0, 0.761641,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
8, 1.85943, 1, 0, 0.63246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399422,-99) , 
3, 0.911314, 0, 0, 0.6007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249488,-99) , 
7, 71.156, 1, 0, 0.548875,-99) , 
4, 1.15445, 1, 0, 0.683381,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342233,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0609126,-99) , 
9, 201.958, 0, 0, 0.130168,-99) , 
5, 1.96679, 1, 0, 0.197836,-99) , 
13, 1.5, 0, 0, 0.280694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32475,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15475,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0188657,-99) , 
8, 0.523352, 1, 0, 0.0441922,-99) , 
9, 43.1439, 1, 0, 0.0687913,-99) , 
8, 0.110864, 1, 0, 0.096685,-99) , 
4, 1.758, 1, 0, 0.174305,-99) , 
5, 1.84608, 1, 0, 0.493454,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.0738041);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.95453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.850779,-99) , 
6, 0.189354, 1, 0, 0.891705,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.802958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635125,-99) , 
2, 10.5, 0, 0, 0.764186,-99) , 
13, 1.5, 0, 0, 0.808321,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578836,-99) , 
8, 1.26281, 0, 0, 0.702268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51372,-99) , 
7, 62.8931, 1, 0, 0.657605,-99) , 
6, 0.677759, 1, 0, 0.759032,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328395,-99) , 
8, 1.12951, 1, 0, 0.440438,-99) , 
4, 1.41801, 1, 0, 0.71942,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473208,-99) , 
3, 0.992117, 1, 0, 0.608827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276574,-99) , 
4, 1.23347, 1, 0, 0.343899,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0513692,-99) , 
0, 40.5, 1, 0, 0.27441,-99) , 
13, 1.5, 0, 0, 0.366983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144698,-99) , 
2, 12.5, 0, 0, 0.303667,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197159,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0917448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0128171,-99) , 
5, 2.11716, 1, 0, 0.026499,-99) , 
9, 45.7061, 1, 0, 0.0721351,-99) , 
8, 0.273871, 1, 0, 0.133303,-99) , 
5, 2.06626, 1, 0, 0.254541,-99) , 
5, 1.73405, 1, 0, 0.508326,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.0687388);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.889394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7942,-99) , 
4, 0.731918, 1, 0, 0.864069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732074,-99) , 
6, 0.676413, 1, 0, 0.82856,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.794369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663981,-99) , 
2, 12.5, 0, 0, 0.718828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538599,-99) , 
10, 0.425546, 1, 0, 0.684602,-99) , 
1, 14.5, 0, 0, 0.765273,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776615,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432582,-99) , 
4, 1.48782, 1, 0, 0.565018,-99) , 
13, 1.5, 0, 0, 0.618429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182643,-99) , 
7, 84.3374, 1, 0, 0.565153,-99) , 
4, 1.15478, 1, 0, 0.699636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37742,-99) , 
5, 2.00581, 1, 0, 0.583833,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316765,-99) , 
3, 0.992379, 0, 0, 0.400446,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127753,-99) , 
6, 0.229294, 0, 0, 0.197432,-99) , 
5, 1.93785, 1, 0, 0.294314,-99) , 
13, 1.5, 0, 0, 0.384608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121565,-99) , 
1, 11.5, 0, 0, 0.228654,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0411332,-99) , 
5, 1.90673, 1, 0, 0.063264,-99) , 
9, 47.5532, 1, 0, 0.107036,-99) , 
8, 0.162088, 1, 0, 0.149717,-99) , 
4, 1.71051, 1, 0, 0.256593,-99) , 
5, 1.7492, 1, 0, 0.495454,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.0694259);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.911119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.861441,-99) , 
9, 118.881, 1, 0, 0.889735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.822607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635972,-99) , 
3, 0.98742, 0, 0, 0.74662,-99) , 
6, 0.370275, 1, 0, 0.818608,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465012,-99) , 
7, 83.581, 1, 0, 0.706298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427478,-99) , 
8, 0.817927, 1, 0, 0.493105,-99) , 
5, 1.65216, 1, 0, 0.671151,-99) , 
13, 1.5, 0, 0, 0.718623,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175518,-99) , 
4, 1.68282, 1, 0, 0.356091,-99) , 
8, 0.920648, 1, 0, 0.465921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0805542,-99) , 
7, 66.1734, 1, 0, 0.402355,-99) , 
4, 1.47212, 1, 0, 0.656733,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37703,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0510017,-99) , 
9, 56.0712, 1, 0, 0.116452,-99) , 
8, 0.496006, 1, 0, 0.202465,-99) , 
13, 1.5, 0, 0, 0.27288,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242301,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0346595,-99) , 
9, 78.8755, 1, 0, 0.0851322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0445207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
12, 6411.07, 0, 0, 0.0111853,-99) , 
5, 2.3205, 1, 0, 0.0462157,-99) , 
8, 0.185764, 1, 0, 0.0846973,-99) , 
5, 2.16006, 1, 0, 0.184634,-99) , 
5, 1.90775, 1, 0, 0.503449,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.0648592);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.908852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811627,-99) , 
7, 31.9011, 1, 0, 0.852426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715137,-99) , 
0, 15.5, 0, 0, 0.811891,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588169,-99) , 
5, 1.56619, 1, 0, 0.733581,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44649,-99) , 
10, 0.259602, 1, 0, 0.583241,-99) , 
1, 13.5, 0, 0, 0.66562,-99) , 
13, 1.5, 0, 0, 0.71355,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512756,-99) , 
8, 1.14356, 1, 0, 0.604439,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310086,-99) , 
8, 1.31154, 1, 0, 0.400888,-99) , 
5, 1.72847, 1, 0, 0.518685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197823,-99) , 
7, 50.31, 1, 0, 0.452588,-99) , 
4, 1.39495, 1, 0, 0.653882,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530797,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0736905,-99) , 
6, 0.281244, 1, 0, 0.122311,-99) , 
8, 0.448983, 1, 0, 0.192298,-99) , 
13, 1.5, 0, 0, 0.293928,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0161846,-99) , 
2, 11.5, 0, 0, 0.102392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0544061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
0, 13.5, 1, 0, 0.0208364,-99) , 
9, 78.6783, 1, 0, 0.0544076,-99) , 
8, 0.192227, 1, 0, 0.0951805,-99) , 
5, 2.13024, 1, 0, 0.19625,-99) , 
5, 1.86882, 1, 0, 0.496717,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0636292);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.858038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685849,-99) , 
9, 225.722, 1, 0, 0.823509,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460177,-99) , 
10, 0.266197, 1, 0, 0.664463,-99) , 
2, 13.5, 0, 0, 0.765718,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582888,-99) , 
10, 0.55515, 1, 0, 0.664659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527066,-99) , 
1, 11.5, 0, 0, 0.615146,-99) , 
6, 0.663361, 1, 0, 0.718507,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487211,-99) , 
8, 1.50062, 1, 0, 0.597181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370364,-99) , 
7, 11.6593, 0, 0, 0.536547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245081,-99) , 
7, 50.916, 1, 0, 0.469716,-99) , 
4, 1.38944, 1, 0, 0.660199,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0827463,-99) , 
6, 0.588427, 1, 0, 0.16604,-99) , 
8, 0.426631, 1, 0, 0.241343,-99) , 
13, 1.5, 0, 0, 0.347652,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348124,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0576969,-99) , 
5, 2.28805, 1, 0, 0.116024,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0428489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 1.59572, 1, 0, 0.00905038,-99) , 
9, 84.0945, 1, 0, 0.0581335,-99) , 
8, 0.18526, 1, 0, 0.121094,-99) , 
5, 2.11276, 1, 0, 0.241638,-99) , 
5, 1.8396, 1, 0, 0.501763,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0651569);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.915667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.788454,-99) , 
6, 0.1869, 1, 0, 0.837124,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.779518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596757,-99) , 
7, 25.2424, 1, 0, 0.734817,-99) , 
1, 14.5, 0, 0, 0.792636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59599,-99) , 
9, 38.7776, 0, 0, 0.770894,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.740755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582001,-99) , 
8, 1.75499, 1, 0, 0.686937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443589,-99) , 
3, 0.926613, 0, 0, 0.650159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318911,-99) , 
7, 65.3978, 1, 0, 0.610359,-99) , 
4, 1.07491, 1, 0, 0.708224,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435094,-99) , 
5, 1.97157, 1, 0, 0.606989,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520883,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259316,-99) , 
8, 2.04825, 1, 0, 0.443326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145324,-99) , 
8, 0.349951, 1, 0, 0.221142,-99) , 
5, 1.93785, 1, 0, 0.333292,-99) , 
13, 1.5, 0, 0, 0.422769,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100398,-99) , 
9, 25.1646, 0, 0, 0.259625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238083,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0176495,-99) , 
5, 1.90845, 1, 0, 0.0385414,-99) , 
8, 0.401098, 1, 0, 0.0964149,-99) , 
9, 45.6528, 1, 0, 0.139634,-99) , 
4, 1.7301, 1, 0, 0.281383,-99) , 
5, 1.7305, 1, 0, 0.513945,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0602491);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.870391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.740727,-99) , 
5, 0.727424, 0, 0, 0.832621,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626596,-99) , 
8, 1.63345, 0, 0, 0.68527,-99) , 
4, 0.730116, 1, 0, 0.779363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577277,-99) , 
7, 11.0346, 0, 0, 0.716479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480792,-99) , 
10, 0.287621, 1, 0, 0.653608,-99) , 
1, 14.5, 0, 0, 0.725361,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576977,-99) , 
12, 7517.88, 0, 0, 0.619519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431129,-99) , 
9, 44.8042, 0, 0, 0.584593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229935,-99) , 
7, 83.0727, 1, 0, 0.543814,-99) , 
4, 1.16263, 1, 0, 0.663422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302946,-99) , 
12, 415.726, 1, 0, 0.372954,-99) , 
13, 1.5, 0, 0, 0.472068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115886,-99) , 
8, 0.339141, 1, 0, 0.215111,-99) , 
5, 2.05211, 1, 0, 0.386769,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0707586,-99) , 
1, 11.5, 0, 0, 0.15181,-99) , 
13, 1.5, 0, 0, 0.231381,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0890599,-99) , 
5, 2.09195, 1, 0, 0.171504,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0835125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0058418,-99) , 
9, 338.454, 0, 0, 0.0207366,-99) , 
9, 59.6502, 1, 0, 0.077726,-99) , 
8, 0.607685, 1, 0, 0.133865,-99) , 
4, 1.77157, 1, 0, 0.266652,-99) , 
5, 1.74819, 1, 0, 0.486199,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0571461);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.791273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624013,-99) , 
7, 91.5587, 1, 0, 0.77246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610941,-99) , 
2, 9.5, 0, 0, 0.754127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539065,-99) , 
9, 33.4499, 0, 0, 0.736358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549936,-99) , 
6, 0.905882, 1, 0, 0.613734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429883,-99) , 
8, 1.7424, 1, 0, 0.550814,-99) , 
4, 1.25382, 1, 0, 0.695537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521045,-99) , 
3, 0.981704, 1, 0, 0.622345,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384218,-99) , 
11, -0.936609, 1, 0, 0.454021,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0390099,-99) , 
3, 0.952983, 0, 0, 0.223897,-99) , 
4, 1.46848, 1, 0, 0.312394,-99) , 
13, 1.5, 0, 0, 0.407312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167302,-99) , 
2, 11.5, 0, 0, 0.358637,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208932,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0820279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0123709,-99) , 
4, 1.92837, 1, 0, 0.0451707,-99) , 
9, 35.1265, 1, 0, 0.071409,-99) , 
8, 0.281585, 1, 0, 0.159616,-99) , 
5, 2.06255, 1, 0, 0.306576,-99) , 
5, 1.6732, 1, 0, 0.501319,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0531865);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.889216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.773964,-99) , 
13, 0.5, 0, 0, 0.852983,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.804972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668895,-99) , 
11, -1.2038, 1, 0, 0.719796,-99) , 
6, 0.28207, 1, 0, 0.772764,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518104,-99) , 
3, 0.967766, 0, 0, 0.688266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464729,-99) , 
7, 27.9067, 1, 0, 0.65012,-99) , 
1, 12.5, 0, 0, 0.722903,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51705,-99) , 
11, -0.215319, 1, 0, 0.595515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352031,-99) , 
7, 41.7503, 1, 0, 0.532985,-99) , 
4, 1.39431, 1, 0, 0.692032,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45901,-99) , 
5, 1.91948, 1, 0, 0.5816,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144328,-99) , 
7, 44.2452, 1, 0, 0.393634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178243,-99) , 
5, 2.06511, 1, 0, 0.338168,-99) , 
13, 1.5, 0, 0, 0.411842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422082,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144969,-99) , 
9, 63.9008, 1, 0, 0.223189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0203081,-99) , 
12, -6136.99, 1, 0, 0.0547792,-99) , 
5, 2.15384, 1, 0, 0.146083,-99) , 
8, 0.126098, 1, 0, 0.184114,-99) , 
4, 1.76663, 1, 0, 0.307754,-99) , 
5, 1.71711, 1, 0, 0.515059,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.053539);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676706,-99) , 
4, 0.758377, 1, 0, 0.725353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43189,-99) , 
7, 142.69, 1, 0, 0.709618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343093,-99) , 
7, 8.71703, 0, 0, 0.688294,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542114,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305096,-99) , 
5, 1.75678, 1, 0, 0.400776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106975,-99) , 
7, 40.52, 1, 0, 0.324829,-99) , 
8, 0.715325, 1, 0, 0.397388,-99) , 
4, 1.51213, 1, 0, 0.637762,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194281,-99) , 
5, 2.15125, 1, 0, 0.413451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389292,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0119933,-99) , 
5, 2.303, 1, 0, 0.0924504,-99) , 
12, 9910.92, 0, 0, 0.115807,-99) , 
8, 0.184675, 1, 0, 0.163721,-99) , 
13, 1.5, 0, 0, 0.242144,-99) , 
5, 1.90809, 1, 0, 0.510466,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0528561);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.860133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76556,-99) , 
7, 38.0565, 1, 0, 0.831285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679144,-99) , 
9, 59.6812, 0, 0, 0.795622,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57836,-99) , 
6, 0.593061, 1, 0, 0.669332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431304,-99) , 
2, 9.5, 0, 0, 0.636329,-99) , 
13, 1.5, 0, 0, 0.684329,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215667,-99) , 
10, 0.0660527, 0, 0, 0.442331,-99) , 
8, 0.699596, 1, 0, 0.510268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196368,-99) , 
7, 46.805, 1, 0, 0.446016,-99) , 
4, 1.3474, 1, 0, 0.617918,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421058,-99) , 
4, 1.72066, 1, 0, 0.518218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254273,-99) , 
5, 2.21601, 1, 0, 0.412163,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588839,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0264159,-99) , 
7, 46.2346, 1, 0, 0.204235,-99) , 
13, 1.5, 0, 0, 0.321436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0972332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0194879,-99) , 
4, 1.70473, 1, 0, 0.0436965,-99) , 
9, 45.7061, 1, 0, 0.0785469,-99) , 
5, 2.06667, 1, 0, 0.185208,-99) , 
8, 0.30805, 1, 0, 0.249045,-99) , 
5, 1.8754, 1, 0, 0.492469,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0532129);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.85531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72513,-99) , 
6, 0.161873, 1, 0, 0.764137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528952,-99) , 
7, 103.066, 1, 0, 0.737177,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499358,-99) , 
7, 10.1977, 0, 0, 0.612299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418459,-99) , 
10, 0.231284, 1, 0, 0.561865,-99) , 
2, 12.5, 0, 0, 0.685874,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519847,-99) , 
5, 1.65594, 1, 0, 0.631304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396767,-99) , 
13, 1.5, 0, 0, 0.445749,-99) , 
2, 15.5, 0, 0, 0.512698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16509,-99) , 
7, 65.951, 1, 0, 0.463756,-99) , 
4, 1.25214, 1, 0, 0.611829,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354977,-99) , 
9, 118.97, 0, 0, 0.48338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231094,-99) , 
5, 2.24731, 1, 0, 0.380537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226721,-99) , 
7, 13.1317, 0, 0, 0.302176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0749106,-99) , 
9, 83.2439, 1, 0, 0.118701,-99) , 
7, 18.1151, 1, 0, 0.21484,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174482,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0149963,-99) , 
4, 1.54094, 1, 0, 0.0385176,-99) , 
9, 45.7061, 1, 0, 0.0768838,-99) , 
5, 2.12486, 1, 0, 0.149268,-99) , 
8, 0.308449, 1, 0, 0.218699,-99) , 
5, 1.89503, 1, 0, 0.482258,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0516126);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.844487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689185,-99) , 
8, 0.600507, 0, 0, 0.804648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627398,-99) , 
13, 1.5, 0, 0, 0.678182,-99) , 
6, 0.349429, 1, 0, 0.744532,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568264,-99) , 
9, 172.641, 1, 0, 0.654362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477401,-99) , 
10, 0.258451, 1, 0, 0.605995,-99) , 
2, 12.5, 0, 0, 0.703729,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564097,-99) , 
2, 15.5, 0, 0, 0.627137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409994,-99) , 
3, 0.944643, 0, 0, 0.578914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403249,-99) , 
7, 36.7824, 1, 0, 0.537376,-99) , 
4, 1.18236, 1, 0, 0.650559,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455656,-99) , 
5, 2.13426, 1, 0, 0.609556,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314713,-99) , 
9, 127.322, 0, 0, 0.421827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211276,-99) , 
5, 2.1193, 1, 0, 0.33024,-99) , 
13, 1.5, 0, 0, 0.433785,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538834,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326576,-99) , 
6, 0.458925, 1, 0, 0.424529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0701513,-99) , 
0, 40.5, 1, 0, 0.355248,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242369,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0258604,-99) , 
4, 1.39316, 1, 0, 0.0671447,-99) , 
9, 43.1814, 1, 0, 0.108169,-99) , 
5, 1.91932, 1, 0, 0.196056,-99) , 
8, 0.620725, 1, 0, 0.29489,-99) , 
5, 1.74755, 1, 0, 0.496025,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0511948);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61695,-99) , 
9, 62.2591, 0, 0, 0.721614,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3934,-99) , 
5, 1.42139, 1, 0, 0.547676,-99) , 
8, 2.45974, 1, 0, 0.691857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417195,-99) , 
7, 9.06173, 0, 0, 0.675212,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359926,-99) , 
9, 99.2046, 1, 0, 0.478919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239323,-99) , 
7, 50.5358, 1, 0, 0.423474,-99) , 
4, 1.52505, 1, 0, 0.636785,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487556,-99) , 
9, 120.587, 0, 0, 0.584163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268355,-99) , 
12, 3684.98, 1, 0, 0.477878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241213,-99) , 
5, 2.21993, 1, 0, 0.39325,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462021,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125399,-99) , 
11, 3.02354, 0, 0, 0.167755,-99) , 
13, 1.5, 0, 0, 0.251904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0902406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0389827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.48304, 0, 0, 0.00911738,-99) , 
9, 45.6528, 1, 0, 0.0337093,-99) , 
5, 2.17577, 1, 0, 0.176595,-99) , 
8, 0.439198, 1, 0, 0.255429,-99) , 
5, 1.84091, 1, 0, 0.493807,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0474204);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654306,-99) , 
2, 20.5, 0, 0, 0.693712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418781,-99) , 
7, 133.134, 1, 0, 0.679421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400956,-99) , 
7, 8.32012, 0, 0, 0.664497,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502788,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13864,-99) , 
5, 2.06638, 1, 0, 0.291959,-99) , 
8, 0.324091, 1, 0, 0.362531,-99) , 
5, 1.90323, 1, 0, 0.626043,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344482,-99) , 
4, 1.71268, 1, 0, 0.508988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292912,-99) , 
3, 0.964546, 0, 0, 0.446331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198555,-99) , 
7, 33.1052, 1, 0, 0.3741,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149287,-99) , 
2, 11.5, 0, 0, 0.296055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270312,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0191988,-99) , 
5, 2.01793, 1, 0, 0.041185,-99) , 
9, 45.6528, 1, 0, 0.106134,-99) , 
8, 0.392353, 1, 0, 0.167542,-99) , 
5, 1.948, 1, 0, 0.245606,-99) , 
4, 1.52468, 1, 0, 0.495722,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0468095);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622139,-99) , 
10, 0.519909, 1, 0, 0.773642,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357412,-99) , 
1, 14.5, 0, 0, 0.636362,-99) , 
7, 35.0529, 1, 0, 0.71109,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646057,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408102,-99) , 
11, 0.291202, 0, 0, 0.496895,-99) , 
9, 121.004, 0, 0, 0.567091,-99) , 
7, 14.5388, 0, 0, 0.6775,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613128,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317832,-99) , 
7, 15.1679, 0, 0, 0.434095,-99) , 
3, 0.994849, 0, 0, 0.507212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190482,-99) , 
7, 49.8278, 1, 0, 0.446606,-99) , 
4, 1.48204, 1, 0, 0.634298,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348934,-99) , 
0, 15.5, 0, 0, 0.436983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250712,-99) , 
8, 0.247381, 1, 0, 0.295875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0511096,-99) , 
7, 46.7935, 1, 0, 0.247212,-99) , 
13, 1.5, 0, 0, 0.297998,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164103,-99) , 
8, 0.379246, 1, 0, 0.239345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00898455,-99) , 
2, 12.5, 0, 0, 0.137797,-99) , 
5, 2.28812, 1, 0, 0.253271,-99) , 
5, 1.89503, 1, 0, 0.514743,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0465055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.882018,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622868,-99) , 
7, 17.553, 0, 0, 0.719369,-99) , 
6, 0.198065, 1, 0, 0.768484,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496501,-99) , 
5, 0.600421, 0, 0, 0.678666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422823,-99) , 
9, 227.811, 1, 0, 0.549001,-99) , 
4, 0.852968, 1, 0, 0.61268,-99) , 
13, 1.5, 0, 0, 0.658964,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591881,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275441,-99) , 
5, 1.72509, 1, 0, 0.385888,-99) , 
8, 0.88313, 1, 0, 0.46744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0913607,-99) , 
7, 76.7751, 1, 0, 0.410215,-99) , 
4, 1.51692, 1, 0, 0.616841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283512,-99) , 
1, 11.5, 0, 0, 0.419389,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0680247,-99) , 
1, 9.5, 0, 0, 0.21861,-99) , 
13, 1.5, 0, 0, 0.293999,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0141929,-99) , 
4, 1.54251, 1, 0, 0.0378727,-99) , 
9, 31.4877, 1, 0, 0.0685988,-99) , 
5, 2.13951, 1, 0, 0.196075,-99) , 
8, 0.2482, 1, 0, 0.252884,-99) , 
5, 1.89445, 1, 0, 0.501428,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0452188);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.893937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806853,-99) , 
2, 17.5, 0, 0, 0.849983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695775,-99) , 
6, 0.73536, 1, 0, 0.786375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608583,-99) , 
5, 1.70921, 1, 0, 0.749687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410426,-99) , 
7, 98.291, 1, 0, 0.624614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353684,-99) , 
2, 8.5, 0, 0, 0.602318,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37538,-99) , 
8, 1.26575, 1, 0, 0.455578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120517,-99) , 
7, 32.2273, 1, 0, 0.358314,-99) , 
4, 1.52859, 1, 0, 0.560833,-99) , 
13, 1.5, 0, 0, 0.615939,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353782,-99) , 
8, 0.234338, 1, 0, 0.481795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188138,-99) , 
5, 2.27117, 1, 0, 0.337841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110453,-99) , 
10, 0.385909, 1, 0, 0.284597,-99) , 
1, 12.5, 0, 0, 0.387138,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362132,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0170326,-99) , 
5, 2.16878, 1, 0, 0.129747,-99) , 
13, 1.5, 0, 0, 0.200089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0302392,-99) , 
4, 2.03318, 1, 0, 0.154945,-99) , 
8, 0.606896, 1, 0, 0.262364,-99) , 
5, 1.8946, 1, 0, 0.499819,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0460275);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.854945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697006,-99) , 
2, 28.5, 0, 0, 0.735528,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406524,-99) , 
3, 0.942146, 0, 0, 0.611623,-99) , 
4, 1.152, 1, 0, 0.691631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4542,-99) , 
9, 32.4429, 0, 0, 0.672702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27538,-99) , 
7, 137.713, 1, 0, 0.652849,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477807,-99) , 
1, 12.5, 0, 0, 0.554988,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259734,-99) , 
4, 1.73293, 1, 0, 0.402052,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.073058,-99) , 
5, 1.90715, 1, 0, 0.175512,-99) , 
9, 129.239, 1, 0, 0.31706,-99) , 
8, 0.614759, 1, 0, 0.40305,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49303,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384659,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0550166,-99) , 
13, 1.5, 0, 0, 0.101978,-99) , 
9, 26.7152, 1, 0, 0.138667,-99) , 
8, 0.089235, 1, 0, 0.200099,-99) , 
5, 2.06982, 1, 0, 0.309593,-99) , 
5, 1.76165, 1, 0, 0.510786,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0467571);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578594,-99) , 
9, 47.7126, 0, 0, 0.720264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383588,-99) , 
2, 48.5, 0, 0, 0.53965,-99) , 
7, 64.1799, 1, 0, 0.686754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432147,-99) , 
2, 8.5, 0, 0, 0.666659,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501146,-99) , 
8, 0.570429, 1, 0, 0.55223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370384,-99) , 
7, 11.7286, 0, 0, 0.510041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0786265,-99) , 
7, 105.267, 1, 0, 0.475925,-99) , 
4, 1.30622, 1, 0, 0.607192,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326928,-99) , 
1, 12.5, 0, 0, 0.423232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457872,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0512147,-99) , 
9, 99.2727, 1, 0, 0.208962,-99) , 
8, 0.804008, 1, 0, 0.292175,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0175354,-99) , 
4, 1.5665, 1, 0, 0.0483065,-99) , 
9, 45.6513, 1, 0, 0.0955879,-99) , 
5, 2.06244, 1, 0, 0.17693,-99) , 
8, 0.209556, 1, 0, 0.231981,-99) , 
5, 1.89412, 1, 0, 0.492162,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0436209);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571774,-99) , 
8, 0.428558, 0, 0, 0.688781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435558,-99) , 
7, 8.63993, 0, 0, 0.672495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365656,-99) , 
7, 144.921, 1, 0, 0.65815,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355205,-99) , 
9, 109.079, 1, 0, 0.458504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196593,-99) , 
7, 50.4789, 1, 0, 0.397472,-99) , 
4, 1.52859, 1, 0, 0.617455,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297401,-99) , 
2, 12.5, 0, 0, 0.469269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373001,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0156538,-99) , 
6, 0.578993, 1, 0, 0.186128,-99) , 
9, 87.9592, 1, 0, 0.274175,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0143686,-99) , 
4, 1.48058, 1, 0, 0.0369271,-99) , 
9, 50.0594, 1, 0, 0.0880868,-99) , 
5, 2.10137, 1, 0, 0.173105,-99) , 
8, 0.212469, 1, 0, 0.248546,-99) , 
5, 1.90796, 1, 0, 0.509708,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.043701);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.826422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666531,-99) , 
4, 0.925305, 1, 0, 0.775608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507556,-99) , 
10, 0.190576, 1, 0, 0.632425,-99) , 
2, 14.5, 0, 0, 0.708831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458606,-99) , 
9, 37.5218, 0, 0, 0.682701,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662125,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35331,-99) , 
2, 12.5, 0, 0, 0.490966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210398,-99) , 
11, -0.432719, 1, 0, 0.325835,-99) , 
5, 1.53782, 1, 0, 0.438012,-99) , 
13, 1.5, 0, 0, 0.495413,-99) , 
6, 0.663361, 1, 0, 0.603995,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395441,-99) , 
8, 1.28403, 1, 0, 0.549717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141873,-99) , 
5, 2.25631, 1, 0, 0.443473,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272391,-99) , 
1, 13.5, 0, 0, 0.383791,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211277,-99) , 
3, 0.98286, 0, 0, 0.372103,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0615298,-99) , 
5, 1.94282, 1, 0, 0.124783,-99) , 
9, 42.1616, 1, 0, 0.189091,-99) , 
8, 0.253054, 1, 0, 0.23564,-99) , 
13, 1.5, 0, 0, 0.302438,-99) , 
5, 1.80952, 1, 0, 0.489613,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0409456);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644891,-99) , 
6, 0.662869, 1, 0, 0.725369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459365,-99) , 
3, 0.999366, 1, 0, 0.702032,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461345,-99) , 
7, 10.1526, 0, 0, 0.617652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393469,-99) , 
10, 0.191059, 1, 0, 0.551614,-99) , 
2, 11.5, 0, 0, 0.66203,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526287,-99) , 
5, 1.66899, 1, 0, 0.58693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371908,-99) , 
3, 0.960991, 0, 0, 0.538894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191965,-99) , 
7, 56.1746, 1, 0, 0.493045,-99) , 
4, 1.39581, 1, 0, 0.62565,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420703,-99) , 
12, 3007.72, 1, 0, 0.534358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134913,-99) , 
8, 0.187021, 1, 0, 0.281152,-99) , 
5, 2.1554, 1, 0, 0.425005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490411,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168444,-99) , 
5, 2.0774, 1, 0, 0.28357,-99) , 
13, 1.5, 0, 0, 0.347036,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289916,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.021692,-99) , 
10, 0.0511896, 1, 0, 0.0535506,-99) , 
9, 42.2566, 1, 0, 0.128577,-99) , 
4, 1.72207, 1, 0, 0.224876,-99) , 
8, 0.607275, 1, 0, 0.314079,-99) , 
5, 1.81254, 1, 0, 0.511707,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0458688);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.802327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655125,-99) , 
6, 0.595363, 1, 0, 0.754607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557141,-99) , 
3, 0.998032, 1, 0, 0.726016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55442,-99) , 
3, 0.96371, 0, 0, 0.662942,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350409,-99) , 
5, 1.25407, 0, 0, 0.44847,-99) , 
10, 0.231328, 1, 0, 0.587418,-99) , 
1, 14.5, 0, 0, 0.657116,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291433,-99) , 
5, 1.70641, 1, 0, 0.40451,-99) , 
8, 0.831528, 1, 0, 0.484261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141909,-99) , 
7, 76.5067, 1, 0, 0.443834,-99) , 
4, 1.39308, 1, 0, 0.599489,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407454,-99) , 
8, 1.1782, 1, 0, 0.527629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275465,-99) , 
5, 2.22493, 1, 0, 0.43199,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380392,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.055833,-99) , 
10, 0.457691, 1, 0, 0.225201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0203105,-99) , 
4, 1.70991, 1, 0, 0.0790377,-99) , 
9, 70.8803, 1, 0, 0.137761,-99) , 
8, 0.110638, 1, 0, 0.169438,-99) , 
13, 1.5, 0, 0, 0.258863,-99) , 
5, 1.90771, 1, 0, 0.495258,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0397529);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668829,-99) , 
7, 60.9182, 1, 0, 0.763556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602626,-99) , 
0, 12.5, 0, 0, 0.730054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522764,-99) , 
6, 0.626412, 1, 0, 0.622363,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358676,-99) , 
8, 0.780379, 1, 0, 0.450675,-99) , 
5, 1.66952, 1, 0, 0.578483,-99) , 
13, 1.5, 0, 0, 0.62341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204917,-99) , 
5, 2.182, 1, 0, 0.609224,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485563,-99) , 
9, 100.213, 1, 0, 0.551477,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301648,-99) , 
8, 0.516816, 1, 0, 0.364962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118962,-99) , 
7, 32.8917, 1, 0, 0.289983,-99) , 
13, 1.5, 0, 0, 0.36239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42065,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.140667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0195116,-99) , 
11, -0.80234, 1, 0, 0.0720193,-99) , 
8, 0.173661, 1, 0, 0.151772,-99) , 
5, 2.12452, 1, 0, 0.289165,-99) , 
4, 1.52439, 1, 0, 0.504575,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0418883);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.834355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674271,-99) , 
6, 0.165243, 1, 0, 0.712086,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345696,-99) , 
7, 28.1303, 1, 0, 0.596708,-99) , 
2, 16.5, 0, 0, 0.650119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319359,-99) , 
7, 140.153, 1, 0, 0.632962,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594616,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166781,-99) , 
9, 110.899, 1, 0, 0.305732,-99) , 
8, 0.666311, 1, 0, 0.403884,-99) , 
4, 1.51648, 1, 0, 0.595099,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2812,-99) , 
2, 10.5, 0, 0, 0.503562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0299599,-99) , 
5, 2.44145, 1, 0, 0.423511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439411,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167948,-99) , 
12, 5367.2, 0, 0, 0.248934,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0430442,-99) , 
8, 0.633048, 1, 0, 0.104385,-99) , 
9, 61.4817, 1, 0, 0.157558,-99) , 
8, 0.0913123, 1, 0, 0.193012,-99) , 
13, 1.5, 0, 0, 0.263263,-99) , 
5, 1.89478, 1, 0, 0.497973,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0365133);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615877,-99) , 
4, 1.08646, 1, 0, 0.699993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426762,-99) , 
7, 139.085, 1, 0, 0.675094,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412618,-99) , 
7, 9.09226, 0, 0, 0.577411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305833,-99) , 
7, 25.0361, 1, 0, 0.543002,-99) , 
2, 13.5, 0, 0, 0.619733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604669,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298105,-99) , 
8, 0.961221, 1, 0, 0.411062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13647,-99) , 
7, 47.4889, 1, 0, 0.351776,-99) , 
13, 1.5, 0, 0, 0.420765,-99) , 
4, 1.48818, 1, 0, 0.572698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302942,-99) , 
4, 1.88624, 1, 0, 0.446159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185649,-99) , 
5, 2.28703, 1, 0, 0.347965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12154,-99) , 
11, -1.36806, 1, 0, 0.203776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0132286,-99) , 
4, 2.04866, 1, 0, 0.13702,-99) , 
8, 0.664842, 1, 0, 0.245005,-99) , 
5, 2.01846, 1, 0, 0.503824,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0367037);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.814538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678523,-99) , 
4, 0.608124, 1, 0, 0.736239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510408,-99) , 
5, 0.56463, 0, 0, 0.703207,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482009,-99) , 
3, 0.942181, 0, 0, 0.612814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396154,-99) , 
7, 25.2513, 1, 0, 0.574412,-99) , 
2, 16.5, 0, 0, 0.643709,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490249,-99) , 
8, 1.83616, 1, 0, 0.571964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385987,-99) , 
3, 0.915618, 0, 0, 0.547728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205455,-99) , 
7, 83.0727, 1, 0, 0.508558,-99) , 
4, 1.19546, 1, 0, 0.590622,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490191,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190568,-99) , 
0, 12.5, 0, 0, 0.392649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.44267, 1, 0, 0.322814,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304191,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0180906,-99) , 
5, 2.30303, 1, 0, 0.115337,-99) , 
12, 7269.09, 0, 0, 0.156381,-99) , 
13, 1.5, 0, 0, 0.20696,-99) , 
8, 0.10368, 1, 0, 0.252624,-99) , 
5, 1.93911, 1, 0, 0.499691,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0374827);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.798878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627306,-99) , 
2, 12.5, 0, 0, 0.754137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549738,-99) , 
9, 44.6959, 0, 0, 0.719402,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564902,-99) , 
2, 23.5, 0, 0, 0.597061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377127,-99) , 
7, 119.163, 1, 0, 0.584181,-99) , 
4, 0.675963, 1, 0, 0.62532,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19334,-99) , 
7, 25.116, 1, 0, 0.356085,-99) , 
4, 1.67735, 1, 0, 0.60434,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391448,-99) , 
8, 0.480303, 1, 0, 0.488866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.48802, 1, 0, 0.425962,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259583,-99) , 
4, 1.71057, 1, 0, 0.33996,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343768,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.012217,-99) , 
3, 0.971429, 0, 0, 0.0940137,-99) , 
6, 0.996584, 0, 0, 0.123968,-99) , 
8, 0.351216, 1, 0, 0.195779,-99) , 
13, 1.5, 0, 0, 0.272124,-99) , 
5, 1.89492, 1, 0, 0.504108,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0393273);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.855556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701886,-99) , 
0, 30.5, 0, 0, 0.746364,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5252,-99) , 
10, 0.327116, 1, 0, 0.622037,-99) , 
13, 1.5, 0, 0, 0.659702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380967,-99) , 
9, 405.167, 1, 0, 0.642754,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466581,-99) , 
7, 13.5736, 0, 0, 0.562038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337296,-99) , 
3, 0.961231, 0, 0, 0.505234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292081,-99) , 
7, 28.0069, 1, 0, 0.439483,-99) , 
4, 1.4451, 1, 0, 0.598569,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529679,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527051,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0337144,-99) , 
0, 23.5, 1, 0, 0.240347,-99) , 
8, 0.0838229, 1, 0, 0.331173,-99) , 
13, 1.5, 0, 0, 0.400811,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205378,-99) , 
8, 1.47379, 1, 0, 0.314856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0807855,-99) , 
7, 39.2296, 1, 0, 0.254712,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207172,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
8, 0.942812, 1, 0, 0.0255821,-99) , 
9, 47.6422, 1, 0, 0.0803919,-99) , 
5, 2.07718, 1, 0, 0.161507,-99) , 
8, 0.607552, 1, 0, 0.279008,-99) , 
5, 1.90726, 1, 0, 0.504081,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.039502);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.823582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700539,-99) , 
6, 0.54394, 1, 0, 0.791641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65048,-99) , 
4, 1.2272, 1, 0, 0.755621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529147,-99) , 
1, 9.5, 0, 0, 0.721771,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535462,-99) , 
2, 11.5, 0, 0, 0.649673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454966,-99) , 
10, 0.209219, 1, 0, 0.518464,-99) , 
6, 0.62248, 1, 0, 0.591462,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344871,-99) , 
11, -1.12519, 1, 0, 0.410426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158981,-99) , 
5, 2.16768, 1, 0, 0.372309,-99) , 
5, 1.72456, 1, 0, 0.539007,-99) , 
13, 1.5, 0, 0, 0.597068,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272558,-99) , 
4, 1.82955, 1, 0, 0.416597,-99) , 
2, 16.5, 0, 0, 0.517186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139446,-99) , 
4, 2.09836, 1, 0, 0.455795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273045,-99) , 
9, 63.6221, 1, 0, 0.360686,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203049,-99) , 
8, 0.49089, 1, 0, 0.264806,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0388164,-99) , 
4, 1.72838, 1, 0, 0.0701817,-99) , 
9, 87.69, 1, 0, 0.161654,-99) , 
5, 1.88891, 1, 0, 0.230758,-99) , 
13, 1.5, 0, 0, 0.298466,-99) , 
4, 1.52394, 1, 0, 0.500023,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0329618);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611617,-99) , 
13, 1.5, 0, 0, 0.646917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431524,-99) , 
9, 28.0324, 0, 0, 0.631645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374802,-99) , 
9, 404.45, 1, 0, 0.615905,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415425,-99) , 
10, 0.129983, 0, 0, 0.514715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200225,-99) , 
7, 33.0111, 1, 0, 0.419868,-99) , 
4, 1.52945, 1, 0, 0.58782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41455,-99) , 
4, 1.84396, 1, 0, 0.524571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527408,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0658282,-99) , 
7, 12.0342, 0, 0, 0.251257,-99) , 
12, 256.86, 1, 0, 0.331379,-99) , 
13, 1.5, 0, 0, 0.401905,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426884,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0901701,-99) , 
4, 1.5972, 1, 0, 0.133329,-99) , 
9, 26.9909, 1, 0, 0.167522,-99) , 
4, 1.1786, 1, 0, 0.201949,-99) , 
8, 0.704198, 1, 0, 0.299281,-99) , 
5, 1.84618, 1, 0, 0.488833,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0342645);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.858404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765741,-99) , 
3, 0.98725, 1, 0, 0.81329,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603414,-99) , 
8, 1.84761, 1, 0, 0.679025,-99) , 
4, 0.692876, 1, 0, 0.734233,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504147,-99) , 
5, 1.53008, 1, 0, 0.598609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38902,-99) , 
7, 10.0395, 0, 0, 0.575032,-99) , 
13, 1.5, 0, 0, 0.621712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307704,-99) , 
5, 2.0066, 1, 0, 0.601411,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395055,-99) , 
5, 1.6325, 0, 0, 0.503124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29784,-99) , 
4, 1.70021, 1, 0, 0.454016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287259,-99) , 
8, 0.552111, 1, 0, 0.44419,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0526575,-99) , 
5, 2.32331, 1, 0, 0.210705,-99) , 
2, 21.5, 0, 0, 0.26811,-99) , 
5, 1.93397, 1, 0, 0.351539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0134276,-99) , 
7, 124.167, 1, 0, 0.324266,-99) , 
4, 1.39105, 1, 0, 0.488943,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0360432);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.820464,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576454,-99) , 
2, 18.5, 0, 0, 0.646578,-99) , 
6, 0.217601, 1, 0, 0.692869,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535185,-99) , 
2, 12.5, 0, 0, 0.612669,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217528,-99) , 
1, 19.5, 0, 0, 0.47316,-99) , 
7, 39.6511, 1, 0, 0.570229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367691,-99) , 
9, 33.2463, 0, 0, 0.551771,-99) , 
13, 1.5, 0, 0, 0.590314,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368968,-99) , 
8, 1.57168, 1, 0, 0.565513,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333946,-99) , 
11, 4.00786, 0, 0, 0.382772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13647,-99) , 
0, 35.5, 1, 0, 0.328829,-99) , 
13, 1.5, 0, 0, 0.398039,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167129,-99) , 
2, 11.5, 0, 0, 0.337663,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
13, 1.5, 0, 0, 0.0456414,-99) , 
9, 46.1228, 1, 0, 0.104451,-99) , 
8, 0.402709, 1, 0, 0.207232,-99) , 
5, 2.127, 1, 0, 0.338885,-99) , 
5, 1.70537, 1, 0, 0.473965,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0355944);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.833305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712889,-99) , 
0, 27.5, 0, 0, 0.750696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611963,-99) , 
7, 61.9809, 1, 0, 0.712529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587191,-99) , 
0, 14.5, 0, 0, 0.673951,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449832,-99) , 
7, 91.8145, 1, 0, 0.644878,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353532,-99) , 
3, 0.913505, 0, 0, 0.489673,-99) , 
2, 16.5, 0, 0, 0.565457,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26071,-99) , 
3, 0.956082, 0, 0, 0.465544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230427,-99) , 
7, 33.8392, 1, 0, 0.401793,-99) , 
4, 1.33996, 1, 0, 0.513089,-99) , 
13, 1.5, 0, 0, 0.561702,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35433,-99) , 
8, 0.563959, 1, 0, 0.494709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0760845,-99) , 
5, 2.48891, 1, 0, 0.431949,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364955,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0707489,-99) , 
3, 0.977374, 0, 0, 0.157577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0257941,-99) , 
5, 2.32038, 1, 0, 0.132811,-99) , 
8, 0.192739, 1, 0, 0.182066,-99) , 
13, 1.5, 0, 0, 0.261396,-99) , 
5, 1.93276, 1, 0, 0.480044,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0306639);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551966,-99) , 
5, 1.52894, 1, 0, 0.71761,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445961,-99) , 
3, 0.947603, 0, 0, 0.597154,-99) , 
6, 0.370851, 1, 0, 0.641939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384273,-99) , 
7, 9.0964, 0, 0, 0.624971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337217,-99) , 
7, 134.262, 1, 0, 0.60842,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418723,-99) , 
2, 11.5, 0, 0, 0.541781,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334686,-99) , 
4, 1.05901, 1, 0, 0.383343,-99) , 
8, 0.635618, 1, 0, 0.446306,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 17.5, 0, 0, 0.193018,-99) , 
7, 66.0381, 1, 0, 0.414779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0358326,-99) , 
2, 12.5, 0, 0, 0.150823,-99) , 
5, 2.28782, 1, 0, 0.374422,-99) , 
5, 1.66952, 1, 0, 0.492793,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0359021);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.838781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67468,-99) , 
3, 0.995377, 1, 0, 0.781602,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495803,-99) , 
9, 130.69, 1, 0, 0.630328,-99) , 
6, 0.662869, 1, 0, 0.710006,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483462,-99) , 
9, 62.1004, 0, 0, 0.617676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382758,-99) , 
7, 30.3896, 1, 0, 0.583582,-99) , 
2, 20.5, 0, 0, 0.626957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329085,-99) , 
7, 137.17, 1, 0, 0.610657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356008,-99) , 
12, 3974.31, 1, 0, 0.473188,-99) , 
5, 1.89358, 1, 0, 0.552738,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500228,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185486,-99) , 
13, 0.5, 1, 0, 0.276762,-99) , 
13, 1.5, 0, 0, 0.351389,-99) , 
4, 1.72616, 1, 0, 0.456763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0896046,-99) , 
5, 2.03422, 1, 0, 0.294421,-99) , 
13, 1.5, 0, 0, 0.377372,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322945,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0631494,-99) , 
9, 350.348, 0, 0, 0.10051,-99) , 
9, 46.4902, 1, 0, 0.168854,-99) , 
4, 1.62793, 1, 0, 0.25865,-99) , 
8, 0.679213, 1, 0, 0.347692,-99) , 
5, 1.75107, 1, 0, 0.500377,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0372043);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.854641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725083,-99) , 
7, 33.5866, 1, 0, 0.790021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656698,-99) , 
2, 11.5, 0, 0, 0.754176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54144,-99) , 
9, 89.4541, 0, 0, 0.625869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439627,-99) , 
7, 30.4592, 1, 0, 0.572253,-99) , 
5, 1.49211, 1, 0, 0.688441,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719069,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459722,-99) , 
3, 0.964481, 0, 0, 0.543406,-99) , 
2, 15.5, 0, 0, 0.596485,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461011,-99) , 
2, 42.5, 0, 0, 0.527442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206244,-99) , 
1, 13.5, 0, 0, 0.440118,-99) , 
7, 36.7586, 1, 0, 0.539443,-99) , 
6, 0.65253, 1, 0, 0.621224,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478896,-99) , 
8, 1.28349, 1, 0, 0.604244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276174,-99) , 
5, 2.18068, 1, 0, 0.507979,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265117,-99) , 
8, 1.087, 1, 0, 0.368126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141735,-99) , 
3, 0.895838, 0, 0, 0.327673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0114735,-99) , 
9, 38.4876, 1, 0, 0.0703834,-99) , 
8, 0.284762, 1, 0, 0.135511,-99) , 
4, 1.94198, 1, 0, 0.277092,-99) , 
13, 1.5, 0, 0, 0.35615,-99) , 
5, 1.74193, 1, 0, 0.510151,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0322861);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.873057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738396,-99) , 
4, 0.849197, 1, 0, 0.799839,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508034,-99) , 
5, 1.60484, 1, 0, 0.631944,-99) , 
12, 8446.21, 0, 0, 0.663716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354343,-99) , 
7, 134.488, 1, 0, 0.637957,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397852,-99) , 
9, 55.305, 0, 0, 0.552854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340865,-99) , 
7, 8.42165, 0, 0, 0.514715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255162,-99) , 
7, 23.3072, 1, 0, 0.486089,-99) , 
2, 12.5, 0, 0, 0.581502,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496406,-99) , 
10, 0.334493, 1, 0, 0.56132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365163,-99) , 
2, 10.5, 0, 0, 0.504351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128992,-99) , 
8, 0.190941, 1, 0, 0.308469,-99) , 
4, 1.92958, 1, 0, 0.42912,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266691,-99) , 
7, 15.2787, 1, 0, 0.402178,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0153422,-99) , 
1, 13.5, 0, 0, 0.19454,-99) , 
0, 16.5, 1, 0, 0.306903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0884938,-99) , 
5, 2.14249, 1, 0, 0.249061,-99) , 
8, 0.663021, 1, 0, 0.325272,-99) , 
4, 1.54199, 1, 0, 0.501233,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.029432);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.814053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632901,-99) , 
2, 16.5, 0, 0, 0.685957,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419924,-99) , 
2, 13.5, 0, 0, 0.543303,-99) , 
3, 0.987269, 1, 0, 0.623321,-99) , 
11, -4.70809, 1, 0, 0.649557,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48471,-99) , 
6, 0.621976, 1, 0, 0.56202,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298396,-99) , 
5, 1.45212, 1, 0, 0.40978,-99) , 
8, 2.24969, 1, 0, 0.522652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172043,-99) , 
5, 2.06574, 1, 0, 0.501412,-99) , 
13, 1.5, 0, 0, 0.547317,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476908,-99) , 
2, 12.5, 0, 0, 0.601906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254335,-99) , 
7, 50.4848, 1, 0, 0.53023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210302,-99) , 
6, 0.614202, 0, 0, 0.467789,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24308,-99) , 
13, 1.5, 0, 0, 0.338421,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.03188,-99) , 
5, 1.91916, 1, 0, 0.0796759,-99) , 
8, 0.665265, 1, 0, 0.212754,-99) , 
9, 61.2752, 1, 0, 0.317442,-99) , 
4, 1.68272, 1, 0, 0.491927,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0292121);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592498,-99) , 
8, 0.435646, 0, 0, 0.694791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543585,-99) , 
8, 2.52272, 1, 0, 0.672384,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336283,-99) , 
7, 124.453, 1, 0, 0.563135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302575,-99) , 
5, 1.90742, 1, 0, 0.535785,-99) , 
13, 1.5, 0, 0, 0.58123,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236349,-99) , 
11, -0.0939946, 1, 0, 0.311911,-99) , 
7, 9.09318, 0, 0, 0.560084,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294598,-99) , 
9, 142.358, 1, 0, 0.47413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166822,-99) , 
5, 2.42157, 1, 0, 0.427375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429882,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131432,-99) , 
4, 1.82197, 1, 0, 0.24464,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.045661,-99) , 
9, 54.9531, 1, 0, 0.106111,-99) , 
8, 1.05906, 1, 0, 0.180898,-99) , 
12, 9750.76, 0, 0, 0.226814,-99) , 
13, 1.5, 0, 0, 0.288221,-99) , 
4, 1.59562, 1, 0, 0.48473,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0307294);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.849464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697493,-99) , 
2, 22.5, 0, 0, 0.752447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584141,-99) , 
10, 0.271847, 1, 0, 0.671173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457331,-99) , 
3, 0.987397, 1, 0, 0.519082,-99) , 
5, 1.53008, 1, 0, 0.620277,-99) , 
13, 1.5, 0, 0, 0.660017,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561811,-99) , 
6, 1.028, 0, 0, 0.597495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348469,-99) , 
7, 99.3263, 1, 0, 0.56751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32925,-99) , 
2, 9.5, 0, 0, 0.535573,-99) , 
6, 0.619165, 1, 0, 0.600264,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524869,-99) , 
9, 84.4975, 1, 0, 0.601793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389186,-99) , 
3, 0.99755, 1, 0, 0.557624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0687481,-99) , 
5, 2.44082, 1, 0, 0.504982,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323263,-99) , 
12, 407.254, 1, 0, 0.379072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13394,-99) , 
7, 50.0869, 1, 0, 0.33345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0921704,-99) , 
5, 2.28782, 1, 0, 0.296215,-99) , 
13, 1.5, 0, 0, 0.364468,-99) , 
5, 1.76002, 1, 0, 0.50235,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0294052);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603577,-99) , 
7, 15.9346, 0, 0, 0.727215,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434744,-99) , 
5, 1.46454, 1, 0, 0.568808,-99) , 
8, 2.14783, 1, 0, 0.683419,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565717,-99) , 
12, 2728.55, 0, 0, 0.613163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380572,-99) , 
10, 0.183612, 1, 0, 0.537321,-99) , 
2, 10.5, 0, 0, 0.645091,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552763,-99) , 
2, 30.5, 0, 0, 0.583015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355433,-99) , 
2, 9.5, 0, 0, 0.54654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319977,-99) , 
7, 99.4374, 1, 0, 0.520849,-99) , 
6, 0.664484, 1, 0, 0.592013,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423069,-99) , 
3, 0.987438, 0, 0, 0.548709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.083959,-99) , 
10, 0.524156, 1, 0, 0.299481,-99) , 
9, 42.1761, 1, 0, 0.361184,-99) , 
8, 0.431609, 1, 0, 0.42201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0399101,-99) , 
8, 0.360819, 1, 0, 0.0853052,-99) , 
9, 45.7061, 1, 0, 0.159006,-99) , 
8, 0.119644, 1, 0, 0.238641,-99) , 
5, 2.17556, 1, 0, 0.349848,-99) , 
5, 1.89496, 1, 0, 0.519326,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0277272);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.82434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630668,-99) , 
10, 0.470898, 1, 0, 0.750843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44038,-99) , 
0, 13.5, 0, 0, 0.588486,-99) , 
6, 0.297229, 1, 0, 0.637238,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208645,-99) , 
5, 2.30161, 1, 0, 0.532499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311938,-99) , 
7, 65.0309, 1, 0, 0.509346,-99) , 
5, 1.49866, 1, 0, 0.574643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205509,-99) , 
7, 7.41185, 0, 0, 0.560885,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362925,-99) , 
1, 11.5, 0, 0, 0.487381,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0648233,-99) , 
6, 0.998805, 0, 0, 0.105964,-99) , 
8, 0.669529, 1, 0, 0.161801,-99) , 
9, 43.3793, 1, 0, 0.227905,-99) , 
8, 0.241585, 1, 0, 0.292384,-99) , 
4, 1.69323, 1, 0, 0.500464,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0285365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56187,-99) , 
3, 0.998095, 1, 0, 0.700776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505016,-99) , 
4, 1.313, 1, 0, 0.658377,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358312,-99) , 
7, 8.16071, 0, 0, 0.558653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268736,-99) , 
7, 30.9619, 1, 0, 0.528234,-99) , 
2, 17.5, 0, 0, 0.580711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279078,-99) , 
7, 159.356, 1, 0, 0.568631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41014,-99) , 
10, 0.359333, 1, 0, 0.533538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340786,-99) , 
12, 4117.69, 1, 0, 0.475214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246249,-99) , 
5, 2.33333, 1, 0, 0.429212,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523675,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201925,-99) , 
11, 1.19083, 0, 0, 0.314333,-99) , 
12, 5268.71, 0, 0, 0.387567,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0336059,-99) , 
4, 1.74782, 1, 0, 0.133891,-99) , 
9, 77.3951, 1, 0, 0.257418,-99) , 
8, 0.605647, 1, 0, 0.334315,-99) , 
5, 1.85059, 1, 0, 0.490177,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0283176);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490701,-99) , 
4, 1.48363, 1, 0, 0.633223,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363278,-99) , 
2, 16.5, 0, 0, 0.45289,-99) , 
9, 34.9011, 0, 0, 0.612324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323641,-99) , 
7, 161.023, 1, 0, 0.60065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369157,-99) , 
9, 401.856, 1, 0, 0.585304,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412121,-99) , 
13, 1.5, 0, 0, 0.533808,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0825339,-99) , 
3, 0.954902, 0, 0, 0.286605,-99) , 
13, 1.5, 0, 0, 0.350336,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356606,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.077763,-99) , 
9, 45.6528, 1, 0, 0.137709,-99) , 
8, 0.362708, 1, 0, 0.174149,-99) , 
5, 2.065, 1, 0, 0.261006,-99) , 
8, 0.208207, 1, 0, 0.33157,-99) , 
5, 1.85047, 1, 0, 0.501549,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0286502);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700724,-99) , 
4, 1.10692, 1, 0, 0.751676,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558388,-99) , 
4, 0.748736, 1, 0, 0.61396,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234056,-99) , 
7, 33.1666, 1, 0, 0.490806,-99) , 
1, 12.5, 0, 0, 0.559856,-99) , 
11, -6.40792, 1, 0, 0.57917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273217,-99) , 
7, 136.844, 1, 0, 0.564779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450793,-99) , 
0, 16.5, 0, 0, 0.547402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33325,-99) , 
9, 173.878, 1, 0, 0.486416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150187,-99) , 
5, 2.46817, 1, 0, 0.441594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475504,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288672,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.090767,-99) , 
4, 1.25427, 1, 0, 0.123245,-99) , 
9, 39.2395, 1, 0, 0.161984,-99) , 
8, 0.10368, 1, 0, 0.213741,-99) , 
13, 1.5, 0, 0, 0.295684,-99) , 
5, 1.90725, 1, 0, 0.490829,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0328636);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.865097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766064,-99) , 
9, 121.807, 1, 0, 0.815811,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753768,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497484,-99) , 
0, 17.5, 0, 0, 0.588293,-99) , 
11, 2.9404, 0, 0, 0.636583,-99) , 
6, 0.292132, 1, 0, 0.693265,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510388,-99) , 
1, 10.5, 0, 0, 0.591197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373096,-99) , 
7, 9.34518, 0, 0, 0.572572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419243,-99) , 
3, 0.989049, 0, 0, 0.481634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176467,-99) , 
0, 29.5, 1, 0, 0.404487,-99) , 
4, 1.51539, 1, 0, 0.54392,-99) , 
13, 1.5, 0, 0, 0.586882,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602518,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195549,-99) , 
12, 2878.67, 1, 0, 0.39126,-99) , 
2, 12.5, 0, 0, 0.500292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138004,-99) , 
7, 60.7383, 1, 0, 0.454029,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167582,-99) , 
13, 1.5, 0, 0, 0.245834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0933182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0257233,-99) , 
9, 78.8755, 1, 0, 0.0526803,-99) , 
5, 2.1631, 1, 0, 0.179271,-99) , 
9, 24.3405, 1, 0, 0.230807,-99) , 
8, 0.432323, 1, 0, 0.324986,-99) , 
5, 1.87186, 1, 0, 0.507042,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0297186);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.799162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641052,-99) , 
7, 32.1367, 1, 0, 0.732364,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485388,-99) , 
7, 89.1951, 1, 0, 0.650432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385546,-99) , 
10, 0.259961, 1, 0, 0.534443,-99) , 
0, 17.5, 0, 0, 0.602362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583899,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391683,-99) , 
0, 25.5, 1, 0, 0.531097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328449,-99) , 
12, 6375.24, 0, 0, 0.385313,-99) , 
12, 2475.75, 1, 0, 0.459851,-99) , 
4, 1.20747, 1, 0, 0.552774,-99) , 
11, -5.60857, 1, 0, 0.577299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359708,-99) , 
6, 0.553164, 1, 0, 0.527031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306593,-99) , 
5, 2.1761, 1, 0, 0.448213,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48466,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0922585,-99) , 
7, 32.6833, 1, 0, 0.255593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.28846, 1, 0, 0.206844,-99) , 
8, 0.137598, 1, 0, 0.254633,-99) , 
13, 1.5, 0, 0, 0.319241,-99) , 
5, 1.84958, 1, 0, 0.496023,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0287266);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.828292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665797,-99) , 
10, 0.511621, 1, 0, 0.770366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5696,-99) , 
5, 1.528, 1, 0, 0.707447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460612,-99) , 
3, 0.951924, 0, 0, 0.599377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453789,-99) , 
3, 0.998031, 1, 0, 0.571426,-99) , 
6, 0.347509, 1, 0, 0.619004,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338049,-99) , 
6, 0.669542, 1, 0, 0.439395,-99) , 
2, 9.5, 0, 0, 0.594399,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274413,-99) , 
1, 14.5, 0, 0, 0.394689,-99) , 
5, 2.04172, 1, 0, 0.505681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251458,-99) , 
12, 6832.56, 0, 0, 0.302029,-99) , 
11, 6.26094, 0, 0, 0.332615,-99) , 
13, 1.5, 0, 0, 0.392826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.116686,-99) , 
7, 65.0583, 1, 0, 0.360423,-99) , 
5, 1.75127, 1, 0, 0.494061,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0279257);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471635,-99) , 
9, 33.0665, 0, 0, 0.647439,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468771,-99) , 
8, 0.926823, 1, 0, 0.537295,-99) , 
4, 1.22381, 1, 0, 0.608049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348812,-99) , 
7, 8.68884, 0, 0, 0.589577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294806,-99) , 
7, 137.17, 1, 0, 0.575099,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599071,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241083,-99) , 
8, 0.137255, 1, 0, 0.384272,-99) , 
13, 1.5, 0, 0, 0.465937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249082,-99) , 
4, 2.04395, 1, 0, 0.417752,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363771,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24318,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0454533,-99) , 
1, 20.5, 0, 0, 0.0744271,-99) , 
4, 1.72382, 1, 0, 0.142285,-99) , 
9, 35.5525, 1, 0, 0.190895,-99) , 
8, 0.435872, 1, 0, 0.287566,-99) , 
5, 1.93193, 1, 0, 0.501769,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0238221);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629028,-99) , 
9, 107.078, 1, 0, 0.729133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409027,-99) , 
9, 33.0515, 0, 0, 0.572305,-99) , 
12, 9480.16, 0, 0, 0.592877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340196,-99) , 
7, 137.731, 1, 0, 0.578101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328659,-99) , 
7, 8.85757, 0, 0, 0.561357,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408408,-99) , 
8, 1.19342, 1, 0, 0.545445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208066,-99) , 
4, 2.01693, 1, 0, 0.466472,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507682,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0883855,-99) , 
0, 50.5, 1, 0, 0.270177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0239235,-99) , 
5, 2.34397, 1, 0, 0.237317,-99) , 
8, 0.104476, 1, 0, 0.275958,-99) , 
13, 1.5, 0, 0, 0.341938,-99) , 
5, 1.84717, 1, 0, 0.487515,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0298824);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.846881,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49284,-99) , 
8, 0.442003, 0, 0, 0.64165,-99) , 
12, 9952.27, 0, 0, 0.669192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50052,-99) , 
7, 14.3376, 0, 0, 0.636335,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720311,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
13, 1.5, 0, 0, 0.538884,-99) , 
6, 1.01359, 0, 0, 0.561291,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0377523,-99) , 
1, 15.5, 0, 0, 0.30742,-99) , 
7, 51.2565, 1, 0, 0.515536,-99) , 
4, 0.963458, 1, 0, 0.565693,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552888,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233847,-99) , 
2, 14.5, 0, 0, 0.384995,-99) , 
4, 1.72796, 1, 0, 0.462001,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0769577,-99) , 
5, 2.28846, 1, 0, 0.369285,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00867054,-99) , 
7, 10.5713, 1, 0, 0.0648864,-99) , 
4, 1.5972, 1, 0, 0.125085,-99) , 
9, 59.6824, 1, 0, 0.224592,-99) , 
8, 0.410087, 1, 0, 0.324937,-99) , 
5, 1.95261, 1, 0, 0.502684,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.027013);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811205,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61095,-99) , 
12, 711.069, 1, 0, 0.668983,-99) , 
4, 0.68171, 1, 0, 0.712227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5452,-99) , 
7, 15.1253, 0, 0, 0.67944,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505588,-99) , 
7, 29.5751, 1, 0, 0.570226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39307,-99) , 
7, 9.36101, 0, 0, 0.553734,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267115,-99) , 
0, 14.5, 1, 0, 0.375333,-99) , 
4, 1.52438, 1, 0, 0.526781,-99) , 
13, 1.5, 0, 0, 0.571202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458763,-99) , 
0, 31.5, 1, 0, 0.568828,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258052,-99) , 
12, 2226.15, 1, 0, 0.362258,-99) , 
1, 14.5, 0, 0, 0.452752,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493379,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171278,-99) , 
9, 59.3972, 1, 0, 0.232422,-99) , 
13, 1.5, 0, 0, 0.315024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.068975,-99) , 
5, 2.2547, 1, 0, 0.259886,-99) , 
8, 0.432323, 1, 0, 0.33774,-99) , 
5, 1.84834, 1, 0, 0.495773,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0289269);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.841663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673599,-99) , 
7, 44.7333, 1, 0, 0.776307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601631,-99) , 
4, 1.18181, 1, 0, 0.712972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573073,-99) , 
0, 14.5, 0, 0, 0.668399,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433228,-99) , 
3, 0.999103, 1, 0, 0.580866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351161,-99) , 
7, 8.92861, 0, 0, 0.561715,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358612,-99) , 
3, 0.988923, 0, 0, 0.502158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150519,-99) , 
7, 30.679, 1, 0, 0.402137,-99) , 
4, 1.51562, 1, 0, 0.53454,-99) , 
13, 1.5, 0, 0, 0.572501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282075,-99) , 
5, 2.17804, 1, 0, 0.454949,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309182,-99) , 
4, 1.76078, 1, 0, 0.41232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16808,-99) , 
9, 45.4588, 0, 0, 0.361547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.042297,-99) , 
9, 76.9156, 1, 0, 0.111657,-99) , 
8, 0.633413, 1, 0, 0.237414,-99) , 
13, 1.5, 0, 0, 0.313559,-99) , 
5, 1.90716, 1, 0, 0.501101,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0277196);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.872755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727509,-99) , 
11, -0.127404, 1, 0, 0.799986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51813,-99) , 
5, 1.25839, 0, 0, 0.602543,-99) , 
6, 0.454307, 1, 0, 0.68641,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473149,-99) , 
4, 1.21674, 1, 0, 0.558598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324549,-99) , 
3, 0.846714, 0, 0, 0.541453,-99) , 
13, 1.5, 0, 0, 0.581458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270978,-99) , 
9, 436.267, 1, 0, 0.566238,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456764,-99) , 
5, 2.15528, 1, 0, 0.573137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514379,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201105,-99) , 
5, 2.06478, 1, 0, 0.318048,-99) , 
8, 0.104476, 1, 0, 0.389774,-99) , 
13, 1.5, 0, 0, 0.459399,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394946,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0717933,-99) , 
4, 1.56416, 1, 0, 0.110304,-99) , 
9, 47.5532, 1, 0, 0.203842,-99) , 
4, 1.30717, 1, 0, 0.26834,-99) , 
8, 0.589961, 1, 0, 0.355065,-99) , 
5, 1.81156, 1, 0, 0.490068,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0214691);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618141,-99) , 
11, -4.45392, 1, 0, 0.640462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43419,-99) , 
7, 10.4172, 0, 0, 0.616,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473883,-99) , 
8, 0.726234, 1, 0, 0.519353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271683,-99) , 
9, 456.188, 1, 0, 0.504345,-99) , 
4, 1.17948, 1, 0, 0.561964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265141,-99) , 
7, 143.129, 1, 0, 0.545715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249504,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0146455,-99) , 
10, 0.10239, 1, 0, 0.0599209,-99) , 
8, 0.399973, 1, 0, 0.105148,-99) , 
9, 44.5121, 1, 0, 0.186434,-99) , 
8, 0.193507, 1, 0, 0.274295,-99) , 
5, 2.08201, 1, 0, 0.501601,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0292933);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.821467,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580023,-99) , 
2, 18.5, 0, 0, 0.665035,-99) , 
11, -1.23689, 1, 0, 0.722501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553794,-99) , 
9, 129.374, 1, 0, 0.653193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426725,-99) , 
9, 119.252, 0, 0, 0.533122,-99) , 
2, 18.5, 0, 0, 0.607945,-99) , 
6, 0.382349, 1, 0, 0.653768,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643935,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439969,-99) , 
5, 1.37161, 0, 0, 0.492246,-99) , 
8, 2.03175, 0, 0, 0.547374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374797,-99) , 
7, 26.946, 1, 0, 0.509311,-99) , 
1, 10.5, 0, 0, 0.611461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496139,-99) , 
9, 194.345, 1, 0, 0.611149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379794,-99) , 
11, 4.42991, 1, 0, 0.56987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182159,-99) , 
5, 2.36219, 1, 0, 0.521316,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420854,-99) , 
6, 0.395981, 0, 0, 0.487379,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220562,-99) , 
8, 0.690682, 1, 0, 0.302061,-99) , 
0, 14.5, 1, 0, 0.386262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0778513,-99) , 
11, 0.816591, 0, 0, 0.177379,-99) , 
4, 1.86514, 1, 0, 0.33333,-99) , 
13, 1.5, 0, 0, 0.391398,-99) , 
5, 1.64762, 1, 0, 0.503318,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0244076);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404771,-99) , 
3, 0.802458, 0, 0, 0.601624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369761,-99) , 
10, 0.0412618, 0, 0, 0.585659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398657,-99) , 
9, 32.3972, 0, 0, 0.568871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267856,-99) , 
7, 159.474, 1, 0, 0.556152,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538153,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357524,-99) , 
5, 2.0676, 1, 0, 0.501384,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182596,-99) , 
9, 51.8825, 1, 0, 0.229304,-99) , 
13, 1.5, 0, 0, 0.320281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0465501,-99) , 
4, 1.54113, 1, 0, 0.0701026,-99) , 
5, 2.25448, 1, 0, 0.252884,-99) , 
8, 0.114428, 1, 0, 0.305623,-99) , 
5, 1.92249, 1, 0, 0.490213,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0235373);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.812645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646105,-99) , 
1, 13.5, 0, 0, 0.723259,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451016,-99) , 
5, 1.64702, 1, 0, 0.597406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39174,-99) , 
7, 9.36101, 0, 0, 0.580911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3079,-99) , 
3, 0.999226, 1, 0, 0.561815,-99) , 
12, 8973.08, 0, 0, 0.587836,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413767,-99) , 
0, 14.5, 0, 0, 0.562022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2223,-99) , 
4, 1.86156, 1, 0, 0.374511,-99) , 
13, 1.5, 0, 0, 0.433592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184338,-99) , 
5, 2.36214, 1, 0, 0.40536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0633122,-99) , 
7, 125.692, 1, 0, 0.384291,-99) , 
5, 1.72534, 1, 0, 0.499068,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.022215);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.858259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639514,-99) , 
2, 42.5, 0, 0, 0.67562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450465,-99) , 
2, 12.5, 0, 0, 0.547974,-99) , 
6, 0.665474, 1, 0, 0.615525,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499305,-99) , 
13, 1.5, 0, 0, 0.54296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282991,-99) , 
7, 62.0867, 1, 0, 0.514531,-99) , 
5, 1.5307, 1, 0, 0.56895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257961,-99) , 
11, 0.210084, 0, 0, 0.358911,-99) , 
2, 8.5, 0, 0, 0.547261,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321402,-99) , 
5, 2.11896, 1, 0, 0.421298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0211723,-99) , 
5, 2.05885, 1, 0, 0.0939523,-99) , 
9, 47.876, 1, 0, 0.20835,-99) , 
8, 0.608227, 1, 0, 0.307139,-99) , 
4, 1.72929, 1, 0, 0.501518,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0291573);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569308,-99) , 
8, 0.591542, 0, 0, 0.698789,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414909,-99) , 
3, 0.951378, 0, 0, 0.560038,-99) , 
4, 0.995787, 1, 0, 0.639733,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38203,-99) , 
2, 49.5, 0, 0, 0.552385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20301,-99) , 
5, 1.53268, 1, 0, 0.46655,-99) , 
7, 64.2328, 1, 0, 0.598759,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47812,-99) , 
8, 1.30022, 1, 0, 0.568211,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354689,-99) , 
12, 2395.71, 1, 0, 0.438079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156081,-99) , 
5, 1.92636, 1, 0, 0.403936,-99) , 
9, 123.026, 0, 0, 0.483531,-99) , 
2, 12.5, 0, 0, 0.555517,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43207,-99) , 
3, 0.989663, 0, 0, 0.528854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292008,-99) , 
7, 53.9005, 1, 0, 0.493159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309649,-99) , 
5, 2.30266, 1, 0, 0.450598,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540507,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0554972,-99) , 
12, 942.053, 1, 0, 0.0963349,-99) , 
9, 58.399, 1, 0, 0.170566,-99) , 
5, 1.71503, 1, 0, 0.25251,-99) , 
8, 0.721333, 1, 0, 0.347139,-99) , 
4, 1.52256, 1, 0, 0.491795,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0278869);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.827025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655289,-99) , 
6, 0.189354, 1, 0, 0.700614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453476,-99) , 
1, 12.5, 0, 0, 0.666894,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41919,-99) , 
3, 0.912092, 0, 0, 0.549469,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235094,-99) , 
9, 112.291, 1, 0, 0.293282,-99) , 
7, 28.5116, 1, 0, 0.512871,-99) , 
2, 18.5, 0, 0, 0.569653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289481,-99) , 
7, 140.612, 1, 0, 0.553879,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406319,-99) , 
12, 1244.78, 1, 0, 0.490949,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0625205,-99) , 
10, 0.624609, 1, 0, 0.212646,-99) , 
13, 1.5, 0, 0, 0.302874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.019812,-99) , 
5, 2.32272, 1, 0, 0.248186,-99) , 
8, 0.234544, 1, 0, 0.31825,-99) , 
5, 1.93405, 1, 0, 0.494627,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0254524);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558251,-99) , 
2, 16.5, 0, 0, 0.604679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371823,-99) , 
9, 434.227, 1, 0, 0.590517,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589515,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.088883,-99) , 
7, 62.6984, 1, 0, 0.398392,-99) , 
9, 46.7962, 1, 0, 0.445377,-99) , 
4, 1.48113, 1, 0, 0.56041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248757,-99) , 
2, 7.5, 0, 0, 0.546052,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466798,-99) , 
5, 2.21141, 0, 0, 0.5594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308567,-99) , 
7, 17.8669, 0, 0, 0.465125,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133868,-99) , 
12, 2754.2, 0, 0, 0.325908,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25615,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
13, 1.5, 0, 0, 0.0330287,-99) , 
8, 0.712267, 1, 0, 0.111157,-99) , 
9, 83.6448, 1, 0, 0.216048,-99) , 
8, 0.314316, 1, 0, 0.306102,-99) , 
5, 1.93372, 1, 0, 0.487314,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0226193);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.804779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660288,-99) , 
11, -1.6585, 1, 0, 0.703694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485257,-99) , 
7, 18.1558, 1, 0, 0.570565,-99) , 
4, 1.25321, 1, 0, 0.656812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350885,-99) , 
3, 0.99926, 1, 0, 0.554166,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36822,-99) , 
9, 158.034, 0, 0, 0.420291,-99) , 
3, 0.927579, 0, 0, 0.52902,-99) , 
13, 1.5, 0, 0, 0.566227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25805,-99) , 
5, 2.16849, 1, 0, 0.553432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223399,-99) , 
5, 2.06719, 1, 0, 0.339844,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298433,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.05551, 1, 0, 0.0721637,-99) , 
4, 1.8175, 1, 0, 0.139442,-99) , 
9, 77.1154, 1, 0, 0.233584,-99) , 
8, 0.251773, 1, 0, 0.29585,-99) , 
4, 1.72518, 1, 0, 0.502586,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0282947);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.835789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675249,-99) , 
2, 19.5, 0, 0, 0.733581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535766,-99) , 
8, 2.48097, 1, 0, 0.683084,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400569,-99) , 
9, 130.252, 0, 0, 0.47275,-99) , 
8, 0.596051, 0, 0, 0.63694,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548618,-99) , 
12, 2254.7, 1, 0, 0.615818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382969,-99) , 
2, 11.5, 0, 0, 0.549203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363936,-99) , 
7, 58.7253, 1, 0, 0.505091,-99) , 
6, 0.810572, 1, 0, 0.586561,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505484,-99) , 
8, 0.51969, 1, 0, 0.603935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382167,-99) , 
0, 13.5, 0, 0, 0.528918,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211567,-99) , 
2, 8.5, 0, 0, 0.395365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 20.5, 0, 0, 0.170458,-99) , 
0, 37.5, 1, 0, 0.351105,-99) , 
13, 1.5, 0, 0, 0.406981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11113,-99) , 
5, 2.40031, 1, 0, 0.383724,-99) , 
5, 1.67009, 1, 0, 0.491852,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.022808);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61303,-99) , 
6, 0.198065, 1, 0, 0.65726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462958,-99) , 
4, 1.155, 1, 0, 0.5319,-99) , 
13, 1.5, 0, 0, 0.567034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335467,-99) , 
9, 403.355, 1, 0, 0.553055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145383,-99) , 
7, 180.335, 1, 0, 0.538832,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29135,-99) , 
2, 10.5, 0, 0, 0.475016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239663,-99) , 
5, 2.17501, 1, 0, 0.427173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328199,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0560809,-99) , 
8, 0.660736, 1, 0, 0.130104,-99) , 
9, 47.5454, 1, 0, 0.194712,-99) , 
13, 1.5, 0, 0, 0.274618,-99) , 
8, 0.234544, 1, 0, 0.331908,-99) , 
5, 1.92282, 1, 0, 0.485569,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0248098);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60838,-99) , 
8, 0.83591, 0, 0, 0.725416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519122,-99) , 
7, 92.8316, 1, 0, 0.674934,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448835,-99) , 
7, 10.3332, 0, 0, 0.577259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319297,-99) , 
7, 34.2212, 1, 0, 0.543704,-99) , 
2, 21.5, 0, 0, 0.590148,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513918,-99) , 
3, 0.969181, 1, 0, 0.538553,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254397,-99) , 
6, 0.667739, 1, 0, 0.345312,-99) , 
3, 0.944643, 0, 0, 0.500189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13978,-99) , 
7, 142.835, 1, 0, 0.482504,-99) , 
4, 1.14857, 1, 0, 0.539742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418162,-99) , 
9, 181.069, 0, 0, 0.498187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424328,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
13, 1.5, 0, 0, 0.0467448,-99) , 
4, 1.74823, 1, 0, 0.143723,-99) , 
9, 45.3106, 1, 0, 0.229524,-99) , 
8, 0.238342, 1, 0, 0.322514,-99) , 
5, 1.98397, 1, 0, 0.492233,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0288557);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.89635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767876,-99) , 
12, 6041.23, 0, 0, 0.808149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595441,-99) , 
5, 1.46183, 1, 0, 0.729904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466749,-99) , 
10, 0.134988, 1, 0, 0.546642,-99) , 
2, 12.5, 0, 0, 0.669151,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557888,-99) , 
13, 1.5, 0, 0, 0.598099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441564,-99) , 
7, 13.2889, 0, 0, 0.565164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371786,-99) , 
3, 0.998449, 1, 0, 0.535581,-99) , 
6, 0.417909, 1, 0, 0.587168,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447856,-99) , 
5, 2.0856, 1, 0, 0.541632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233979,-99) , 
10, 0.979486, 1, 0, 0.501063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152689,-99) , 
2, 8.5, 0, 0, 0.467952,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287093,-99) , 
5, 2.00068, 1, 0, 0.45385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280952,-99) , 
10, 0.380536, 1, 0, 0.366715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0379115,-99) , 
5, 1.98127, 1, 0, 0.149923,-99) , 
9, 59.6502, 1, 0, 0.243325,-99) , 
4, 1.31172, 1, 0, 0.30223,-99) , 
8, 0.608657, 1, 0, 0.375269,-99) , 
5, 1.73212, 1, 0, 0.498349,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0244648);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64092,-99) , 
10, 0.280353, 1, 0, 0.699733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539019,-99) , 
4, 1.40373, 1, 0, 0.657265,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355975,-99) , 
3, 0.999211, 1, 0, 0.55474,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262756,-99) , 
11, 0.115296, 0, 0, 0.374457,-99) , 
3, 0.88927, 0, 0, 0.531985,-99) , 
13, 1.5, 0, 0, 0.569078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171233,-99) , 
7, 177.398, 1, 0, 0.554665,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34694,-99) , 
10, 0.33367, 1, 0, 0.524561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312777,-99) , 
5, 2.24326, 1, 0, 0.440688,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396621,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0248881,-99) , 
4, 1.53211, 1, 0, 0.0859682,-99) , 
9, 46.4902, 1, 0, 0.190354,-99) , 
8, 0.607983, 1, 0, 0.326122,-99) , 
5, 1.98031, 1, 0, 0.50464,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0257248);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46037,-99) , 
1, 39.5, 1, 0, 0.641371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440187,-99) , 
1, 9.5, 0, 0, 0.619742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624154,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498842,-99) , 
1, 8.5, 1, 0, 0.539406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354445,-99) , 
10, 0.330129, 1, 0, 0.507939,-99) , 
2, 12.5, 0, 0, 0.574131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 17.5, 0, 0, 0.363818,-99) , 
7, 99.8165, 1, 0, 0.554434,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135082,-99) , 
5, 2.32311, 1, 0, 0.370665,-99) , 
1, 14.5, 0, 0, 0.477285,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413651,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183643,-99) , 
8, 0.216481, 1, 0, 0.242131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0652657,-99) , 
12, 3820.21, 1, 0, 0.19165,-99) , 
12, 7252.03, 0, 0, 0.243467,-99) , 
13, 1.5, 0, 0, 0.330724,-99) , 
5, 1.90852, 1, 0, 0.495612,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.02678);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.833034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634543,-99) , 
7, 32.9997, 1, 0, 0.734561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568718,-99) , 
7, 14.4698, 0, 0, 0.699384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482682,-99) , 
8, 0.405649, 0, 0, 0.663014,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527029,-99) , 
9, 74.6631, 1, 0, 0.58593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428214,-99) , 
4, 1.18664, 1, 0, 0.481169,-99) , 
11, 1.97568, 0, 0, 0.51885,-99) , 
11, -6.00609, 1, 0, 0.533454,-99) , 
6, 0.345862, 1, 0, 0.578345,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369453,-99) , 
8, 0.502109, 0, 0, 0.543735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22864,-99) , 
8, 0.589075, 1, 0, 0.371559,-99) , 
9, 63.3607, 1, 0, 0.436393,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106591,-99) , 
8, 0.303259, 1, 0, 0.244828,-99) , 
5, 2.25686, 1, 0, 0.400409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0235306,-99) , 
7, 124.099, 1, 0, 0.375761,-99) , 
5, 1.75079, 1, 0, 0.499153,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0253351);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655719,-99) , 
0, 36.5, 0, 0, 0.692972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513456,-99) , 
0, 12.5, 0, 0, 0.65475,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518008,-99) , 
2, 21.5, 0, 0, 0.550248,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173109,-99) , 
1, 28.5, 0, 0, 0.403238,-99) , 
7, 66.1116, 1, 0, 0.530599,-99) , 
13, 1.5, 0, 0, 0.566579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104881,-99) , 
5, 2.29884, 1, 0, 0.559407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441594,-99) , 
10, 0.267673, 0, 0, 0.543466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302658,-99) , 
4, 2.03318, 1, 0, 0.487774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0991921,-99) , 
3, 0.998851, 1, 0, 0.436856,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197164,-99) , 
1, 14.5, 0, 0, 0.311087,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0706311,-99) , 
4, 1.70932, 1, 0, 0.127159,-99) , 
8, 0.549184, 1, 0, 0.207741,-99) , 
6, 1.00097, 0, 0, 0.257118,-99) , 
11, -1.12245, 1, 0, 0.335421,-99) , 
4, 1.60239, 1, 0, 0.500601,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0249669);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605274,-99) , 
13, 1.5, 0, 0, 0.638362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415921,-99) , 
8, 2.89514, 1, 0, 0.621162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371029,-99) , 
7, 9.03998, 0, 0, 0.604836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397498,-99) , 
9, 33.4876, 0, 0, 0.580498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4339,-99) , 
8, 1.52328, 1, 0, 0.570768,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397888,-99) , 
8, 0.248946, 1, 0, 0.43875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128291,-99) , 
3, 0.888898, 0, 0, 0.405135,-99) , 
13, 1.5, 0, 0, 0.455367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3655,-99) , 
8, 0.408247, 1, 0, 0.477731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0206605,-99) , 
5, 2.10436, 1, 0, 0.212385,-99) , 
2, 12.5, 0, 0, 0.368273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0589662,-99) , 
7, 23.5706, 1, 0, 0.154438,-99) , 
3, 0.996982, 1, 0, 0.307689,-99) , 
4, 1.72256, 1, 0, 0.397234,-99) , 
4, 1.24745, 1, 0, 0.491419,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0239164);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525984,-99) , 
3, 0.923508, 0, 0, 0.633186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427607,-99) , 
1, 64.5, 1, 0, 0.617599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413165,-99) , 
1, 9.5, 0, 0, 0.598079,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340685,-99) , 
5, 1.72925, 1, 0, 0.461347,-99) , 
13, 1.5, 0, 0, 0.509173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329594,-99) , 
10, 0.290486, 1, 0, 0.474753,-99) , 
2, 12.5, 0, 0, 0.552826,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653402,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278431,-99) , 
5, 2.10002, 1, 0, 0.424706,-99) , 
10, 0.2395, 0, 0, 0.509787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276721,-99) , 
10, 0.689763, 1, 0, 0.463746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371066,-99) , 
10, 0.804623, 0, 0, 0.476262,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23958,-99) , 
8, 1.57736, 1, 0, 0.3528,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0263455,-99) , 
5, 2.00589, 1, 0, 0.0631032,-99) , 
5, 1.83514, 1, 0, 0.188523,-99) , 
9, 45.5816, 1, 0, 0.287396,-99) , 
8, 0.669462, 1, 0, 0.364062,-99) , 
4, 1.52439, 1, 0, 0.493581,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0251893);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662874,-99) , 
4, 0.969388, 1, 0, 0.723405,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517562,-99) , 
11, 0.74834, 0, 0, 0.592304,-99) , 
3, 0.994967, 1, 0, 0.676983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397144,-99) , 
3, 0.999166, 1, 0, 0.567952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293484,-99) , 
5, 1.98517, 1, 0, 0.552214,-99) , 
13, 1.5, 0, 0, 0.591675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280081,-99) , 
7, 8.10659, 0, 0, 0.57496,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411122,-99) , 
9, 57.0612, 0, 0, 0.574224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17286,-99) , 
8, 0.176899, 1, 0, 0.382842,-99) , 
4, 1.88907, 1, 0, 0.509571,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39582,-99) , 
0, 13.5, 0, 0, 0.515769,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.095748,-99) , 
4, 1.66586, 1, 0, 0.235511,-99) , 
9, 52.5419, 1, 0, 0.354684,-99) , 
8, 0.895693, 1, 0, 0.432661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0865487,-99) , 
7, 125.451, 1, 0, 0.408815,-99) , 
4, 1.44105, 1, 0, 0.512836,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.026864);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589655,-99) , 
4, 0.739326, 1, 0, 0.693455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477236,-99) , 
8, 0.484828, 0, 0, 0.657306,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466702,-99) , 
8, 1.78947, 1, 0, 0.57928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417447,-99) , 
7, 31.0196, 1, 0, 0.533839,-99) , 
5, 1.46247, 1, 0, 0.594844,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38173,-99) , 
7, 104.506, 1, 0, 0.577899,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362244,-99) , 
3, 0.94691, 0, 0, 0.492121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200899,-99) , 
7, 37.5745, 1, 0, 0.444482,-99) , 
2, 29.5, 0, 0, 0.480956,-99) , 
6, 0.782639, 1, 0, 0.553996,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430061,-99) , 
11, 0.707729, 0, 0, 0.51644,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225713,-99) , 
9, 59.6761, 1, 0, 0.36973,-99) , 
8, 0.589065, 1, 0, 0.433616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0913529,-99) , 
7, 142.389, 1, 0, 0.412931,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0524831,-99) , 
7, 30.6357, 0, 0, 0.14452,-99) , 
5, 2.29919, 1, 0, 0.364627,-99) , 
5, 1.84573, 1, 0, 0.492,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0205288);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.815324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665159,-99) , 
7, 31.4067, 1, 0, 0.742108,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320023,-99) , 
4, 0.148832, 0, 0, 0.54662,-99) , 
6, 0.179043, 1, 0, 0.58464,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302419,-99) , 
3, 0.999171, 1, 0, 0.516343,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266633,-99) , 
6, 0.429924, 0, 0, 0.361751,-99) , 
8, 2.32276, 1, 0, 0.484092,-99) , 
5, 1.46918, 1, 0, 0.530432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271955,-99) , 
9, 477.147, 1, 0, 0.51697,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638948,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228375,-99) , 
6, 0.907076, 0, 0, 0.339384,-99) , 
13, 1.5, 0, 0, 0.449107,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341037,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146657,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0420355,-99) , 
5, 2.13255, 1, 0, 0.107132,-99) , 
9, 63.1507, 1, 0, 0.216184,-99) , 
8, 0.589065, 1, 0, 0.323398,-99) , 
4, 1.75866, 1, 0, 0.482905,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0224566);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.840551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605714,-99) , 
0, 33.5, 0, 0, 0.648793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462554,-99) , 
5, 1.54561, 1, 0, 0.530777,-99) , 
13, 1.5, 0, 0, 0.56756,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203861,-99) , 
10, 1.93692, 0, 0, 0.368562,-99) , 
7, 100.014, 1, 0, 0.552418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237042,-99) , 
7, 7.37061, 0, 0, 0.542793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223057,-99) , 
0, 13.5, 0, 0, 0.431717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123299,-99) , 
7, 43.852, 1, 0, 0.366677,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35195,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0555544,-99) , 
1, 21.5, 0, 0, 0.0977599,-99) , 
5, 1.91962, 1, 0, 0.173425,-99) , 
9, 71.2898, 1, 0, 0.261291,-99) , 
8, 0.159239, 1, 0, 0.327542,-99) , 
4, 1.73047, 1, 0, 0.500651,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0205196);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490459,-99) , 
10, 0.308601, 1, 0, 0.622021,-99) , 
0, 30.5, 0, 0, 0.672045,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435369,-99) , 
12, 3999.09, 0, 0, 0.518527,-99) , 
6, 0.769158, 1, 0, 0.618407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453752,-99) , 
8, 0.447285, 0, 0, 0.575486,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225933,-99) , 
7, 50.9124, 1, 0, 0.454969,-99) , 
4, 1.10738, 1, 0, 0.510502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210374,-99) , 
2, 7.5, 0, 0, 0.495711,-99) , 
13, 1.5, 0, 0, 0.530941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436524,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0497839,-99) , 
9, 40.9239, 1, 0, 0.116851,-99) , 
8, 0.401675, 1, 0, 0.269599,-99) , 
5, 2.16876, 1, 0, 0.504041,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0258541);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62061,-99) , 
6, 0.289889, 1, 0, 0.671638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473067,-99) , 
1, 39.5, 1, 0, 0.642691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561784,-99) , 
6, 0.172082, 1, 0, 0.594195,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260433,-99) , 
0, 36.5, 1, 0, 0.431959,-99) , 
5, 1.5542, 1, 0, 0.523598,-99) , 
13, 1.5, 0, 0, 0.560504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225723,-99) , 
7, 8.0483, 0, 0, 0.54453,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259199,-99) , 
3, 0.983271, 0, 0, 0.44521,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101668,-99) , 
12, 795.202, 1, 0, 0.202644,-99) , 
10, 0.237464, 0, 0, 0.318625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0911132,-99) , 
7, 56.4879, 1, 0, 0.273682,-99) , 
4, 1.73036, 1, 0, 0.494339,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0213206);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.774266,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608281,-99) , 
12, 8425.53, 0, 0, 0.637425,-99) , 
6, 0.172069, 1, 0, 0.673629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519523,-99) , 
7, 13.1526, 0, 0, 0.646522,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487231,-99) , 
6, 0.629106, 1, 0, 0.553066,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378955,-99) , 
8, 0.803498, 1, 0, 0.455212,-99) , 
5, 1.51463, 1, 0, 0.505722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286944,-99) , 
3, 0.81916, 0, 0, 0.490655,-99) , 
13, 1.5, 0, 0, 0.537271,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312718,-99) , 
7, 48.8789, 1, 0, 0.530422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331964,-99) , 
2, 12.5, 0, 0, 0.46733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0417958,-99) , 
5, 1.96335, 1, 0, 0.0995452,-99) , 
9, 46.4902, 1, 0, 0.200971,-99) , 
8, 0.505898, 1, 0, 0.320672,-99) , 
4, 1.72762, 1, 0, 0.497673,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0227005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519719,-99) , 
8, 2.67817, 1, 0, 0.664514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476875,-99) , 
7, 11.6301, 0, 0, 0.635462,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475483,-99) , 
3, 0.992521, 1, 0, 0.548684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362138,-99) , 
3, 0.927203, 0, 0, 0.521589,-99) , 
6, 0.591982, 1, 0, 0.583555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33595,-99) , 
9, 401.564, 1, 0, 0.569415,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660356,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379819,-99) , 
8, 0.103696, 1, 0, 0.477074,-99) , 
13, 1.5, 0, 0, 0.548002,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154768,-99) , 
3, 0.977268, 0, 0, 0.490524,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0635705,-99) , 
4, 1.76648, 1, 0, 0.147123,-99) , 
9, 47.6592, 1, 0, 0.283301,-99) , 
8, 0.407643, 1, 0, 0.400353,-99) , 
5, 1.98578, 1, 0, 0.531466,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0204971);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596576,-99) , 
6, 0.464517, 1, 0, 0.650865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488877,-99) , 
8, 2.48785, 1, 0, 0.627947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472355,-99) , 
5, 1.50646, 1, 0, 0.603545,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316023,-99) , 
3, 0.907641, 0, 0, 0.476638,-99) , 
4, 0.73953, 1, 0, 0.51546,-99) , 
13, 1.5, 0, 0, 0.549316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299062,-99) , 
5, 2.17299, 1, 0, 0.538137,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272264,-99) , 
2, 12.5, 0, 0, 0.504154,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.021847,-99) , 
5, 2.05468, 1, 0, 0.127687,-99) , 
8, 0.411754, 1, 0, 0.286029,-99) , 
9, 50.6478, 1, 0, 0.366711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 117.53, 1, 0, 0.332621,-99) , 
4, 1.75763, 1, 0, 0.500863,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.022768);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.828413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629667,-99) , 
2, 13.5, 0, 0, 0.755899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427519,-99) , 
7, 13.8313, 0, 0, 0.561698,-99) , 
6, 0.289901, 1, 0, 0.61503,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390462,-99) , 
9, 274.269, 1, 0, 0.531735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234696,-99) , 
7, 64.3476, 1, 0, 0.504861,-99) , 
5, 1.49816, 1, 0, 0.561718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317143,-99) , 
3, 0.999379, 1, 0, 0.545302,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305495,-99) , 
1, 10.5, 0, 0, 0.518678,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219215,-99) , 
0, 27.5, 1, 0, 0.406985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219278,-99) , 
6, 0.720729, 1, 0, 0.341321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0896108,-99) , 
5, 2.25448, 1, 0, 0.277323,-99) , 
8, 0.24112, 1, 0, 0.348043,-99) , 
5, 1.9306, 1, 0, 0.497606,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0197301);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58236,-99) , 
5, 1.4978, 1, 0, 0.661521,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404838,-99) , 
1, 40.5, 1, 0, 0.557159,-99) , 
6, 0.180234, 1, 0, 0.579033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321037,-99) , 
7, 137.17, 1, 0, 0.562279,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2887,-99) , 
8, 1.53035, 1, 0, 0.376502,-99) , 
7, 10.0953, 0, 0, 0.541476,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506102,-99) , 
7, 27.8672, 1, 0, 0.587611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334077,-99) , 
5, 2.30389, 1, 0, 0.528982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319355,-99) , 
2, 11.5, 0, 0, 0.464154,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 1.9604, 1, 0, 0.279447,-99) , 
9, 47.6422, 1, 0, 0.370565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0949661,-99) , 
5, 2.18122, 1, 0, 0.272657,-99) , 
8, 0.402549, 1, 0, 0.358879,-99) , 
5, 1.9372, 1, 0, 0.495421,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0233417);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.830386,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694573,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435144,-99) , 
10, 0.289589, 1, 0, 0.559761,-99) , 
0, 29.5, 0, 0, 0.596742,-99) , 
6, 0.120876, 1, 0, 0.631399,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474718,-99) , 
1, 33.5, 1, 0, 0.599262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12956,-99) , 
7, 35.8347, 1, 0, 0.479955,-99) , 
1, 14.5, 0, 0, 0.527797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312287,-99) , 
3, 0.846196, 0, 0, 0.51096,-99) , 
13, 1.5, 0, 0, 0.545354,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389857,-99) , 
9, 87.362, 0, 0, 0.514853,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401864,-99) , 
11, -0.500649, 1, 0, 0.515949,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182395,-99) , 
13, 1.5, 0, 0, 0.265867,-99) , 
9, 66.0775, 1, 0, 0.373831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139483,-99) , 
5, 2.28739, 1, 0, 0.320131,-99) , 
8, 0.208224, 1, 0, 0.373781,-99) , 
5, 1.94745, 1, 0, 0.503168,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0197733);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653975,-99) , 
10, 0.509141, 1, 0, 0.728768,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470156,-99) , 
5, 1.57174, 1, 0, 0.593811,-99) , 
13, 1.5, 0, 0, 0.642943,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331392,-99) , 
7, 8.16515, 0, 0, 0.538018,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130682,-99) , 
1, 13.5, 0, 0, 0.230978,-99) , 
7, 36.3101, 1, 0, 0.511146,-99) , 
2, 21.5, 0, 0, 0.547366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289473,-99) , 
7, 135.426, 1, 0, 0.533374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482311,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0598201,-99) , 
5, 2.36524, 1, 0, 0.192018,-99) , 
8, 0.185927, 1, 0, 0.289476,-99) , 
5, 2.16884, 1, 0, 0.507696,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0241091);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.801285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676214,-99) , 
13, 0.5, 0, 0, 0.75702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540923,-99) , 
5, 1.72636, 1, 0, 0.71443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516427,-99) , 
5, 0.81362, 0, 0, 0.650804,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559021,-99) , 
0, 16.5, 0, 0, 0.625415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433905,-99) , 
8, 2.48209, 1, 0, 0.58746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459299,-99) , 
7, 14.5353, 0, 0, 0.518628,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242182,-99) , 
2, 18.5, 0, 0, 0.421541,-99) , 
7, 22.752, 1, 0, 0.479302,-99) , 
13, 1.5, 0, 0, 0.511741,-99) , 
4, 0.635851, 1, 0, 0.547005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0833464,-99) , 
5, 2.35973, 1, 0, 0.299975,-99) , 
11, -4.32281, 1, 0, 0.407568,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20472,-99) , 
12, 220.964, 1, 0, 0.310691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0909487,-99) , 
8, 0.797396, 1, 0, 0.209861,-99) , 
9, 71.5095, 1, 0, 0.301824,-99) , 
4, 1.73052, 1, 0, 0.501852,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0263785);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622903,-99) , 
6, 0.464115, 1, 0, 0.718761,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472067,-99) , 
7, 18.4046, 0, 0, 0.58508,-99) , 
13, 1.5, 0, 0, 0.625886,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421413,-99) , 
9, 91.3658, 1, 0, 0.566285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264592,-99) , 
2, 42.5, 0, 0, 0.470633,-99) , 
7, 66.9083, 1, 0, 0.591616,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479767,-99) , 
5, 1.50345, 1, 0, 0.555918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290012,-99) , 
11, -0.301978, 1, 0, 0.441482,-99) , 
11, 0.448, 0, 0, 0.491379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188316,-99) , 
7, 24.1442, 1, 0, 0.457819,-99) , 
2, 12.5, 0, 0, 0.542623,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350021,-99) , 
10, 0.263555, 0, 0, 0.489153,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350633,-99) , 
10, 0.238824, 0, 0, 0.410924,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.116567,-99) , 
1, 18.5, 0, 0, 0.219745,-99) , 
10, 0.365853, 1, 0, 0.340788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114459,-99) , 
5, 2.16909, 1, 0, 0.287551,-99) , 
13, 1.5, 0, 0, 0.354571,-99) , 
4, 1.54154, 1, 0, 0.488228,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0239579);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480909,-99) , 
9, 349.886, 1, 0, 0.633757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393168,-99) , 
1, 34.5, 1, 0, 0.619826,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375295,-99) , 
0, 14.5, 1, 0, 0.511473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298953,-99) , 
2, 7.5, 0, 0, 0.480529,-99) , 
7, 13.6068, 0, 0, 0.57677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470492,-99) , 
9, 91.3658, 1, 0, 0.538037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32093,-99) , 
5, 1.59098, 1, 0, 0.485489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0594088,-99) , 
1, 13.5, 0, 0, 0.427232,-99) , 
7, 59.9407, 1, 0, 0.551297,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361721,-99) , 
1, 14.5, 0, 0, 0.506488,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40286,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.044875,-99) , 
6, 0.998895, 0, 0, 0.0935334,-99) , 
9, 47.6422, 1, 0, 0.209686,-99) , 
8, 0.409188, 1, 0, 0.332953,-99) , 
4, 1.76772, 1, 0, 0.513122,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0229214);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.825056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606571,-99) , 
5, 1.13669, 0, 0, 0.734663,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515135,-99) , 
6, 0.437769, 0, 0, 0.591272,-99) , 
4, 1.07281, 1, 0, 0.660313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423475,-99) , 
2, 28.5, 0, 0, 0.526215,-99) , 
10, 0.444988, 1, 0, 0.617922,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507059,-99) , 
6, 0.598168, 1, 0, 0.568051,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245588,-99) , 
9, 42.1135, 0, 0, 0.444984,-99) , 
5, 1.57643, 1, 0, 0.517167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241514,-99) , 
3, 0.99949, 1, 0, 0.502648,-99) , 
13, 1.5, 0, 0, 0.537837,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524569,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264761,-99) , 
1, 12.5, 0, 0, 0.457827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0236611,-99) , 
10, 0.378232, 1, 0, 0.272967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0402445,-99) , 
5, 2.1317, 1, 0, 0.194743,-99) , 
9, 44.5121, 1, 0, 0.280037,-99) , 
8, 0.175098, 1, 0, 0.330575,-99) , 
4, 1.70867, 1, 0, 0.497214,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0244312);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577406,-99) , 
7, 19.3581, 0, 0, 0.712629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553402,-99) , 
9, 237.081, 1, 0, 0.664676,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505926,-99) , 
7, 105.261, 1, 0, 0.619457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400282,-99) , 
2, 28.5, 0, 0, 0.530832,-99) , 
10, 0.507621, 1, 0, 0.609593,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44898,-99) , 
5, 1.42617, 1, 0, 0.535317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352496,-99) , 
5, 1.10749, 0, 0, 0.486049,-99) , 
2, 12.5, 0, 0, 0.569587,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370046,-99) , 
8, 1.9679, 1, 0, 0.517211,-99) , 
4, 1.16582, 1, 0, 0.576566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165802,-99) , 
5, 2.35539, 1, 0, 0.535224,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393046,-99) , 
8, 0.808195, 1, 0, 0.490581,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250886,-99) , 
12, 7751.62, 0, 0, 0.322416,-99) , 
11, 0.759763, 0, 0, 0.395359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156978,-99) , 
0, 52.5, 1, 0, 0.366025,-99) , 
13, 1.5, 0, 0, 0.419097,-99) , 
5, 1.62588, 1, 0, 0.494122,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0198256);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573148,-99) , 
2, 28.5, 0, 0, 0.600887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410775,-99) , 
9, 33.0665, 0, 0, 0.581621,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473303,-99) , 
13, 1.5, 0, 0, 0.555346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330861,-99) , 
7, 19.0873, 1, 0, 0.418531,-99) , 
8, 0.608379, 1, 0, 0.465362,-99) , 
4, 1.28278, 1, 0, 0.533399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104702,-99) , 
7, 190.533, 1, 0, 0.519624,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35713,-99) , 
2, 14.5, 0, 0, 0.436062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.05728,-99) , 
9, 43.9503, 1, 0, 0.0969789,-99) , 
8, 0.40859, 1, 0, 0.270522,-99) , 
5, 2.1651, 1, 0, 0.493208,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.019732);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41059,-99) , 
9, 401.03, 1, 0, 0.605929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423951,-99) , 
9, 51.2212, 1, 0, 0.477402,-99) , 
8, 2.27623, 1, 0, 0.577961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30912,-99) , 
2, 7.5, 0, 0, 0.563922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244291,-99) , 
7, 188.859, 1, 0, 0.553755,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469382,-99) , 
0, 21.5, 1, 0, 0.588674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371275,-99) , 
5, 2.30351, 1, 0, 0.537644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318223,-99) , 
9, 45.303, 0, 0, 0.496005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335574,-99) , 
12, 3801.04, 0, 0, 0.442701,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0968895,-99) , 
5, 2.13255, 1, 0, 0.246571,-99) , 
9, 58.4319, 1, 0, 0.327223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0638586,-99) , 
5, 2.32273, 1, 0, 0.288683,-99) , 
8, 0.45124, 1, 0, 0.376485,-99) , 
5, 1.88047, 1, 0, 0.50346,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.016108);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450506,-99) , 
5, 0.846489, 0, 0, 0.586857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371813,-99) , 
5, 2.1581, 1, 0, 0.576104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349719,-99) , 
7, 127.887, 1, 0, 0.56397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217693,-99) , 
7, 7.14577, 0, 0, 0.554448,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545929,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355154,-99) , 
2, 12.5, 0, 0, 0.476227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22558,-99) , 
7, 51.0939, 1, 0, 0.427423,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.035745,-99) , 
5, 2.13151, 1, 0, 0.18654,-99) , 
9, 77.1154, 1, 0, 0.311434,-99) , 
8, 0.160026, 1, 0, 0.361991,-99) , 
4, 1.74795, 1, 0, 0.5189,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0201004);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560221,-99) , 
8, 1.0446, 0, 0, 0.646968,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42495,-99) , 
3, 0.991698, 1, 0, 0.51631,-99) , 
0, 17.5, 0, 0, 0.588259,-99) , 
6, 0.12002, 1, 0, 0.625957,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722507,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281612,-99) , 
3, 0.764545, 0, 0, 0.507483,-99) , 
11, -7.25911, 1, 0, 0.525791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271716,-99) , 
3, 0.999473, 1, 0, 0.511436,-99) , 
13, 1.5, 0, 0, 0.544705,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444926,-99) , 
11, 0.570829, 0, 0, 0.548747,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329569,-99) , 
8, 1.3356, 0, 0, 0.494844,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159079,-99) , 
8, 0.604469, 1, 0, 0.264032,-99) , 
9, 45.7061, 1, 0, 0.341909,-99) , 
8, 0.218054, 1, 0, 0.40229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129851,-99) , 
7, 63.8193, 1, 0, 0.368479,-99) , 
5, 1.93506, 1, 0, 0.502366,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.017991);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.796264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556037,-99) , 
7, 71.7435, 1, 0, 0.714803,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532742,-99) , 
11, 2.16506, 0, 0, 0.577343,-99) , 
2, 17.5, 0, 0, 0.630057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485328,-99) , 
2, 16.5, 0, 0, 0.53573,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169963,-99) , 
7, 32.4726, 1, 0, 0.317486,-99) , 
3, 0.999078, 1, 0, 0.514578,-99) , 
13, 1.5, 0, 0, 0.550483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260997,-99) , 
3, 0.773604, 0, 0, 0.538337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328719,-99) , 
0, 17.5, 0, 0, 0.452323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430044,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0496998,-99) , 
5, 2.09563, 1, 0, 0.144572,-99) , 
9, 46.0577, 1, 0, 0.25688,-99) , 
8, 0.415393, 1, 0, 0.338398,-99) , 
4, 1.82751, 1, 0, 0.509784,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0192952);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661478,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44207,-99) , 
9, 176.428, 1, 0, 0.527623,-99) , 
11, 1.86735, 0, 0, 0.571507,-99) , 
0, 36.5, 0, 0, 0.604698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642712,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440492,-99) , 
1, 13.5, 0, 0, 0.504181,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205515,-99) , 
7, 36.6525, 1, 0, 0.395801,-99) , 
5, 1.6228, 1, 0, 0.461345,-99) , 
11, 5.75565, 0, 0, 0.481991,-99) , 
13, 1.5, 0, 0, 0.518926,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280221,-99) , 
10, 0.462249, 1, 0, 0.421698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0677491,-99) , 
8, 0.795488, 1, 0, 0.216247,-99) , 
10, 0.23951, 0, 0, 0.325311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
0, 75.5, 1, 0, 0.298738,-99) , 
4, 1.74632, 1, 0, 0.481381,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0249568);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.847185,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587718,-99) , 
11, 1.98453, 0, 0, 0.62865,-99) , 
6, 0.214851, 1, 0, 0.680439,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558654,-99) , 
5, 1.28773, 1, 0, 0.639691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348066,-99) , 
8, 2.07238, 1, 0, 0.507436,-99) , 
11, -1.24362, 1, 0, 0.553331,-99) , 
13, 1.5, 0, 0, 0.589199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385205,-99) , 
5, 0.528846, 0, 0, 0.571796,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429035,-99) , 
2, 11.5, 0, 0, 0.544223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193073,-99) , 
9, 32.1748, 0, 0, 0.513058,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321557,-99) , 
9, 59.7196, 1, 0, 0.397758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0864922,-99) , 
5, 2.12463, 1, 0, 0.345876,-99) , 
8, 0.668131, 1, 0, 0.42556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0515764,-99) , 
7, 142.553, 1, 0, 0.408754,-99) , 
5, 1.6482, 1, 0, 0.492863,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0202273);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7091,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518073,-99) , 
6, 0.661837, 1, 0, 0.583864,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363233,-99) , 
12, 2787.13, 1, 0, 0.455002,-99) , 
9, 47.8912, 0, 0, 0.561032,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220863,-99) , 
1, 26.5, 0, 0, 0.409852,-99) , 
7, 71.5743, 1, 0, 0.539277,-99) , 
12, 11124.2, 0, 0, 0.557564,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551932,-99) , 
11, -2.96472, 1, 0, 0.597927,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256876,-99) , 
12, 2315.94, 1, 0, 0.393649,-99) , 
2, 10.5, 0, 0, 0.532016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346077,-99) , 
13, 1.5, 0, 0, 0.420778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127359,-99) , 
5, 2.17463, 1, 0, 0.366329,-99) , 
8, 0.72529, 1, 0, 0.45054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139921,-99) , 
7, 66.3141, 1, 0, 0.418204,-99) , 
5, 1.76165, 1, 0, 0.502474,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0145814);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500822,-99) , 
5, 1.74151, 1, 0, 0.565978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305109,-99) , 
4, 1.01085, 1, 0, 0.412492,-99) , 
8, 2.74093, 1, 0, 0.550093,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318183,-99) , 
10, 0.0952704, 1, 0, 0.407835,-99) , 
2, 8.5, 0, 0, 0.535901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170636,-99) , 
7, 208.487, 1, 0, 0.526027,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209259,-99) , 
13, 1.5, 0, 0, 0.307059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0361185,-99) , 
5, 2.41028, 1, 0, 0.247272,-99) , 
8, 0.114154, 1, 0, 0.305152,-99) , 
5, 2.12509, 1, 0, 0.499611,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0202313);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.769622,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518569,-99) , 
1, 12.5, 0, 0, 0.592302,-99) , 
3, 0.995335, 1, 0, 0.654228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500806,-99) , 
13, 1.5, 0, 0, 0.538948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291306,-99) , 
9, 399.657, 1, 0, 0.523222,-99) , 
11, 4.11823, 0, 0, 0.548268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18764,-99) , 
7, 181.806, 1, 0, 0.537222,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397864,-99) , 
8, 0.168882, 1, 0, 0.555803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38031,-99) , 
1, 11.5, 0, 0, 0.490129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198589,-99) , 
9, 41.5352, 0, 0, 0.441326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455749,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0568434,-99) , 
4, 1.76648, 1, 0, 0.167998,-99) , 
9, 46.4902, 1, 0, 0.26732,-99) , 
8, 0.496764, 1, 0, 0.350086,-99) , 
5, 1.9389, 1, 0, 0.49306,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0208523);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655105,-99) , 
3, 0.994968, 0, 0, 0.697237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527523,-99) , 
7, 64.675, 1, 0, 0.654732,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424878,-99) , 
6, 0.404009, 1, 0, 0.528456,-99) , 
0, 14.5, 0, 0, 0.608636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517407,-99) , 
2, 21.5, 0, 0, 0.543365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230638,-99) , 
5, 1.84171, 1, 0, 0.406229,-99) , 
3, 0.924338, 0, 0, 0.518596,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15383,-99) , 
1, 33, 0, 0, 0.338799,-99) , 
7, 89.2132, 1, 0, 0.502461,-99) , 
13, 1.5, 0, 0, 0.534558,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448809,-99) , 
3, 0.997574, 1, 0, 0.60289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297415,-99) , 
3, 0.975023, 0, 0, 0.536691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0570117,-99) , 
5, 2.39141, 1, 0, 0.483626,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460526,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378094,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0170598,-99) , 
13, 1.5, 0, 0, 0.0915647,-99) , 
5, 1.91916, 1, 0, 0.177549,-99) , 
8, 0.177296, 1, 0, 0.247076,-99) , 
9, 64.0477, 1, 0, 0.354353,-99) , 
4, 1.72168, 1, 0, 0.498843,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.018356);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.883785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678348,-99) , 
11, -2.77474, 1, 0, 0.72743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544326,-99) , 
2, 12.5, 0, 0, 0.672633,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370301,-99) , 
7, 22.2313, 1, 0, 0.456602,-99) , 
13, 1.5, 0, 0, 0.530672,-99) , 
5, 1.50779, 1, 0, 0.615217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401773,-99) , 
1, 14.5, 0, 0, 0.489863,-99) , 
6, 0.673532, 1, 0, 0.5846,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390153,-99) , 
4, 2.12081, 1, 0, 0.551468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310673,-99) , 
3, 0.888538, 0, 0, 0.530023,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15537,-99) , 
5, 2.28846, 1, 0, 0.443011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227563,-99) , 
9, 237.042, 1, 0, 0.409981,-99) , 
8, 0.69557, 1, 0, 0.458351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0670753,-99) , 
7, 174.342, 1, 0, 0.444261,-99) , 
4, 1.14709, 1, 0, 0.505564,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0211501);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.842596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688097,-99) , 
6, 0.736288, 1, 0, 0.769185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507691,-99) , 
1, 39.5, 1, 0, 0.666961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371826,-99) , 
7, 8.75644, 0, 0, 0.540719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215225,-99) , 
7, 50.5204, 1, 0, 0.519933,-99) , 
2, 29.5, 0, 0, 0.54471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306843,-99) , 
7, 137.758, 1, 0, 0.534084,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27792,-99) , 
1, 10.5, 0, 0, 0.463349,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308256,-99) , 
7, 13.9389, 1, 0, 0.427683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.126659,-99) , 
5, 2.24344, 1, 0, 0.367779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0826303,-99) , 
9, 97.0321, 1, 0, 0.25955,-99) , 
8, 0.402549, 1, 0, 0.335852,-99) , 
4, 1.72366, 1, 0, 0.49582,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.014854);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536175,-99) , 
4, 0.743949, 1, 0, 0.569129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386984,-99) , 
7, 8.51785, 0, 0, 0.557013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270275,-99) , 
7, 29.3743, 1, 0, 0.382565,-99) , 
3, 0.999326, 1, 0, 0.544114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245383,-99) , 
1, 70.5, 1, 0, 0.534201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354545,-99) , 
6, 0.785569, 0, 0, 0.475344,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431668,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0565491,-99) , 
1, 20.5, 0, 0, 0.0979479,-99) , 
9, 59.6502, 1, 0, 0.257034,-99) , 
8, 0.607685, 1, 0, 0.36375,-99) , 
4, 1.72258, 1, 0, 0.502024,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0202024);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785366,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543125,-99) , 
3, 0.988535, 1, 0, 0.617159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436204,-99) , 
8, 2.66007, 1, 0, 0.590652,-99) , 
11, -5.25241, 1, 0, 0.611896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516702,-99) , 
7, 32.7768, 1, 0, 0.588302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370615,-99) , 
4, 1.51922, 1, 0, 0.483949,-99) , 
13, 1.5, 0, 0, 0.513919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307212,-99) , 
7, 10.2012, 0, 0, 0.495114,-99) , 
6, 0.630123, 1, 0, 0.555696,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453025,-99) , 
12, 2540.06, 1, 0, 0.541294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314348,-99) , 
12, 408.263, 1, 0, 0.377934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106411,-99) , 
5, 2.30052, 1, 0, 0.340082,-99) , 
8, 0.208146, 1, 0, 0.390914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0255366,-99) , 
7, 117.546, 1, 0, 0.369905,-99) , 
5, 1.82375, 1, 0, 0.496311,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.014611);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634809,-99) , 
12, -2560.73, 1, 0, 0.656465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484529,-99) , 
6, 0.0320583, 0, 0, 0.631433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481717,-99) , 
6, 0.830702, 1, 0, 0.605764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378825,-99) , 
9, 32.8767, 0, 0, 0.584376,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489096,-99) , 
12, 9086.5, 0, 0, 0.516399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242601,-99) , 
3, 0.999448, 1, 0, 0.502815,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244652,-99) , 
3, 0.965083, 0, 0, 0.34646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0672461,-99) , 
5, 2.12314, 1, 0, 0.288391,-99) , 
2, 8.5, 0, 0, 0.481076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154581,-99) , 
7, 131.292, 1, 0, 0.46473,-99) , 
4, 0.972412, 1, 0, 0.50723,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0275061);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.815697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616161,-99) , 
8, 1.03403, 0, 0, 0.707651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472591,-99) , 
8, 2.27426, 1, 0, 0.649748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480155,-99) , 
8, 1.39589, 0, 0, 0.596216,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303253,-99) , 
1, 26.5, 1, 0, 0.440427,-99) , 
9, 107.188, 1, 0, 0.521044,-99) , 
4, 0.862298, 1, 0, 0.584131,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467071,-99) , 
10, 0.0424298, 0, 0, 0.588156,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3559,-99) , 
7, 13.0226, 0, 0, 0.448867,-99) , 
9, 85.7522, 0, 0, 0.534592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120489,-99) , 
7, 41.3281, 1, 0, 0.496816,-99) , 
1, 15.5, 0, 0, 0.533148,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403315,-99) , 
1, 11.5, 0, 0, 0.602615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17656,-99) , 
9, 56.9982, 0, 0, 0.508174,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593428,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197352,-99) , 
10, 0.502802, 1, 0, 0.362699,-99) , 
12, 6171.38, 0, 0, 0.437543,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11991,-99) , 
6, 0.753275, 1, 0, 0.299685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0739443,-99) , 
5, 2.16848, 1, 0, 0.230906,-99) , 
9, 61.8527, 1, 0, 0.322448,-99) , 
8, 0.26497, 1, 0, 0.38472,-99) , 
5, 1.90809, 1, 0, 0.493461,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0177715);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.826795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700296,-99) , 
9, 186.827, 1, 0, 0.766921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561657,-99) , 
8, 1.74613, 1, 0, 0.707784,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485117,-99) , 
0, 36.5, 0, 0, 0.593514,-99) , 
10, 0.439781, 1, 0, 0.654807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461196,-99) , 
10, 0.104569, 1, 0, 0.531928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274743,-99) , 
4, 1.8479, 1, 0, 0.495775,-99) , 
0, 15.5, 0, 0, 0.590081,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396891,-99) , 
3, 0.919641, 0, 0, 0.519059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304675,-99) , 
9, 396.791, 1, 0, 0.506155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231524,-99) , 
7, 133.996, 1, 0, 0.492079,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305561,-99) , 
3, 0.980582, 1, 0, 0.421189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115774,-99) , 
11, 3.23649, 0, 0, 0.246258,-99) , 
11, -0.962473, 1, 0, 0.315434,-99) , 
5, 1.9758, 1, 0, 0.458225,-99) , 
13, 1.5, 0, 0, 0.498747,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0185831);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580796,-99) , 
12, 8914.7, 0, 0, 0.604555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389687,-99) , 
1, 9.5, 0, 0, 0.581422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272769,-99) , 
7, 7.37856, 0, 0, 0.515931,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203999,-99) , 
8, 1.02678, 0, 0, 0.317528,-99) , 
10, 0.294388, 1, 0, 0.476656,-99) , 
2, 12.5, 0, 0, 0.538802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147047,-99) , 
7, 208.426, 1, 0, 0.530422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36858,-99) , 
7, 17.5863, 1, 0, 0.463451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150497,-99) , 
5, 2.08508, 1, 0, 0.241945,-99) , 
2, 12.5, 0, 0, 0.366319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0835906,-99) , 
7, 55.5411, 1, 0, 0.317926,-99) , 
4, 1.80097, 1, 0, 0.50005,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0230563);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.844644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684015,-99) , 
6, 0.353716, 1, 0, 0.746501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5651,-99) , 
7, 46.4978, 1, 0, 0.677775,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51861,-99) , 
5, 1.77975, 0, 0, 0.568809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406601,-99) , 
7, 18.5617, 1, 0, 0.51509,-99) , 
0, 15.5, 0, 0, 0.612732,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443951,-99) , 
6, 0.917671, 1, 0, 0.554656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369852,-99) , 
8, 0.725883, 1, 0, 0.433031,-99) , 
5, 1.60426, 1, 0, 0.498959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0121849,-99) , 
1, 20.5, 0, 0, 0.233637,-99) , 
7, 99.7525, 1, 0, 0.47688,-99) , 
13, 1.5, 0, 0, 0.517993,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247433,-99) , 
2, 14.5, 0, 0, 0.429735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0882389,-99) , 
8, 0.402909, 1, 0, 0.267791,-99) , 
5, 2.16832, 1, 0, 0.492448,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0185044);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.887637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705379,-99) , 
10, 0.455455, 1, 0, 0.79082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61425,-99) , 
6, 0.676413, 1, 0, 0.720344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551166,-99) , 
4, 1.26389, 1, 0, 0.618964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461033,-99) , 
6, 0.770596, 1, 0, 0.566267,-99) , 
0, 21.5, 0, 0, 0.631144,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71299,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46509,-99) , 
1, 15.5, 0, 0, 0.511634,-99) , 
4, 1.63976, 0, 0, 0.524013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0784462,-99) , 
8, 1.42335, 1, 0, 0.232731,-99) , 
6, 0.972289, 0, 0, 0.33995,-99) , 
4, 1.71061, 1, 0, 0.497224,-99) , 
13, 1.5, 0, 0, 0.536416,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124764,-99) , 
8, 0.381233, 1, 0, 0.213983,-99) , 
5, 2.2362, 1, 0, 0.514106,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0157895);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793301,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518288,-99) , 
5, 1.4978, 1, 0, 0.581715,-99) , 
12, 12347.4, 0, 0, 0.599234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38548,-99) , 
5, 0.58316, 0, 0, 0.578539,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280788,-99) , 
4, 2.04371, 1, 0, 0.52034,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321274,-99) , 
11, -1.27835, 1, 0, 0.388462,-99) , 
8, 1.71144, 1, 0, 0.477739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.089096,-99) , 
7, 143.041, 1, 0, 0.462881,-99) , 
4, 1.14867, 1, 0, 0.519105,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0867893,-99) , 
2, 11.5, 0, 0, 0.229892,-99) , 
5, 2.23895, 1, 0, 0.499148,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0171324);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643599,-99) , 
6, 0.511362, 1, 0, 0.696692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604704,-99) , 
6, 0.193565, 1, 0, 0.641097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405155,-99) , 
11, 4.4509, 0, 0, 0.513336,-99) , 
3, 0.988058, 1, 0, 0.573551,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477437,-99) , 
3, 0.968948, 1, 0, 0.517138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300003,-99) , 
4, 1.04624, 1, 0, 0.395799,-99) , 
11, -0.745551, 1, 0, 0.477574,-99) , 
11, 0.54714, 0, 0, 0.522857,-99) , 
11, -6.63336, 1, 0, 0.537173,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413985,-99) , 
8, 0.372691, 0, 0, 0.513728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276436,-99) , 
6, 0.701846, 0, 0, 0.437411,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127531,-99) , 
9, 46.4902, 1, 0, 0.220881,-99) , 
8, 0.725956, 1, 0, 0.342604,-99) , 
4, 1.74721, 1, 0, 0.503599,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0202671);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539325,-99) , 
8, 0.428089, 0, 0, 0.659396,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392822,-99) , 
3, 0.984852, 1, 0, 0.472618,-99) , 
8, 2.21357, 1, 0, 0.610597,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515632,-99) , 
7, 66.1116, 1, 0, 0.603635,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291268,-99) , 
6, 0.689453, 1, 0, 0.413085,-99) , 
2, 20.5, 0, 0, 0.523507,-99) , 
10, 0.227804, 1, 0, 0.56289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39587,-99) , 
2, 8.5, 0, 0, 0.548078,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330112,-99) , 
2, 9.5, 0, 0, 0.543113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339797,-99) , 
9, 55.6082, 0, 0, 0.497044,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382597,-99) , 
8, 2.23637, 0, 0, 0.490614,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187748,-99) , 
13, 1.5, 0, 0, 0.272572,-99) , 
9, 59.6761, 1, 0, 0.375214,-99) , 
8, 0.693756, 1, 0, 0.435187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122425,-99) , 
7, 106.575, 1, 0, 0.413836,-99) , 
5, 1.81009, 1, 0, 0.500714,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0182717);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611524,-99) , 
4, 1.39984, 1, 0, 0.690366,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502814,-99) , 
5, 1.80395, 0, 0, 0.589072,-99) , 
8, 0.645416, 0, 0, 0.648872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487186,-99) , 
8, 2.30413, 1, 0, 0.616779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366527,-99) , 
4, 2.02241, 1, 0, 0.596579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64592,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476754,-99) , 
12, -5994.1, 1, 0, 0.492207,-99) , 
11, -5.33392, 1, 0, 0.510237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245827,-99) , 
3, 0.999319, 1, 0, 0.493218,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0710597,-99) , 
7, 42.1619, 1, 0, 0.467679,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0699411,-99) , 
13, 0.5, 1, 0, 0.138058,-99) , 
11, -4.10787, 1, 0, 0.202684,-99) , 
11, 1.57098, 0, 0, 0.303648,-99) , 
5, 1.95385, 1, 0, 0.454377,-99) , 
13, 1.5, 0, 0, 0.497684,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0204287);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603247,-99) , 
11, -1.00123, 1, 0, 0.661366,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394512,-99) , 
7, 27.4162, 1, 0, 0.53542,-99) , 
2, 21.5, 0, 0, 0.577267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373314,-99) , 
3, 0.999328, 1, 0, 0.561336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317276,-99) , 
5, 2.00645, 1, 0, 0.547649,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382512,-99) , 
0, 12.5, 0, 0, 0.535165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32078,-99) , 
9, 47.7188, 1, 0, 0.383259,-99) , 
8, 0.668297, 1, 0, 0.445408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160871,-99) , 
5, 2.32095, 1, 0, 0.42192,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0448065,-99) , 
1, 29.5, 0, 0, 0.176276,-99) , 
7, 62.6675, 1, 0, 0.393637,-99) , 
4, 1.28324, 1, 0, 0.477586,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0216059);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.847533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724444,-99) , 
12, 3057.07, 0, 0, 0.78268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628093,-99) , 
4, 1.02598, 1, 0, 0.705392,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561453,-99) , 
7, 14.7515, 0, 0, 0.625069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407098,-99) , 
7, 21.2126, 1, 0, 0.561078,-99) , 
0, 18.5, 0, 0, 0.626833,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461677,-99) , 
7, 14.0802, 0, 0, 0.541269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275912,-99) , 
1, 32.5, 1, 0, 0.527155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277121,-99) , 
2, 48.5, 0, 0, 0.499519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0789041,-99) , 
1, 19.5, 0, 0, 0.352452,-99) , 
7, 59.3052, 1, 0, 0.496843,-99) , 
13, 1.5, 0, 0, 0.534246,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162202,-99) , 
8, 0.401446, 1, 0, 0.309341,-99) , 
5, 2.18069, 1, 0, 0.513618,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0189671);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583025,-99) , 
2, 14.5, 0, 0, 0.6892,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455506,-99) , 
11, -0.931333, 1, 0, 0.530616,-99) , 
11, 2.47797, 0, 0, 0.559983,-99) , 
13, 1.5, 0, 0, 0.594848,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454021,-99) , 
11, 0.369816, 0, 0, 0.519347,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292074,-99) , 
0, 20.5, 0, 0, 0.374472,-99) , 
10, 0.291415, 1, 0, 0.464897,-99) , 
2, 35.5, 0, 0, 0.491752,-99) , 
6, 0.662233, 1, 0, 0.547768,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562993,-99) , 
8, 0.711888, 1, 0, 0.632943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
10, 0.40309, 1, 0, 0.590997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357933,-99) , 
4, 2.01255, 1, 0, 0.545655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38788,-99) , 
9, 77.2026, 1, 0, 0.512637,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163073,-99) , 
12, 3816.43, 1, 0, 0.32689,-99) , 
12, 5929.49, 0, 0, 0.379613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112334,-99) , 
0, 56.5, 1, 0, 0.3488,-99) , 
13, 1.5, 0, 0, 0.412912,-99) , 
5, 1.73323, 1, 0, 0.493918,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0188625);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.810862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594624,-99) , 
6, 0.265644, 1, 0, 0.709319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492641,-99) , 
2, 12.5, 0, 0, 0.611459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417116,-99) , 
1, 11.5, 0, 0, 0.565228,-99) , 
11, 1.0744, 0, 0, 0.61176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717156,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501074,-99) , 
5, 1.14841, 1, 0, 0.565855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249242,-99) , 
11, -2.15615, 1, 0, 0.33448,-99) , 
11, 2.68882, 0, 0, 0.449106,-99) , 
12, 10317.5, 0, 0, 0.498913,-99) , 
3, 0.993126, 1, 0, 0.567951,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489535,-99) , 
11, 0.793159, 0, 0, 0.588767,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214277,-99) , 
1, 37.5, 1, 0, 0.442936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143138,-99) , 
5, 2.28749, 1, 0, 0.420875,-99) , 
8, 0.178141, 1, 0, 0.449199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158733,-99) , 
7, 132.777, 1, 0, 0.435206,-99) , 
4, 1.15136, 1, 0, 0.495255,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0146735);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.773811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555913,-99) , 
7, 64.8978, 1, 0, 0.703683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471623,-99) , 
3, 0.991746, 1, 0, 0.550422,-99) , 
0, 20.5, 0, 0, 0.611214,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397193,-99) , 
3, 0.887193, 0, 0, 0.513333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192388,-99) , 
5, 2.15518, 1, 0, 0.49963,-99) , 
13, 1.5, 0, 0, 0.532532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180845,-99) , 
1, 85.5, 1, 0, 0.524425,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0905428,-99) , 
9, 76.3412, 1, 0, 0.183888,-99) , 
8, 0.402418, 1, 0, 0.290681,-99) , 
4, 1.92557, 1, 0, 0.503133,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0216608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533806,-99) , 
1, 39.5, 1, 0, 0.670651,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32898,-99) , 
7, 40.2497, 1, 0, 0.536207,-99) , 
2, 24.5, 0, 0, 0.561951,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0099713,-99) , 
1, 21.5, 0, 0, 0.373208,-99) , 
7, 92.6667, 1, 0, 0.546211,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250068,-99) , 
8, 0.391004, 1, 0, 0.342232,-99) , 
5, 2.07034, 1, 0, 0.532973,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107003,-99) , 
7, 23.6101, 1, 0, 0.362414,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0352304,-99) , 
4, 1.84148, 1, 0, 0.10537,-99) , 
9, 71.4609, 1, 0, 0.233176,-99) , 
8, 0.175098, 1, 0, 0.308696,-99) , 
4, 1.76765, 1, 0, 0.498439,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0183779);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42137,-99) , 
9, 34.2299, 0, 0, 0.579322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421405,-99) , 
13, 1.5, 0, 0, 0.476853,-99) , 
8, 2.26291, 1, 0, 0.555753,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506514,-99) , 
2, 16.5, 0, 0, 0.582735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25365,-99) , 
7, 30.8054, 1, 0, 0.388268,-99) , 
4, 0.843447, 1, 0, 0.460793,-99) , 
3, 0.954443, 0, 0, 0.53234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208208,-99) , 
7, 194.776, 1, 0, 0.525868,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59529,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166254,-99) , 
8, 0.337399, 1, 0, 0.351737,-99) , 
12, 5114.11, 0, 0, 0.438544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109693,-99) , 
6, 0.542512, 0, 0, 0.413535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12115,-99) , 
7, 60.0313, 1, 0, 0.347971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109911,-99) , 
0, 13.5, 0, 0, 0.282917,-99) , 
4, 1.72886, 1, 0, 0.348705,-99) , 
5, 2.00695, 1, 0, 0.492079,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0142509);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532983,-99) , 
5, 1.52334, 1, 0, 0.599053,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412395,-99) , 
7, 48.7726, 1, 0, 0.514566,-99) , 
6, 0.312736, 1, 0, 0.547468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344638,-99) , 
3, 0.999459, 1, 0, 0.535261,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253361,-99) , 
6, 0.347068, 0, 0, 0.361855,-99) , 
7, 8.68405, 0, 0, 0.522885,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379754,-99) , 
11, -0.663324, 1, 0, 0.46289,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202707,-99) , 
5, 2.10569, 1, 0, 0.327033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100345,-99) , 
7, 24.4978, 1, 0, 0.266829,-99) , 
1, 14.5, 0, 0, 0.339838,-99) , 
4, 1.72273, 1, 0, 0.490319,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0169364);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582625,-99) , 
6, 0.13572, 1, 0, 0.612731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391497,-99) , 
8, 2.13465, 1, 0, 0.505991,-99) , 
5, 1.50952, 1, 0, 0.555171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354162,-99) , 
5, 0.647524, 0, 0, 0.541983,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208219,-99) , 
10, 0.920159, 0, 0, 0.346317,-99) , 
9, 32.4029, 0, 0, 0.523291,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491141,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251877,-99) , 
11, -1.55347, 1, 0, 0.391627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0963404,-99) , 
5, 1.94864, 1, 0, 0.17877,-99) , 
9, 66.0775, 1, 0, 0.276877,-99) , 
8, 0.160267, 1, 0, 0.324929,-99) , 
4, 1.7668, 1, 0, 0.49177,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0128234);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518749,-99) , 
2, 17.5, 0, 0, 0.562351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261094,-99) , 
3, 0.987901, 1, 0, 0.36522,-99) , 
9, 400.454, 1, 0, 0.54928,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249252,-99) , 
7, 7.00158, 0, 0, 0.33024,-99) , 
7, 8.18426, 0, 0, 0.536913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179656,-99) , 
7, 236.66, 1, 0, 0.530244,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368444,-99) , 
2, 14.5, 0, 0, 0.4827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155599,-99) , 
8, 0.407948, 1, 0, 0.334486,-99) , 
5, 2.16856, 1, 0, 0.511245,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0207756);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.784309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606525,-99) , 
10, 1.41583, 1, 0, 0.70654,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392173,-99) , 
7, 74.1648, 1, 0, 0.51454,-99) , 
9, 106.875, 1, 0, 0.616292,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358254,-99) , 
9, 33.8204, 0, 0, 0.55234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228672,-99) , 
7, 40.9665, 1, 0, 0.522048,-99) , 
2, 23.5, 0, 0, 0.549917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242034,-99) , 
7, 7.5757, 0, 0, 0.539543,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661391,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402146,-99) , 
9, 108.483, 1, 0, 0.507401,-99) , 
8, 0.480303, 1, 0, 0.570298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243517,-99) , 
5, 2.3674, 1, 0, 0.531357,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54448,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317835,-99) , 
1, 14.5, 0, 0, 0.421799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0655222,-99) , 
7, 11.6745, 0, 0, 0.201042,-99) , 
11, -0.705077, 1, 0, 0.317488,-99) , 
11, 5.15284, 0, 0, 0.362269,-99) , 
13, 1.5, 0, 0, 0.418376,-99) , 
4, 1.52211, 1, 0, 0.502084,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.00954081);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721561,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232141,-99) , 
0, 55.5, 1, 0, 0.528249,-99) , 
2, 48.5, 0, 0, 0.542045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31722,-99) , 
7, 143.29, 1, 0, 0.531787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303531,-99) , 
2, 7.5, 0, 0, 0.521703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227371,-99) , 
5, 2.36561, 1, 0, 0.510869,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0191813);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583253,-99) , 
1, 16.5, 0, 0, 0.626731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371478,-99) , 
7, 58.7696, 1, 0, 0.526778,-99) , 
9, 108.205, 1, 0, 0.574799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427129,-99) , 
9, 32.3972, 0, 0, 0.559519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333334,-99) , 
7, 8.7124, 0, 0, 0.544666,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154615,-99) , 
5, 2.31951, 1, 0, 0.438826,-99) , 
2, 15.5, 0, 0, 0.512554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508121,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124419,-99) , 
11, -1.13312, 1, 0, 0.27371,-99) , 
12, 201.431, 1, 0, 0.338965,-99) , 
13, 1.5, 0, 0, 0.40272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0206375,-99) , 
7, 115.314, 1, 0, 0.381215,-99) , 
5, 1.87178, 1, 0, 0.497531,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.013822);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578404,-99) , 
11, -5.55189, 1, 0, 0.601057,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301978,-99) , 
3, 0.783639, 0, 0, 0.509131,-99) , 
13, 1.5, 0, 0, 0.536693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.105633,-99) , 
7, 232.238, 1, 0, 0.529146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17689,-99) , 
7, 6.9993, 0, 0, 0.520572,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101608,-99) , 
10, 0.805584, 0, 0, 0.194288,-99) , 
8, 0.174504, 1, 0, 0.308784,-99) , 
5, 2.18208, 1, 0, 0.500178,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0177327);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385674,-99) , 
8, 2.94844, 1, 0, 0.572917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260426,-99) , 
5, 2.28329, 1, 0, 0.565351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598924,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223477,-99) , 
12, -3150.02, 1, 0, 0.341693,-99) , 
12, 7161.24, 0, 0, 0.426761,-99) , 
3, 0.998494, 1, 0, 0.544976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223374,-99) , 
7, 7.41294, 0, 0, 0.535235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451487,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177053,-99) , 
9, 46.4902, 1, 0, 0.237494,-99) , 
8, 0.284566, 1, 0, 0.30945,-99) , 
6, 0.986806, 0, 0, 0.366956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 126.295, 1, 0, 0.341087,-99) , 
4, 1.67446, 1, 0, 0.49686,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0159254);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686428,-99) , 
2, 16.5, 0, 0, 0.726473,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546549,-99) , 
7, 51.8138, 1, 0, 0.617322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455273,-99) , 
10, 0.0888443, 1, 0, 0.504166,-99) , 
2, 17.5, 0, 0, 0.551427,-99) , 
6, 0.197525, 1, 0, 0.59519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269695,-99) , 
3, 0.999471, 1, 0, 0.49635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186038,-99) , 
3, 0.730217, 0, 0, 0.484311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223721,-99) , 
7, 132.572, 1, 0, 0.469772,-99) , 
13, 1.5, 0, 0, 0.505187,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224568,-99) , 
8, 0.402549, 1, 0, 0.374501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131103,-99) , 
2, 12.5, 0, 0, 0.271721,-99) , 
5, 2.17783, 1, 0, 0.482033,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0146743);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550074,-99) , 
0, 17.5, 0, 0, 0.646153,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536129,-99) , 
1, 11.5, 0, 0, 0.612114,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392778,-99) , 
3, 0.992053, 1, 0, 0.494803,-99) , 
12, 8496.43, 0, 0, 0.51489,-99) , 
11, 6.9369, 0, 0, 0.52801,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377886,-99) , 
3, 0.974888, 0, 0, 0.529953,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128765,-99) , 
5, 2.30561, 1, 0, 0.417174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152337,-99) , 
7, 19.8604, 1, 0, 0.35434,-99) , 
1, 15.5, 0, 0, 0.416166,-99) , 
5, 1.92491, 1, 0, 0.501141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220896,-99) , 
7, 151.249, 1, 0, 0.490807,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0164777);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512955,-99) , 
1, 39.5, 1, 0, 0.659142,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398408,-99) , 
7, 25.1047, 1, 0, 0.531103,-99) , 
2, 18.5, 0, 0, 0.583519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464087,-99) , 
8, 0.593861, 1, 0, 0.500166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213154,-99) , 
3, 0.999375, 1, 0, 0.485324,-99) , 
4, 1.13034, 1, 0, 0.533782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258816,-99) , 
7, 145.092, 1, 0, 0.522603,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33577,-99) , 
8, 0.096771, 1, 0, 0.446319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0500534,-99) , 
5, 2.28586, 1, 0, 0.133542,-99) , 
8, 0.407643, 1, 0, 0.295077,-99) , 
5, 2.13029, 1, 0, 0.497598,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.019054);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729803,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518337,-99) , 
11, 1.34883, 0, 0, 0.590993,-99) , 
11, -4.38215, 1, 0, 0.616899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120546,-99) , 
1, 32.5, 0, 0, 0.412782,-99) , 
7, 99.8814, 1, 0, 0.58063,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459592,-99) , 
9, 150.936, 0, 0, 0.509989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291567,-99) , 
7, 32.2681, 1, 0, 0.493236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0684107,-99) , 
0, 27.5, 1, 0, 0.476511,-99) , 
2, 18.5, 0, 0, 0.515324,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207648,-99) , 
5, 2.39967, 1, 0, 0.51302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400795,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0739809,-99) , 
3, 0.993614, 1, 0, 0.17582,-99) , 
6, 0.969323, 0, 0, 0.258198,-99) , 
13, 1.5, 0, 0, 0.351979,-99) , 
4, 1.7823, 1, 0, 0.490958,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0174218);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599908,-99) , 
4, 0.927828, 0, 0, 0.672019,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55727,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378999,-99) , 
8, 0.599667, 0, 0, 0.518507,-99) , 
3, 0.988567, 1, 0, 0.580954,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381355,-99) , 
3, 0.998425, 1, 0, 0.530115,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292672,-99) , 
6, 0.407534, 1, 0, 0.364065,-99) , 
11, 0.466623, 0, 0, 0.483867,-99) , 
11, -0.766894, 1, 0, 0.527758,-99) , 
12, -7958.18, 1, 0, 0.540983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461908,-99) , 
8, 0.162219, 1, 0, 0.50885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261312,-99) , 
1, 9.5, 0, 0, 0.474759,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240758,-99) , 
5, 2.06844, 1, 0, 0.367281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180611,-99) , 
12, 3241.47, 1, 0, 0.294176,-99) , 
2, 11.5, 0, 0, 0.407559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0484032,-99) , 
7, 123.532, 1, 0, 0.389381,-99) , 
5, 1.90826, 1, 0, 0.502687,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0169276);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777761,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566895,-99) , 
1, 24.5, 1, 0, 0.669231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353813,-99) , 
7, 19.2632, 1, 0, 0.543669,-99) , 
2, 14.5, 0, 0, 0.613815,-99) , 
3, 0.901533, 1, 0, 0.63633,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330036,-99) , 
3, 0.759245, 0, 0, 0.515133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303435,-99) , 
4, 1.86064, 1, 0, 0.503938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185101,-99) , 
7, 182.461, 1, 0, 0.492972,-99) , 
13, 1.5, 0, 0, 0.534993,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187673,-99) , 
10, 0.360043, 1, 0, 0.362516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0945256,-99) , 
2, 11.5, 0, 0, 0.279898,-99) , 
5, 2.16884, 1, 0, 0.510197,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.017714);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556444,-99) , 
1, 33.5, 1, 0, 0.682704,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495522,-99) , 
7, 15.145, 0, 0, 0.572986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29971,-99) , 
7, 39.2422, 1, 0, 0.544712,-99) , 
2, 29.5, 0, 0, 0.565646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394668,-99) , 
7, 108.847, 1, 0, 0.552523,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635309,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372569,-99) , 
9, 58.2349, 0, 0, 0.534224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289827,-99) , 
11, -1.1365, 1, 0, 0.365424,-99) , 
13, 1.5, 0, 0, 0.425845,-99) , 
11, 5.91409, 0, 0, 0.454061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161061,-99) , 
7, 66.6334, 1, 0, 0.4253,-99) , 
5, 1.75123, 1, 0, 0.502219,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0140644);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71004,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396284,-99) , 
3, 0.998898, 1, 0, 0.553846,-99) , 
11, -5.15497, 1, 0, 0.571572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379317,-99) , 
5, 0.353329, 0, 0, 0.55724,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436175,-99) , 
8, 0.849759, 1, 0, 0.507903,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227367,-99) , 
7, 8.74956, 1, 0, 0.312261,-99) , 
2, 9.5, 0, 0, 0.47211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206272,-99) , 
7, 84.5882, 1, 0, 0.45021,-99) , 
4, 1.32572, 1, 0, 0.516546,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165179,-99) , 
8, 0.407643, 1, 0, 0.307903,-99) , 
5, 2.16884, 1, 0, 0.496921,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0200653);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601671,-99) , 
9, 130.562, 1, 0, 0.69466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56761,-99) , 
8, 0.594426, 0, 0, 0.660307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493677,-99) , 
7, 14.7521, 0, 0, 0.62337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456026,-99) , 
3, 0.944438, 0, 0, 0.574351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419592,-99) , 
1, 16.5, 0, 0, 0.463465,-99) , 
5, 1.38059, 1, 0, 0.511374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264606,-99) , 
3, 0.999319, 1, 0, 0.492425,-99) , 
13, 1.5, 0, 0, 0.529589,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205524,-99) , 
2, 13.5, 0, 0, 0.346149,-99) , 
9, 153.445, 0, 0, 0.481262,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204991,-99) , 
7, 33.1332, 1, 0, 0.464564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222494,-99) , 
3, 0.977769, 0, 0, 0.391151,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0885688,-99) , 
4, 1.63294, 1, 0, 0.2041,-99) , 
9, 84.818, 1, 0, 0.295504,-99) , 
8, 0.315159, 1, 0, 0.367228,-99) , 
5, 1.89526, 1, 0, 0.487362,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0154273);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594208,-99) , 
6, 0.174442, 1, 0, 0.658851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381317,-99) , 
7, 24.5389, 1, 0, 0.54502,-99) , 
2, 21.5, 0, 0, 0.573166,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358632,-99) , 
3, 0.939481, 0, 0, 0.499158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251657,-99) , 
7, 8.27378, 0, 0, 0.483091,-99) , 
6, 0.621485, 1, 0, 0.533856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308382,-99) , 
7, 134.445, 1, 0, 0.52184,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428134,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0511755,-99) , 
8, 0.400402, 1, 0, 0.183425,-99) , 
12, 6163.51, 0, 0, 0.26232,-99) , 
5, 2.15781, 1, 0, 0.497194,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0192484);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556622,-99) , 
8, 1.24559, 0, 0, 0.659279,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3641,-99) , 
2, 21.5, 0, 0, 0.551722,-99) , 
7, 28.6836, 1, 0, 0.604766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387368,-99) , 
5, 0.284054, 0, 0, 0.583298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379183,-99) , 
7, 10.9242, 0, 0, 0.560163,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520161,-99) , 
4, 1.1919, 1, 0, 0.587175,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2448,-99) , 
3, 0.90194, 0, 0, 0.439679,-99) , 
13, 1.5, 0, 0, 0.484663,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358229,-99) , 
10, 0.380465, 1, 0, 0.448446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191619,-99) , 
10, 0.240854, 0, 0, 0.332256,-99) , 
5, 2.15669, 1, 0, 0.458597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130418,-99) , 
7, 108.099, 1, 0, 0.438933,-99) , 
5, 1.52759, 1, 0, 0.49146,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.016699);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.795432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624465,-99) , 
11, 0.136947, 1, 0, 0.706432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507114,-99) , 
11, 2.83583, 0, 0, 0.53912,-99) , 
6, 0.432229, 1, 0, 0.605692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471342,-99) , 
6, 0.81693, 1, 0, 0.561006,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281965,-99) , 
7, 66.1255, 1, 0, 0.457466,-99) , 
5, 1.54945, 1, 0, 0.515115,-99) , 
13, 1.5, 0, 0, 0.541966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324632,-99) , 
9, 460.99, 1, 0, 0.533028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538928,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390742,-99) , 
5, 2.11645, 1, 0, 0.519317,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164545,-99) , 
13, 0.5, 1, 0, 0.277641,-99) , 
13, 1.5, 0, 0, 0.373544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0950264,-99) , 
5, 2.34379, 1, 0, 0.326967,-99) , 
8, 0.103696, 1, 0, 0.367696,-99) , 
5, 1.97682, 1, 0, 0.498246,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0138887);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589253,-99) , 
6, 0.198374, 1, 0, 0.631455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496517,-99) , 
8, 0.600989, 0, 0, 0.598408,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526051,-99) , 
1, 11.5, 0, 0, 0.62951,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285469,-99) , 
1, 60.5, 1, 0, 0.495983,-99) , 
12, 10220.4, 0, 0, 0.520024,-99) , 
11, 2.00421, 0, 0, 0.544324,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432777,-99) , 
8, 0.415393, 1, 0, 0.530858,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175869,-99) , 
5, 2.07718, 1, 0, 0.315993,-99) , 
2, 12.5, 0, 0, 0.453089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111726,-99) , 
7, 106.029, 1, 0, 0.42171,-99) , 
4, 1.70531, 1, 0, 0.521122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17454,-99) , 
2, 6.5, 0, 0, 0.513869,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0207755);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.819749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716597,-99) , 
6, 0.60061, 1, 0, 0.769956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564914,-99) , 
9, 240.167, 1, 0, 0.699264,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464624,-99) , 
6, 0.951464, 1, 0, 0.576004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430646,-99) , 
10, 0.273318, 1, 0, 0.548999,-99) , 
2, 18.5, 0, 0, 0.589731,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439175,-99) , 
9, 76.2671, 1, 0, 0.551075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27021,-99) , 
8, 1.30651, 0, 0, 0.357171,-99) , 
1, 17.5, 0, 0, 0.474214,-99) , 
10, 0.494764, 1, 0, 0.554482,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490208,-99) , 
7, 22.6906, 1, 0, 0.586543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380565,-99) , 
5, 2.16788, 1, 0, 0.527647,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35889,-99) , 
2, 13.5, 0, 0, 0.540243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324776,-99) , 
8, 0.918078, 0, 0, 0.461363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2813,-99) , 
3, 0.988662, 1, 0, 0.428569,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.052283,-99) , 
5, 2.13909, 1, 0, 0.207046,-99) , 
8, 0.604791, 1, 0, 0.315033,-99) , 
9, 50.8518, 1, 0, 0.362965,-99) , 
13, 1.5, 0, 0, 0.414816,-99) , 
5, 1.73375, 1, 0, 0.498471,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0159217);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6383,-99) , 
0, 57.5, 0, 0, 0.69692,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49085,-99) , 
4, 0.74982, 1, 0, 0.569622,-99) , 
3, 0.987064, 1, 0, 0.633507,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394142,-99) , 
4, 1.48521, 1, 0, 0.537897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310621,-99) , 
1, 23.5, 1, 0, 0.488982,-99) , 
2, 24.5, 0, 0, 0.566337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514662,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277719,-99) , 
7, 6.9953, 0, 0, 0.505558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190237,-99) , 
5, 2.36144, 1, 0, 0.493935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130685,-99) , 
7, 45.7183, 1, 0, 0.46574,-99) , 
1, 15.5, 0, 0, 0.502176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225582,-99) , 
1, 74.5, 1, 0, 0.493555,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.010253);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533167,-99) , 
2, 21.5, 0, 0, 0.55801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3896,-99) , 
3, 0.999507, 1, 0, 0.549588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277487,-99) , 
7, 194.708, 1, 0, 0.541454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332381,-99) , 
2, 7.5, 0, 0, 0.530995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14479,-99) , 
12, 10217.9, 0, 0, 0.228322,-99) , 
8, 0.177827, 1, 0, 0.314437,-99) , 
5, 2.18992, 1, 0, 0.511273,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0182786);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543756,-99) , 
8, 1.79428, 1, 0, 0.679264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323538,-99) , 
7, 35.2386, 1, 0, 0.552313,-99) , 
2, 21.5, 0, 0, 0.575113,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387737,-99) , 
4, 1.40942, 0, 0, 0.434058,-99) , 
9, 39.2792, 0, 0, 0.555632,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667384,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276859,-99) , 
4, 0.981341, 1, 0, 0.432928,-99) , 
9, 85.5887, 1, 0, 0.528148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106268,-99) , 
2, 30.5, 0, 0, 0.440468,-99) , 
7, 59.8851, 1, 0, 0.53556,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445275,-99) , 
7, 16.6468, 1, 0, 0.526933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33627,-99) , 
10, 0.186496, 0, 0, 0.466662,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180947,-99) , 
2, 9.5, 0, 0, 0.42102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110856,-99) , 
0, 72.5, 1, 0, 0.395652,-99) , 
4, 1.73101, 1, 0, 0.511119,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0184113);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745032,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529681,-99) , 
9, 120.673, 1, 0, 0.606318,-99) , 
6, 0.187553, 1, 0, 0.653337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590226,-99) , 
0, 15.5, 0, 0, 0.654038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294017,-99) , 
5, 1.84171, 1, 0, 0.49621,-99) , 
13, 1.5, 0, 0, 0.543398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270798,-99) , 
7, 35.083, 1, 0, 0.512992,-99) , 
2, 21.5, 0, 0, 0.559605,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346482,-99) , 
6, 0.368195, 0, 0, 0.472451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154787,-99) , 
3, 0.828654, 0, 0, 0.456325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 170.695, 1, 0, 0.44511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156394,-99) , 
9, 36.052, 1, 0, 0.226496,-99) , 
4, 2.01674, 1, 0, 0.418105,-99) , 
4, 1.25289, 1, 0, 0.492135,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0114899);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401226,-99) , 
4, 1.89319, 1, 0, 0.551882,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404215,-99) , 
2, 30.5, 0, 0, 0.438512,-99) , 
8, 2.274, 1, 0, 0.526763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260518,-99) , 
7, 7.48583, 0, 0, 0.517669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277804,-99) , 
7, 143.769, 1, 0, 0.508333,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0796883,-99) , 
7, 11.2517, 1, 0, 0.180961,-99) , 
1, 14.5, 0, 0, 0.280511,-99) , 
5, 2.17756, 1, 0, 0.487206,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0213745);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583118,-99) , 
11, 2.78003, 0, 0, 0.615192,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33623,-99) , 
9, 221.523, 1, 0, 0.491911,-99) , 
8, 2.1459, 1, 0, 0.578261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397808,-99) , 
9, 32.8231, 0, 0, 0.560603,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494988,-99) , 
8, 0.979368, 1, 0, 0.604982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230033,-99) , 
7, 60.4651, 1, 0, 0.561118,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392931,-99) , 
1, 12.5, 0, 0, 0.506085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284239,-99) , 
11, -4.9739, 1, 0, 0.337473,-99) , 
13, 1.5, 0, 0, 0.383923,-99) , 
12, -280.611, 1, 0, 0.436456,-99) , 
4, 1.31814, 1, 0, 0.512395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565597,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377185,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.052364,-99) , 
8, 0.303446, 1, 0, 0.109941,-99) , 
11, 5.65757, 0, 0, 0.157816,-99) , 
12, 10881.3, 0, 0, 0.242379,-99) , 
5, 2.1806, 1, 0, 0.489354,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0144943);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526919,-99) , 
6, 0.816765, 1, 0, 0.620251,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288319,-99) , 
7, 31.9326, 1, 0, 0.52135,-99) , 
2, 19.5, 0, 0, 0.559232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374227,-99) , 
9, 25.2481, 0, 0, 0.547524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351233,-99) , 
9, 404.586, 1, 0, 0.534535,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44352,-99) , 
1, 18.5, 0, 0, 0.477516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212168,-99) , 
3, 0.999435, 1, 0, 0.461943,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174069,-99) , 
4, 1.40532, 1, 0, 0.259452,-99) , 
3, 0.908066, 0, 0, 0.433047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 170.621, 1, 0, 0.421758,-99) , 
5, 1.73215, 1, 0, 0.489697,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0127248);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469495,-99) , 
2, 12.5, 0, 0, 0.623506,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397236,-99) , 
7, 66.4809, 1, 0, 0.516116,-99) , 
4, 0.618624, 1, 0, 0.535916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30666,-99) , 
7, 7.42721, 0, 0, 0.527517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296447,-99) , 
5, 0.364273, 0, 0, 0.517186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46634,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0418393,-99) , 
8, 0.407948, 1, 0, 0.137026,-99) , 
10, 0.0447168, 1, 0, 0.208917,-99) , 
9, 46.7888, 1, 0, 0.302725,-99) , 
8, 0.108837, 1, 0, 0.359086,-99) , 
5, 2.08499, 1, 0, 0.495177,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0150776);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577381,-99) , 
6, 0.604367, 1, 0, 0.67861,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332281,-99) , 
2, 7.5, 0, 0, 0.53617,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2842,-99) , 
5, 1.53728, 1, 0, 0.388378,-99) , 
3, 0.99751, 1, 0, 0.512775,-99) , 
11, -6.52846, 1, 0, 0.529259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293101,-99) , 
5, 0.304136, 0, 0, 0.516645,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473994,-99) , 
9, 121.508, 0, 0, 0.550597,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52807,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219722,-99) , 
1, 17.5, 0, 0, 0.294309,-99) , 
13, 1.5, 0, 0, 0.378852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0947827,-99) , 
5, 2.3005, 1, 0, 0.329137,-99) , 
8, 0.193545, 1, 0, 0.395016,-99) , 
5, 1.93812, 1, 0, 0.489393,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0197889);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606306,-99) , 
4, 0.618051, 1, 0, 0.661917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453915,-99) , 
1, 50.5, 1, 0, 0.637082,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410338,-99) , 
3, 0.994818, 1, 0, 0.506571,-99) , 
6, 0.662809, 1, 0, 0.600375,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394064,-99) , 
12, 2988.04, 1, 0, 0.48346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279946,-99) , 
0, 13.5, 1, 0, 0.435032,-99) , 
2, 11.5, 0, 0, 0.558016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473208,-99) , 
12, 3667.44, 1, 0, 0.556815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368509,-99) , 
5, 2.2642, 1, 0, 0.527997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426564,-99) , 
6, 1.00141, 0, 0, 0.483339,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174115,-99) , 
9, 46.904, 1, 0, 0.276262,-99) , 
5, 1.75776, 1, 0, 0.388567,-99) , 
8, 0.948892, 1, 0, 0.458353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 175.033, 1, 0, 0.446229,-99) , 
4, 1.18747, 1, 0, 0.499352,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0224195);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.830545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645941,-99) , 
5, 1.52542, 1, 0, 0.74484,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54585,-99) , 
2, 26.5, 0, 0, 0.605452,-99) , 
6, 0.289294, 1, 0, 0.665206,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391118,-99) , 
2, 48.5, 0, 0, 0.520453,-99) , 
1, 33.5, 1, 0, 0.615515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496125,-99) , 
5, 1.63367, 1, 0, 0.600362,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391619,-99) , 
13, 0.5, 0, 0, 0.47749,-99) , 
10, 0.110786, 1, 0, 0.528383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324558,-99) , 
5, 0.959588, 0, 0, 0.48866,-99) , 
2, 16.5, 0, 0, 0.546527,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534366,-99) , 
11, -0.364521, 1, 0, 0.592617,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0812928,-99) , 
7, 27.1896, 1, 0, 0.4607,-99) , 
1, 14.5, 0, 0, 0.516045,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286957,-99) , 
9, 237.861, 1, 0, 0.471434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156386,-99) , 
9, 45.7061, 1, 0, 0.300419,-99) , 
5, 1.83236, 1, 0, 0.401093,-99) , 
8, 0.630127, 1, 0, 0.448646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 221.449, 1, 0, 0.437595,-99) , 
4, 1.1801, 1, 0, 0.489823,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0199444);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589415,-99) , 
9, 98.6583, 1, 0, 0.690892,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432207,-99) , 
5, 0.820765, 0, 0, 0.609339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410489,-99) , 
9, 44.8671, 0, 0, 0.578001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281679,-99) , 
7, 41.2488, 1, 0, 0.543754,-99) , 
2, 28.5, 0, 0, 0.582328,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473199,-99) , 
10, 0.410013, 1, 0, 0.580308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40541,-99) , 
5, 2.36306, 1, 0, 0.56137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311407,-99) , 
7, 9.06181, 0, 0, 0.535947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46652,-99) , 
2, 21.5, 0, 0, 0.505011,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272999,-99) , 
11, 1.5112, 0, 0, 0.34593,-99) , 
9, 109.375, 1, 0, 0.440673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130756,-99) , 
7, 62.135, 1, 0, 0.407201,-99) , 
8, 0.604909, 1, 0, 0.4616,-99) , 
5, 1.55231, 1, 0, 0.515848,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0184654);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647469,-99) , 
1, 14.5, 0, 0, 0.69404,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437301,-99) , 
3, 0.993932, 1, 0, 0.624835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452284,-99) , 
9, 211.568, 1, 0, 0.544922,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317322,-99) , 
5, 1.36, 0, 0, 0.384114,-99) , 
10, 0.268181, 1, 0, 0.486579,-99) , 
2, 28.5, 0, 0, 0.523901,-99) , 
12, 6791.17, 0, 0, 0.559668,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66218,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391368,-99) , 
8, 1.80566, 1, 0, 0.485385,-99) , 
2, 29.5, 0, 0, 0.502098,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0707803,-99) , 
4, 1.66765, 1, 0, 0.279893,-99) , 
2, 8.5, 0, 0, 0.478252,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.00916507,-99) , 
1, 15.5, 0, 0, 0.23547,-99) , 
7, 65.2135, 1, 0, 0.449223,-99) , 
4, 1.06589, 1, 0, 0.493971,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0127691);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684897,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570856,-99) , 
5, 1.57763, 1, 0, 0.642198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347977,-99) , 
9, 344.279, 1, 0, 0.496421,-99) , 
6, 0.0721493, 1, 0, 0.514594,-99) , 
11, -8.14074, 1, 0, 0.526348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230128,-99) , 
6, 0.360987, 1, 0, 0.318165,-99) , 
9, 28.2445, 0, 0, 0.51163,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371912,-99) , 
0, 16.5, 0, 0, 0.493759,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173206,-99) , 
8, 0.42873, 1, 0, 0.289964,-99) , 
9, 71.5095, 1, 0, 0.393407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173601,-99) , 
7, 60.0336, 1, 0, 0.358396,-99) , 
4, 1.77135, 1, 0, 0.487838,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0183118);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.788757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574132,-99) , 
1, 34.5, 1, 0, 0.710855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411415,-99) , 
9, 95.4064, 1, 0, 0.49633,-99) , 
7, 78.0221, 1, 0, 0.608374,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484078,-99) , 
11, 0.551768, 0, 0, 0.530911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196007,-99) , 
7, 45.6807, 1, 0, 0.506316,-99) , 
2, 28.5, 0, 0, 0.52811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237468,-99) , 
5, 2.22024, 1, 0, 0.520423,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598475,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107047,-99) , 
10, 0.405363, 1, 0, 0.288136,-99) , 
11, 6.36047, 0, 0, 0.351598,-99) , 
12, 8636.18, 0, 0, 0.415335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110449,-99) , 
7, 60.0336, 1, 0, 0.371397,-99) , 
4, 1.73023, 1, 0, 0.495267,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0181694);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626783,-99) , 
2, 14.5, 0, 0, 0.718518,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524728,-99) , 
11, -0.910846, 1, 0, 0.573473,-99) , 
4, 0.589406, 1, 0, 0.602799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427841,-99) , 
5, 0.733173, 0, 0, 0.583699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396201,-99) , 
9, 32.4219, 0, 0, 0.564442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443492,-99) , 
8, 0.113347, 1, 0, 0.505382,-99) , 
13, 1.5, 0, 0, 0.564137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347447,-99) , 
3, 0.998131, 1, 0, 0.535223,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416538,-99) , 
1, 15.5, 0, 0, 0.526797,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218541,-99) , 
3, 0.995867, 1, 0, 0.334171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0935707,-99) , 
5, 2.05885, 1, 0, 0.275112,-99) , 
9, 51.8521, 1, 0, 0.369202,-99) , 
8, 0.607552, 1, 0, 0.445451,-99) , 
5, 1.7513, 1, 0, 0.516881,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0172547);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615037,-99) , 
7, 39.0022, 1, 0, 0.689141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502901,-99) , 
5, 0.563599, 0, 0, 0.655256,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498038,-99) , 
9, 217.398, 1, 0, 0.570242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379855,-99) , 
9, 87.3503, 0, 0, 0.50365,-99) , 
0, 16.5, 0, 0, 0.598656,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514486,-99) , 
2, 32.5, 0, 0, 0.531603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358361,-99) , 
3, 0.999058, 1, 0, 0.5177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0621235,-99) , 
7, 143.125, 1, 0, 0.502799,-99) , 
4, 0.972161, 1, 0, 0.544226,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378555,-99) , 
12, 96.3996, 1, 0, 0.489782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247069,-99) , 
6, 0.786128, 0, 0, 0.396834,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171083,-99) , 
7, 60.0027, 1, 0, 0.358581,-99) , 
4, 1.74617, 1, 0, 0.515235,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0142211);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434103,-99) , 
1, 40.5, 1, 0, 0.563597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353927,-99) , 
5, 2.06529, 1, 0, 0.554253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333859,-99) , 
7, 8.1029, 0, 0, 0.543489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357756,-99) , 
3, 0.999373, 1, 0, 0.530947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416532,-99) , 
8, 1.10148, 1, 0, 0.489174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252527,-99) , 
6, 0.413519, 0, 0, 0.460806,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507945,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0817333,-99) , 
4, 1.60183, 1, 0, 0.214158,-99) , 
11, 0.773327, 0, 0, 0.296542,-99) , 
3, 0.954721, 0, 0, 0.423326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130481,-99) , 
7, 106.298, 1, 0, 0.403529,-99) , 
4, 1.40622, 1, 0, 0.483745,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.00950349);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545133,-99) , 
5, 1.49245, 1, 0, 0.585845,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26219,-99) , 
2, 7.5, 0, 0, 0.498879,-99) , 
6, 0.297963, 1, 0, 0.526642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228124,-99) , 
7, 7.13031, 0, 0, 0.520059,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189575,-99) , 
9, 97.6061, 1, 0, 0.302256,-99) , 
3, 0.999454, 1, 0, 0.507005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225683,-99) , 
5, 2.30299, 1, 0, 0.494315,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0167612);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65406,-99) , 
7, 18.7577, 1, 0, 0.723799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514229,-99) , 
0, 30.5, 0, 0, 0.586648,-99) , 
10, 0.237471, 1, 0, 0.652228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47506,-99) , 
8, 2.5352, 1, 0, 0.622644,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505669,-99) , 
0, 12.5, 0, 0, 0.607974,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437718,-99) , 
11, -1.2504, 1, 0, 0.491595,-99) , 
12, -344.634, 1, 0, 0.518646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340275,-99) , 
7, 99.4716, 1, 0, 0.506299,-99) , 
13, 1.5, 0, 0, 0.539648,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499625,-99) , 
0, 22.5, 1, 0, 0.570182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339951,-99) , 
2, 12.5, 0, 0, 0.480071,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171278,-99) , 
5, 2.16415, 1, 0, 0.436648,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205701,-99) , 
4, 1.84089, 1, 0, 0.345792,-99) , 
8, 0.497916, 1, 0, 0.408855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0747487,-99) , 
0, 67.5, 1, 0, 0.384538,-99) , 
5, 1.90745, 1, 0, 0.501778,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0144556);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575085,-99) , 
7, 61.4146, 1, 0, 0.670689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523441,-99) , 
9, 217.34, 1, 0, 0.644887,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424004,-99) , 
6, 0.715067, 1, 0, 0.545242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322922,-99) , 
7, 20.1161, 1, 0, 0.494909,-99) , 
0, 15.5, 0, 0, 0.582275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421968,-99) , 
3, 0.955257, 0, 0, 0.503478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313308,-99) , 
9, 390.48, 1, 0, 0.491565,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0779526,-99) , 
10, 0.507719, 1, 0, 0.284174,-99) , 
12, 6162.18, 0, 0, 0.346387,-99) , 
5, 1.92276, 1, 0, 0.458398,-99) , 
13, 1.5, 0, 0, 0.497575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217444,-99) , 
7, 138.499, 1, 0, 0.485517,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0102428);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513542,-99) , 
2, 21.5, 0, 0, 0.544768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292968,-99) , 
1, 69.5, 1, 0, 0.537966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251238,-99) , 
3, 0.999725, 1, 0, 0.529916,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226512,-99) , 
4, 1.28899, 1, 0, 0.377598,-99) , 
2, 8.5, 0, 0, 0.514033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148041,-99) , 
7, 173.128, 1, 0, 0.503505,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0190479);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565759,-99) , 
3, 0.99769, 0, 0, 0.614194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409601,-99) , 
10, 0.330832, 1, 0, 0.560259,-99) , 
1, 15.5, 0, 0, 0.6285,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539254,-99) , 
7, 15.0684, 0, 0, 0.603309,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346966,-99) , 
11, -0.26033, 1, 0, 0.483857,-99) , 
11, 0.489679, 0, 0, 0.54631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314832,-99) , 
2, 21.5, 0, 0, 0.481584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0582972,-99) , 
1, 9.5, 0, 0, 0.448743,-99) , 
7, 30.4585, 1, 0, 0.511023,-99) , 
11, -4.53685, 1, 0, 0.530003,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611767,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322183,-99) , 
13, 1.5, 0, 0, 0.430949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129722,-99) , 
3, 0.996977, 1, 0, 0.376529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.41106, 1, 0, 0.319265,-99) , 
8, 0.104798, 1, 0, 0.395186,-99) , 
5, 2.06697, 1, 0, 0.510195,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0143598);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569263,-99) , 
12, 7099.72, 0, 0, 0.594593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308912,-99) , 
7, 30.4006, 1, 0, 0.495499,-99) , 
1, 11.5, 0, 0, 0.557808,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392425,-99) , 
8, 0.915819, 1, 0, 0.47592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 126.346, 1, 0, 0.453407,-99) , 
4, 1.52476, 1, 0, 0.531114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255019,-99) , 
1, 82.5, 1, 0, 0.523676,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115105,-99) , 
2, 15.5, 0, 0, 0.27126,-99) , 
5, 2.22815, 1, 0, 0.505937,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0185725);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616041,-99) , 
6, 0.635916, 1, 0, 0.700896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485135,-99) , 
7, 119.704, 1, 0, 0.652616,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317868,-99) , 
1, 23.5, 1, 0, 0.544113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291106,-99) , 
7, 43.1404, 1, 0, 0.522506,-99) , 
2, 29.5, 0, 0, 0.546116,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607727,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457786,-99) , 
11, -2.94675, 1, 0, 0.515578,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142063,-99) , 
1, 14.5, 0, 0, 0.28532,-99) , 
7, 35.5585, 1, 0, 0.431589,-99) , 
3, 0.998058, 1, 0, 0.525358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514262,-99) , 
8, 0.136561, 1, 0, 0.60719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377698,-99) , 
7, 12.6591, 0, 0, 0.556391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300308,-99) , 
9, 58.704, 0, 0, 0.498779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0920657,-99) , 
1, 20.5, 0, 0, 0.143448,-99) , 
9, 77.0352, 1, 0, 0.243573,-99) , 
8, 0.432832, 1, 0, 0.378801,-99) , 
5, 1.95391, 1, 0, 0.494112,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.016297);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581166,-99) , 
2, 13.5, 0, 0, 0.642241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446309,-99) , 
8, 0.803875, 0, 0, 0.583117,-99) , 
2, 27.5, 0, 0, 0.616446,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631818,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382848,-99) , 
5, 1.14688, 0, 0, 0.453222,-99) , 
9, 112.406, 0, 0, 0.534639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358753,-99) , 
7, 54.7378, 1, 0, 0.487069,-99) , 
6, 0.666138, 1, 0, 0.554874,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478072,-99) , 
1, 40.5, 1, 0, 0.591326,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133172,-99) , 
7, 48.7537, 1, 0, 0.445111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185297,-99) , 
5, 2.30366, 1, 0, 0.42341,-99) , 
2, 29.5, 0, 0, 0.444364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0819005,-99) , 
7, 132.495, 1, 0, 0.43257,-99) , 
5, 1.50931, 1, 0, 0.483805,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0178464);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.784581,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.790609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551924,-99) , 
7, 20.771, 0, 0, 0.628392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43547,-99) , 
7, 28.7951, 1, 0, 0.574443,-99) , 
0, 32.5, 0, 0, 0.633863,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571781,-99) , 
3, 0.985337, 1, 0, 0.611192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486459,-99) , 
8, 0.573767, 0, 0, 0.584718,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324901,-99) , 
4, 1.52437, 1, 0, 0.532084,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207845,-99) , 
0, 32.5, 1, 0, 0.384441,-99) , 
11, 0.557778, 0, 0, 0.484792,-99) , 
11, -1.24545, 1, 0, 0.523698,-99) , 
13, 1.5, 0, 0, 0.553621,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379488,-99) , 
6, 0.669574, 1, 0, 0.495295,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160701,-99) , 
5, 2.15682, 1, 0, 0.357561,-99) , 
2, 10.5, 0, 0, 0.454303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0828487,-99) , 
3, 0.771963, 0, 0, 0.437174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0648135,-99) , 
7, 169.421, 1, 0, 0.425131,-99) , 
5, 1.84534, 1, 0, 0.514529,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0189527);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.843804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702346,-99) , 
11, 0.30557, 0, 0, 0.768844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605184,-99) , 
4, 1.01334, 1, 0, 0.700181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401461,-99) , 
2, 8.5, 0, 0, 0.564365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253807,-99) , 
12, 2030.58, 0, 0, 0.353324,-99) , 
7, 36.2844, 1, 0, 0.533577,-99) , 
2, 32.5, 0, 0, 0.55831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320389,-99) , 
7, 137.394, 1, 0, 0.546657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600886,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329263,-99) , 
1, 10.5, 0, 0, 0.468442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162931,-99) , 
0, 36.5, 1, 0, 0.417314,-99) , 
13, 1.5, 0, 0, 0.490255,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536515,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214593,-99) , 
9, 61.9099, 1, 0, 0.2982,-99) , 
4, 1.18543, 1, 0, 0.353327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0593339,-99) , 
5, 2.28739, 1, 0, 0.309862,-99) , 
8, 0.550613, 1, 0, 0.399375,-99) , 
5, 1.89684, 1, 0, 0.509807,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0106662);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531643,-99) , 
4, 0.766081, 1, 0, 0.55885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348001,-99) , 
3, 0.99949, 1, 0, 0.547516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349187,-99) , 
2, 7.5, 0, 0, 0.536875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243421,-99) , 
1, 69.5, 1, 0, 0.529098,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521499,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0347245,-99) , 
13, 0.5, 0, 0, 0.242487,-99) , 
12, 6172.78, 0, 0, 0.330329,-99) , 
5, 2.16982, 1, 0, 0.510489,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.018219);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508136,-99) , 
13, 0.5, 0, 0, 0.594355,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295932,-99) , 
0, 15.5, 1, 0, 0.475082,-99) , 
7, 14.372, 0, 0, 0.539079,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333667,-99) , 
7, 135.789, 1, 0, 0.526857,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133363,-99) , 
7, 43.6759, 1, 0, 0.314077,-99) , 
2, 23.5, 0, 0, 0.452529,-99) , 
7, 29.5638, 1, 0, 0.507844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125552,-99) , 
5, 2.36278, 1, 0, 0.503028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540413,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484883,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0892127,-99) , 
9, 76.9156, 1, 0, 0.164443,-99) , 
6, 0.967673, 0, 0, 0.245097,-99) , 
8, 0.109786, 1, 0, 0.290348,-99) , 
9, 28.0927, 1, 0, 0.332029,-99) , 
4, 1.72733, 1, 0, 0.474109,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0153975);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553678,-99) , 
3, 0.990276, 1, 0, 0.605376,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431144,-99) , 
11, -0.117446, 1, 0, 0.513145,-99) , 
11, 1.97276, 0, 0, 0.540221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284226,-99) , 
7, 7.39736, 0, 0, 0.530848,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215315,-99) , 
7, 30.739, 1, 0, 0.355837,-99) , 
3, 0.999244, 1, 0, 0.519019,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355862,-99) , 
5, 2.06085, 1, 0, 0.461023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169507,-99) , 
7, 54.1907, 1, 0, 0.416787,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222852,-99) , 
3, 0.963426, 1, 0, 0.319913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0739992,-99) , 
5, 2.11787, 1, 0, 0.225005,-99) , 
9, 71.5527, 1, 0, 0.315613,-99) , 
4, 1.72723, 1, 0, 0.486798,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.00933581);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595913,-99) , 
6, 0.265644, 1, 0, 0.655165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633323,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473807,-99) , 
11, 2.20139, 0, 0, 0.5404,-99) , 
3, 0.986651, 1, 0, 0.592959,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335117,-99) , 
1, 6.5, 0, 0, 0.506627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221284,-99) , 
3, 0.704272, 0, 0, 0.498599,-99) , 
13, 1.5, 0, 0, 0.526389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310388,-99) , 
5, 2.36545, 1, 0, 0.518112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177848,-99) , 
7, 180.313, 1, 0, 0.509317,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0152345);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530632,-99) , 
7, 26.8888, 1, 0, 0.585921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410712,-99) , 
9, 32.4429, 0, 0, 0.568313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37016,-99) , 
7, 9.07867, 0, 0, 0.555622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353407,-99) , 
9, 393.33, 1, 0, 0.543337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650948,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406235,-99) , 
13, 0.5, 1, 0, 0.514721,-99) , 
13, 1.5, 0, 0, 0.561524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358621,-99) , 
5, 2.24153, 1, 0, 0.519503,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275007,-99) , 
3, 0.996894, 1, 0, 0.466206,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241874,-99) , 
10, 0.0685613, 1, 0, 0.305569,-99) , 
9, 61.321, 1, 0, 0.373074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0552497,-99) , 
5, 2.36518, 1, 0, 0.355736,-99) , 
8, 0.592478, 1, 0, 0.430224,-99) , 
5, 1.7111, 1, 0, 0.495773,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0192049);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584684,-99) , 
6, 0.20408, 1, 0, 0.621603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418089,-99) , 
3, 0.998719, 1, 0, 0.600494,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454744,-99) , 
9, 150.631, 0, 0, 0.520122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172631,-99) , 
7, 36.2719, 1, 0, 0.479964,-99) , 
1, 12.5, 0, 0, 0.54871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295305,-99) , 
2, 8.5, 0, 0, 0.545168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3506,-99) , 
3, 0.942196, 0, 0, 0.512883,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232404,-99) , 
8, 1.12492, 1, 0, 0.441417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.105414,-99) , 
1, 14.5, 0, 0, 0.321711,-99) , 
7, 25.5627, 1, 0, 0.452364,-99) , 
4, 1.39232, 1, 0, 0.512268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219739,-99) , 
5, 2.36539, 1, 0, 0.502184,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0157055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.792859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620858,-99) , 
0, 33.5, 0, 0, 0.676325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482426,-99) , 
1, 39.5, 1, 0, 0.63066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503398,-99) , 
7, 14.7474, 0, 0, 0.568322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413072,-99) , 
7, 21.7068, 1, 0, 0.535186,-99) , 
0, 17.5, 0, 0, 0.583152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175574,-99) , 
4, 2.09976, 1, 0, 0.569152,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239676,-99) , 
1, 34.5, 1, 0, 0.511039,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 16.5, 0, 0, 0.375599,-99) , 
7, 59.3281, 1, 0, 0.488173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127844,-99) , 
0, 11.5, 1, 0, 0.317769,-99) , 
7, 8.9418, 0, 0, 0.472604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249349,-99) , 
3, 0.99938, 1, 0, 0.459752,-99) , 
13, 1.5, 0, 0, 0.492073,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0155698);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611721,-99) , 
5, 1.9182, 1, 0, 0.711017,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500157,-99) , 
4, 0.918136, 0, 0, 0.572718,-99) , 
6, 0.200546, 1, 0, 0.614113,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381602,-99) , 
9, 334.418, 1, 0, 0.529304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374679,-99) , 
8, 0.620278, 1, 0, 0.435658,-99) , 
5, 1.67339, 1, 0, 0.498461,-99) , 
13, 1.5, 0, 0, 0.531952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266656,-99) , 
1, 70.5, 1, 0, 0.521339,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562155,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151499,-99) , 
6, 0.701242, 0, 0, 0.369841,-99) , 
1, 16.5, 0, 0, 0.440217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399517,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102058,-99) , 
11, -2.67891, 1, 0, 0.141918,-99) , 
9, 46.4902, 1, 0, 0.234411,-99) , 
8, 0.745975, 1, 0, 0.348063,-99) , 
4, 1.71413, 1, 0, 0.490304,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.018761);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60016,-99) , 
4, 0.326328, 1, 0, 0.625382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449326,-99) , 
7, 119.328, 1, 0, 0.610106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406683,-99) , 
5, 0.364273, 0, 0, 0.590303,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481301,-99) , 
12, 2043.92, 0, 0, 0.568234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403477,-99) , 
7, 10.1683, 0, 0, 0.506268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316756,-99) , 
10, 0.282327, 1, 0, 0.465974,-99) , 
2, 11.5, 0, 0, 0.55414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48952,-99) , 
4, 1.92689, 1, 0, 0.660862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373082,-99) , 
9, 80.1526, 0, 0, 0.561142,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44632,-99) , 
11, 3.56636, 0, 0, 0.489832,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118563,-99) , 
5, 1.97018, 1, 0, 0.337186,-99) , 
9, 78.7501, 1, 0, 0.406689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.39019, 1, 0, 0.391178,-99) , 
8, 0.249049, 1, 0, 0.4309,-99) , 
4, 1.28329, 1, 0, 0.499351,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0140819);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.799089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620297,-99) , 
9, 91.7918, 1, 0, 0.713473,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468771,-99) , 
9, 56.7777, 0, 0, 0.574342,-99) , 
2, 33.5, 0, 0, 0.599257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441699,-99) , 
9, 352.44, 1, 0, 0.583426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431517,-99) , 
3, 0.99534, 1, 0, 0.547037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35017,-99) , 
2, 16.5, 0, 0, 0.461088,-99) , 
6, 0.950662, 1, 0, 0.550581,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455305,-99) , 
8, 0.249174, 1, 0, 0.487466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27727,-99) , 
5, 2.30347, 1, 0, 0.467184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 170.621, 1, 0, 0.457526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0102156,-99) , 
1, 60.5, 1, 0, 0.444195,-99) , 
5, 1.67062, 1, 0, 0.502912,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0136642);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616227,-99) , 
8, 1.23715, 0, 0, 0.687193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418929,-99) , 
0, 29.5, 0, 0, 0.57361,-99) , 
7, 27.2945, 1, 0, 0.618281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406301,-99) , 
8, 1.66193, 1, 0, 0.491804,-99) , 
0, 13.5, 0, 0, 0.577528,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608953,-99) , 
9, 97.773, 1, 0, 0.67349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325009,-99) , 
4, 1.76422, 1, 0, 0.467125,-99) , 
11, 6.01815, 0, 0, 0.490602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247498,-99) , 
3, 0.999427, 1, 0, 0.475153,-99) , 
13, 1.5, 0, 0, 0.505509,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152702,-99) , 
8, 0.357512, 1, 0, 0.328891,-99) , 
5, 2.16832, 1, 0, 0.489778,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0162058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296266,-99) , 
7, 223.228, 1, 0, 0.631508,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134818,-99) , 
7, 58.2078, 1, 0, 0.505275,-99) , 
2, 30.5, 0, 0, 0.529285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161076,-99) , 
7, 6.99944, 0, 0, 0.520625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.126064,-99) , 
7, 31.6708, 1, 0, 0.287302,-99) , 
3, 0.999459, 1, 0, 0.508062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0536004,-99) , 
8, 0.177891, 1, 0, 0.264037,-99) , 
5, 2.29471, 1, 0, 0.495746,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0157677);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758946,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527113,-99) , 
11, 8.4971, 0, 0, 0.537395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38932,-99) , 
9, 32.3138, 0, 0, 0.523874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335351,-99) , 
7, 8.74443, 0, 0, 0.511781,-99) , 
11, -8.15889, 1, 0, 0.523158,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507698,-99) , 
3, 0.995361, 1, 0, 0.628783,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282523,-99) , 
11, 0.987928, 0, 0, 0.392518,-99) , 
6, 0.727654, 0, 0, 0.516648,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410569,-99) , 
13, 1.5, 0, 0, 0.476193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.059345,-99) , 
4, 1.82165, 1, 0, 0.226404,-99) , 
9, 77.0352, 1, 0, 0.361308,-99) , 
8, 0.58818, 1, 0, 0.428189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0536132,-99) , 
7, 101.247, 1, 0, 0.400986,-99) , 
4, 1.53959, 1, 0, 0.488845,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.00897745);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515674,-99) , 
4, 0.341361, 1, 0, 0.532482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32899,-99) , 
5, 0.509701, 0, 0, 0.521878,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553211,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271498,-99) , 
9, 45.6528, 1, 0, 0.360783,-99) , 
8, 0.227742, 1, 0, 0.41925,-99) , 
4, 1.7282, 1, 0, 0.503626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197842,-99) , 
7, 236.401, 1, 0, 0.497509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283661,-99) , 
7, 7.69579, 0, 0, 0.487947,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.012518);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786994,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456391,-99) , 
3, 0.918467, 0, 0, 0.585391,-99) , 
4, 0.34287, 1, 0, 0.607299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481372,-99) , 
6, 0.820934, 1, 0, 0.56819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353432,-99) , 
2, 19.5, 0, 0, 0.416336,-99) , 
12, 3377.34, 0, 0, 0.483774,-99) , 
5, 1.09019, 0, 0, 0.560413,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211196,-99) , 
5, 2.49849, 1, 0, 0.480146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191148,-99) , 
1, 50.5, 1, 0, 0.46913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125823,-99) , 
7, 7.1193, 0, 0, 0.459581,-99) , 
5, 1.54895, 1, 0, 0.505068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227761,-99) , 
7, 132.742, 1, 0, 0.492125,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0158336);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.794125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687875,-99) , 
2, 22.5, 0, 0, 0.736186,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341768,-99) , 
7, 66.6171, 1, 0, 0.549031,-99) , 
2, 54.5, 0, 0, 0.571605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366283,-99) , 
10, 0.0963877, 1, 0, 0.434748,-99) , 
2, 11.5, 0, 0, 0.536602,-99) , 
6, 0.134469, 1, 0, 0.564554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7133,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424024,-99) , 
13, 1.5, 0, 0, 0.462737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125177,-99) , 
8, 0.381817, 1, 0, 0.261366,-99) , 
5, 2.24092, 1, 0, 0.442235,-99) , 
11, -9.4074, 1, 0, 0.457242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152458,-99) , 
7, 107.517, 1, 0, 0.440904,-99) , 
5, 1.51903, 1, 0, 0.493636,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0107303);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475779,-99) , 
5, 0.728587, 0, 0, 0.606927,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311654,-99) , 
3, 0.999347, 1, 0, 0.515536,-99) , 
4, 0.761199, 1, 0, 0.540452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302755,-99) , 
7, 7.41369, 0, 0, 0.532771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286132,-99) , 
7, 135.746, 1, 0, 0.523069,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534445,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0898285,-99) , 
9, 79.0333, 1, 0, 0.254899,-99) , 
8, 0.108797, 1, 0, 0.336017,-99) , 
5, 2.16848, 1, 0, 0.506315,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0193395);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.839372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624351,-99) , 
7, 45.5973, 1, 0, 0.738347,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482645,-99) , 
10, 0.208371, 1, 0, 0.607206,-99) , 
2, 17.5, 0, 0, 0.663167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401808,-99) , 
10, 0.0619064, 0, 0, 0.625491,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340135,-99) , 
7, 8.23475, 0, 0, 0.544851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117444,-99) , 
1, 17.5, 0, 0, 0.414337,-99) , 
7, 63.2337, 1, 0, 0.523869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258771,-99) , 
3, 0.999449, 1, 0, 0.512033,-99) , 
6, 0.286689, 1, 0, 0.547967,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262641,-99) , 
4, 2.08292, 1, 0, 0.53713,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.094242,-99) , 
9, 33.8123, 0, 0, 0.383259,-99) , 
13, 1.5, 0, 0, 0.441989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0922026,-99) , 
8, 2.78349, 1, 0, 0.424325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0310119,-99) , 
7, 102.574, 1, 0, 0.403753,-99) , 
5, 1.98345, 1, 0, 0.518705,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0170999);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552567,-99) , 
2, 28.5, 0, 0, 0.570816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339638,-99) , 
1, 37.5, 1, 0, 0.559336,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420771,-99) , 
3, 0.967121, 0, 0, 0.49117,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191645,-99) , 
7, 11.4434, 0, 0, 0.358507,-99) , 
0, 13.5, 1, 0, 0.459045,-99) , 
7, 13.6635, 0, 0, 0.528908,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670516,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145638,-99) , 
5, 1.60122, 1, 0, 0.385448,-99) , 
9, 57.7559, 1, 0, 0.48415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0321738,-99) , 
1, 14.5, 0, 0, 0.399242,-99) , 
7, 59.3679, 1, 0, 0.508936,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304421,-99) , 
13, 1.5, 0, 0, 0.425432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20654,-99) , 
1, 11.5, 0, 0, 0.344041,-99) , 
5, 2.16894, 1, 0, 0.493791,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0182717);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690019,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555434,-99) , 
7, 38.7351, 1, 0, 0.602302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331481,-99) , 
7, 30.2286, 1, 0, 0.50048,-99) , 
2, 20.5, 0, 0, 0.542023,-99) , 
10, 0.0843975, 1, 0, 0.560508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366373,-99) , 
10, 0.0426682, 0, 0, 0.547452,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499092,-99) , 
8, 0.208008, 1, 0, 0.656991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476826,-99) , 
9, 64.0544, 0, 0, 0.609648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263427,-99) , 
12, 3489.26, 1, 0, 0.445937,-99) , 
1, 11.5, 0, 0, 0.546322,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301876,-99) , 
7, 48.7868, 1, 0, 0.528535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20441,-99) , 
5, 2.29745, 1, 0, 0.496347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0950071,-99) , 
5, 2.2255, 1, 0, 0.367415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150175,-99) , 
7, 24.6432, 1, 0, 0.291726,-99) , 
9, 71.5597, 1, 0, 0.382203,-99) , 
8, 0.400564, 1, 0, 0.448272,-99) , 
5, 1.74117, 1, 0, 0.507125,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0182527);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483982,-99) , 
9, 54.8521, 0, 0, 0.575414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341259,-99) , 
0, 28.5, 1, 0, 0.561948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456367,-99) , 
9, 102.666, 1, 0, 0.571323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.10779,-99) , 
7, 54.5346, 1, 0, 0.302585,-99) , 
2, 24.5, 0, 0, 0.478223,-99) , 
7, 32.2211, 1, 0, 0.53363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292517,-99) , 
7, 7.37049, 0, 0, 0.526218,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438315,-99) , 
8, 0.401841, 1, 0, 0.538963,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514672,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125529,-99) , 
5, 2.12488, 1, 0, 0.274539,-99) , 
12, -850.19, 1, 0, 0.346423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0294464,-99) , 
7, 32.2972, 1, 0, 0.293294,-99) , 
1, 14.5, 0, 0, 0.395644,-99) , 
4, 1.71242, 1, 0, 0.502376,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0163841);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782457,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.740782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573714,-99) , 
3, 0.988455, 1, 0, 0.672086,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45039,-99) , 
8, 1.11177, 0, 0, 0.542899,-99) , 
10, 0.166748, 1, 0, 0.594681,-99) , 
11, -5.08616, 1, 0, 0.617562,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469381,-99) , 
12, 4809.66, 1, 0, 0.549957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393742,-99) , 
3, 0.948221, 0, 0, 0.516996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347599,-99) , 
3, 0.998571, 1, 0, 0.495392,-99) , 
6, 0.621355, 1, 0, 0.555789,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345141,-99) , 
5, 2.15612, 1, 0, 0.46411,-99) , 
2, 16.5, 0, 0, 0.558834,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33379,-99) , 
7, 23.9527, 1, 0, 0.438849,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165204,-99) , 
5, 2.29736, 1, 0, 0.418531,-99) , 
8, 0.25546, 1, 0, 0.452013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108609,-99) , 
7, 123.96, 1, 0, 0.43705,-99) , 
5, 1.64266, 1, 0, 0.499676,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0107641);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570177,-99) , 
6, 0.165465, 1, 0, 0.606456,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276834,-99) , 
7, 7.38752, 0, 0, 0.50899,-99) , 
13, 1.5, 0, 0, 0.537278,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264765,-99) , 
7, 21.7596, 1, 0, 0.342231,-99) , 
9, 404.716, 1, 0, 0.52511,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31545,-99) , 
10, 0.167312, 0, 0, 0.46287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242471,-99) , 
8, 0.408805, 1, 0, 0.362541,-99) , 
5, 2.15671, 1, 0, 0.50989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174469,-99) , 
7, 177.198, 1, 0, 0.501297,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0163402);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472634,-99) , 
8, 2.52898, 1, 0, 0.59257,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14835,-99) , 
7, 64.167, 1, 0, 0.464984,-99) , 
4, 1.29783, 1, 0, 0.551471,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440346,-99) , 
11, 0.466063, 0, 0, 0.497273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272759,-99) , 
4, 0.549701, 0, 0, 0.452614,-99) , 
9, 54.8521, 0, 0, 0.525606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277321,-99) , 
9, 461.387, 1, 0, 0.514904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596922,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326267,-99) , 
0, 12.5, 0, 0, 0.494118,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20989,-99) , 
9, 77.4981, 1, 0, 0.368427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122066,-99) , 
3, 0.979668, 0, 0, 0.278287,-99) , 
13, 1.5, 0, 0, 0.361903,-99) , 
8, 0.0838229, 1, 0, 0.403531,-99) , 
5, 1.95219, 1, 0, 0.490612,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0202637);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679857,-99) , 
10, 0.279284, 1, 0, 0.723686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407163,-99) , 
8, 1.79359, 1, 0, 0.566049,-99) , 
5, 1.4978, 1, 0, 0.650576,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426441,-99) , 
2, 28.5, 0, 0, 0.516231,-99) , 
5, 0.965777, 0, 0, 0.606257,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506647,-99) , 
10, 0.0801497, 1, 0, 0.590198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422187,-99) , 
2, 9.5, 0, 0, 0.523338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371369,-99) , 
10, 0.223275, 1, 0, 0.473175,-99) , 
1, 12.5, 0, 0, 0.552032,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423884,-99) , 
6, 0.533187, 0, 0, 0.632651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367294,-99) , 
3, 0.975836, 0, 0, 0.549168,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423582,-99) , 
1, 10.5, 0, 0, 0.522611,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.119644,-99) , 
5, 1.90238, 1, 0, 0.342647,-99) , 
8, 0.706569, 1, 0, 0.428508,-99) , 
9, 50.7225, 1, 0, 0.464548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147163,-99) , 
7, 142.659, 1, 0, 0.452596,-99) , 
4, 1.18784, 1, 0, 0.50024,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0168169);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786866,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.775688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575114,-99) , 
12, 9273.41, 0, 0, 0.619867,-99) , 
3, 0.923076, 1, 0, 0.647534,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293134,-99) , 
0, 15.5, 0, 0, 0.467128,-99) , 
5, 2.09043, 1, 0, 0.612131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363063,-99) , 
8, 2.6681, 1, 0, 0.583442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570439,-99) , 
11, -1.29438, 1, 0, 0.618483,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361808,-99) , 
3, 0.995842, 1, 0, 0.48803,-99) , 
6, 0.602284, 1, 0, 0.546268,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479154,-99) , 
9, 61.2216, 1, 0, 0.58813,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369576,-99) , 
8, 0.248738, 1, 0, 0.411005,-99) , 
12, 7494.59, 0, 0, 0.447107,-99) , 
5, 1.52158, 1, 0, 0.490121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209616,-99) , 
3, 0.999471, 1, 0, 0.476924,-99) , 
13, 1.5, 0, 0, 0.508847,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0120696);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756864,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685755,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253823,-99) , 
3, 0.99766, 1, 0, 0.506947,-99) , 
11, 5.13341, 0, 0, 0.528774,-99) , 
11, -6.76224, 1, 0, 0.545021,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396541,-99) , 
8, 1.83773, 1, 0, 0.462012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157837,-99) , 
7, 247.033, 1, 0, 0.454887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141159,-99) , 
9, 461.399, 1, 0, 0.441533,-99) , 
6, 0.604422, 1, 0, 0.49816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256695,-99) , 
5, 2.30039, 1, 0, 0.487272,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0158693);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.82944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656208,-99) , 
8, 1.09704, 0, 0, 0.73342,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411493,-99) , 
1, 30.5, 1, 0, 0.558916,-99) , 
13, 1.5, 0, 0, 0.616839,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395073,-99) , 
5, 1.98394, 1, 0, 0.521005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113522,-99) , 
0, 32.5, 1, 0, 0.5091,-99) , 
2, 21.5, 0, 0, 0.536604,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235582,-99) , 
1, 12.5, 0, 0, 0.33952,-99) , 
9, 461.782, 1, 0, 0.525364,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0071961,-99) , 
1, 22, 0, 0, 0.30291,-99) , 
7, 107.246, 1, 0, 0.512278,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0105278);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708259,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527751,-99) , 
6, 0.68126, 1, 0, 0.637619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288069,-99) , 
3, 0.99898, 1, 0, 0.498746,-99) , 
11, 6.36788, 0, 0, 0.513628,-99) , 
11, -9.45466, 1, 0, 0.523167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305051,-99) , 
9, 475.07, 1, 0, 0.512319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533833,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157382,-99) , 
10, 0.279974, 0, 0, 0.273077,-99) , 
12, -2927.14, 1, 0, 0.345272,-99) , 
4, 1.83111, 1, 0, 0.492292,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0127307);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481315,-99) , 
6, 0.8491, 1, 0, 0.652656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267017,-99) , 
7, 7.37061, 0, 0, 0.503424,-99) , 
11, -5.57402, 1, 0, 0.521383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277966,-99) , 
7, 154.732, 1, 0, 0.513018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19099,-99) , 
3, 0.999697, 1, 0, 0.504133,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247713,-99) , 
13, 1.5, 0, 0, 0.407523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102737,-99) , 
1, 11.5, 0, 0, 0.304248,-99) , 
5, 2.17525, 1, 0, 0.487064,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0138436);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806486,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459348,-99) , 
7, 71.2179, 1, 0, 0.584275,-99) , 
9, 85.0619, 1, 0, 0.672978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419291,-99) , 
3, 0.967396, 1, 0, 0.499401,-99) , 
5, 1.56111, 1, 0, 0.604983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289884,-99) , 
7, 7.0015, 0, 0, 0.515622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284381,-99) , 
5, 2.3205, 1, 0, 0.504898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172771,-99) , 
7, 50.0735, 1, 0, 0.487322,-99) , 
2, 28.5, 0, 0, 0.509515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0265797,-99) , 
7, 237.131, 1, 0, 0.50362,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0112659);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.769074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574492,-99) , 
6, 0.594877, 1, 0, 0.663741,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413598,-99) , 
3, 0.999008, 1, 0, 0.526466,-99) , 
12, 10182.8, 0, 0, 0.541741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357474,-99) , 
9, 436.757, 1, 0, 0.532265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600249,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333523,-99) , 
9, 46.2051, 1, 0, 0.417085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121422,-99) , 
5, 2.32023, 1, 0, 0.338942,-99) , 
8, 0.109924, 1, 0, 0.409348,-99) , 
5, 2.07749, 1, 0, 0.515802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108176,-99) , 
7, 7.1329, 0, 0, 0.507323,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0123643);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766688,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495705,-99) , 
8, 2.19186, 1, 0, 0.597547,-99) , 
4, 0.42342, 1, 0, 0.623019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450112,-99) , 
6, 0.972806, 1, 0, 0.595448,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286536,-99) , 
3, 0.999505, 1, 0, 0.502835,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1882,-99) , 
7, 13.8306, 0, 0, 0.339102,-99) , 
3, 0.845907, 0, 0, 0.487151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106278,-99) , 
5, 2.28314, 1, 0, 0.480162,-99) , 
13, 1.5, 0, 0, 0.51437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0945375,-99) , 
3, 0.996453, 1, 0, 0.26656,-99) , 
4, 1.93438, 1, 0, 0.496358,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0155544);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.817301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636135,-99) , 
10, 0.313548, 1, 0, 0.712044,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439841,-99) , 
10, 0.510335, 1, 0, 0.553256,-99) , 
5, 1.36427, 1, 0, 0.600037,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39277,-99) , 
7, 64.0454, 1, 0, 0.529863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352576,-99) , 
4, 0.297176, 0, 0, 0.511043,-99) , 
6, 0.239453, 1, 0, 0.543467,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270237,-99) , 
7, 7.69613, 0, 0, 0.376579,-99) , 
7, 10.1325, 0, 0, 0.524933,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356659,-99) , 
11, 1.40439, 0, 0, 0.446353,-99) , 
1, 19.5, 0, 0, 0.500053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295067,-99) , 
10, 0.467861, 1, 0, 0.42263,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135808,-99) , 
4, 1.67505, 1, 0, 0.239937,-99) , 
9, 99.4909, 1, 0, 0.35033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0857324,-99) , 
5, 2.32104, 1, 0, 0.332202,-99) , 
8, 0.590936, 1, 0, 0.40356,-99) , 
4, 1.54154, 1, 0, 0.490525,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0104084);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735372,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479825,-99) , 
0, 16.5, 0, 0, 0.576278,-99) , 
10, 0.0802363, 1, 0, 0.59627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453559,-99) , 
7, 10.9566, 0, 0, 0.577716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411243,-99) , 
5, 0.340579, 0, 0, 0.562063,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441641,-99) , 
8, 0.511223, 1, 0, 0.474361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309112,-99) , 
5, 2.2885, 1, 0, 0.45983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208142,-99) , 
3, 0.999606, 1, 0, 0.450714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0394307,-99) , 
7, 169.163, 1, 0, 0.441564,-99) , 
5, 1.52067, 1, 0, 0.4934,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.01496);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485552,-99) , 
9, 63.3036, 0, 0, 0.572821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349626,-99) , 
5, 1.64437, 1, 0, 0.474655,-99) , 
8, 2.27523, 1, 0, 0.551432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321032,-99) , 
10, 0.0504343, 0, 0, 0.538536,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439359,-99) , 
13, 1.5, 0, 0, 0.476346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203809,-99) , 
5, 2.25411, 1, 0, 0.457947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118011,-99) , 
7, 27.1899, 1, 0, 0.43543,-99) , 
2, 11.5, 0, 0, 0.501614,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219955,-99) , 
5, 1.58219, 1, 0, 0.43396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0251001,-99) , 
1, 22.5, 0, 0, 0.33259,-99) , 
7, 89.1518, 1, 0, 0.486677,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0174086);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80669,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530662,-99) , 
6, 0.648044, 1, 0, 0.618863,-99) , 
0, 30.5, 0, 0, 0.663677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524561,-99) , 
7, 64.7392, 1, 0, 0.630876,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508687,-99) , 
3, 0.981426, 1, 0, 0.579071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407511,-99) , 
7, 17.1924, 1, 0, 0.527243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0890063,-99) , 
4, 1.99936, 1, 0, 0.499308,-99) , 
0, 15.5, 0, 0, 0.576922,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726131,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478524,-99) , 
2, 23.5, 0, 0, 0.515598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348957,-99) , 
3, 0.998546, 1, 0, 0.494426,-99) , 
12, 12061.8, 0, 0, 0.514452,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35481,-99) , 
7, 19.0371, 1, 0, 0.542078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328155,-99) , 
8, 2.72106, 0, 0, 0.363795,-99) , 
11, 3.06172, 0, 0, 0.413981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158596,-99) , 
0, 35.5, 1, 0, 0.370712,-99) , 
5, 1.75892, 1, 0, 0.466327,-99) , 
13, 1.5, 0, 0, 0.499376,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0113839);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530454,-99) , 
11, 6.89253, 0, 0, 0.545835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247222,-99) , 
7, 181.09, 1, 0, 0.538856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27712,-99) , 
1, 84.5, 1, 0, 0.530924,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312751,-99) , 
12, 2017.01, 1, 0, 0.398681,-99) , 
0, 10.5, 1, 0, 0.463616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234653,-99) , 
3, 0.933921, 0, 0, 0.413238,-99) , 
7, 11.1189, 0, 0, 0.51187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50989,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121318,-99) , 
4, 1.72538, 1, 0, 0.213572,-99) , 
8, 0.160501, 1, 0, 0.321,-99) , 
5, 2.1776, 1, 0, 0.495545,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0182022);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.799993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654275,-99) , 
13, 1.5, 0, 0, 0.703064,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480896,-99) , 
2, 13.5, 1, 0, 0.550205,-99) , 
7, 18.4013, 0, 0, 0.638106,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518953,-99) , 
11, -0.698741, 1, 0, 0.600205,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305121,-99) , 
8, 2.15971, 1, 0, 0.442312,-99) , 
9, 114.919, 1, 0, 0.524441,-99) , 
7, 28.8087, 1, 0, 0.573908,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450746,-99) , 
10, 0.0509331, 0, 0, 0.549004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373277,-99) , 
12, 2935.77, 1, 0, 0.472033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27031,-99) , 
3, 0.993498, 1, 0, 0.408918,-99) , 
10, 0.107291, 1, 0, 0.477477,-99) , 
2, 11.5, 0, 0, 0.54355,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66751,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382439,-99) , 
1, 12.5, 0, 0, 0.492539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138419,-99) , 
10, 0.782356, 1, 0, 0.357151,-99) , 
13, 1.5, 0, 0, 0.400943,-99) , 
11, 6.67517, 0, 0, 0.439247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0969394,-99) , 
7, 142.535, 1, 0, 0.423842,-99) , 
4, 1.45686, 1, 0, 0.505379,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0157269);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613767,-99) , 
4, 0.963956, 1, 0, 0.709513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537117,-99) , 
3, 0.991854, 1, 0, 0.647867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462538,-99) , 
6, 0.50772, 0, 0, 0.590455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42115,-99) , 
3, 0.95357, 0, 0, 0.55552,-99) , 
6, 0.318221, 1, 0, 0.589009,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447149,-99) , 
8, 0.385972, 0, 0, 0.58719,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313329,-99) , 
4, 1.17236, 1, 0, 0.479083,-99) , 
8, 1.77558, 1, 0, 0.543304,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394046,-99) , 
5, 1.96151, 0, 0, 0.590027,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.119429,-99) , 
5, 2.15212, 1, 0, 0.396688,-99) , 
9, 322.975, 0, 0, 0.428769,-99) , 
5, 1.60256, 1, 0, 0.489175,-99) , 
13, 1.5, 0, 0, 0.518839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244834,-99) , 
4, 2.01945, 1, 0, 0.505324,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0177957);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632086,-99) , 
6, 0.527523, 1, 0, 0.68859,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400184,-99) , 
1, 11.5, 0, 0, 0.513504,-99) , 
10, 0.250468, 1, 0, 0.60845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506566,-99) , 
6, 0.711672, 1, 0, 0.625395,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372069,-99) , 
9, 34.2544, 0, 0, 0.529683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215595,-99) , 
9, 157.846, 1, 0, 0.359871,-99) , 
3, 0.992546, 1, 0, 0.48785,-99) , 
11, -5.70259, 1, 0, 0.508,-99) , 
11, 3.95643, 0, 0, 0.527998,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611081,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236746,-99) , 
2, 10.5, 0, 0, 0.425054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0517666,-99) , 
0, 43.5, 1, 0, 0.387563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0727366,-99) , 
5, 2.35537, 1, 0, 0.340366,-99) , 
8, 0.112839, 1, 0, 0.407193,-99) , 
5, 1.97302, 1, 0, 0.503814,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0102548);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.790223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592956,-99) , 
5, 1.72019, 0, 0, 0.682535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53933,-99) , 
10, 0.287142, 1, 0, 0.630668,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514807,-99) , 
2, 59.5, 0, 0, 0.523932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351615,-99) , 
2, 7.5, 0, 0, 0.514504,-99) , 
11, 5.07299, 0, 0, 0.530632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153901,-99) , 
7, 225.911, 1, 0, 0.524196,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18281,-99) , 
3, 0.99736, 1, 0, 0.444234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131574,-99) , 
2, 12.5, 0, 0, 0.332141,-99) , 
5, 2.18185, 1, 0, 0.50869,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0158042);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723097,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525335,-99) , 
10, 0.13452, 1, 0, 0.56798,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37257,-99) , 
1, 14.5, 0, 0, 0.434418,-99) , 
8, 2.52099, 1, 0, 0.543477,-99) , 
11, -5.70765, 1, 0, 0.562735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338815,-99) , 
5, 0.46851, 0, 0, 0.547586,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476928,-99) , 
3, 0.990816, 1, 0, 0.578032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331195,-99) , 
5, 2.2405, 1, 0, 0.535265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378319,-99) , 
11, -3.35543, 1, 0, 0.423806,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162255,-99) , 
7, 13.8282, 1, 0, 0.245726,-99) , 
9, 96.9496, 1, 0, 0.342616,-99) , 
8, 0.110544, 1, 0, 0.378345,-99) , 
13, 1.5, 0, 0, 0.430772,-99) , 
5, 1.69942, 1, 0, 0.499057,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0123697);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494539,-99) , 
10, 0.440037, 1, 0, 0.572761,-99) , 
12, 10625.3, 0, 0, 0.594676,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351066,-99) , 
7, 8.09571, 0, 0, 0.51187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0925833,-99) , 
1, 22.5, 0, 0, 0.381691,-99) , 
7, 58.6309, 1, 0, 0.492326,-99) , 
13, 1.5, 0, 0, 0.522171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210341,-99) , 
6, 0.433602, 0, 0, 0.343336,-99) , 
5, 2.22692, 1, 0, 0.510407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160983,-99) , 
3, 0.999788, 1, 0, 0.503453,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0158808);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.792367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606859,-99) , 
1, 21.5, 1, 0, 0.68749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553919,-99) , 
2, 14.5, 0, 0, 0.629184,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505503,-99) , 
6, 0.668614, 1, 0, 0.559228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346127,-99) , 
7, 135.205, 1, 0, 0.546152,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318363,-99) , 
6, 0.494267, 1, 0, 0.391084,-99) , 
3, 0.927172, 0, 0, 0.521554,-99) , 
13, 1.5, 0, 0, 0.549581,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557731,-99) , 
2, 14.5, 1, 0, 0.64068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340063,-99) , 
2, 16.5, 0, 0, 0.43662,-99) , 
11, 0.720361, 0, 0, 0.533957,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413759,-99) , 
11, -1.01682, 1, 0, 0.493282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233048,-99) , 
5, 2.28659, 1, 0, 0.466504,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210499,-99) , 
6, 0.703151, 1, 0, 0.330199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0392461,-99) , 
5, 2.09932, 1, 0, 0.263557,-99) , 
9, 103.966, 1, 0, 0.381869,-99) , 
8, 0.447869, 1, 0, 0.447462,-99) , 
5, 1.76649, 1, 0, 0.512761,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0152532);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423939,-99) , 
9, 55.756, 0, 0, 0.59266,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351515,-99) , 
3, 0.995167, 0, 0, 0.472196,-99) , 
3, 0.991824, 1, 0, 0.539787,-99) , 
6, 0.120021, 1, 0, 0.562627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342153,-99) , 
5, 0.484095, 0, 0, 0.541515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54874,-99) , 
4, 1.51676, 0, 0, 0.631193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460665,-99) , 
8, 1.75487, 1, 0, 0.573965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391006,-99) , 
5, 2.09393, 1, 0, 0.532882,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409277,-99) , 
3, 0.986221, 1, 0, 0.464373,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269875,-99) , 
3, 0.83108, 1, 0, 0.326306,-99) , 
3, 0.95434, 0, 0, 0.429047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193007,-99) , 
0, 52.5, 1, 0, 0.404073,-99) , 
13, 1.5, 0, 0, 0.444509,-99) , 
5, 1.5138, 1, 0, 0.485089,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0166913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.769155,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473394,-99) , 
8, 0.794576, 1, 0, 0.563266,-99) , 
9, 85.4079, 1, 0, 0.631473,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383068,-99) , 
7, 8.33695, 0, 0, 0.538874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203638,-99) , 
7, 44.8593, 1, 0, 0.512186,-99) , 
2, 28.5, 0, 0, 0.535251,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287036,-99) , 
8, 1.83203, 0, 0, 0.361706,-99) , 
9, 32.4429, 0, 0, 0.519483,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41206,-99) , 
6, 0.724788, 0, 0, 0.514306,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117604,-99) , 
9, 71.3592, 1, 0, 0.180224,-99) , 
9, 40.9473, 1, 0, 0.29731,-99) , 
8, 0.307689, 1, 0, 0.385649,-99) , 
4, 1.7974, 1, 0, 0.501255,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0114179);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463837,-99) , 
3, 0.964273, 0, 0, 0.558657,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0677741,-99) , 
7, 59.9342, 1, 0, 0.479475,-99) , 
1, 15.5, 0, 0, 0.511378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251879,-99) , 
1, 75.5, 1, 0, 0.504407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253317,-99) , 
5, 2.36588, 1, 0, 0.496584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241899,-99) , 
7, 7.37044, 0, 0, 0.488612,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0217749);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561644,-99) , 
3, 0.945622, 0, 0, 0.649219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511276,-99) , 
6, 0.969143, 1, 0, 0.620158,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517807,-99) , 
6, 0.666875, 1, 0, 0.588799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317263,-99) , 
6, 0.47074, 1, 0, 0.388156,-99) , 
0, 11.5, 1, 0, 0.487046,-99) , 
7, 13.5562, 0, 0, 0.573564,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467792,-99) , 
4, 0.982434, 1, 0, 0.556079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278912,-99) , 
7, 145.374, 1, 0, 0.516463,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186544,-99) , 
7, 44, 1, 0, 0.300248,-99) , 
2, 22.5, 0, 0, 0.453364,-99) , 
7, 32.4594, 1, 0, 0.531806,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492167,-99) , 
12, 3735.85, 0, 0, 0.594707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387766,-99) , 
8, 0.955848, 0, 0, 0.509275,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519858,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132182,-99) , 
7, 29.0471, 1, 0, 0.401319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0262346,-99) , 
11, 1.42001, 0, 0, 0.0992502,-99) , 
4, 1.75867, 1, 0, 0.287233,-99) , 
8, 0.136696, 1, 0, 0.338976,-99) , 
9, 52.036, 1, 0, 0.400256,-99) , 
5, 1.87196, 1, 0, 0.49525,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0143374);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508347,-99) , 
5, 0.63878, 0, 0, 0.66799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428444,-99) , 
7, 59.8985, 1, 0, 0.53155,-99) , 
4, 0.623473, 1, 0, 0.567943,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146248,-99) , 
5, 2.23801, 1, 0, 0.501979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239292,-99) , 
7, 25.0499, 1, 0, 0.478638,-99) , 
2, 12.5, 0, 0, 0.530901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328691,-99) , 
3, 0.999471, 1, 0, 0.520407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0797515,-99) , 
3, 0.973943, 0, 0, 0.335972,-99) , 
6, 0.968316, 0, 0, 0.416341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133701,-99) , 
7, 72.3071, 1, 0, 0.376871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 9.78376, 0, 0, 0.348471,-99) , 
4, 1.85009, 1, 0, 0.502118,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.012255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540276,-99) , 
6, 0.0499247, 1, 0, 0.553234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372366,-99) , 
9, 397.377, 1, 0, 0.541754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296125,-99) , 
7, 154.939, 1, 0, 0.531425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318245,-99) , 
7, 8.30943, 0, 0, 0.520675,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315872,-99) , 
10, 0.458211, 1, 0, 0.509664,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1316,-99) , 
11, -0.193655, 1, 0, 0.378325,-99) , 
11, 0.670188, 0, 0, 0.440011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143873,-99) , 
5, 2.53182, 1, 0, 0.427949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138908,-99) , 
7, 80.2493, 1, 0, 0.407338,-99) , 
5, 1.84573, 1, 0, 0.48721,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0107414);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707505,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564323,-99) , 
0, 15.5, 0, 0, 0.62624,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318282,-99) , 
8, 1.24923, 0, 0, 0.435729,-99) , 
1, 9.5, 0, 0, 0.572068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282139,-99) , 
5, 1.71541, 1, 0, 0.402239,-99) , 
7, 28.6339, 1, 0, 0.532114,-99) , 
0, 36.5, 0, 0, 0.565145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416978,-99) , 
5, 1.8705, 1, 0, 0.496464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335753,-99) , 
9, 403.355, 1, 0, 0.485623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281865,-99) , 
2, 7.5, 0, 0, 0.473853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233442,-99) , 
3, 0.999471, 1, 0, 0.461755,-99) , 
13, 1.5, 0, 0, 0.491569,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.00985093);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520242,-99) , 
10, 0.448496, 1, 0, 0.577996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44414,-99) , 
7, 12.6544, 0, 0, 0.559115,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462236,-99) , 
11, 5.96558, 0, 0, 0.488761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.04318,-99) , 
7, 163.715, 1, 0, 0.478287,-99) , 
5, 1.60165, 1, 0, 0.518856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269996,-99) , 
2, 7.5, 0, 0, 0.508447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102517,-99) , 
5, 2.49859, 1, 0, 0.502816,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0103508);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590647,-99) , 
5, 1.06156, 1, 0, 0.639064,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154304,-99) , 
7, 63.3093, 1, 0, 0.513764,-99) , 
2, 33.5, 0, 0, 0.531081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289898,-99) , 
12, 2363.43, 1, 0, 0.368605,-99) , 
9, 407.505, 1, 0, 0.520162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273244,-99) , 
7, 142.969, 1, 0, 0.509862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257717,-99) , 
5, 2.30047, 1, 0, 0.498202,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0138101);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598698,-99) , 
1, 34.5, 1, 0, 0.663426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299853,-99) , 
1, 15.5, 0, 0, 0.618741,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239339,-99) , 
7, 7.25003, 0, 0, 0.510445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192419,-99) , 
7, 45.737, 1, 0, 0.492352,-99) , 
2, 28.5, 0, 0, 0.520058,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199678,-99) , 
7, 31.8881, 1, 0, 0.342825,-99) , 
3, 0.99932, 1, 0, 0.506476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271671,-99) , 
5, 2.30073, 1, 0, 0.495851,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0113998);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505064,-99) , 
1, 10.5, 0, 0, 0.640605,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507397,-99) , 
3, 0.986906, 1, 0, 0.555131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373177,-99) , 
11, 1.33416, 0, 0, 0.461203,-99) , 
11, -0.392582, 1, 0, 0.51131,-99) , 
11, 5.95925, 0, 0, 0.526289,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353704,-99) , 
10, 0.265051, 1, 0, 0.486537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253736,-99) , 
4, 1.77011, 1, 0, 0.454176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231608,-99) , 
0, 13.5, 1, 0, 0.418071,-99) , 
2, 10.5, 0, 0, 0.499646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195727,-99) , 
3, 0.999722, 1, 0, 0.492224,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.015557);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368036,-99) , 
7, 46.5705, 1, 0, 0.59736,-99) , 
0, 56.5, 0, 0, 0.617646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447187,-99) , 
1, 8.5, 0, 0, 0.597459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297245,-99) , 
7, 9.99428, 0, 0, 0.577351,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517377,-99) , 
10, 0.19054, 1, 0, 0.561734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375804,-99) , 
9, 351.58, 1, 0, 0.543455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405305,-99) , 
8, 0.440067, 0, 0, 0.522447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0779888,-99) , 
4, 2.13202, 1, 0, 0.380968,-99) , 
1, 18.5, 0, 0, 0.420136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127303,-99) , 
0, 46.5, 1, 0, 0.37897,-99) , 
5, 1.74528, 1, 0, 0.470949,-99) , 
13, 1.5, 0, 0, 0.503443,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0155993);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528618,-99) , 
10, 0.12791, 0, 0, 0.654305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531987,-99) , 
10, 0.521307, 1, 0, 0.616238,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490932,-99) , 
0, 17.5, 0, 0, 0.577629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323022,-99) , 
0, 78.5, 1, 0, 0.478321,-99) , 
13, 1.5, 0, 0, 0.507296,-99) , 
12, 6894.18, 0, 0, 0.531338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30917,-99) , 
7, 7.70082, 0, 0, 0.521921,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496309,-99) , 
0, 13.5, 0, 0, 0.608289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398618,-99) , 
8, 1.81063, 1, 0, 0.559984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355005,-99) , 
3, 0.997854, 1, 0, 0.529756,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38735,-99) , 
1, 12.5, 0, 0, 0.482428,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237846,-99) , 
11, 6.1951, 0, 0, 0.292147,-99) , 
11, -1.15208, 1, 0, 0.363924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
3, 0.999335, 1, 0, 0.340542,-99) , 
13, 1.5, 0, 0, 0.4124,-99) , 
5, 1.84611, 1, 0, 0.489848,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.015705);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506922,-99) , 
9, 177.252, 1, 0, 0.585152,-99) , 
6, 0.117475, 1, 0, 0.605493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579393,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434398,-99) , 
8, 0.734224, 0, 0, 0.542455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310547,-99) , 
7, 26.2177, 1, 0, 0.502212,-99) , 
2, 15.5, 0, 0, 0.556905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373122,-99) , 
9, 29.5054, 0, 0, 0.542191,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450917,-99) , 
1, 9.5, 0, 0, 0.592488,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267642,-99) , 
12, 2233.71, 1, 0, 0.427022,-99) , 
7, 14.2841, 0, 0, 0.54195,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128415,-99) , 
2, 7.5, 0, 0, 0.41422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0164485,-99) , 
7, 62.2352, 1, 0, 0.397037,-99) , 
8, 0.717548, 1, 0, 0.468281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110052,-99) , 
7, 123.702, 1, 0, 0.452789,-99) , 
5, 1.64151, 1, 0, 0.500107,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0168782);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.798697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648588,-99) , 
8, 0.946022, 0, 0, 0.735518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531396,-99) , 
2, 13.5, 0, 0, 0.664981,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543388,-99) , 
0, 23.5, 0, 0, 0.574163,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352416,-99) , 
12, 3088.85, 0, 0, 0.414689,-99) , 
3, 0.93951, 0, 0, 0.542412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173259,-99) , 
1, 17.5, 0, 0, 0.407031,-99) , 
7, 59.5242, 1, 0, 0.517592,-99) , 
6, 0.186564, 1, 0, 0.545176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370474,-99) , 
9, 57.3593, 0, 0, 0.540335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290864,-99) , 
9, 93.5153, 1, 0, 0.400559,-99) , 
8, 0.705705, 1, 0, 0.470198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.065609,-99) , 
7, 7.3911, 0, 0, 0.456914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152093,-99) , 
7, 104.239, 1, 0, 0.439504,-99) , 
5, 1.711, 1, 0, 0.50128,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0180921);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789166,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476658,-99) , 
9, 93.9969, 1, 0, 0.578371,-99) , 
2, 38.5, 1, 0, 0.654032,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448787,-99) , 
7, 10.1526, 0, 0, 0.579491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302498,-99) , 
8, 1.33048, 0, 0, 0.437112,-99) , 
9, 55.9609, 0, 0, 0.546838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245343,-99) , 
7, 42.465, 1, 0, 0.514219,-99) , 
2, 28.5, 0, 0, 0.545141,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3342,-99) , 
7, 11.1147, 0, 0, 0.549878,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146069,-99) , 
8, 2.66967, 1, 0, 0.450924,-99) , 
9, 67.0054, 1, 0, 0.4923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193651,-99) , 
2, 7.5, 0, 0, 0.477991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 132.917, 1, 0, 0.462187,-99) , 
4, 1.34604, 1, 0, 0.509383,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0105181);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726633,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285279,-99) , 
7, 65.9594, 1, 0, 0.506787,-99) , 
2, 54.5, 0, 0, 0.517386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337133,-99) , 
7, 137.147, 1, 0, 0.508804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241483,-99) , 
3, 0.999669, 1, 0, 0.499615,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422479,-99) , 
4, 1.38016, 0, 0, 0.468772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325202,-99) , 
4, 1.71407, 1, 0, 0.449607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237742,-99) , 
0, 13.5, 1, 0, 0.414709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0883745,-99) , 
5, 2.13857, 1, 0, 0.385949,-99) , 
2, 9.5, 0, 0, 0.48074,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.014621);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.823618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601637,-99) , 
11, -4.42157, 1, 0, 0.630571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446582,-99) , 
9, 114.001, 0, 0, 0.502457,-99) , 
6, 0.692958, 1, 0, 0.59596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430077,-99) , 
9, 345.323, 1, 0, 0.578588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413582,-99) , 
8, 0.376173, 0, 0, 0.553911,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694601,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39496,-99) , 
8, 0.61003, 1, 0, 0.515465,-99) , 
9, 48.1754, 1, 0, 0.567564,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17934,-99) , 
7, 38.7355, 1, 0, 0.442716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0657564,-99) , 
5, 2.43997, 1, 0, 0.430145,-99) , 
2, 21.5, 0, 0, 0.46435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117113,-99) , 
7, 137.147, 1, 0, 0.451821,-99) , 
4, 1.09069, 1, 0, 0.495603,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0141069);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.812902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549402,-99) , 
4, 1.32753, 1, 0, 0.717873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33425,-99) , 
8, 1.22842, 1, 0, 0.484822,-99) , 
9, 77.219, 1, 0, 0.587371,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219564,-99) , 
7, 6.99944, 0, 0, 0.498508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202956,-99) , 
0, 40.5, 1, 0, 0.490202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124353,-99) , 
7, 63.7849, 1, 0, 0.478809,-99) , 
2, 31.5, 0, 0, 0.498426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16749,-99) , 
9, 60.9186, 1, 0, 0.310704,-99) , 
4, 1.94489, 1, 0, 0.48457,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0201911);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.797236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637557,-99) , 
9, 141.557, 1, 0, 0.73328,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358885,-99) , 
7, 27.2224, 1, 0, 0.564055,-99) , 
2, 18.5, 0, 0, 0.595614,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403241,-99) , 
9, 116.459, 1, 0, 0.549526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245691,-99) , 
2, 29.5, 0, 0, 0.460236,-99) , 
7, 40.0966, 1, 0, 0.559053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344457,-99) , 
9, 32.319, 0, 0, 0.538579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0674437,-99) , 
0, 26.5, 1, 0, 0.429042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0752391,-99) , 
7, 36.7576, 1, 0, 0.405724,-99) , 
2, 24.5, 0, 0, 0.437702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 117.673, 1, 0, 0.420565,-99) , 
5, 1.84531, 1, 0, 0.503766,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0175732);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540036,-99) , 
2, 8.5, 1, 0, 0.572379,-99) , 
2, 16.5, 0, 0, 0.598461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434918,-99) , 
9, 121.907, 1, 0, 0.566271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352629,-99) , 
2, 24.5, 0, 0, 0.491427,-99) , 
7, 30.8664, 1, 0, 0.560812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511209,-99) , 
5, 1.441, 1, 0, 0.567153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419758,-99) , 
9, 253.936, 1, 0, 0.541245,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527105,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110539,-99) , 
5, 1.90276, 1, 0, 0.302229,-99) , 
13, 1.5, 0, 0, 0.362381,-99) , 
11, -1.23102, 1, 0, 0.47685,-99) , 
11, 0.559675, 0, 0, 0.514487,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490408,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530522,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0865586,-99) , 
4, 1.89596, 0, 0, 0.316655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0219674,-99) , 
1, 9.5, 0, 0, 0.247679,-99) , 
11, 7.23112, 0, 0, 0.296687,-99) , 
13, 1.5, 0, 0, 0.365351,-99) , 
4, 1.77282, 1, 0, 0.493625,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0137453);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662855,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522283,-99) , 
10, 0.137719, 1, 0, 0.555339,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330258,-99) , 
7, 25.7168, 1, 0, 0.439363,-99) , 
8, 2.54195, 1, 0, 0.534715,-99) , 
12, 11015.5, 0, 0, 0.547627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34913,-99) , 
9, 29.4774, 0, 0, 0.530697,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552404,-99) , 
13, 1.5, 0, 0, 0.60737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380998,-99) , 
2, 27.5, 0, 0, 0.482106,-99) , 
10, 0.377551, 1, 0, 0.561459,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160945,-99) , 
5, 2.15463, 1, 0, 0.401193,-99) , 
2, 10.5, 0, 0, 0.518213,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354815,-99) , 
7, 13.3229, 0, 0, 0.466113,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184975,-99) , 
4, 1.6702, 1, 0, 0.33305,-99) , 
9, 108.239, 1, 0, 0.410188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.28744, 1, 0, 0.391402,-99) , 
8, 0.72389, 1, 0, 0.443915,-99) , 
4, 1.17684, 1, 0, 0.487475,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0179816);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592463,-99) , 
9, 165.843, 0, 0, 0.63032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471852,-99) , 
10, 0.0412525, 0, 0, 0.601555,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501401,-99) , 
6, 0.30817, 1, 0, 0.555243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383977,-99) , 
8, 0.904013, 0, 0, 0.499434,-99) , 
9, 87.9592, 0, 0, 0.560157,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510476,-99) , 
6, 0.280957, 1, 0, 0.553918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324295,-99) , 
7, 159.779, 1, 0, 0.526721,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163673,-99) , 
7, 44.2781, 1, 0, 0.306992,-99) , 
2, 21.5, 0, 0, 0.469489,-99) , 
7, 29.5022, 1, 0, 0.526151,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382583,-99) , 
9, 87.1141, 0, 0, 0.522823,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33748,-99) , 
2, 10.5, 0, 0, 0.518625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27599,-99) , 
3, 0.996015, 1, 0, 0.464251,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343294,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106364,-99) , 
8, 0.475243, 1, 0, 0.1769,-99) , 
10, 0.0515387, 1, 0, 0.218288,-99) , 
9, 79.1463, 1, 0, 0.341908,-99) , 
8, 0.186396, 1, 0, 0.393513,-99) , 
5, 1.92213, 1, 0, 0.496372,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.012979);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286187,-99) , 
7, 188.677, 1, 0, 0.577293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296262,-99) , 
1, 10.5, 0, 0, 0.551485,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446349,-99) , 
7, 13.428, 0, 0, 0.494828,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106034,-99) , 
4, 1.34249, 1, 0, 0.223365,-99) , 
7, 28.9852, 1, 0, 0.467346,-99) , 
2, 16.5, 0, 0, 0.502111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216757,-99) , 
5, 2.39905, 1, 0, 0.495168,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0507041,-99) , 
4, 1.44743, 1, 0, 0.271063,-99) , 
3, 0.99945, 1, 0, 0.483244,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0157896);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74879,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512273,-99) , 
9, 171.555, 1, 0, 0.607374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378037,-99) , 
8, 1.00656, 0, 0, 0.484657,-99) , 
6, 0.411198, 1, 0, 0.544892,-99) , 
3, 0.901413, 1, 0, 0.571807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474084,-99) , 
7, 37.1298, 1, 0, 0.55753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397221,-99) , 
7, 13.2674, 0, 0, 0.526505,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422486,-99) , 
10, 0.113141, 1, 0, 0.479194,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193654,-99) , 
6, 0.2142, 0, 0, 0.331599,-99) , 
8, 1.80489, 1, 0, 0.434533,-99) , 
5, 1.53047, 1, 0, 0.484299,-99) , 
13, 1.5, 0, 0, 0.509447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604703,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307656,-99) , 
9, 69.5875, 1, 0, 0.40053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11261,-99) , 
2, 9.5, 0, 0, 0.352957,-99) , 
12, -4914.34, 1, 0, 0.396169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 98.9499, 1, 0, 0.367005,-99) , 
4, 1.7182, 1, 0, 0.486825,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0133402);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619858,-99) , 
5, 1.42464, 1, 0, 0.697607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562234,-99) , 
5, 0.992007, 0, 0, 0.638298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487717,-99) , 
1, 11.5, 0, 0, 0.596782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592225,-99) , 
7, 24.1161, 0, 0, 0.679162,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25931,-99) , 
3, 0.999452, 1, 0, 0.493503,-99) , 
8, 1.57776, 0, 0, 0.514069,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401703,-99) , 
3, 0.982878, 1, 0, 0.459379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169885,-99) , 
5, 1.90253, 1, 0, 0.402093,-99) , 
8, 1.83321, 1, 0, 0.48093,-99) , 
4, 0.69478, 1, 0, 0.507395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.091234,-99) , 
3, 0.993668, 1, 0, 0.300067,-99) , 
9, 471.222, 1, 0, 0.496635,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0120465);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719471,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50477,-99) , 
4, 1.27005, 1, 0, 0.602591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46383,-99) , 
3, 0.975475, 0, 0, 0.566271,-99) , 
3, 0.919253, 1, 0, 0.589672,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500045,-99) , 
12, -5911.96, 1, 0, 0.511751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318433,-99) , 
2, 7.5, 0, 0, 0.50006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314266,-99) , 
3, 0.999423, 1, 0, 0.489275,-99) , 
13, 1.5, 0, 0, 0.517651,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393884,-99) , 
7, 18.2962, 1, 0, 0.450965,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121298,-99) , 
4, 1.88837, 1, 0, 0.23286,-99) , 
10, 0.240342, 0, 0, 0.358666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.10635,-99) , 
7, 101.247, 1, 0, 0.337874,-99) , 
4, 1.77135, 1, 0, 0.492565,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0133022);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592878,-99) , 
6, 0.464517, 1, 0, 0.654549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531593,-99) , 
7, 61.5289, 1, 0, 0.631407,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0695107,-99) , 
5, 2.15835, 1, 0, 0.439586,-99) , 
0, 12.5, 0, 0, 0.583579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489505,-99) , 
3, 0.984756, 1, 0, 0.52403,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347474,-99) , 
9, 155.835, 0, 0, 0.406019,-99) , 
3, 0.922609, 0, 0, 0.501934,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528684,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108308,-99) , 
2, 11.5, 0, 0, 0.279732,-99) , 
8, 0.216746, 1, 0, 0.367447,-99) , 
5, 1.98571, 1, 0, 0.478599,-99) , 
13, 1.5, 0, 0, 0.510107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209137,-99) , 
3, 0.999711, 1, 0, 0.50218,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0115126);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635264,-99) , 
8, 1.27154, 1, 0, 0.708318,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507435,-99) , 
6, 0.764655, 1, 0, 0.622487,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698583,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489396,-99) , 
2, 32.5, 0, 0, 0.52509,-99) , 
3, 0.914632, 1, 0, 0.557531,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322162,-99) , 
9, 351.91, 1, 0, 0.496727,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260905,-99) , 
10, 0.403224, 1, 0, 0.380787,-99) , 
5, 1.75044, 1, 0, 0.45852,-99) , 
13, 1.5, 0, 0, 0.487072,-99) , 
12, -4490.15, 1, 0, 0.503567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223241,-99) , 
5, 2.32273, 1, 0, 0.492763,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0123007);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570329,-99) , 
7, 40.4936, 1, 0, 0.654027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439233,-99) , 
8, 2.51294, 1, 0, 0.624518,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359395,-99) , 
12, 4290.86, 0, 0, 0.432,-99) , 
3, 0.981693, 1, 0, 0.487712,-99) , 
0, 13.5, 0, 0, 0.581237,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2869,-99) , 
3, 0.999385, 1, 0, 0.506568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144557,-99) , 
3, 0.937409, 0, 0, 0.33123,-99) , 
2, 8.5, 0, 0, 0.487947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259382,-99) , 
5, 2.28777, 1, 0, 0.478005,-99) , 
13, 1.5, 0, 0, 0.509258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194515,-99) , 
7, 177.233, 1, 0, 0.500067,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0130528);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627906,-99) , 
12, -1574.53, 1, 0, 0.658364,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433091,-99) , 
8, 1.37952, 1, 0, 0.515473,-99) , 
2, 10.5, 0, 0, 0.613611,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409858,-99) , 
9, 109.095, 1, 0, 0.494861,-99) , 
7, 42.3839, 1, 0, 0.583981,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485508,-99) , 
2, 23.5, 0, 0, 0.510422,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.027382,-99) , 
1, 22.5, 0, 0, 0.325955,-99) , 
7, 92.5484, 1, 0, 0.494657,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262662,-99) , 
3, 0.788236, 0, 0, 0.481945,-99) , 
13, 1.5, 0, 0, 0.512716,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180994,-99) , 
8, 0.175098, 1, 0, 0.292645,-99) , 
5, 2.2572, 1, 0, 0.500314,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0171163);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481657,-99) , 
8, 0.443719, 0, 0, 0.606005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457766,-99) , 
4, 1.48132, 1, 0, 0.586984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3951,-99) , 
12, 3885.36, 0, 0, 0.467493,-99) , 
3, 0.92751, 0, 0, 0.562008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584588,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246521,-99) , 
11, 5.37294, 0, 0, 0.371501,-99) , 
11, -5.71622, 1, 0, 0.433768,-99) , 
3, 0.997972, 1, 0, 0.538198,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560711,-99) , 
12, 3920.37, 0, 0, 0.668599,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256415,-99) , 
5, 2.0609, 1, 0, 0.409653,-99) , 
7, 30.2973, 0, 0, 0.554526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268298,-99) , 
5, 2.32311, 1, 0, 0.452981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0660193,-99) , 
7, 34.5907, 1, 0, 0.415069,-99) , 
1, 15.5, 0, 0, 0.460753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0787728,-99) , 
1, 51.5, 1, 0, 0.445469,-99) , 
5, 1.7577, 1, 0, 0.504019,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0150872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.865852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683732,-99) , 
9, 101.216, 1, 0, 0.779329,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48991,-99) , 
10, 0.261409, 1, 0, 0.614892,-99) , 
2, 19.5, 0, 0, 0.676939,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614263,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376563,-99) , 
9, 129.536, 1, 0, 0.497876,-99) , 
10, 0.12711, 1, 0, 0.529129,-99) , 
6, 0.662448, 1, 0, 0.603436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408226,-99) , 
8, 0.422421, 0, 0, 0.57803,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516154,-99) , 
1, 17.5, 0, 0, 0.560531,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154966,-99) , 
5, 2.3005, 1, 0, 0.452791,-99) , 
8, 0.693453, 1, 0, 0.501482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104949,-99) , 
7, 7.01252, 0, 0, 0.492447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100567,-99) , 
7, 142.708, 1, 0, 0.48173,-99) , 
5, 1.51928, 1, 0, 0.524226,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0149971);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555871,-99) , 
7, 36.4539, 0, 0, 0.640779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308969,-99) , 
7, 40.3247, 1, 0, 0.519566,-99) , 
2, 21.5, 0, 0, 0.545356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269337,-99) , 
1, 40.5, 1, 0, 0.532245,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476264,-99) , 
9, 74.3337, 1, 0, 0.54537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147669,-99) , 
1, 14.5, 0, 0, 0.498057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0702997,-99) , 
2, 32.5, 0, 0, 0.414084,-99) , 
7, 63.9127, 1, 0, 0.511402,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437502,-99) , 
4, 1.22775, 0, 0, 0.513062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34816,-99) , 
9, 75.4711, 0, 0, 0.457294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253316,-99) , 
0, 13.5, 1, 0, 0.421584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154169,-99) , 
5, 2.28479, 1, 0, 0.409729,-99) , 
7, 11.0142, 0, 0, 0.494925,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.00921764);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466101,-99) , 
7, 47.2225, 1, 0, 0.542025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166617,-99) , 
0, 13.5, 1, 0, 0.430919,-99) , 
2, 9.5, 0, 0, 0.522767,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368051,-99) , 
8, 0.874319, 1, 0, 0.474512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256553,-99) , 
3, 0.993752, 1, 0, 0.390222,-99) , 
9, 348.679, 1, 0, 0.508828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29844,-99) , 
3, 0.758394, 0, 0, 0.499653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160961,-99) , 
7, 235.85, 1, 0, 0.493723,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0131255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372969,-99) , 
7, 37.7517, 1, 0, 0.519092,-99) , 
2, 30.5, 0, 0, 0.533485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24754,-99) , 
1, 40.5, 1, 0, 0.523054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327164,-99) , 
2, 56.5, 0, 0, 0.412742,-99) , 
9, 77.2124, 1, 0, 0.511119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0214398,-99) , 
1, 17.5, 0, 0, 0.394619,-99) , 
7, 71.4717, 1, 0, 0.507901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309216,-99) , 
5, 2.28843, 1, 0, 0.497943,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0121239);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349746,-99) , 
1, 37.5, 1, 0, 0.545122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270834,-99) , 
5, 2.3661, 1, 0, 0.537953,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325628,-99) , 
4, 1.61141, 0, 0, 0.405902,-99) , 
9, 31.4416, 0, 0, 0.524793,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621565,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167502,-99) , 
4, 1.13496, 1, 0, 0.342591,-99) , 
9, 92.1655, 1, 0, 0.475452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.069167,-99) , 
1, 17.5, 0, 0, 0.393746,-99) , 
7, 65.4299, 1, 0, 0.507478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196755,-99) , 
2, 6.5, 0, 0, 0.5,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0127791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.825973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662063,-99) , 
0, 19.5, 0, 0, 0.732143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550157,-99) , 
10, 0.433819, 1, 0, 0.658054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392998,-99) , 
2, 15.5, 0, 0, 0.484079,-99) , 
10, 0.118374, 1, 0, 0.517934,-99) , 
6, 0.348836, 1, 0, 0.562444,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267257,-99) , 
5, 2.3661, 1, 0, 0.490458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26865,-99) , 
1, 51.5, 1, 0, 0.479262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0626977,-99) , 
7, 170.209, 1, 0, 0.470482,-99) , 
5, 1.52533, 1, 0, 0.51087,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333717,-99) , 
5, 1.60681, 0, 0, 0.429413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217935,-99) , 
4, 1.81527, 1, 0, 0.400678,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161482,-99) , 
0, 13.5, 1, 0, 0.35973,-99) , 
7, 10.2901, 0, 0, 0.49139,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0116381);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532579,-99) , 
2, 21.5, 0, 0, 0.566901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358565,-99) , 
9, 470.802, 1, 0, 0.556808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389409,-99) , 
1, 49.5, 1, 0, 0.544537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321058,-99) , 
7, 7.8872, 0, 0, 0.489743,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224172,-99) , 
12, 3100.37, 0, 0, 0.300868,-99) , 
10, 0.292313, 1, 0, 0.452726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.126969,-99) , 
5, 2.19271, 1, 0, 0.427707,-99) , 
2, 11.5, 0, 0, 0.506784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191871,-99) , 
7, 174.536, 1, 0, 0.498497,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0118396);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631027,-99) , 
6, 0.667622, 1, 0, 0.695568,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53669,-99) , 
9, 103.269, 1, 0, 0.587178,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435363,-99) , 
11, 3.16082, 0, 0, 0.485986,-99) , 
6, 0.676335, 1, 0, 0.539689,-99) , 
12, 8977.8, 0, 0, 0.562818,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455086,-99) , 
8, 0.115663, 1, 0, 0.473458,-99) , 
9, 25.5245, 1, 0, 0.487552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.055489,-99) , 
0, 112.5, 1, 0, 0.478609,-99) , 
5, 1.60121, 1, 0, 0.524985,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169864,-99) , 
7, 21.3388, 0, 0, 0.320229,-99) , 
5, 2.15384, 1, 0, 0.508135,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0155657);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.839106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674207,-99) , 
12, 3287.04, 0, 0, 0.74716,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347017,-99) , 
1, 10.5, 0, 0, 0.532119,-99) , 
5, 1.49839, 1, 0, 0.600233,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50292,-99) , 
2, 32.5, 0, 0, 0.513512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322367,-99) , 
1, 33.5, 1, 0, 0.500772,-99) , 
6, 0.235589, 1, 0, 0.525905,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174902,-99) , 
10, 0.0375256, 1, 0, 0.278205,-99) , 
5, 1.77278, 1, 0, 0.386513,-99) , 
7, 10.4573, 0, 0, 0.505312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301907,-99) , 
2, 58.5, 0, 0, 0.475197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0699762,-99) , 
1, 21.5, 0, 0, 0.357786,-99) , 
7, 74.419, 1, 0, 0.490061,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0141229);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515852,-99) , 
9, 218.177, 1, 0, 0.662708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445293,-99) , 
3, 0.998052, 1, 0, 0.626824,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480891,-99) , 
9, 85.7484, 0, 0, 0.528503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249003,-99) , 
0, 28.5, 1, 0, 0.514066,-99) , 
2, 23.5, 0, 0, 0.537807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363473,-99) , 
1, 69.5, 1, 0, 0.479513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0385833,-99) , 
1, 21.5, 0, 0, 0.364433,-99) , 
7, 89.536, 1, 0, 0.521026,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0662185,-99) , 
0, 11.5, 1, 0, 0.317392,-99) , 
7, 8.09642, 0, 0, 0.509708,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0159376);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46626,-99) , 
1, 12.5, 0, 0, 0.62506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419875,-99) , 
1, 33.5, 1, 0, 0.597261,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477292,-99) , 
12, 438.825, 1, 0, 0.506216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285504,-99) , 
7, 36.2168, 1, 0, 0.495059,-99) , 
2, 18.5, 0, 0, 0.522003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190839,-99) , 
5, 2.36601, 1, 0, 0.512288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324403,-99) , 
1, 68.5, 1, 0, 0.538257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294994,-99) , 
0, 61.5, 0, 0, 0.461345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0614346,-99) , 
1, 17.5, 0, 0, 0.358201,-99) , 
7, 65.0259, 1, 0, 0.490722,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0197005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485335,-99) , 
11, -1.11917, 0, 0, 0.580473,-99) , 
7, 21.5477, 0, 0, 0.620087,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536136,-99) , 
1, 34.5, 1, 0, 0.606468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374683,-99) , 
0, 26.5, 0, 0, 0.515217,-99) , 
7, 27.3414, 1, 0, 0.576386,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31124,-99) , 
7, 13.2102, 0, 0, 0.499888,-99) , 
9, 302.445, 0, 0, 0.546619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411952,-99) , 
7, 31.5853, 1, 0, 0.497455,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23701,-99) , 
11, -1.2837, 1, 0, 0.31176,-99) , 
5, 1.70532, 1, 0, 0.451872,-99) , 
8, 0.633048, 1, 0, 0.48111,-99) , 
13, 1.5, 0, 0, 0.509755,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619018,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0508649,-99) , 
6, 0.99651, 0, 0, 0.129044,-99) , 
10, 0.0411591, 1, 0, 0.175554,-99) , 
9, 29.4102, 1, 0, 0.291093,-99) , 
8, 0.160406, 1, 0, 0.386039,-99) , 
4, 1.82293, 1, 0, 0.494464,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0151912);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587184,-99) , 
12, 3677.35, 1, 0, 0.672122,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591794,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453426,-99) , 
4, 1.38214, 1, 0, 0.537942,-99) , 
8, 1.35332, 1, 0, 0.614758,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344622,-99) , 
7, 18.4111, 0, 0, 0.562103,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0588763,-99) , 
7, 59.2902, 1, 0, 0.472742,-99) , 
1, 14.5, 0, 0, 0.518077,-99) , 
10, 0.0840723, 1, 0, 0.535762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336364,-99) , 
9, 403.355, 1, 0, 0.523543,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482266,-99) , 
10, 0.427393, 1, 0, 0.568671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326879,-99) , 
7, 13.7517, 0, 0, 0.510989,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107129,-99) , 
9, 45.6528, 1, 0, 0.229138,-99) , 
8, 0.399973, 1, 0, 0.381003,-99) , 
5, 2.06997, 1, 0, 0.503712,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0171099);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.861552,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422799,-99) , 
3, 0.994747, 1, 0, 0.55622,-99) , 
9, 74.6213, 1, 0, 0.645816,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439722,-99) , 
9, 67.8385, 0, 0, 0.564884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295718,-99) , 
7, 39.2113, 1, 0, 0.533162,-99) , 
2, 28.5, 0, 0, 0.557337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382114,-99) , 
9, 32.2254, 0, 0, 0.541725,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443414,-99) , 
10, 0.236604, 0, 0, 0.495894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255848,-99) , 
3, 0.850612, 0, 0, 0.479941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135241,-99) , 
6, 0.234158, 0, 0, 0.465119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0300145,-99) , 
1, 18.5, 0, 0, 0.247198,-99) , 
7, 54.772, 1, 0, 0.439232,-99) , 
4, 1.30737, 1, 0, 0.498073,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.01128);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698647,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375247,-99) , 
9, 29.558, 0, 0, 0.528473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370866,-99) , 
8, 2.89761, 1, 0, 0.51634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245274,-99) , 
3, 0.749393, 0, 0, 0.50708,-99) , 
4, 1.65202, 0, 0, 0.518697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609842,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324331,-99) , 
10, 0.293202, 0, 0, 0.4304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158643,-99) , 
7, 54.1907, 1, 0, 0.38837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110912,-99) , 
2, 9.5, 0, 0, 0.350231,-99) , 
6, 1.00586, 0, 0, 0.39023,-99) , 
4, 1.71598, 1, 0, 0.497199,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0135621);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.775143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53314,-99) , 
12, 14596.2, 1, 0, 0.591732,-99) , 
6, 0.431992, 1, 0, 0.65023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423111,-99) , 
9, 256.024, 1, 0, 0.609186,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336658,-99) , 
2, 7.5, 0, 0, 0.528255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300142,-99) , 
3, 0.999462, 1, 0, 0.517526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352309,-99) , 
3, 0.980204, 1, 0, 0.464219,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18916,-99) , 
13, 1.5, 0, 0, 0.262228,-99) , 
12, 3445.13, 1, 0, 0.400114,-99) , 
5, 1.90854, 1, 0, 0.491461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287981,-99) , 
2, 15.5, 0, 0, 0.408641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102349,-99) , 
8, 0.482954, 0, 0, 0.326833,-99) , 
9, 31.4416, 0, 0, 0.474998,-99) , 
12, 10204.8, 0, 0, 0.493152,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0213585);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.794264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610568,-99) , 
1, 14.5, 0, 0, 0.71691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490688,-99) , 
13, 0.5, 0, 0, 0.633886,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.779854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550301,-99) , 
13, 1.5, 0, 0, 0.605224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353252,-99) , 
0, 16.5, 1, 0, 0.501366,-99) , 
2, 15.5, 0, 0, 0.534589,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442414,-99) , 
9, 67.968, 1, 0, 0.539287,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166483,-99) , 
7, 57.5896, 1, 0, 0.284745,-99) , 
2, 34.5, 0, 0, 0.43219,-99) , 
7, 40.6468, 1, 0, 0.506968,-99) , 
6, 0.187409, 1, 0, 0.533544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578228,-99) , 
6, 0.693958, 0, 0, 0.629281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2854,-99) , 
11, 0.609568, 0, 0, 0.440527,-99) , 
2, 12.5, 0, 0, 0.549331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211747,-99) , 
0, 52.5, 1, 0, 0.522721,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309557,-99) , 
10, 0.356359, 1, 0, 0.415685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0649417,-99) , 
5, 2.29745, 1, 0, 0.378211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15725,-99) , 
9, 120.545, 1, 0, 0.303794,-99) , 
8, 0.608227, 1, 0, 0.421933,-99) , 
5, 1.84717, 1, 0, 0.501737,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0140376);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458661,-99) , 
3, 0.943922, 0, 0, 0.550448,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232584,-99) , 
3, 0.99765, 1, 0, 0.423826,-99) , 
7, 65.72, 1, 0, 0.533235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40137,-99) , 
12, 3312.43, 1, 0, 0.462187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292923,-99) , 
10, 0.531729, 0, 0, 0.421302,-99) , 
9, 40.5976, 0, 0, 0.513545,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470951,-99) , 
4, 2.09542, 1, 0, 0.582606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383718,-99) , 
3, 0.979851, 0, 0, 0.527755,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305167,-99) , 
6, 0.988493, 0, 0, 0.392635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0819288,-99) , 
9, 96.9856, 1, 0, 0.29495,-99) , 
8, 0.496006, 1, 0, 0.400048,-99) , 
4, 1.72361, 1, 0, 0.494089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0605931,-99) , 
4, 1.34574, 1, 0, 0.259025,-99) , 
12, 1406.22, 1, 0, 0.334152,-99) , 
9, 362.514, 1, 0, 0.478717,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0122815);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536041,-99) , 
11, -0.914042, 1, 0, 0.565749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427102,-99) , 
9, 396.73, 1, 0, 0.555098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366548,-99) , 
9, 29.4774, 0, 0, 0.540219,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454117,-99) , 
4, 1.66823, 0, 0, 0.502046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321417,-99) , 
7, 52.3368, 1, 0, 0.477043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222549,-99) , 
3, 0.879759, 0, 0, 0.455761,-99) , 
4, 1.31236, 1, 0, 0.508252,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3233,-99) , 
3, 0.98016, 1, 0, 0.467698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118445,-99) , 
8, 0.402649, 1, 0, 0.312933,-99) , 
5, 2.13275, 1, 0, 0.490088,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0168752);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613674,-99) , 
8, 1.18313, 0, 0, 0.680614,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.834816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603639,-99) , 
7, 28.7218, 1, 0, 0.6862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421969,-99) , 
3, 0.996982, 1, 0, 0.613933,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431813,-99) , 
2, 32.5, 0, 0, 0.482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284551,-99) , 
3, 0.99531, 1, 0, 0.456967,-99) , 
11, 1.67437, 0, 0, 0.511824,-99) , 
11, -3.11813, 1, 0, 0.544037,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521989,-99) , 
8, 1.21977, 0, 0, 0.609588,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392662,-99) , 
10, 0.250132, 1, 0, 0.472165,-99) , 
12, 10167.8, 0, 0, 0.49176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246666,-99) , 
5, 2.28729, 1, 0, 0.480225,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0492738,-99) , 
5, 1.55748, 1, 0, 0.167559,-99) , 
7, 38.058, 1, 0, 0.450462,-99) , 
1, 15.5, 0, 0, 0.489583,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0136098);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.783275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622735,-99) , 
6, 0.518905, 1, 0, 0.700736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351352,-99) , 
5, 1.52127, 1, 0, 0.507638,-99) , 
10, 0.249651, 1, 0, 0.610435,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484736,-99) , 
6, 0.773121, 1, 0, 0.618328,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31802,-99) , 
3, 0.997676, 1, 0, 0.488001,-99) , 
11, -6.62101, 1, 0, 0.502142,-99) , 
11, 4.40377, 0, 0, 0.519279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248213,-99) , 
2, 6.5, 0, 0, 0.513058,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337927,-99) , 
10, 0.442545, 1, 0, 0.494367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187122,-99) , 
10, 0.218438, 0, 0, 0.418271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.097321,-99) , 
0, 13.5, 0, 0, 0.33695,-99) , 
4, 1.87399, 1, 0, 0.496662,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0128746);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57125,-99) , 
1, 37.5, 1, 0, 0.703397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428555,-99) , 
1, 16.5, 0, 0, 0.659631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396837,-99) , 
1, 51.5, 1, 0, 0.614787,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498395,-99) , 
12, 10316.2, 0, 0, 0.5156,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515705,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250236,-99) , 
8, 0.218723, 1, 0, 0.342841,-99) , 
4, 1.89827, 1, 0, 0.500468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16786,-99) , 
7, 57.6656, 1, 0, 0.487575,-99) , 
2, 30.5, 0, 0, 0.506891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252326,-99) , 
7, 142.659, 1, 0, 0.496614,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0114479);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578411,-99) , 
9, 103.602, 1, 0, 0.667936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210991,-99) , 
5, 2.1885, 1, 0, 0.514157,-99) , 
1, 14.5, 0, 0, 0.57301,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478423,-99) , 
9, 46.7287, 1, 0, 0.498978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154513,-99) , 
5, 1.74464, 1, 0, 0.314815,-99) , 
9, 31.4096, 0, 0, 0.482825,-99) , 
12, 7070.02, 0, 0, 0.502487,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193685,-99) , 
5, 1.8387, 1, 0, 0.341489,-99) , 
7, 9.1404, 0, 0, 0.488079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222976,-99) , 
7, 136.905, 1, 0, 0.477032,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.011475);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55294,-99) , 
3, 0.997454, 1, 0, 0.659748,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47203,-99) , 
11, -0.904551, 1, 0, 0.51193,-99) , 
12, -5149.55, 1, 0, 0.528147,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405415,-99) , 
2, 10.5, 0, 0, 0.554179,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0707029,-99) , 
5, 2.34379, 1, 0, 0.367207,-99) , 
8, 0.248314, 1, 0, 0.425686,-99) , 
5, 1.85015, 1, 0, 0.499033,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229657,-99) , 
9, 21.0481, 1, 0, 0.349092,-99) , 
9, 29.2374, 0, 0, 0.484574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251759,-99) , 
1, 70.5, 1, 0, 0.476732,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0098949);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372986,-99) , 
9, 447.232, 1, 0, 0.542202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400976,-99) , 
9, 29.5488, 0, 0, 0.531243,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477747,-99) , 
8, 0.0839604, 1, 0, 0.543753,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221028,-99) , 
9, 65.9955, 1, 0, 0.321798,-99) , 
8, 0.407617, 1, 0, 0.429348,-99) , 
5, 1.93409, 1, 0, 0.508534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228757,-99) , 
7, 7.12696, 0, 0, 0.501735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20856,-99) , 
1, 83.5, 1, 0, 0.494809,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00821776);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503233,-99) , 
3, 0.990596, 1, 0, 0.559791,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144051,-99) , 
5, 2.31822, 1, 0, 0.471082,-99) , 
11, -1.44162, 1, 0, 0.504742,-99) , 
12, -11072, 1, 0, 0.512168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313371,-99) , 
7, 143.608, 1, 0, 0.503683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164186,-99) , 
2, 6.5, 0, 0, 0.496878,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.00919885);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485639,-99) , 
2, 12.5, 0, 0, 0.534395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310947,-99) , 
3, 0.726514, 0, 0, 0.526993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280037,-99) , 
10, 3.1583, 1, 0, 0.520247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244714,-99) , 
1, 76.5, 1, 0, 0.513443,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353702,-99) , 
2, 21.5, 0, 0, 0.462182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281126,-99) , 
3, 0.996572, 1, 0, 0.422671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0869421,-99) , 
2, 10.5, 0, 0, 0.342162,-99) , 
5, 2.16884, 1, 0, 0.498226,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.014971);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567621,-99) , 
7, 64.675, 1, 0, 0.668632,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391889,-99) , 
7, 21.7204, 1, 0, 0.551663,-99) , 
0, 20.5, 0, 0, 0.600871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384658,-99) , 
8, 0.432196, 0, 0, 0.538398,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397126,-99) , 
0, 11.5, 1, 0, 0.441105,-99) , 
5, 1.55054, 1, 0, 0.496583,-99) , 
13, 1.5, 0, 0, 0.52965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426455,-99) , 
7, 14.9664, 0, 0, 0.493476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330271,-99) , 
7, 26.0358, 1, 0, 0.432049,-99) , 
8, 2.5282, 1, 0, 0.512287,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497622,-99) , 
3, 0.99162, 0, 0, 0.600562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184586,-99) , 
4, 1.82913, 1, 0, 0.307091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0882142,-99) , 
8, 1.92566, 1, 0, 0.253256,-99) , 
9, 37.6966, 1, 0, 0.312525,-99) , 
8, 0.242437, 1, 0, 0.403911,-99) , 
4, 1.67129, 1, 0, 0.491593,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0150142);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558035,-99) , 
8, 1.4494, 0, 0, 0.595826,-99) , 
11, 4.72667, 0, 0, 0.618826,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348652,-99) , 
4, 1.59978, 1, 0, 0.486193,-99) , 
0, 12.5, 0, 0, 0.588515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364676,-99) , 
8, 2.73921, 1, 0, 0.56476,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523632,-99) , 
6, 0.640641, 1, 0, 0.60116,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616377,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265029,-99) , 
0, 26.5, 1, 0, 0.453736,-99) , 
2, 30.5, 0, 0, 0.485117,-99) , 
11, -1.25959, 1, 0, 0.523932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426474,-99) , 
6, 0.532328, 0, 0, 0.553805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327167,-99) , 
8, 0.664336, 1, 0, 0.41033,-99) , 
9, 45.7562, 1, 0, 0.448936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158921,-99) , 
0, 45.5, 1, 0, 0.418207,-99) , 
5, 1.62507, 1, 0, 0.472793,-99) , 
13, 1.5, 0, 0, 0.499873,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0153968);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434842,-99) , 
1, 40.5, 1, 0, 0.64658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283248,-99) , 
7, 40.0509, 1, 0, 0.504119,-99) , 
2, 29.5, 0, 0, 0.52438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 20, 0, 0, 0.365566,-99) , 
7, 104.758, 1, 0, 0.513722,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27259,-99) , 
1, 14.5, 0, 0, 0.386139,-99) , 
9, 30.5807, 0, 0, 0.501921,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121588,-99) , 
8, 0.341333, 1, 0, 0.293808,-99) , 
5, 2.16834, 1, 0, 0.485295,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0136376);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533507,-99) , 
1, 19.5, 0, 0, 0.724914,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321403,-99) , 
0, 63.5, 0, 0, 0.500016,-99) , 
1, 34.5, 1, 0, 0.606968,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432076,-99) , 
2, 9.5, 0, 0, 0.530272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198993,-99) , 
7, 52.3674, 1, 0, 0.509569,-99) , 
2, 31.5, 0, 0, 0.526783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304557,-99) , 
7, 143.094, 1, 0, 0.516896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411726,-99) , 
10, 0.0469473, 0, 0, 0.483132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19539,-99) , 
4, 1.71145, 1, 0, 0.443975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246281,-99) , 
10, 0.110539, 1, 0, 0.38396,-99) , 
7, 10.1355, 0, 0, 0.500662,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0177416);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607158,-99) , 
11, 1.3342, 0, 0, 0.675932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443081,-99) , 
9, 41.4585, 0, 0, 0.582286,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445407,-99) , 
9, 33.7155, 1, 0, 0.475689,-99) , 
5, 1.76978, 1, 0, 0.543056,-99) , 
3, 0.983567, 1, 0, 0.561961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533912,-99) , 
1, 14.5, 0, 0, 0.617619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293,-99) , 
9, 55.2619, 0, 0, 0.433984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202116,-99) , 
4, 1.66303, 1, 0, 0.398079,-99) , 
13, 1.5, 0, 0, 0.455618,-99) , 
3, 0.974361, 0, 0, 0.526051,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278876,-99) , 
4, 0.975322, 1, 0, 0.390498,-99) , 
9, 75.0018, 1, 0, 0.495455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0221766,-99) , 
1, 16.5, 0, 0, 0.40191,-99) , 
7, 65.1692, 1, 0, 0.508846,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0175033);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751862,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567051,-99) , 
2, 26.5, 0, 0, 0.602477,-99) , 
6, 0.13054, 1, 0, 0.641061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498521,-99) , 
10, 0.126126, 1, 0, 0.543713,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247529,-99) , 
5, 1.86723, 1, 0, 0.37164,-99) , 
3, 0.911097, 0, 0, 0.517219,-99) , 
13, 1.5, 0, 0, 0.553196,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426712,-99) , 
12, 3344.1, 0, 0, 0.500561,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186325,-99) , 
9, 122.416, 1, 0, 0.330979,-99) , 
5, 1.4991, 1, 0, 0.422984,-99) , 
8, 2.29535, 1, 0, 0.521792,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38072,-99) , 
3, 0.993757, 1, 0, 0.52339,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361036,-99) , 
1, 11.5, 0, 0, 0.536395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410352,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0802502,-99) , 
5, 1.8526, 1, 0, 0.18201,-99) , 
8, 0.551398, 1, 0, 0.242733,-99) , 
9, 47.5532, 1, 0, 0.362926,-99) , 
8, 0.298772, 1, 0, 0.412767,-99) , 
4, 1.69318, 1, 0, 0.501218,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0112679);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47478,-99) , 
9, 218.658, 1, 0, 0.563771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393298,-99) , 
5, 0.631669, 0, 0, 0.548684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360834,-99) , 
7, 9.31371, 0, 0, 0.534596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361437,-99) , 
9, 28.0692, 0, 0, 0.521566,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629627,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404598,-99) , 
12, -8348.47, 1, 0, 0.424926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128965,-99) , 
7, 126.168, 1, 0, 0.413568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0507572,-99) , 
5, 2.39059, 1, 0, 0.398649,-99) , 
8, 0.101511, 1, 0, 0.429062,-99) , 
4, 1.36199, 1, 0, 0.484884,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0137345);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609213,-99) , 
11, -0.29421, 1, 0, 0.654981,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306269,-99) , 
4, 1.81438, 1, 0, 0.540396,-99) , 
13, 1.5, 0, 0, 0.578702,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58617,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366981,-99) , 
8, 1.04209, 0, 0, 0.429699,-99) , 
4, 1.8353, 0, 0, 0.463063,-99) , 
9, 69.7077, 0, 0, 0.540965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480551,-99) , 
11, -0.664083, 1, 0, 0.542208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418537,-99) , 
2, 10.5, 0, 0, 0.515136,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496792,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0787386,-99) , 
5, 2.03218, 1, 0, 0.25637,-99) , 
9, 50.8518, 1, 0, 0.344993,-99) , 
5, 1.65452, 1, 0, 0.452177,-99) , 
8, 1.92886, 1, 0, 0.51408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203447,-99) , 
3, 0.999719, 1, 0, 0.506388,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0125196);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744616,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532741,-99) , 
12, 9993.48, 0, 0, 0.553764,-99) , 
11, 4.33963, 0, 0, 0.579437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484463,-99) , 
12, 3423.63, 0, 0, 0.537627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355851,-99) , 
9, 144.618, 1, 0, 0.465586,-99) , 
8, 2.2663, 1, 0, 0.547908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393947,-99) , 
9, 29.4091, 0, 0, 0.534147,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313874,-99) , 
9, 467.607, 1, 0, 0.51197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290232,-99) , 
9, 56.1017, 1, 0, 0.396685,-99) , 
8, 1.77316, 1, 0, 0.476836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139966,-99) , 
7, 7.39457, 0, 0, 0.466023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0288693,-99) , 
7, 174.036, 1, 0, 0.457878,-99) , 
4, 1.14839, 1, 0, 0.493713,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0105401);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569432,-99) , 
12, -6388.43, 1, 0, 0.584754,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238945,-99) , 
7, 31.484, 1, 0, 0.487259,-99) , 
2, 15.5, 0, 0, 0.532106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150156,-99) , 
7, 235.079, 1, 0, 0.526637,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249033,-99) , 
0, 26.5, 1, 0, 0.422704,-99) , 
10, 1.22066, 0, 0, 0.449515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0670134,-99) , 
5, 2.17545, 1, 0, 0.43156,-99) , 
8, 2.28222, 1, 0, 0.506133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209878,-99) , 
3, 0.999741, 1, 0, 0.500435,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0117329);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752247,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363877,-99) , 
9, 48.476, 0, 0, 0.545944,-99) , 
2, 42.5, 0, 0, 0.577479,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484776,-99) , 
8, 0.228084, 1, 0, 0.509015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0544171,-99) , 
1, 14.5, 0, 0, 0.335752,-99) , 
7, 62.2505, 1, 0, 0.488782,-99) , 
4, 0.844859, 1, 0, 0.514252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273127,-99) , 
7, 7.37343, 0, 0, 0.507421,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174942,-99) , 
12, 2963.27, 1, 0, 0.331981,-99) , 
8, 2.96012, 1, 0, 0.498787,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0155611);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732355,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371817,-99) , 
9, 120.965, 1, 0, 0.497009,-99) , 
5, 1.23853, 1, 0, 0.586656,-99) , 
8, 0.47818, 1, 0, 0.636181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482128,-99) , 
3, 0.993813, 1, 0, 0.590051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392403,-99) , 
7, 21.6503, 1, 0, 0.541663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184326,-99) , 
5, 2.29852, 1, 0, 0.518252,-99) , 
0, 17.5, 0, 0, 0.577534,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361888,-99) , 
3, 0.851263, 0, 0, 0.505172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339013,-99) , 
3, 0.99911, 1, 0, 0.489265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0497472,-99) , 
4, 2.04045, 1, 0, 0.259028,-99) , 
11, 6.33867, 0, 0, 0.34166,-99) , 
4, 1.73133, 1, 0, 0.468923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167116,-99) , 
7, 7.41097, 0, 0, 0.458676,-99) , 
13, 1.5, 0, 0, 0.494349,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0166542);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613323,-99) , 
12, 9370.03, 0, 0, 0.680904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53641,-99) , 
5, 1.68381, 1, 0, 0.622979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370571,-99) , 
3, 0.997858, 1, 0, 0.57666,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378924,-99) , 
3, 0.984492, 1, 0, 0.519081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0843776,-99) , 
4, 1.34736, 1, 0, 0.31437,-99) , 
11, -0.31119, 1, 0, 0.421734,-99) , 
11, 0.69266, 0, 0, 0.499999,-99) , 
12, 6189.06, 0, 0, 0.54455,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446899,-99) , 
11, 1.0166, 0, 0, 0.489844,-99) , 
11, -6.53834, 1, 0, 0.503451,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228981,-99) , 
2, 12.5, 0, 0, 0.349188,-99) , 
5, 2.12486, 1, 0, 0.487217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110861,-99) , 
7, 49.7387, 1, 0, 0.464715,-99) , 
1, 15.5, 0, 0, 0.496048,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0089911);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237283,-99) , 
4, 2.00973, 1, 0, 0.603598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339754,-99) , 
8, 2.58869, 1, 0, 0.570393,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469451,-99) , 
9, 114.725, 1, 0, 0.518363,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376821,-99) , 
11, -0.813858, 1, 0, 0.435729,-99) , 
6, 0.416609, 1, 0, 0.471738,-99) , 
11, 2.82376, 0, 0, 0.495964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226704,-99) , 
3, 0.999746, 1, 0, 0.490147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277379,-99) , 
5, 2.29449, 1, 0, 0.481732,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0109618);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552307,-99) , 
9, 90.836, 1, 0, 0.595691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335021,-99) , 
1, 11.5, 0, 0, 0.576614,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21305,-99) , 
5, 2.3653, 1, 0, 0.492022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0171449,-99) , 
7, 57.1652, 1, 0, 0.480824,-99) , 
2, 21.5, 0, 0, 0.507629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156978,-99) , 
7, 26.1468, 1, 0, 0.330197,-99) , 
3, 0.999459, 1, 0, 0.498375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108696,-99) , 
7, 234.178, 1, 0, 0.493284,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.013361);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38804,-99) , 
5, 0.721696, 0, 0, 0.557663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352776,-99) , 
9, 540.877, 1, 0, 0.549366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274476,-99) , 
1, 37.5, 1, 0, 0.541987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31597,-99) , 
3, 0.79814, 0, 0, 0.529085,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539542,-99) , 
6, 0.560812, 0, 0, 0.627862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376481,-99) , 
0, 50.5, 0, 0, 0.530132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193233,-99) , 
1, 74.5, 1, 0, 0.46376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0899535,-99) , 
1, 17.5, 0, 0, 0.382547,-99) , 
7, 58.8156, 1, 0, 0.50745,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0130553);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523585,-99) , 
7, 72.2413, 1, 0, 0.674407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326498,-99) , 
5, 2.36688, 1, 0, 0.576435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398167,-99) , 
7, 27.3379, 1, 0, 0.550296,-99) , 
0, 25.5, 0, 0, 0.588642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379626,-99) , 
8, 2.6765, 1, 0, 0.565871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38861,-99) , 
1, 29.5, 1, 0, 0.49146,-99) , 
11, -6.78099, 1, 0, 0.506171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525478,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0815123,-99) , 
8, 0.797396, 1, 0, 0.240158,-99) , 
9, 62.3813, 1, 0, 0.367923,-99) , 
4, 1.68189, 1, 0, 0.48325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207731,-99) , 
3, 0.999496, 1, 0, 0.47066,-99) , 
13, 1.5, 0, 0, 0.500146,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0116423);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679683,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445831,-99) , 
10, 0.191023, 0, 0, 0.539061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249899,-99) , 
7, 49.6118, 1, 0, 0.47788,-99) , 
3, 0.992743, 1, 0, 0.538523,-99) , 
4, 0.978736, 1, 0, 0.598683,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445674,-99) , 
3, 0.994367, 1, 0, 0.587169,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202242,-99) , 
7, 58.7181, 1, 0, 0.478785,-99) , 
2, 35.5, 0, 0, 0.496389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281266,-99) , 
2, 7.5, 0, 0, 0.485558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243609,-99) , 
3, 0.999463, 1, 0, 0.474997,-99) , 
12, 8503.55, 0, 0, 0.495194,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0124134);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37716,-99) , 
2, 9.5, 0, 0, 0.558873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395371,-99) , 
9, 54.4733, 1, 0, 0.457084,-99) , 
8, 2.28262, 1, 0, 0.535192,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43086,-99) , 
6, 0.286467, 1, 0, 0.485067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13279,-99) , 
0, 13.5, 1, 0, 0.429853,-99) , 
7, 11.1748, 0, 0, 0.517378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213247,-99) , 
7, 188.859, 1, 0, 0.511509,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0333918,-99) , 
10, 0.179318, 0, 0, 0.322553,-99) , 
5, 2.25448, 1, 0, 0.501086,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.01192);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544862,-99) , 
11, 5.51902, 0, 0, 0.557571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401192,-99) , 
9, 57.1619, 1, 0, 0.452537,-99) , 
8, 2.2716, 1, 0, 0.532583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301877,-99) , 
3, 0.99962, 1, 0, 0.523948,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27022,-99) , 
8, 1.23187, 0, 0, 0.391827,-99) , 
9, 32.3972, 0, 0, 0.511199,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546071,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181907,-99) , 
2, 10.5, 0, 0, 0.434101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245122,-99) , 
9, 96.2543, 1, 0, 0.353175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
6, 0.478335, 0, 0, 0.3223,-99) , 
8, 0.178509, 1, 0, 0.382255,-99) , 
4, 1.7146, 1, 0, 0.48918,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0130051);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720026,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495237,-99) , 
9, 78.3497, 1, 0, 0.555225,-99) , 
6, 0.173179, 1, 0, 0.588822,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.44263, 1, 0, 0.52169,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130424,-99) , 
3, 0.984765, 1, 0, 0.266892,-99) , 
7, 39.5512, 1, 0, 0.501429,-99) , 
2, 23.5, 0, 0, 0.524341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323197,-99) , 
7, 136.177, 1, 0, 0.514719,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343462,-99) , 
6, 0.589617, 1, 0, 0.439622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190558,-99) , 
3, 0.946776, 0, 0, 0.375928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11548,-99) , 
5, 2.09157, 1, 0, 0.345446,-99) , 
7, 9.80637, 0, 0, 0.497775,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0159993);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570215,-99) , 
4, 0.935445, 1, 0, 0.63211,-99) , 
12, 232.572, 1, 0, 0.669658,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471429,-99) , 
9, 96.7759, 1, 0, 0.590563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145794,-99) , 
1, 17.5, 0, 0, 0.518738,-99) , 
7, 59.9321, 1, 0, 0.602728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291253,-99) , 
3, 0.999527, 1, 0, 0.581919,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49934,-99) , 
1, 8.5, 1, 0, 0.519409,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208322,-99) , 
4, 1.50269, 1, 0, 0.360711,-99) , 
7, 8.25367, 0, 0, 0.506682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193302,-99) , 
5, 2.32025, 1, 0, 0.495449,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139576,-99) , 
3, 0.981628, 1, 0, 0.240336,-99) , 
7, 36.7023, 1, 0, 0.477184,-99) , 
2, 21.5, 0, 0, 0.507943,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.014137);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483668,-99) , 
5, 1.08918, 0, 0, 0.580154,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29137,-99) , 
2, 21.5, 0, 0, 0.494968,-99) , 
7, 35.2342, 1, 0, 0.550508,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582678,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390845,-99) , 
9, 59.96, 0, 0, 0.537933,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289622,-99) , 
9, 47.6592, 1, 0, 0.401624,-99) , 
8, 0.604126, 1, 0, 0.464694,-99) , 
5, 1.73323, 1, 0, 0.5171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112701,-99) , 
6, 0.599453, 1, 0, 0.294123,-99) , 
11, -0.689473, 1, 0, 0.370333,-99) , 
2, 8.5, 0, 0, 0.502582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201663,-99) , 
7, 191.019, 1, 0, 0.496794,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0141899);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600697,-99) , 
12, 576.582, 1, 0, 0.654842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373608,-99) , 
5, 2.06119, 1, 0, 0.614523,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0897221,-99) , 
7, 134.348, 1, 0, 0.52125,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179364,-99) , 
2, 52.5, 0, 0, 0.349119,-99) , 
1, 39.5, 1, 0, 0.503479,-99) , 
6, 0.200029, 1, 0, 0.528464,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444332,-99) , 
4, 1.65208, 0, 0, 0.479783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232696,-99) , 
4, 1.96039, 1, 0, 0.464551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251246,-99) , 
0, 14.5, 1, 0, 0.433541,-99) , 
7, 12.7773, 0, 0, 0.506749,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163193,-99) , 
7, 31.8486, 1, 0, 0.262028,-99) , 
9, 426.753, 1, 0, 0.491961,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.00980126);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691588,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514612,-99) , 
3, 0.903535, 1, 0, 0.544654,-99) , 
12, -267.934, 1, 0, 0.573867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499517,-99) , 
8, 0.270449, 1, 0, 0.514211,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239577,-99) , 
5, 1.66345, 1, 0, 0.390113,-99) , 
3, 0.942929, 0, 0, 0.490344,-99) , 
6, 0.292742, 1, 0, 0.516896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260445,-99) , 
3, 0.99969, 1, 0, 0.509701,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197218,-99) , 
3, 0.935096, 0, 0, 0.439621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187979,-99) , 
1, 11.5, 0, 0, 0.347824,-99) , 
5, 2.17556, 1, 0, 0.496649,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.00952504);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581827,-99) , 
11, 8.84654, 1, 0, 0.651022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473966,-99) , 
1, 11.5, 0, 0, 0.54406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270599,-99) , 
5, 2.13906, 1, 0, 0.45966,-99) , 
11, -0.314905, 1, 0, 0.501625,-99) , 
11, 6.70686, 0, 0, 0.514821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299892,-99) , 
3, 0.999464, 1, 0, 0.503845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322217,-99) , 
4, 1.46137, 1, 0, 0.431629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100727,-99) , 
0, 13.5, 1, 0, 0.381135,-99) , 
7, 10.1248, 0, 0, 0.488769,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0101595);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520995,-99) , 
8, 1.03157, 0, 0, 0.55818,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35026,-99) , 
8, 2.55194, 0, 0, 0.467122,-99) , 
8, 2.27523, 1, 0, 0.537497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346989,-99) , 
2, 7.5, 0, 0, 0.528177,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553663,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20663,-99) , 
9, 83.9113, 1, 0, 0.384323,-99) , 
8, 0.253371, 1, 0, 0.431389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0806922,-99) , 
7, 123.637, 1, 0, 0.415979,-99) , 
4, 1.71374, 1, 0, 0.509629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217042,-99) , 
3, 0.999642, 1, 0, 0.501066,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.00724482);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361673,-99) , 
3, 0.740608, 0, 0, 0.551115,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282538,-99) , 
10, 0.239877, 0, 0, 0.430616,-99) , 
5, 2.17525, 1, 0, 0.540194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330946,-99) , 
3, 0.999633, 1, 0, 0.533051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251014,-99) , 
7, 7.00158, 0, 0, 0.526558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202933,-99) , 
7, 195.2, 1, 0, 0.520654,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0157977);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567602,-99) , 
2, 17.5, 0, 0, 0.629504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38439,-99) , 
9, 309.18, 1, 0, 0.597279,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37485,-99) , 
6, 1.039, 0, 0, 0.442909,-99) , 
6, 0.861798, 1, 0, 0.563777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403637,-99) , 
8, 0.33547, 0, 0, 0.540378,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476767,-99) , 
2, 10.5, 0, 0, 0.570283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350956,-99) , 
3, 0.911625, 0, 0, 0.54118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331611,-99) , 
9, 47.6443, 0, 0, 0.500709,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160194,-99) , 
3, 0.999103, 1, 0, 0.42372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19557,-99) , 
9, 253.631, 1, 0, 0.390752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208136,-99) , 
4, 1.944, 1, 0, 0.373479,-99) , 
8, 0.704198, 1, 0, 0.429267,-99) , 
4, 1.15104, 1, 0, 0.481335,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00658813);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494197,-99) , 
8, 1.62134, 1, 0, 0.60755,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491774,-99) , 
11, -10.2547, 1, 0, 0.501134,-99) , 
6, 0.132739, 1, 0, 0.518116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322923,-99) , 
2, 7.5, 0, 0, 0.509663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134212,-99) , 
5, 2.56465, 1, 0, 0.505933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145746,-99) , 
7, 236.759, 1, 0, 0.501451,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0101365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357758,-99) , 
5, 1.59884, 1, 0, 0.481295,-99) , 
12, 2468.23, 1, 0, 0.596112,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34571,-99) , 
9, 445.846, 1, 0, 0.497086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3032,-99) , 
3, 0.99938, 1, 0, 0.484896,-99) , 
6, 0.134841, 1, 0, 0.50227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236469,-99) , 
1, 74.5, 1, 0, 0.493838,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391684,-99) , 
7, 11.3721, 1, 0, 0.469618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29776,-99) , 
0, 12.5, 1, 0, 0.429831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239726,-99) , 
5, 1.92871, 1, 0, 0.386634,-99) , 
2, 9.5, 0, 0, 0.475483,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.012622);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
8, 1.66596, 1, 0, 0.631438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240288,-99) , 
5, 2.1031, 1, 0, 0.528988,-99) , 
10, 0.0729023, 1, 0, 0.547647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347148,-99) , 
5, 0.347351, 0, 0, 0.535145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470561,-99) , 
12, 5949.75, 0, 0, 0.527325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26936,-99) , 
8, 0.596065, 1, 0, 0.374946,-99) , 
10, 0.239748, 0, 0, 0.450265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0840074,-99) , 
7, 108.099, 1, 0, 0.432338,-99) , 
4, 1.52507, 1, 0, 0.506134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153742,-99) , 
7, 6.99634, 0, 0, 0.498735,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.00935462);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.796599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652798,-99) , 
7, 39.9051, 1, 0, 0.736553,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12629,-99) , 
5, 1.95116, 1, 0, 0.505966,-99) , 
1, 12.5, 0, 0, 0.615641,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282465,-99) , 
5, 2.30632, 1, 0, 0.485225,-99) , 
12, -11043.9, 1, 0, 0.494653,-99) , 
12, 9480.16, 0, 0, 0.512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282079,-99) , 
7, 160.1, 1, 0, 0.504953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186502,-99) , 
7, 6.91891, 0, 0, 0.499196,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.011273);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434982,-99) , 
10, 1.17616, 1, 0, 0.550188,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343038,-99) , 
9, 153.812, 1, 0, 0.455146,-99) , 
8, 2.26746, 1, 0, 0.528287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24433,-99) , 
3, 0.999709, 1, 0, 0.520223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26276,-99) , 
7, 7.37181, 0, 0, 0.512374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0570687,-99) , 
8, 1.42852, 0, 0, 0.194031,-99) , 
8, 0.0993019, 1, 0, 0.315328,-99) , 
5, 2.17508, 1, 0, 0.496766,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0122313);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475483,-99) , 
10, 0.298683, 1, 0, 0.584673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485558,-99) , 
2, 28.5, 0, 0, 0.500508,-99) , 
12, 395.458, 1, 0, 0.525519,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112685,-99) , 
0, 11.5, 1, 0, 0.365207,-99) , 
7, 8.68884, 0, 0, 0.513576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248786,-99) , 
1, 39.5, 1, 0, 0.50492,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292063,-99) , 
5, 1.53738, 1, 0, 0.457953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0319038,-99) , 
1, 14.5, 0, 0, 0.381194,-99) , 
7, 65.535, 1, 0, 0.489682,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.010481);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53079,-99) , 
2, 55.5, 0, 0, 0.540578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31464,-99) , 
1, 70.5, 1, 0, 0.532477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349719,-99) , 
9, 476.805, 1, 0, 0.522807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326689,-99) , 
2, 7.5, 0, 0, 0.512544,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643638,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489048,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165764,-99) , 
11, -0.744901, 1, 0, 0.304838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0866565,-99) , 
5, 2.24215, 1, 0, 0.264146,-99) , 
12, -1048.92, 1, 0, 0.331653,-99) , 
8, 0.108837, 1, 0, 0.393607,-99) , 
4, 1.72918, 1, 0, 0.493658,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0117778);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638467,-99) , 
3, 0.986817, 0, 0, 0.710217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501794,-99) , 
4, 0.902449, 0, 0, 0.558247,-99) , 
6, 0.347901, 1, 0, 0.59915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442984,-99) , 
8, 0.589205, 0, 0, 0.574295,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478371,-99) , 
9, 58.2135, 0, 0, 0.588454,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432071,-99) , 
3, 0.9923, 1, 0, 0.491282,-99) , 
13, 1.5, 0, 0, 0.519338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305208,-99) , 
6, 0.191682, 0, 0, 0.51044,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.023288,-99) , 
5, 1.96768, 1, 0, 0.293962,-99) , 
9, 93.4362, 1, 0, 0.410136,-99) , 
8, 1.83616, 1, 0, 0.489852,-99) , 
5, 1.33007, 1, 0, 0.514064,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258117,-99) , 
12, 5405.51, 0, 0, 0.358637,-99) , 
3, 0.999467, 1, 0, 0.50518,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00826182);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301423,-99) , 
1, 42.5, 1, 0, 0.5223,-99) , 
2, 55.5, 0, 0, 0.531964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274474,-99) , 
7, 177.233, 1, 0, 0.525789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238397,-99) , 
3, 0.999702, 1, 0, 0.517841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409319,-99) , 
6, 0.47025, 1, 0, 0.468055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254943,-99) , 
7, 7.0126, 0, 0, 0.425785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221994,-99) , 
6, 0.174117, 0, 0, 0.380208,-99) , 
7, 10.1194, 0, 0, 0.501754,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0111045);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.820527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54986,-99) , 
6, 0.775573, 1, 0, 0.696814,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511462,-99) , 
6, 0.073535, 1, 0, 0.525904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276099,-99) , 
8, 1.03817, 0, 0, 0.384125,-99) , 
9, 30.3101, 0, 0, 0.511924,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184839,-99) , 
3, 0.977549, 1, 0, 0.338548,-99) , 
5, 2.16848, 1, 0, 0.498432,-99) , 
11, -8.18847, 1, 0, 0.511375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.041803,-99) , 
4, 1.56275, 1, 0, 0.284909,-99) , 
9, 433.817, 1, 0, 0.498693,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0124116);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439554,-99) , 
7, 12.1199, 0, 0, 0.561047,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213878,-99) , 
5, 2.15392, 1, 0, 0.447065,-99) , 
3, 0.946964, 0, 0, 0.539352,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30989,-99) , 
0, 61.5, 0, 0, 0.497188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0536707,-99) , 
1, 17.5, 0, 0, 0.420318,-99) , 
7, 64.2864, 1, 0, 0.519338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442594,-99) , 
9, 246.008, 0, 0, 0.481546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 2.09871, 1, 0, 0.469105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226098,-99) , 
7, 20.9739, 1, 0, 0.440271,-99) , 
2, 10.5, 0, 0, 0.498672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247438,-99) , 
3, 0.689683, 0, 0, 0.493676,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.00820864);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477539,-99) , 
6, 0.819672, 1, 0, 0.646664,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492847,-99) , 
11, 8.34179, 0, 0, 0.502182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175725,-99) , 
4, 2.2575, 1, 0, 0.49915,-99) , 
11, -6.5461, 1, 0, 0.511352,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332685,-99) , 
11, 0.170288, 0, 0, 0.408586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.12757, 1, 0, 0.370874,-99) , 
2, 8.5, 0, 0, 0.497807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274032,-99) , 
3, 0.999517, 1, 0, 0.488218,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.012349);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.797493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624884,-99) , 
12, 6254.62, 0, 0, 0.66406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505148,-99) , 
2, 36.5, 0, 0, 0.529179,-99) , 
6, 0.471672, 1, 0, 0.578476,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453717,-99) , 
8, 0.667892, 1, 0, 0.505346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197892,-99) , 
1, 49.5, 1, 0, 0.49119,-99) , 
5, 1.51672, 1, 0, 0.530641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30153,-99) , 
3, 0.999452, 1, 0, 0.519741,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538182,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122119,-99) , 
1, 11.5, 0, 0, 0.252891,-99) , 
6, 0.996533, 0, 0, 0.308264,-99) , 
4, 1.93389, 1, 0, 0.504002,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0100872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545326,-99) , 
1, 35.5, 1, 0, 0.626539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156374,-99) , 
7, 65.327, 1, 0, 0.505447,-99) , 
2, 35.5, 0, 0, 0.520275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363588,-99) , 
8, 2.99471, 1, 0, 0.448993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287974,-99) , 
9, 160.15, 1, 0, 0.398635,-99) , 
8, 2.81018, 1, 0, 0.50915,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357715,-99) , 
9, 21.0738, 1, 0, 0.494534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203982,-99) , 
8, 0.797869, 0, 0, 0.384683,-99) , 
9, 31.534, 0, 0, 0.497342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205047,-99) , 
7, 190.533, 1, 0, 0.491925,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0113531);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684327,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503923,-99) , 
2, 11.5, 0, 0, 0.573937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423166,-99) , 
5, 0.708785, 0, 0, 0.553746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348154,-99) , 
12, -739.504, 1, 0, 0.438745,-99) , 
3, 0.99751, 1, 0, 0.535068,-99) , 
12, 11202.3, 0, 0, 0.548478,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535246,-99) , 
8, 1.05264, 1, 0, 0.624373,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607872,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201912,-99) , 
5, 2.16913, 1, 0, 0.4137,-99) , 
8, 0.0898764, 1, 0, 0.432859,-99) , 
11, 5.96483, 0, 0, 0.457278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188832,-99) , 
7, 125.986, 1, 0, 0.446531,-99) , 
4, 1.18716, 1, 0, 0.497223,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00914606);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48825,-99) , 
10, 0.482001, 1, 0, 0.606028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430773,-99) , 
5, 1.93185, 1, 0, 0.577443,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436907,-99) , 
8, 1.99083, 1, 0, 0.543283,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307386,-99) , 
5, 2.00716, 1, 0, 0.449249,-99) , 
11, 1.39791, 0, 0, 0.494311,-99) , 
12, 5962.06, 0, 0, 0.516286,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346135,-99) , 
2, 11.5, 0, 0, 0.451365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297488,-99) , 
12, 4231.97, 1, 0, 0.394722,-99) , 
9, 328.61, 1, 0, 0.502394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278318,-99) , 
4, 2.04879, 1, 0, 0.493982,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.00942521);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.829198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596001,-99) , 
8, 1.13258, 1, 0, 0.679298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521527,-99) , 
8, 0.440997, 0, 0, 0.639077,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435941,-99) , 
5, 1.97661, 1, 0, 0.520063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201744,-99) , 
7, 53.6774, 1, 0, 0.501085,-99) , 
2, 34.5, 0, 0, 0.518459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365138,-99) , 
7, 134.443, 1, 0, 0.511537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318652,-99) , 
1, 5.5, 0, 0, 0.504997,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.00946321);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540797,-99) , 
11, -4.28336, 1, 0, 0.568835,-99) , 
2, 28.5, 0, 0, 0.600922,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482739,-99) , 
11, -1.24618, 1, 0, 0.521714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289513,-99) , 
3, 0.999427, 1, 0, 0.508267,-99) , 
13, 1.5, 0, 0, 0.536023,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264048,-99) , 
9, 20.7784, 1, 0, 0.37766,-99) , 
9, 27.7756, 0, 0, 0.522537,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215042,-99) , 
4, 1.51873, 1, 0, 0.354505,-99) , 
9, 408.171, 1, 0, 0.512415,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0139292);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73884,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453522,-99) , 
5, 1.79008, 1, 0, 0.583067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356275,-99) , 
7, 34.772, 1, 0, 0.541028,-99) , 
1, 14.5, 0, 0, 0.609834,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423209,-99) , 
8, 0.891539, 1, 0, 0.530163,-99) , 
9, 90.836, 1, 0, 0.614573,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206791,-99) , 
7, 48.6969, 1, 0, 0.488437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113986,-99) , 
0, 40.5, 1, 0, 0.472823,-99) , 
2, 30.5, 0, 0, 0.495326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557956,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175487,-99) , 
5, 1.81293, 1, 0, 0.300878,-99) , 
11, 8.00074, 0, 0, 0.386001,-99) , 
3, 0.998005, 1, 0, 0.478409,-99) , 
12, 10426.7, 0, 0, 0.494099,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.00994467);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505506,-99) , 
6, 0.850494, 1, 0, 0.627328,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397364,-99) , 
5, 0.746354, 0, 0, 0.520689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31519,-99) , 
3, 0.710337, 0, 0, 0.513214,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35861,-99) , 
0, 19.5, 0, 0, 0.502981,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199548,-99) , 
11, -3.35961, 1, 0, 0.291908,-99) , 
11, 5.59906, 0, 0, 0.379836,-99) , 
3, 0.99768, 1, 0, 0.491756,-99) , 
11, -6.77661, 1, 0, 0.503595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301721,-99) , 
5, 2.28734, 1, 0, 0.49413,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0136024);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.8156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623277,-99) , 
7, 71.818, 1, 0, 0.721511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460171,-99) , 
7, 115.049, 0, 0, 0.573698,-99) , 
1, 38.5, 1, 0, 0.637853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189945,-99) , 
1, 14.5, 0, 0, 0.599894,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552491,-99) , 
4, 1.3677, 1, 0, 0.630859,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387844,-99) , 
7, 10.0953, 0, 0, 0.491948,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160447,-99) , 
8, 0.693738, 1, 0, 0.332876,-99) , 
5, 2.13291, 1, 0, 0.475969,-99) , 
11, -6.52585, 1, 0, 0.490796,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0782457,-99) , 
1, 13.5, 0, 0, 0.254546,-99) , 
7, 51.1629, 1, 0, 0.474293,-99) , 
2, 35.5, 0, 0, 0.494223,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.00796659);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742956,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373033,-99) , 
7, 63.8867, 1, 0, 0.543269,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336378,-99) , 
8, 0.604766, 1, 0, 0.428322,-99) , 
4, 1.76663, 1, 0, 0.526962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198025,-99) , 
1, 50.5, 1, 0, 0.520034,-99) , 
2, 54.5, 0, 0, 0.528135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309116,-99) , 
7, 128.971, 1, 0, 0.517698,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0176955);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.817547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468588,-99) , 
3, 0.978818, 0, 0, 0.612166,-99) , 
6, 0.280682, 1, 0, 0.671958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46673,-99) , 
10, 2.70224, 1, 0, 0.62977,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455548,-99) , 
1, 27.5, 1, 0, 0.593953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318885,-99) , 
7, 84.6405, 1, 0, 0.520305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222817,-99) , 
8, 2.2119, 1, 0, 0.461228,-99) , 
9, 115.014, 1, 0, 0.556986,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554019,-99) , 
11, -6.95844, 1, 0, 0.634714,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428485,-99) , 
9, 85.3378, 0, 0, 0.48722,-99) , 
12, 9622.81, 0, 0, 0.506417,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164674,-99) , 
0, 19.5, 0, 0, 0.336912,-99) , 
7, 30.3438, 1, 0, 0.483246,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148746,-99) , 
8, 0.303446, 1, 0, 0.269959,-99) , 
5, 2.15764, 1, 0, 0.464438,-99) , 
2, 21.5, 0, 0, 0.493002,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0136567);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565367,-99) , 
4, 0.89482, 1, 0, 0.660017,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51507,-99) , 
12, -3107.46, 1, 0, 0.552742,-99) , 
11, -0.663787, 1, 0, 0.594591,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369189,-99) , 
8, 2.78532, 1, 0, 0.514509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35166,-99) , 
6, 1.15218, 1, 0, 0.500685,-99) , 
6, 0.416048, 1, 0, 0.53676,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428705,-99) , 
9, 123.683, 0, 0, 0.560354,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112519,-99) , 
9, 46.4902, 1, 0, 0.302197,-99) , 
8, 0.248738, 1, 0, 0.414067,-99) , 
5, 2.06843, 1, 0, 0.52063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236012,-99) , 
3, 0.999732, 1, 0, 0.513885,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.012184);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557332,-99) , 
6, 0.673532, 1, 0, 0.627641,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314201,-99) , 
7, 39.3785, 1, 0, 0.526207,-99) , 
2, 28.5, 0, 0, 0.553648,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506905,-99) , 
11, 2.65023, 0, 0, 0.544466,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233631,-99) , 
7, 27.5727, 1, 0, 0.391287,-99) , 
8, 1.05174, 1, 0, 0.480727,-99) , 
5, 1.54519, 1, 0, 0.515061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267436,-99) , 
3, 0.999696, 1, 0, 0.508536,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293656,-99) , 
4, 1.40533, 1, 0, 0.416274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193966,-99) , 
0, 11.5, 1, 0, 0.357653,-99) , 
7, 8.9413, 0, 0, 0.497046,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0108714);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640123,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46974,-99) , 
10, 0.257147, 1, 0, 0.509582,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206675,-99) , 
10, 0.061712, 0, 0, 0.343881,-99) , 
7, 8.87536, 0, 0, 0.496812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336072,-99) , 
3, 0.999078, 1, 0, 0.484925,-99) , 
11, -7.04197, 1, 0, 0.496613,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389253,-99) , 
5, 2.16281, 1, 0, 0.550091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266527,-99) , 
3, 0.997347, 1, 0, 0.4851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148302,-99) , 
9, 56.4245, 1, 0, 0.249678,-99) , 
8, 0.505066, 1, 0, 0.36255,-99) , 
4, 1.75932, 1, 0, 0.476715,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0105558);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67583,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412378,-99) , 
7, 27.2044, 1, 0, 0.535008,-99) , 
3, 0.996563, 1, 0, 0.59319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520782,-99) , 
10, 1.1102, 0, 0, 0.548333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33135,-99) , 
3, 0.999208, 1, 0, 0.533581,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237042,-99) , 
5, 2.13924, 1, 0, 0.470402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133864,-99) , 
7, 48.6245, 1, 0, 0.450318,-99) , 
1, 14.5, 0, 0, 0.488625,-99) , 
12, -3587.68, 1, 0, 0.502602,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250782,-99) , 
7, 15.0265, 1, 0, 0.325894,-99) , 
9, 431.322, 1, 0, 0.492035,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0077574);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665595,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499083,-99) , 
2, 20.5, 0, 0, 0.523987,-99) , 
11, -8.06036, 1, 0, 0.533037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302159,-99) , 
3, 0.736586, 0, 0, 0.526544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301245,-99) , 
3, 0.999662, 1, 0, 0.519835,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547532,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107026,-99) , 
9, 71.3592, 1, 0, 0.272995,-99) , 
8, 0.188535, 1, 0, 0.385444,-99) , 
5, 2.13271, 1, 0, 0.506431,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0104889);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511233,-99) , 
7, 13.4129, 0, 0, 0.576062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441156,-99) , 
2, 25.5, 0, 0, 0.492803,-99) , 
10, 0.292313, 1, 0, 0.537696,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379149,-99) , 
2, 11.5, 0, 0, 0.539168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249684,-99) , 
8, 0.377851, 1, 0, 0.416119,-99) , 
5, 2.12486, 1, 0, 0.525194,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124438,-99) , 
4, 1.57417, 1, 0, 0.337793,-99) , 
8, 0.339062, 1, 0, 0.409278,-99) , 
9, 334.628, 1, 0, 0.512323,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228208,-99) , 
7, 145.284, 1, 0, 0.504151,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0141795);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.779356,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465669,-99) , 
3, 0.99765, 1, 0, 0.589178,-99) , 
11, -3.58968, 1, 0, 0.623417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425205,-99) , 
8, 0.443823, 0, 0, 0.587315,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581826,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335496,-99) , 
2, 16.5, 0, 0, 0.435947,-99) , 
3, 0.992053, 1, 0, 0.491533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351812,-99) , 
3, 0.960084, 0, 0, 0.465361,-99) , 
6, 0.810572, 1, 0, 0.53896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386903,-99) , 
6, 0.484939, 0, 0, 0.583179,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313309,-99) , 
8, 2.26721, 1, 0, 0.443138,-99) , 
9, 34.5873, 1, 0, 0.467964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273729,-99) , 
5, 2.28871, 1, 0, 0.451361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115004,-99) , 
7, 126.346, 1, 0, 0.440988,-99) , 
5, 1.62592, 1, 0, 0.490842,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0095383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553735,-99) , 
11, -4.4383, 1, 0, 0.600379,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425247,-99) , 
12, 5354.31, 1, 0, 0.462429,-99) , 
6, 0.828115, 1, 0, 0.556051,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482372,-99) , 
13, 1.5, 0, 0, 0.52824,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184647,-99) , 
7, 22.9025, 1, 0, 0.412901,-99) , 
2, 11.5, 0, 0, 0.487955,-99) , 
11, -0.780778, 1, 0, 0.515976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279655,-99) , 
5, 2.40014, 1, 0, 0.510691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285012,-99) , 
3, 0.999623, 1, 0, 0.502947,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.010483);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765317,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455202,-99) , 
3, 0.998093, 1, 0, 0.569773,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3351,-99) , 
3, 0.983576, 1, 0, 0.441961,-99) , 
8, 0.387244, 0, 0, 0.548777,-99) , 
11, -7.70102, 1, 0, 0.560998,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448293,-99) , 
11, -0.386591, 1, 0, 0.501001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0855783,-99) , 
7, 170.38, 1, 0, 0.492244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240292,-99) , 
2, 8.5, 0, 0, 0.469708,-99) , 
4, 1.30626, 1, 0, 0.5215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247524,-99) , 
1, 71.5, 1, 0, 0.513463,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0183127);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494835,-99) , 
8, 0.607741, 0, 0, 0.633801,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472982,-99) , 
13, 1.5, 0, 0, 0.527784,-99) , 
5, 1.60326, 1, 0, 0.582574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394595,-99) , 
1, 8.5, 0, 0, 0.567338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437412,-99) , 
8, 0.444112, 0, 0, 0.554315,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296415,-99) , 
4, 1.17676, 1, 0, 0.397289,-99) , 
8, 2.0729, 1, 0, 0.508637,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31284,-99) , 
8, 0.603494, 1, 0, 0.463697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0924723,-99) , 
5, 2.15179, 1, 0, 0.243673,-99) , 
11, 0.613021, 0, 0, 0.349669,-99) , 
5, 1.85284, 1, 0, 0.458676,-99) , 
2, 12.5, 0, 0, 0.51996,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317488,-99) , 
9, 97.9708, 1, 0, 0.441079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0440281,-99) , 
1, 17.5, 0, 0, 0.352242,-99) , 
7, 71.5743, 1, 0, 0.500955,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0159058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579505,-99) , 
1, 18.5, 1, 0, 0.666382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481579,-99) , 
5, 2.09362, 1, 0, 0.643195,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553007,-99) , 
13, 1.5, 0, 0, 0.616631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252287,-99) , 
3, 0.997607, 1, 0, 0.449638,-99) , 
11, -6.63849, 1, 0, 0.51037,-99) , 
3, 0.987186, 1, 0, 0.562792,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300815,-99) , 
7, 109.278, 1, 0, 0.523446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.43502, 1, 0, 0.515431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370234,-99) , 
11, -0.12189, 1, 0, 0.453505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102765,-99) , 
5, 2.13304, 1, 0, 0.257538,-99) , 
4, 1.15268, 1, 0, 0.363519,-99) , 
11, 0.563792, 0, 0, 0.473441,-99) , 
11, -0.920316, 1, 0, 0.510281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17762,-99) , 
7, 7.00283, 0, 0, 0.503742,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0129516);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578137,-99) , 
9, 109.65, 1, 0, 0.6455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41874,-99) , 
1, 63.5, 1, 0, 0.617468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325909,-99) , 
3, 0.999372, 1, 0, 0.596119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221379,-99) , 
1, 10.5, 0, 0, 0.570967,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502123,-99) , 
11, -7.04192, 1, 0, 0.512981,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181334,-99) , 
8, 0.400363, 1, 0, 0.388288,-99) , 
5, 2.13589, 1, 0, 0.499981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27796,-99) , 
7, 40.9751, 1, 0, 0.487377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142239,-99) , 
0, 33.5, 1, 0, 0.474872,-99) , 
2, 24.5, 0, 0, 0.49908,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00911937);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474049,-99) , 
7, 51.4031, 1, 0, 0.655056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51775,-99) , 
6, 1.09485, 1, 0, 0.606233,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515333,-99) , 
2, 13.5, 0, 0, 0.605569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397314,-99) , 
5, 0.710202, 0, 0, 0.567796,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603648,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454226,-99) , 
8, 0.113892, 1, 0, 0.471189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106279,-99) , 
7, 132.703, 1, 0, 0.464206,-99) , 
4, 0.728302, 1, 0, 0.490842,-99) , 
6, 1.00566, 0, 0, 0.506098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255989,-99) , 
1, 84.5, 1, 0, 0.500324,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0164023);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71958,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522889,-99) , 
1, 20.5, 1, 0, 0.57261,-99) , 
8, 1.98309, 0, 0, 0.618127,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391972,-99) , 
5, 1.04034, 0, 0, 0.516634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314472,-99) , 
7, 32.8993, 1, 0, 0.488162,-99) , 
1, 14.5, 0, 0, 0.544902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402612,-99) , 
1, 40.5, 1, 0, 0.528617,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492687,-99) , 
11, -0.71417, 0, 0, 0.594372,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170041,-99) , 
3, 0.869778, 0, 0, 0.447138,-99) , 
13, 1.5, 0, 0, 0.498111,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420639,-99) , 
12, 2873.77, 0, 0, 0.53716,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0720632,-99) , 
5, 1.87656, 1, 0, 0.268493,-99) , 
9, 57.7314, 1, 0, 0.371741,-99) , 
8, 1.78344, 1, 0, 0.460625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.097487,-99) , 
0, 91.5, 1, 0, 0.447945,-99) , 
4, 1.18031, 1, 0, 0.487257,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0152956);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572832,-99) , 
5, 1.37889, 1, 0, 0.630398,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527319,-99) , 
11, -7.26058, 1, 0, 0.540846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38904,-99) , 
9, 331.414, 1, 0, 0.525696,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296793,-99) , 
4, 1.26088, 0, 0, 0.395528,-99) , 
8, 0.436578, 0, 0, 0.505436,-99) , 
6, 0.115007, 1, 0, 0.522523,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488059,-99) , 
8, 0.256573, 1, 0, 0.619484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453819,-99) , 
1, 11.5, 0, 0, 0.562146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322655,-99) , 
9, 45.3153, 0, 0, 0.518985,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260708,-99) , 
12, 1458.23, 0, 0, 0.520405,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0556366,-99) , 
5, 2.01824, 1, 0, 0.173601,-99) , 
10, 0.0538581, 1, 0, 0.242073,-99) , 
9, 47.1899, 1, 0, 0.347157,-99) , 
8, 0.499634, 1, 0, 0.429992,-99) , 
5, 1.84122, 1, 0, 0.496031,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0116782);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395495,-99) , 
5, 0.528846, 0, 0, 0.557383,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288666,-99) , 
7, 54.2457, 1, 0, 0.474762,-99) , 
4, 1.25183, 1, 0, 0.523633,-99) , 
11, -8.06379, 1, 0, 0.53335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314029,-99) , 
9, 542.951, 1, 0, 0.526209,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409431,-99) , 
2, 15.5, 0, 0, 0.5201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241303,-99) , 
13, 1.5, 0, 0, 0.357877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
0, 12.5, 0, 0, 0.2726,-99) , 
8, 0.275383, 1, 0, 0.394434,-99) , 
5, 2.06635, 1, 0, 0.507517,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0100255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560861,-99) , 
8, 0.159707, 1, 0, 0.580273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361035,-99) , 
10, 0.19644, 0, 0, 0.446924,-99) , 
9, 87.6817, 0, 0, 0.559879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360526,-99) , 
4, 1.84816, 1, 0, 0.542053,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611423,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373674,-99) , 
1, 12.5, 0, 0, 0.476093,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312575,-99) , 
6, 0.198791, 1, 0, 0.352948,-99) , 
12, 1718.65, 0, 0, 0.439209,-99) , 
11, 7.13509, 0, 0, 0.456112,-99) , 
10, 0.260332, 1, 0, 0.50218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206533,-99) , 
7, 7.11511, 0, 0, 0.496159,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0129706);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415493,-99) , 
9, 304.507, 1, 0, 0.59684,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302416,-99) , 
7, 22.0024, 1, 0, 0.504352,-99) , 
0, 18.5, 0, 0, 0.549356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403401,-99) , 
8, 2.91389, 1, 0, 0.538331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418568,-99) , 
9, 32.4429, 0, 0, 0.526506,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605341,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408027,-99) , 
11, 2.71288, 0, 0, 0.455875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235167,-99) , 
6, 0.928719, 1, 0, 0.420238,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13683,-99) , 
9, 93.7274, 1, 0, 0.273152,-99) , 
4, 1.89825, 1, 0, 0.378863,-99) , 
6, 1.00208, 0, 0, 0.415623,-99) , 
4, 1.48107, 1, 0, 0.494317,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.00835994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317967,-99) , 
1, 12.5, 0, 0, 0.627435,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16201,-99) , 
7, 55.7967, 1, 0, 0.506966,-99) , 
2, 26.5, 0, 0, 0.529359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299938,-99) , 
1, 69.5, 1, 0, 0.523355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295312,-99) , 
7, 163.516, 1, 0, 0.516786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336501,-99) , 
2, 7.5, 0, 0, 0.508654,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0057505);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509983,-99) , 
2, 50.5, 0, 0, 0.52105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238193,-99) , 
7, 234.178, 1, 0, 0.517316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251914,-99) , 
2, 6.5, 0, 0, 0.511039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245623,-99) , 
3, 0.999724, 1, 0, 0.504988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283185,-99) , 
5, 2.32331, 1, 0, 0.496937,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0119699);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531066,-99) , 
1, 11.5, 0, 0, 0.630486,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509814,-99) , 
2, 24.5, 0, 0, 0.532178,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258142,-99) , 
11, -4.01089, 1, 0, 0.409628,-99) , 
3, 0.998065, 1, 0, 0.516244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273073,-99) , 
5, 2.23577, 1, 0, 0.511096,-99) , 
12, -1714.62, 1, 0, 0.530664,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561064,-99) , 
7, 24.2065, 1, 0, 0.616094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439336,-99) , 
0, 13.5, 0, 0, 0.551482,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395033,-99) , 
8, 1.09549, 1, 0, 0.49095,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483156,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198729,-99) , 
12, -1733.37, 1, 0, 0.25467,-99) , 
12, 7103.96, 0, 0, 0.31587,-99) , 
0, 14.5, 1, 0, 0.392037,-99) , 
13, 1.5, 0, 0, 0.446822,-99) , 
4, 1.4733, 1, 0, 0.504944,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0133703);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461735,-99) , 
7, 14.9828, 0, 0, 0.532866,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357645,-99) , 
2, 28.5, 0, 0, 0.465198,-99) , 
7, 30.9989, 1, 0, 0.50848,-99) , 
3, 0.83214, 1, 0, 0.517059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345395,-99) , 
3, 0.75138, 0, 0, 0.510771,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258718,-99) , 
8, 0.704016, 1, 0, 0.358174,-99) , 
11, -3.06745, 1, 0, 0.407833,-99) , 
6, 0.999971, 0, 0, 0.451365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0616743,-99) , 
7, 56.5264, 1, 0, 0.415518,-99) , 
4, 1.53971, 1, 0, 0.485989,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0155289);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533358,-99) , 
10, 0.672161, 0, 0, 0.568742,-99) , 
11, -4.43742, 1, 0, 0.601468,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390578,-99) , 
11, -3.95966, 0, 0, 0.520232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374582,-99) , 
8, 2.52886, 1, 0, 0.493214,-99) , 
6, 0.605899, 1, 0, 0.542117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389473,-99) , 
8, 0.371994, 0, 0, 0.522217,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32087,-99) , 
9, 55.7339, 0, 0, 0.483715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270311,-99) , 
9, 49.6029, 1, 0, 0.356487,-99) , 
8, 1.13173, 1, 0, 0.435787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.040424,-99) , 
7, 7.12233, 0, 0, 0.424376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104151,-99) , 
7, 125.986, 1, 0, 0.41509,-99) , 
5, 1.64762, 1, 0, 0.473173,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0159238);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555993,-99) , 
1, 37.5, 1, 0, 0.68176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488165,-99) , 
5, 1.49839, 1, 0, 0.522301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247168,-99) , 
1, 30.5, 1, 0, 0.509704,-99) , 
2, 33.5, 0, 0, 0.524689,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307428,-99) , 
2, 55.5, 0, 0, 0.466862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.033834,-99) , 
1, 17.5, 0, 0, 0.377559,-99) , 
7, 71.9881, 1, 0, 0.50342,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526369,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249402,-99) , 
12, -976.333, 0, 0, 0.429736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208614,-99) , 
11, 0.349949, 0, 0, 0.356111,-99) , 
11, -1.8814, 1, 0, 0.401819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0747337,-99) , 
4, 2.03167, 1, 0, 0.388811,-99) , 
7, 11.4763, 0, 0, 0.48421,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00693163);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770645,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362215,-99) , 
1, 34.5, 1, 0, 0.513764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14645,-99) , 
7, 110.635, 1, 0, 0.507026,-99) , 
2, 60.5, 0, 0, 0.514835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0977643,-99) , 
7, 236.66, 1, 0, 0.511634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266141,-99) , 
1, 70.5, 1, 0, 0.503929,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0120352);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565459,-99) , 
4, 1.09059, 1, 0, 0.631056,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544048,-99) , 
12, 2046.14, 0, 0, 0.570968,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405427,-99) , 
11, -1.22701, 1, 0, 0.476919,-99) , 
11, 0.774304, 0, 0, 0.518784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307925,-99) , 
3, 0.999101, 1, 0, 0.50546,-99) , 
11, -5.57608, 1, 0, 0.519154,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409582,-99) , 
8, 0.436837, 1, 0, 0.542764,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135404,-99) , 
10, 0.0767199, 0, 0, 0.382521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125398,-99) , 
7, 23.1122, 1, 0, 0.318081,-99) , 
1, 14.5, 0, 0, 0.411962,-99) , 
4, 1.74845, 1, 0, 0.503468,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.00836304);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384762,-99) , 
4, 1.8312, 1, 0, 0.606751,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364098,-99) , 
8, 2.72619, 0, 0, 0.432334,-99) , 
8, 2.20549, 1, 0, 0.573857,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488321,-99) , 
2, 58.5, 0, 0, 0.502751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215701,-99) , 
5, 2.41094, 1, 0, 0.4979,-99) , 
10, 0.127061, 1, 0, 0.521167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327845,-99) , 
9, 470.672, 1, 0, 0.512212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170539,-99) , 
13, 0.5, 0, 0, 0.353189,-99) , 
3, 0.837754, 0, 0, 0.501199,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0111329);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515616,-99) , 
2, 29.5, 0, 0, 0.5274,-99) , 
11, -8.48652, 1, 0, 0.535223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334501,-99) , 
7, 7.37181, 0, 0, 0.528297,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349017,-99) , 
1, 70.5, 1, 0, 0.609568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296725,-99) , 
0, 62.5, 0, 0, 0.505628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106292,-99) , 
1, 21.5, 0, 0, 0.422736,-99) , 
7, 65.812, 1, 0, 0.515622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283399,-99) , 
4, 2.04909, 1, 0, 0.506851,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0154248);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607126,-99) , 
3, 0.987942, 1, 0, 0.676188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503201,-99) , 
13, 0.5, 0, 0, 0.626493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523374,-99) , 
12, 11295.7, 0, 0, 0.539352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271616,-99) , 
7, 35.112, 1, 0, 0.509713,-99) , 
2, 23.5, 0, 0, 0.536567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340725,-99) , 
7, 145.535, 1, 0, 0.528765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51217,-99) , 
8, 0.235169, 1, 0, 0.60433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415766,-99) , 
10, 0.359553, 1, 0, 0.542633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384935,-99) , 
2, 10.5, 0, 0, 0.495507,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110748,-99) , 
6, 0.130333, 1, 0, 0.169869,-99) , 
9, 49.6029, 1, 0, 0.320714,-99) , 
8, 0.606353, 1, 0, 0.417612,-99) , 
5, 1.9229, 1, 0, 0.503746,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0112906);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587979,-99) , 
12, 2029.06, 0, 0, 0.673282,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327653,-99) , 
7, 35.2691, 1, 0, 0.536189,-99) , 
2, 24.5, 0, 0, 0.569081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329418,-99) , 
5, 0.15494, 0, 0, 0.548845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446667,-99) , 
6, 1.01414, 0, 0, 0.461131,-99) , 
8, 0.0734795, 1, 0, 0.478991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211146,-99) , 
7, 119.168, 1, 0, 0.466895,-99) , 
4, 1.18723, 1, 0, 0.508045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161802,-99) , 
7, 7.11511, 0, 0, 0.500901,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0106067);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658525,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288444,-99) , 
5, 1.96672, 1, 0, 0.625273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368145,-99) , 
3, 0.998914, 1, 0, 0.50006,-99) , 
11, -5.54012, 1, 0, 0.515066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11446,-99) , 
5, 2.32145, 1, 0, 0.504868,-99) , 
8, 0.0713757, 1, 0, 0.515362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240049,-99) , 
3, 0.941964, 0, 0, 0.4062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0712403,-99) , 
4, 1.61531, 1, 0, 0.353167,-99) , 
2, 8.5, 0, 0, 0.500689,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0124066);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396337,-99) , 
4, 0.34478, 0, 0, 0.545257,-99) , 
6, 0.134755, 1, 0, 0.565671,-99) , 
10, 1.0814, 0, 0, 0.580343,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504069,-99) , 
0, 12.5, 0, 0, 0.594075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413264,-99) , 
11, -1.88482, 1, 0, 0.478654,-99) , 
11, 2.88046, 0, 0, 0.508281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0753423,-99) , 
1, 26.5, 0, 0, 0.311045,-99) , 
7, 56.262, 1, 0, 0.488468,-99) , 
5, 1.51079, 1, 0, 0.528648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24729,-99) , 
6, 0.478627, 0, 0, 0.392502,-99) , 
9, 29.2374, 0, 0, 0.515709,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0156707);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.817034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64128,-99) , 
0, 24.5, 0, 0, 0.719239,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521064,-99) , 
3, 0.985225, 1, 0, 0.572934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44683,-99) , 
3, 0.926751, 0, 0, 0.55204,-99) , 
6, 0.200463, 1, 0, 0.580836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381375,-99) , 
8, 0.386571, 0, 0, 0.55798,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533192,-99) , 
3, 0.992753, 0, 0, 0.565156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445036,-99) , 
3, 0.997594, 1, 0, 0.54236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294931,-99) , 
4, 2.01738, 1, 0, 0.521135,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352471,-99) , 
6, 0.195109, 0, 0, 0.461164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110528,-99) , 
7, 95.5395, 1, 0, 0.442048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468515,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0823169,-99) , 
5, 1.88625, 1, 0, 0.182179,-99) , 
8, 0.284347, 1, 0, 0.255466,-99) , 
3, 0.94309, 0, 0, 0.401268,-99) , 
13, 1.5, 0, 0, 0.440524,-99) , 
5, 1.49301, 1, 0, 0.488441,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0131383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498968,-99) , 
2, 23.5, 0, 0, 0.573508,-99) , 
8, 1.16497, 1, 0, 0.62378,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514564,-99) , 
11, -5.24275, 1, 0, 0.533908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289436,-99) , 
6, 0.983407, 1, 0, 0.522107,-99) , 
6, 1.0058, 0, 0, 0.538502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336371,-99) , 
9, 24.6227, 0, 0, 0.526344,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65395,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411267,-99) , 
4, 1.9554, 0, 0, 0.527927,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495727,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199222,-99) , 
8, 0.193507, 1, 0, 0.266187,-99) , 
5, 1.97619, 1, 0, 0.329357,-99) , 
9, 44.3572, 1, 0, 0.392407,-99) , 
8, 0.0729725, 1, 0, 0.43439,-99) , 
5, 1.89503, 1, 0, 0.503262,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.010564);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547548,-99) , 
5, 1.16294, 0, 0, 0.607911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387728,-99) , 
7, 48.4275, 0, 0, 0.458153,-99) , 
9, 66.2884, 0, 0, 0.565129,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413027,-99) , 
9, 54.6287, 0, 0, 0.544277,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.10873,-99) , 
5, 2.32327, 1, 0, 0.437736,-99) , 
8, 0.682786, 1, 0, 0.485041,-99) , 
5, 1.4617, 1, 0, 0.514823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279809,-99) , 
3, 0.737014, 0, 0, 0.506816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138448,-99) , 
7, 195.2, 1, 0, 0.500747,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0118309);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.841113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641093,-99) , 
5, 1.55253, 1, 0, 0.726844,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509858,-99) , 
2, 39.5, 0, 0, 0.602005,-99) , 
7, 35.4057, 1, 0, 0.666135,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365578,-99) , 
10, 0.166961, 1, 0, 0.490873,-99) , 
2, 13.5, 0, 0, 0.586583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48184,-99) , 
8, 1.03489, 0, 0, 0.589988,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429715,-99) , 
11, 0.547171, 0, 0, 0.48636,-99) , 
11, -4.95924, 1, 0, 0.50123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275331,-99) , 
3, 0.999477, 1, 0, 0.490422,-99) , 
6, 0.218184, 1, 0, 0.514224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198744,-99) , 
8, 0.248738, 1, 0, 0.330499,-99) , 
5, 2.18059, 1, 0, 0.50057,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0118862);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173858,-99) , 
7, 221.225, 1, 0, 0.619996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320503,-99) , 
1, 10.5, 0, 0, 0.595105,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333118,-99) , 
7, 30.3877, 1, 0, 0.504436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15306,-99) , 
0, 28.5, 1, 0, 0.489966,-99) , 
2, 21.5, 0, 0, 0.519356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225254,-99) , 
1, 83.5, 1, 0, 0.513343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196176,-99) , 
7, 6.99887, 0, 0, 0.506955,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.01321);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761301,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47765,-99) , 
11, 1.04604, 0, 0, 0.527675,-99) , 
11, -4.52092, 1, 0, 0.552145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
3, 0.998247, 0, 0, 0.513059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0820855,-99) , 
7, 47.6802, 1, 0, 0.491059,-99) , 
1, 15.5, 0, 0, 0.514953,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203254,-99) , 
7, 33.3326, 1, 0, 0.348308,-99) , 
3, 0.999452, 1, 0, 0.505844,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622566,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168169,-99) , 
12, 9496.24, 0, 0, 0.250307,-99) , 
8, 0.0966304, 1, 0, 0.374038,-99) , 
5, 2.15693, 1, 0, 0.4948,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0110385);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720493,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505475,-99) , 
2, 55.5, 0, 0, 0.570606,-99) , 
13, 1.5, 0, 0, 0.620253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20882,-99) , 
5, 2.36561, 1, 0, 0.524569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177466,-99) , 
7, 58.4849, 1, 0, 0.512962,-99) , 
2, 29.5, 0, 0, 0.532352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0917973,-99) , 
5, 2.54882, 1, 0, 0.528362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3084,-99) , 
11, 4.73224, 0, 0, 0.417224,-99) , 
11, -5.5509, 1, 0, 0.467406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244808,-99) , 
5, 2.06229, 1, 0, 0.4424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191069,-99) , 
7, 108.659, 1, 0, 0.416826,-99) , 
3, 0.997638, 1, 0, 0.50659,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0144649);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534236,-99) , 
10, 0.242106, 0, 0, 0.661136,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505527,-99) , 
11, 6.27204, 0, 0, 0.520071,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315844,-99) , 
12, -5355.85, 1, 0, 0.400946,-99) , 
3, 0.997989, 1, 0, 0.500623,-99) , 
12, 11093.9, 0, 0, 0.519759,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0599969,-99) , 
1, 31.5, 0, 0, 0.350022,-99) , 
7, 100.034, 1, 0, 0.504217,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350042,-99) , 
4, 1.89237, 1, 0, 0.539841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307499,-99) , 
3, 0.849947, 0, 0, 0.516385,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253001,-99) , 
11, 0.546418, 0, 0, 0.362862,-99) , 
9, 65.8539, 0, 0, 0.469752,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152908,-99) , 
3, 0.988428, 1, 0, 0.280483,-99) , 
7, 17.1664, 1, 0, 0.429558,-99) , 
2, 11.5, 0, 0, 0.479516,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0101218);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650226,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47508,-99) , 
5, 1.50807, 1, 0, 0.514281,-99) , 
11, 5.89492, 0, 0, 0.528232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331674,-99) , 
7, 35.6915, 1, 0, 0.452486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172998,-99) , 
4, 1.57906, 1, 0, 0.431614,-99) , 
8, 2.21412, 1, 0, 0.505066,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224275,-99) , 
8, 0.941326, 0, 0, 0.346936,-99) , 
9, 29.0329, 0, 0, 0.492863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479585,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15138,-99) , 
12, 64.8529, 1, 0, 0.267575,-99) , 
11, -1.90428, 1, 0, 0.348729,-99) , 
4, 1.77135, 1, 0, 0.4757,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0120962);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502288,-99) , 
5, 1.6939, 1, 0, 0.653877,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439937,-99) , 
5, 1.91916, 1, 0, 0.523875,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394522,-99) , 
9, 50.13, 1, 0, 0.428318,-99) , 
8, 1.83624, 1, 0, 0.49278,-99) , 
2, 28.5, 0, 0, 0.505895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22538,-99) , 
1, 42.5, 1, 0, 0.49761,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309497,-99) , 
9, 93.8191, 1, 0, 0.459081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0887823,-99) , 
2, 35.5, 0, 0, 0.374481,-99) , 
7, 65.4446, 1, 0, 0.482525,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00836652);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424935,-99) , 
1, 9.5, 0, 0, 0.535094,-99) , 
11, -6.63236, 1, 0, 0.548598,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352289,-99) , 
6, 0.717358, 0, 0, 0.496097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235233,-99) , 
0, 10.5, 1, 0, 0.367473,-99) , 
2, 9.5, 0, 0, 0.477288,-99) , 
6, 0.630066, 1, 0, 0.517503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286093,-99) , 
5, 2.36545, 1, 0, 0.510974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220283,-99) , 
3, 0.999709, 1, 0, 0.503931,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0103393);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439441,-99) , 
7, 173.719, 1, 0, 0.635271,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295145,-99) , 
5, 2.3653, 1, 0, 0.50775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255538,-99) , 
3, 0.741311, 0, 0, 0.500172,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344728,-99) , 
6, 0.849624, 1, 0, 0.509563,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160809,-99) , 
7, 56.2806, 1, 0, 0.280328,-99) , 
0, 38.5, 0, 0, 0.393782,-99) , 
7, 40.8907, 1, 0, 0.482853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11602,-99) , 
0, 71.5, 1, 0, 0.475,-99) , 
2, 55.5, 0, 0, 0.486225,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0105428);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592872,-99) , 
11, -4.18245, 1, 0, 0.616971,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200031,-99) , 
1, 28.5, 0, 0, 0.47573,-99) , 
7, 92.2262, 1, 0, 0.590449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340432,-99) , 
3, 0.999455, 1, 0, 0.572431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471133,-99) , 
11, -5.91692, 1, 0, 0.484898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249952,-99) , 
5, 2.36518, 1, 0, 0.477577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149351,-99) , 
0, 28.5, 1, 0, 0.464738,-99) , 
2, 21.5, 0, 0, 0.495879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0868728,-99) , 
7, 233.947, 1, 0, 0.490789,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0115568);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538047,-99) , 
2, 23.5, 0, 0, 0.594544,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275137,-99) , 
10, 0.511412, 1, 0, 0.497449,-99) , 
9, 110.032, 1, 0, 0.540056,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289156,-99) , 
0, 15.5, 1, 0, 0.475488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184228,-99) , 
7, 26.3095, 1, 0, 0.454142,-99) , 
2, 12.5, 0, 0, 0.505772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0814208,-99) , 
7, 237.131, 1, 0, 0.500906,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487903,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49703,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0935855,-99) , 
5, 1.83583, 1, 0, 0.217842,-99) , 
9, 18.2267, 1, 0, 0.3083,-99) , 
13, 1.5, 0, 0, 0.371158,-99) , 
9, 33.6228, 0, 0, 0.485927,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0103818);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742079,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539912,-99) , 
3, 0.988828, 1, 0, 0.5922,-99) , 
5, 1.4034, 0, 0, 0.618732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447266,-99) , 
8, 0.4309, 0, 0, 0.591875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450297,-99) , 
6, 1.13223, 1, 0, 0.551209,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364805,-99) , 
11, 0.243961, 0, 0, 0.435969,-99) , 
6, 1.028, 0, 0, 0.48493,-99) , 
6, 0.795665, 1, 0, 0.547347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533944,-99) , 
7, 11.6569, 1, 0, 0.567003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342222,-99) , 
4, 2.01822, 1, 0, 0.545522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590219,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377669,-99) , 
11, -0.510472, 1, 0, 0.43217,-99) , 
11, 5.9849, 0, 0, 0.450817,-99) , 
13, 1.5, 0, 0, 0.48167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176952,-99) , 
7, 124.198, 1, 0, 0.471961,-99) , 
5, 1.51011, 1, 0, 0.504546,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0121822);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616554,-99) , 
10, 0.465343, 1, 0, 0.68361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519597,-99) , 
9, 214.592, 1, 0, 0.644492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490641,-99) , 
7, 16.094, 0, 0, 0.603042,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498914,-99) , 
1, 12.5, 0, 0, 0.594617,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360813,-99) , 
6, 0.587669, 1, 0, 0.471391,-99) , 
10, 0.177465, 1, 0, 0.518503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29983,-99) , 
2, 8.5, 0, 0, 0.495259,-99) , 
11, -0.780263, 1, 0, 0.536275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464869,-99) , 
11, 9.48189, 0, 0, 0.478339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251029,-99) , 
1, 35.5, 1, 0, 0.464377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141437,-99) , 
6, 0.181154, 0, 0, 0.454859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212943,-99) , 
7, 126.168, 1, 0, 0.445774,-99) , 
4, 1.18031, 1, 0, 0.490986,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.013083);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43621,-99) , 
7, 38.5778, 1, 0, 0.548933,-99) , 
2, 49.5, 0, 0, 0.560551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427027,-99) , 
9, 32.319, 0, 0, 0.545437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329179,-99) , 
9, 428.642, 1, 0, 0.533352,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456192,-99) , 
5, 2.16654, 1, 0, 0.617779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420087,-99) , 
8, 1.91532, 1, 0, 0.57533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380825,-99) , 
3, 0.995339, 1, 0, 0.520322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614548,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.091041,-99) , 
3, 0.916156, 0, 0, 0.303255,-99) , 
8, 2.77047, 0, 0, 0.351515,-99) , 
8, 0.0785923, 1, 0, 0.389252,-99) , 
13, 1.5, 0, 0, 0.438414,-99) , 
5, 1.76522, 1, 0, 0.50001,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.014556);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759462,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575179,-99) , 
11, 1.90181, 0, 0, 0.614679,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461239,-99) , 
11, 6.35057, 0, 0, 0.512306,-99) , 
3, 0.990691, 1, 0, 0.571405,-99) , 
12, 11948.1, 0, 0, 0.58514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370236,-99) , 
4, 0.753163, 0, 0, 0.461459,-99) , 
2, 9.5, 0, 0, 0.565938,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512834,-99) , 
9, 80.2279, 0, 0, 0.646537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380261,-99) , 
8, 2.14107, 1, 0, 0.477033,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112387,-99) , 
5, 1.73873, 1, 0, 0.296537,-99) , 
7, 48.9734, 1, 0, 0.452988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148329,-99) , 
6, 0.229323, 0, 0, 0.439661,-99) , 
8, 0.116067, 1, 0, 0.467381,-99) , 
4, 1.18096, 1, 0, 0.515253,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0145152);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719652,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518239,-99) , 
7, 25.215, 1, 0, 0.630863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488075,-99) , 
0, 36.5, 0, 0, 0.519329,-99) , 
11, 2.14152, 0, 0, 0.553598,-99) , 
6, 0.0856462, 1, 0, 0.572586,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3005,-99) , 
1, 30.5, 1, 0, 0.514771,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0507196,-99) , 
1, 17.5, 0, 0, 0.349416,-99) , 
7, 60.0813, 1, 0, 0.491544,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 1.90265, 1, 0, 0.325088,-99) , 
3, 0.881722, 0, 0, 0.473421,-99) , 
13, 1.5, 0, 0, 0.504667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.103831,-99) , 
5, 2.4849, 1, 0, 0.499601,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0153421);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.807273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496993,-99) , 
11, 1.35198, 0, 0, 0.597466,-99) , 
5, 1.52237, 1, 0, 0.658496,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519025,-99) , 
2, 27.5, 0, 0, 0.540596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248577,-99) , 
7, 143.918, 1, 0, 0.531413,-99) , 
6, 0.186281, 1, 0, 0.561731,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408374,-99) , 
9, 41.54, 1, 0, 0.546721,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354929,-99) , 
2, 24.5, 0, 0, 0.398509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172978,-99) , 
5, 2.09975, 1, 0, 0.374196,-99) , 
11, 1.75327, 0, 0, 0.429802,-99) , 
9, 61.4479, 0, 0, 0.524549,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622537,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337367,-99) , 
3, 0.986246, 1, 0, 0.445307,-99) , 
11, -1.68057, 1, 0, 0.49911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169713,-99) , 
5, 1.60269, 1, 0, 0.332923,-99) , 
9, 104.75, 1, 0, 0.426237,-99) , 
8, 2.21919, 1, 0, 0.501489,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0114917);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544235,-99) , 
8, 0.236669, 1, 0, 0.559116,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17121,-99) , 
7, 24.8862, 1, 0, 0.479331,-99) , 
2, 11.5, 0, 0, 0.540365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388975,-99) , 
9, 473.021, 1, 0, 0.531663,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471171,-99) , 
5, 1.78341, 0, 0, 0.529304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157984,-99) , 
4, 1.84635, 1, 0, 0.499651,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176032,-99) , 
12, 3006, 1, 0, 0.263772,-99) , 
0, 12.5, 1, 0, 0.43485,-99) , 
7, 11.5022, 0, 0, 0.512845,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 17.5, 0, 0, 0.317929,-99) , 
7, 108.226, 1, 0, 0.502575,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0110513);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724345,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507451,-99) , 
7, 29.9568, 1, 0, 0.562066,-99) , 
12, 9136.44, 0, 0, 0.58644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434798,-99) , 
7, 12.6986, 0, 0, 0.558617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32702,-99) , 
5, 0.359935, 0, 0, 0.537705,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346452,-99) , 
5, 2.17537, 1, 0, 0.453958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0961261,-99) , 
7, 61.645, 1, 0, 0.439971,-99) , 
2, 41.5, 0, 0, 0.456471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0381811,-99) , 
7, 207.741, 1, 0, 0.45013,-99) , 
5, 1.55013, 1, 0, 0.489945,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0109419);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480377,-99) , 
9, 97.9743, 1, 0, 0.593993,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443168,-99) , 
9, 66.2102, 0, 0, 0.51463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17517,-99) , 
5, 2.30044, 1, 0, 0.50916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193735,-99) , 
7, 64.9416, 1, 0, 0.496189,-99) , 
2, 35.5, 0, 0, 0.509696,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465759,-99) , 
8, 0.402532, 1, 0, 0.529981,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124227,-99) , 
5, 2.27687, 1, 0, 0.378193,-99) , 
1, 11.5, 0, 0, 0.458964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134648,-99) , 
7, 170.38, 1, 0, 0.448032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182721,-99) , 
3, 0.941518, 0, 0, 0.412022,-99) , 
4, 1.6825, 1, 0, 0.491813,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0122289);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478136,-99) , 
7, 22.0562, 0, 0, 0.553244,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141927,-99) , 
1, 17.5, 0, 0, 0.453323,-99) , 
7, 50.3979, 1, 0, 0.524867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15688,-99) , 
5, 2.2938, 1, 0, 0.454216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106425,-99) , 
7, 31.484, 1, 0, 0.438342,-99) , 
2, 13.5, 0, 0, 0.485184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0680482,-99) , 
7, 200.77, 1, 0, 0.481046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230533,-99) , 
1, 75.5, 1, 0, 0.47468,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00562425);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535592,-99) , 
5, 1.72301, 1, 0, 0.652499,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49292,-99) , 
11, 1.05333, 0, 0, 0.52075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268317,-99) , 
7, 6.9953, 0, 0, 0.515747,-99) , 
11, -7.43978, 1, 0, 0.524423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11116,-99) , 
5, 2.53693, 1, 0, 0.521137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195707,-99) , 
3, 0.999761, 1, 0, 0.515606,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00997675);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370768,-99) , 
5, 1.95305, 1, 0, 0.643064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300866,-99) , 
1, 13.5, 0, 0, 0.576531,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229722,-99) , 
0, 28.5, 1, 0, 0.48057,-99) , 
2, 24.5, 0, 0, 0.502337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24647,-99) , 
1, 83.5, 1, 0, 0.496351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475422,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179298,-99) , 
11, 0.571981, 0, 0, 0.277179,-99) , 
1, 14.5, 0, 0, 0.376107,-99) , 
9, 33.0928, 0, 0, 0.482457,-99) , 
11, -8.18842, 1, 0, 0.492172,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.00851848);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527743,-99) , 
2, 37.5, 0, 0, 0.539348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314001,-99) , 
9, 89.1974, 0, 0, 0.37927,-99) , 
8, 0.168368, 0, 0, 0.524923,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251407,-99) , 
2, 47.5, 0, 0, 0.39321,-99) , 
1, 39.5, 1, 0, 0.513389,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274277,-99) , 
8, 0.241481, 1, 0, 0.366569,-99) , 
5, 2.1682, 1, 0, 0.501833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148133,-99) , 
7, 177.307, 1, 0, 0.495578,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0139065);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53187,-99) , 
5, 1.72329, 1, 0, 0.614375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379304,-99) , 
2, 29.5, 0, 0, 0.501368,-99) , 
1, 22.5, 1, 0, 0.567076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343056,-99) , 
9, 370.274, 1, 0, 0.552927,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351196,-99) , 
7, 7.8261, 0, 0, 0.518258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233518,-99) , 
5, 2.32273, 1, 0, 0.507565,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298217,-99) , 
10, 0.28496, 1, 0, 0.377354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0996946,-99) , 
4, 1.46974, 1, 0, 0.312067,-99) , 
7, 22.7204, 1, 0, 0.474298,-99) , 
2, 16.5, 0, 0, 0.504589,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129007,-99) , 
2, 65.5, 0, 0, 0.365328,-99) , 
7, 100.046, 1, 0, 0.49543,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0153485);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762853,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451931,-99) , 
7, 30.3663, 1, 0, 0.566287,-99) , 
2, 29.5, 0, 0, 0.633919,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517548,-99) , 
5, 1.36521, 0, 0, 0.558469,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370593,-99) , 
8, 0.754104, 1, 0, 0.472179,-99) , 
5, 1.51287, 1, 0, 0.5174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197066,-99) , 
7, 309.468, 1, 0, 0.511234,-99) , 
6, 0.202193, 1, 0, 0.539809,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493353,-99) , 
9, 151.04, 0, 0, 0.527324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330183,-99) , 
3, 0.99246, 0, 0, 0.419862,-99) , 
7, 9.20148, 0, 0, 0.507079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171779,-99) , 
5, 2.17006, 1, 0, 0.482558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135813,-99) , 
7, 30.234, 1, 0, 0.45568,-99) , 
2, 14.5, 0, 0, 0.49837,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0094626);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678378,-99) , 
9, 116.067, 1, 0, 0.730786,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218048,-99) , 
7, 137.147, 1, 0, 0.512222,-99) , 
4, 0.947225, 1, 0, 0.604854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32125,-99) , 
5, 2.32232, 1, 0, 0.520644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256014,-99) , 
7, 52.2243, 1, 0, 0.509724,-99) , 
2, 29.5, 0, 0, 0.524665,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293562,-99) , 
4, 1.45969, 0, 0, 0.389522,-99) , 
9, 30.0286, 0, 0, 0.512157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214209,-99) , 
1, 84.5, 1, 0, 0.506669,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0145132);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.796195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624708,-99) , 
6, 0.44685, 1, 0, 0.700266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551484,-99) , 
10, 0.44883, 1, 0, 0.655222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757031,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363919,-99) , 
11, -0.488789, 0, 0, 0.472285,-99) , 
12, 10903.8, 0, 0, 0.540714,-99) , 
3, 0.987153, 1, 0, 0.594053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456741,-99) , 
8, 0.414125, 0, 0, 0.526771,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185128,-99) , 
4, 1.46687, 1, 0, 0.417868,-99) , 
8, 2.27425, 1, 0, 0.502462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253472,-99) , 
3, 0.999376, 1, 0, 0.486928,-99) , 
13, 1.5, 0, 0, 0.516511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129201,-99) , 
8, 0.246468, 1, 0, 0.318025,-99) , 
5, 2.16849, 1, 0, 0.502046,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0111023);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242282,-99) , 
7, 134.622, 1, 0, 0.54943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320273,-99) , 
1, 52.5, 1, 0, 0.540577,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439636,-99) , 
3, 0.894122, 1, 0, 0.547925,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20254,-99) , 
3, 0.747391, 0, 0, 0.415943,-99) , 
13, 1.5, 0, 0, 0.454541,-99) , 
3, 0.954266, 0, 0, 0.516376,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567853,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415073,-99) , 
2, 18.5, 0, 0, 0.493097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139623,-99) , 
6, 0.544376, 0, 0, 0.200037,-99) , 
11, 4.75946, 0, 0, 0.345629,-99) , 
11, -5.4362, 1, 0, 0.4096,-99) , 
3, 0.998465, 1, 0, 0.500732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195472,-99) , 
7, 7.00705, 0, 0, 0.495553,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0166976);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535065,-99) , 
8, 0.576425, 0, 0, 0.653589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507788,-99) , 
9, 221.807, 1, 0, 0.615905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419997,-99) , 
9, 48.8995, 0, 0, 0.576585,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449887,-99) , 
12, 4592.12, 1, 0, 0.570347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38733,-99) , 
3, 0.95239, 0, 0, 0.513868,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288194,-99) , 
0, 28.5, 0, 0, 0.352729,-99) , 
5, 1.47645, 0, 0, 0.387894,-99) , 
3, 0.995521, 1, 0, 0.472595,-99) , 
6, 0.593104, 1, 0, 0.522622,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50512,-99) , 
6, 0.360112, 1, 0, 0.588378,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304463,-99) , 
6, 0.50659, 0, 0, 0.423695,-99) , 
1, 11.5, 0, 0, 0.520048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617531,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315939,-99) , 
8, 0.201417, 1, 0, 0.359032,-99) , 
11, 6.26094, 0, 0, 0.393787,-99) , 
13, 1.5, 0, 0, 0.439751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0788636,-99) , 
7, 117.588, 1, 0, 0.425851,-99) , 
5, 1.74186, 1, 0, 0.486635,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00794769);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491397,-99) , 
3, 0.957594, 0, 0, 0.542503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427866,-99) , 
11, 5.1206, 0, 0, 0.467387,-99) , 
3, 0.988269, 1, 0, 0.509771,-99) , 
11, -8.15334, 1, 0, 0.516936,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35684,-99) , 
3, 0.996089, 1, 0, 0.485603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261865,-99) , 
7, 12.0298, 0, 0, 0.440958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162698,-99) , 
7, 125.692, 1, 0, 0.427622,-99) , 
4, 1.71865, 1, 0, 0.502273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275353,-99) , 
3, 0.999712, 1, 0, 0.496061,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0166946);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756325,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594273,-99) , 
9, 101.13, 1, 0, 0.659934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482388,-99) , 
0, 17.5, 0, 0, 0.585106,-99) , 
5, 1.62033, 0, 0, 0.629885,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508671,-99) , 
10, 0.240444, 0, 0, 0.603882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397143,-99) , 
3, 0.997727, 1, 0, 0.557737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333923,-99) , 
6, 0.495512, 0, 0, 0.49107,-99) , 
4, 1.19074, 1, 0, 0.557329,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714524,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443267,-99) , 
4, 1.63768, 0, 0, 0.535838,-99) , 
1, 14.5, 0, 0, 0.581874,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337283,-99) , 
9, 348.16, 1, 0, 0.49346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306078,-99) , 
6, 1.01361, 0, 0, 0.387114,-99) , 
6, 0.930122, 1, 0, 0.468311,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309844,-99) , 
7, 21.2257, 0, 0, 0.441597,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0263428,-99) , 
9, 126.033, 1, 0, 0.182784,-99) , 
8, 0.49646, 1, 0, 0.325239,-99) , 
5, 1.90809, 1, 0, 0.439562,-99) , 
11, 5.13091, 0, 0, 0.461174,-99) , 
13, 1.5, 0, 0, 0.489046,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0147799);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526493,-99) , 
1, 24.5, 1, 0, 0.640024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389976,-99) , 
8, 2.30494, 1, 0, 0.592158,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337926,-99) , 
5, 2.15685, 1, 0, 0.487352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214703,-99) , 
0, 28.5, 1, 0, 0.477665,-99) , 
2, 20.5, 0, 0, 0.504201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405261,-99) , 
4, 0.862074, 1, 0, 0.562904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305534,-99) , 
2, 46.5, 0, 0, 0.474583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0213944,-99) , 
1, 17.5, 0, 0, 0.38647,-99) , 
7, 65.7027, 1, 0, 0.489463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234713,-99) , 
7, 7.36943, 0, 0, 0.483306,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0140626);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542475,-99) , 
3, 0.989195, 1, 0, 0.587874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358285,-99) , 
8, 1.1267, 1, 0, 0.443334,-99) , 
3, 0.943884, 0, 0, 0.555404,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33684,-99) , 
9, 112.939, 1, 0, 0.493886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207465,-99) , 
1, 13.5, 0, 0, 0.297396,-99) , 
3, 0.997825, 1, 0, 0.452063,-99) , 
10, 0.385787, 1, 0, 0.519416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342409,-99) , 
9, 396.909, 1, 0, 0.507901,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451281,-99) , 
7, 18.036, 0, 0, 0.55001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304912,-99) , 
12, 3950.32, 1, 0, 0.46957,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463996,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0876559,-99) , 
13, 1.5, 0, 0, 0.206286,-99) , 
9, 61.9197, 1, 0, 0.323305,-99) , 
8, 0.4075, 1, 0, 0.395171,-99) , 
5, 1.98571, 1, 0, 0.487098,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0109963);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500953,-99) , 
7, 57.3401, 1, 0, 0.567254,-99) , 
6, 0.115809, 1, 0, 0.599898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39289,-99) , 
8, 2.58208, 1, 0, 0.57375,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447175,-99) , 
5, 1.89503, 1, 0, 0.517009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214909,-99) , 
7, 40.4627, 1, 0, 0.502436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0208652,-99) , 
5, 1.89542, 1, 0, 0.231549,-99) , 
1, 22.5, 1, 0, 0.483534,-99) , 
2, 24.5, 0, 0, 0.502313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245127,-99) , 
7, 174.536, 1, 0, 0.496393,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0121469);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200672,-99) , 
1, 14.5, 0, 0, 0.616355,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192686,-99) , 
7, 59.231, 1, 0, 0.514605,-99) , 
2, 33.5, 0, 0, 0.527397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282359,-99) , 
1, 62.5, 1, 0, 0.518119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278222,-99) , 
8, 1.36493, 0, 0, 0.372801,-99) , 
9, 32.4003, 0, 0, 0.5031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348846,-99) , 
10, 0.100157, 1, 0, 0.455969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115947,-99) , 
5, 2.24355, 1, 0, 0.252868,-99) , 
8, 0.4075, 1, 0, 0.360324,-99) , 
5, 2.09054, 1, 0, 0.486764,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.00927393);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528609,-99) , 
6, 0.350038, 1, 0, 0.576225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31906,-99) , 
2, 11.5, 0, 0, 0.561043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313237,-99) , 
3, 0.999316, 1, 0, 0.547084,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368181,-99) , 
7, 33.188, 1, 0, 0.493438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247047,-99) , 
5, 2.31904, 1, 0, 0.485331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0237245,-99) , 
7, 90.2996, 1, 0, 0.473296,-99) , 
1, 15.5, 0, 0, 0.502159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25822,-99) , 
1, 83.5, 1, 0, 0.496756,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0105144);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746945,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464165,-99) , 
12, 2743.64, 1, 0, 0.531488,-99) , 
3, 0.902122, 1, 0, 0.557904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334116,-99) , 
3, 0.909429, 0, 0, 0.503477,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220148,-99) , 
1, 14.5, 0, 0, 0.401997,-99) , 
7, 30.8967, 1, 0, 0.470106,-99) , 
13, 1.5, 0, 0, 0.496399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277542,-99) , 
5, 2.3005, 1, 0, 0.488971,-99) , 
8, 0.042475, 1, 0, 0.497169,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0163863);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619575,-99) , 
1, 28.5, 1, 0, 0.701401,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0289797,-99) , 
1, 17.5, 0, 0, 0.507912,-99) , 
7, 71.6521, 1, 0, 0.607935,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415272,-99) , 
9, 35.1387, 0, 0, 0.53867,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133746,-99) , 
1, 12.5, 0, 0, 0.373419,-99) , 
7, 37.6316, 1, 0, 0.51914,-99) , 
2, 28.5, 0, 0, 0.534335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322551,-99) , 
1, 64.5, 1, 0, 0.526864,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693808,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281423,-99) , 
13, 1.5, 0, 0, 0.386417,-99) , 
10, 0.0537014, 1, 0, 0.443336,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
2, 11.5, 0, 0, 0.267307,-99) , 
5, 2.1581, 1, 0, 0.380271,-99) , 
4, 2.34991, 0, 0, 0.4052,-99) , 
5, 1.9523, 1, 0, 0.503696,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0108162);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522788,-99) , 
7, 13.9726, 0, 0, 0.649774,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390804,-99) , 
2, 14.5, 0, 0, 0.528508,-99) , 
10, 0.215542, 1, 0, 0.580984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36763,-99) , 
5, 0.340579, 0, 0, 0.555845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482496,-99) , 
2, 40.5, 0, 0, 0.49818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169573,-99) , 
7, 129.079, 1, 0, 0.490569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197569,-99) , 
1, 63.5, 1, 0, 0.481648,-99) , 
5, 1.45851, 1, 0, 0.510487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207632,-99) , 
7, 7.02365, 0, 0, 0.504551,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0158325);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554036,-99) , 
1, 11.5, 0, 0, 0.641232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479597,-99) , 
3, 0.992211, 1, 0, 0.546325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0819401,-99) , 
5, 1.89273, 1, 0, 0.454743,-99) , 
9, 69.7077, 0, 0, 0.517174,-99) , 
12, 8503.55, 0, 0, 0.536016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628381,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382825,-99) , 
0, 16.5, 1, 0, 0.451824,-99) , 
3, 0.970155, 0, 0, 0.511563,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368359,-99) , 
4, 0.862159, 1, 0, 0.42739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122859,-99) , 
5, 1.67174, 1, 0, 0.367224,-99) , 
3, 0.987523, 1, 0, 0.44741,-99) , 
8, 2.29085, 1, 0, 0.514578,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479505,-99) , 
12, 3344.43, 1, 0, 0.583268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316506,-99) , 
2, 10.5, 0, 0, 0.525184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189116,-99) , 
7, 54.5574, 1, 0, 0.487445,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511994,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131691,-99) , 
9, 336.822, 0, 0, 0.18938,-99) , 
9, 40.9239, 1, 0, 0.303707,-99) , 
8, 0.505066, 1, 0, 0.393139,-99) , 
4, 1.72533, 1, 0, 0.495339,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00652229);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539479,-99) , 
6, 0.739169, 1, 0, 0.622318,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475645,-99) , 
4, 0.734076, 1, 0, 0.493924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25262,-99) , 
7, 7.0015, 0, 0, 0.487866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0521653,-99) , 
4, 2.19563, 1, 0, 0.483081,-99) , 
11, -6.74133, 1, 0, 0.495499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24985,-99) , 
7, 141.139, 1, 0, 0.486986,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0138723);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535392,-99) , 
6, 0.845735, 1, 0, 0.65041,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607232,-99) , 
6, 0.181435, 1, 0, 0.638016,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391788,-99) , 
11, -0.697869, 1, 0, 0.517834,-99) , 
11, 0.719495, 0, 0, 0.561825,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160914,-99) , 
4, 1.76765, 1, 0, 0.503964,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241282,-99) , 
4, 1.51431, 0, 0, 0.337952,-99) , 
9, 70.6275, 0, 0, 0.44692,-99) , 
13, 0.5, 0, 0, 0.522692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303004,-99) , 
1, 14.5, 0, 0, 0.572051,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310593,-99) , 
1, 28.5, 1, 0, 0.446649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213022,-99) , 
5, 2.08329, 1, 0, 0.427798,-99) , 
10, 0.967849, 0, 0, 0.44904,-99) , 
3, 0.990337, 1, 0, 0.49143,-99) , 
11, -8.47959, 1, 0, 0.500651,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0160044);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.801216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672156,-99) , 
0, 31.5, 0, 0, 0.735274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52747,-99) , 
10, 0.175891, 0, 0, 0.686705,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348402,-99) , 
7, 47.9495, 0, 0, 0.492339,-99) , 
1, 28.5, 1, 0, 0.622189,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432174,-99) , 
2, 57.5, 0, 0, 0.601358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381902,-99) , 
9, 94.7923, 1, 0, 0.499527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19581,-99) , 
2, 36.5, 0, 0, 0.442369,-99) , 
7, 66.001, 1, 0, 0.547437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4933,-99) , 
0, 20.5, 0, 0, 0.524185,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277963,-99) , 
0, 15.5, 1, 0, 0.441074,-99) , 
7, 14.9766, 0, 0, 0.484618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174052,-99) , 
0, 28.5, 1, 0, 0.476532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173717,-99) , 
7, 43.9707, 1, 0, 0.462331,-99) , 
2, 21.5, 0, 0, 0.487253,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.01089);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578535,-99) , 
9, 103.398, 1, 0, 0.663371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390602,-99) , 
5, 1.71529, 1, 0, 0.505529,-99) , 
1, 12.5, 0, 0, 0.58286,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490519,-99) , 
3, 0.986658, 1, 0, 0.635988,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442747,-99) , 
11, 3.89811, 0, 0, 0.507121,-99) , 
6, 0.198155, 1, 0, 0.532525,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357788,-99) , 
5, 2.15561, 1, 0, 0.523323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163254,-99) , 
5, 2.25292, 1, 0, 0.418763,-99) , 
8, 0.685957, 1, 0, 0.454763,-99) , 
12, 1542.39, 1, 0, 0.487896,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17978,-99) , 
11, 5.3136, 0, 0, 0.31732,-99) , 
3, 0.99918, 1, 0, 0.476396,-99) , 
12, 7965.09, 0, 0, 0.495289,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00891709);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428572,-99) , 
8, 0.667814, 0, 0, 0.537101,-99) , 
6, 0.117475, 1, 0, 0.557676,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500485,-99) , 
12, -9572.67, 1, 0, 0.515286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278858,-99) , 
7, 66.141, 1, 0, 0.495068,-99) , 
5, 1.51686, 1, 0, 0.521369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226295,-99) , 
3, 0.999749, 1, 0, 0.514328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29177,-99) , 
2, 7.5, 0, 0, 0.504712,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0101093);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.812039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576689,-99) , 
4, 1.54922, 0, 0, 0.688028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495915,-99) , 
12, -11842.8, 0, 0, 0.611138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356999,-99) , 
3, 0.996579, 1, 0, 0.484296,-99) , 
12, -5218.74, 1, 0, 0.534818,-99) , 
10, 0.0946622, 1, 0, 0.574319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511787,-99) , 
13, 1.5, 0, 0, 0.539032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388701,-99) , 
5, 0.660586, 0, 0, 0.523484,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390201,-99) , 
9, 45.8443, 1, 0, 0.42602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 158.668, 1, 0, 0.416938,-99) , 
4, 1.40507, 1, 0, 0.489362,-99) , 
11, 2.51327, 0, 0, 0.512996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297658,-99) , 
5, 2.29449, 1, 0, 0.504048,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0142224);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573771,-99) , 
7, 17.4533, 0, 0, 0.676106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426642,-99) , 
1, 16.5, 1, 0, 0.527049,-99) , 
4, 0.7421, 1, 0, 0.564055,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494574,-99) , 
2, 55.5, 0, 0, 0.517538,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315301,-99) , 
3, 0.987998, 1, 0, 0.391296,-99) , 
9, 118.008, 1, 0, 0.490302,-99) , 
10, 0.196391, 1, 0, 0.521439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300382,-99) , 
9, 471.222, 1, 0, 0.511288,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598184,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312769,-99) , 
9, 126.253, 0, 0, 0.447502,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491626,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0882735,-99) , 
5, 2.05713, 1, 0, 0.20765,-99) , 
9, 44.3572, 1, 0, 0.301528,-99) , 
8, 0.302647, 1, 0, 0.358174,-99) , 
12, 10255, 0, 0, 0.398877,-99) , 
5, 1.93309, 1, 0, 0.487971,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0100547);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
2, 24.5, 0, 0, 0.521731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285805,-99) , 
0, 51.5, 1, 0, 0.515629,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337685,-99) , 
0, 50.5, 0, 0, 0.484425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0553746,-99) , 
1, 13.5, 0, 0, 0.424066,-99) , 
7, 58.8831, 1, 0, 0.501577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208013,-99) , 
3, 0.999746, 1, 0, 0.495242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175036,-99) , 
7, 7.10788, 0, 0, 0.487013,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00885885);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470152,-99) , 
9, 217.873, 1, 0, 0.548652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365292,-99) , 
5, 0.341566, 0, 0, 0.538789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371708,-99) , 
8, 0.132884, 0, 0, 0.527942,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616935,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271759,-99) , 
9, 78.8755, 1, 0, 0.400105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
0, 11.5, 0, 0, 0.351816,-99) , 
8, 0.106009, 1, 0, 0.416841,-99) , 
5, 2.06427, 1, 0, 0.51372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301796,-99) , 
2, 6.5, 0, 0, 0.508161,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0132645);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595743,-99) , 
10, 0.641062, 1, 0, 0.665193,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519347,-99) , 
0, 12.5, 0, 0, 0.603978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345836,-99) , 
7, 23.7671, 1, 0, 0.538941,-99) , 
0, 22.5, 0, 0, 0.584822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346608,-99) , 
8, 2.74163, 1, 0, 0.560348,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727096,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421262,-99) , 
8, 0.915865, 1, 0, 0.528443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215241,-99) , 
4, 1.70808, 1, 0, 0.493532,-99) , 
12, 91.4267, 1, 0, 0.556456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45803,-99) , 
4, 1.6069, 0, 0, 0.472448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309649,-99) , 
4, 1.74058, 1, 0, 0.46066,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205102,-99) , 
8, 0.389607, 1, 0, 0.319297,-99) , 
5, 2.065, 1, 0, 0.445448,-99) , 
10, 0.0711756, 1, 0, 0.467051,-99) , 
13, 1.5, 0, 0, 0.494897,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0133791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590484,-99) , 
7, 13.4343, 0, 0, 0.651264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454608,-99) , 
2, 15.5, 0, 0, 0.520848,-99) , 
10, 0.0796082, 1, 0, 0.539965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378778,-99) , 
9, 393.365, 1, 0, 0.528905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337412,-99) , 
2, 7.5, 0, 0, 0.5206,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431861,-99) , 
9, 73.526, 0, 0, 0.544779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385338,-99) , 
11, -0.679284, 1, 0, 0.562088,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294312,-99) , 
12, 1279.35, 1, 0, 0.392703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127857,-99) , 
5, 2.06244, 1, 0, 0.279249,-99) , 
9, 45.7061, 1, 0, 0.375087,-99) , 
8, 0.221714, 1, 0, 0.427501,-99) , 
5, 1.90739, 1, 0, 0.499284,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0141717);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72444,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487139,-99) , 
2, 13.5, 0, 0, 0.628791,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465443,-99) , 
6, 0.113067, 1, 0, 0.510432,-99) , 
11, -0.950681, 1, 0, 0.55347,-99) , 
10, 0.0843476, 1, 0, 0.57096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414896,-99) , 
10, 0.0458994, 0, 0, 0.557264,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436932,-99) , 
9, 59.6514, 0, 0, 0.534866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319146,-99) , 
7, 57.2102, 1, 0, 0.510413,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495955,-99) , 
12, 10185.3, 1, 0, 0.588674,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223096,-99) , 
6, 0.69992, 0, 0, 0.301633,-99) , 
11, -2.21644, 1, 0, 0.396186,-99) , 
8, 1.81932, 1, 0, 0.477646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0430219,-99) , 
3, 0.999663, 1, 0, 0.468675,-99) , 
4, 1.07274, 1, 0, 0.507495,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00968155);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.768051,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427093,-99) , 
12, 2275.88, 0, 0, 0.549476,-99) , 
12, -649.717, 1, 0, 0.588851,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495314,-99) , 
10, 0.854081, 0, 0, 0.517734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343911,-99) , 
7, 99.4834, 1, 0, 0.505571,-99) , 
4, 0.627834, 1, 0, 0.523844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291432,-99) , 
3, 0.99976, 1, 0, 0.51765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449839,-99) , 
10, 0.0646926, 0, 0, 0.524004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33233,-99) , 
10, 0.127278, 1, 0, 0.47049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238735,-99) , 
5, 2.25396, 1, 0, 0.461539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217657,-99) , 
0, 13.5, 1, 0, 0.421946,-99) , 
7, 11.4665, 0, 0, 0.500714,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0123187);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739393,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444833,-99) , 
10, 0.434675, 1, 0, 0.570641,-99) , 
9, 80.031, 1, 0, 0.637408,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289059,-99) , 
7, 39.6935, 1, 0, 0.531446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248322,-99) , 
5, 2.28808, 1, 0, 0.517609,-99) , 
2, 24.5, 0, 0, 0.540132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280266,-99) , 
1, 70.5, 1, 0, 0.531488,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608081,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445019,-99) , 
10, 0.102406, 1, 0, 0.491721,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257347,-99) , 
0, 11.5, 1, 0, 0.348183,-99) , 
7, 12.9961, 0, 0, 0.458674,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223788,-99) , 
7, 28.1748, 0, 0, 0.318128,-99) , 
12, 5490.59, 1, 0, 0.426257,-99) , 
12, 12130.6, 0, 0, 0.448973,-99) , 
6, 0.79738, 1, 0, 0.504972,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0105816);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573416,-99) , 
7, 72.8871, 1, 0, 0.702139,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459246,-99) , 
3, 0.941809, 0, 0, 0.55798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370621,-99) , 
3, 0.998711, 1, 0, 0.536263,-99) , 
2, 25.5, 0, 0, 0.57705,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509125,-99) , 
2, 48.5, 0, 0, 0.519793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300832,-99) , 
6, 0.998724, 0, 0, 0.3839,-99) , 
4, 1.77523, 1, 0, 0.504048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287338,-99) , 
3, 0.999341, 1, 0, 0.491354,-99) , 
13, 1.5, 0, 0, 0.517451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191332,-99) , 
2, 6.5, 0, 0, 0.510349,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0114809);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.77235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550456,-99) , 
12, 10141.7, 0, 0, 0.570666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312499,-99) , 
3, 0.99907, 1, 0, 0.555297,-99) , 
11, 6.86726, 0, 0, 0.570314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277811,-99) , 
1, 83.5, 1, 0, 0.556927,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365065,-99) , 
10, 0.470597, 1, 0, 0.4682,-99) , 
11, -8.49265, 1, 0, 0.479812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174249,-99) , 
7, 6.87565, 0, 0, 0.470443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.08761,-99) , 
7, 58.1641, 1, 0, 0.455877,-99) , 
1, 14.5, 0, 0, 0.498992,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0101421);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583835,-99) , 
7, 64.7392, 1, 0, 0.679624,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552275,-99) , 
6, 0.197761, 1, 0, 0.586765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404052,-99) , 
5, 2.08545, 1, 0, 0.557711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345988,-99) , 
7, 33.5918, 1, 0, 0.527301,-99) , 
2, 25.5, 0, 0, 0.564273,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240969,-99) , 
1, 70.5, 1, 0, 0.480651,-99) , 
11, 8.29274, 0, 0, 0.492931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217498,-99) , 
7, 7.37454, 0, 0, 0.483375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275979,-99) , 
3, 0.999338, 1, 0, 0.470018,-99) , 
13, 1.5, 0, 0, 0.497573,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0103479);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.808787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573498,-99) , 
7, 61.8956, 1, 0, 0.68106,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501444,-99) , 
0, 13.5, 0, 0, 0.57566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359073,-99) , 
5, 2.12392, 1, 0, 0.545725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376465,-99) , 
7, 28.7821, 1, 0, 0.507453,-99) , 
0, 30.5, 0, 0, 0.547873,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424553,-99) , 
7, 31.5772, 1, 0, 0.568965,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417139,-99) , 
11, -0.659787, 1, 0, 0.459784,-99) , 
12, -2468.43, 1, 0, 0.477436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263542,-99) , 
0, 83.5, 1, 0, 0.466699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177033,-99) , 
5, 2.30347, 1, 0, 0.459264,-99) , 
13, 1.5, 0, 0, 0.48491,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0111848);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505941,-99) , 
3, 0.954443, 0, 0, 0.556055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441616,-99) , 
11, 4.04588, 0, 0, 0.480766,-99) , 
3, 0.986485, 1, 0, 0.521222,-99) , 
11, -6.8055, 1, 0, 0.532802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320026,-99) , 
5, 0.139389, 0, 0, 0.521632,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597471,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181666,-99) , 
5, 2.28669, 1, 0, 0.432314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146857,-99) , 
13, 0.5, 1, 0, 0.239244,-99) , 
7, 15.0606, 1, 0, 0.3246,-99) , 
8, 0.113991, 1, 0, 0.374122,-99) , 
4, 1.70531, 1, 0, 0.498391,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00526117);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471117,-99) , 
3, 0.997641, 1, 0, 0.539146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343112,-99) , 
8, 2.97299, 1, 0, 0.531653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208138,-99) , 
5, 2.4901, 1, 0, 0.527659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341244,-99) , 
3, 0.751459, 0, 0, 0.520039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26547,-99) , 
3, 0.999711, 1, 0, 0.513143,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0113539);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760206,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49542,-99) , 
5, 1.9346, 1, 0, 0.604643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432354,-99) , 
5, 1.11922, 0, 0, 0.576275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425844,-99) , 
7, 64.5164, 1, 0, 0.556612,-99) , 
3, 0.900659, 1, 0, 0.581275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330734,-99) , 
7, 31.9138, 1, 0, 0.515958,-99) , 
6, 0.583528, 1, 0, 0.590966,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416281,-99) , 
10, 0.427939, 1, 0, 0.476752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27974,-99) , 
9, 477.147, 1, 0, 0.465464,-99) , 
12, -2423.92, 1, 0, 0.484561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211889,-99) , 
3, 0.99947, 1, 0, 0.471531,-99) , 
13, 1.5, 0, 0, 0.504535,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0126361);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707204,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445775,-99) , 
3, 0.995611, 1, 0, 0.556791,-99) , 
11, 4.88201, 0, 0, 0.581494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359568,-99) , 
4, 1.89424, 1, 0, 0.565406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288267,-99) , 
9, 239.366, 1, 0, 0.390748,-99) , 
8, 2.21377, 1, 0, 0.534705,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487002,-99) , 
9, 57.0507, 0, 0, 0.578516,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259975,-99) , 
1, 8.5, 0, 0, 0.470106,-99) , 
13, 1.5, 0, 0, 0.503499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309855,-99) , 
9, 251.85, 1, 0, 0.49056,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335729,-99) , 
8, 0.921378, 0, 0, 0.454394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156722,-99) , 
5, 2.14166, 1, 0, 0.426714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0500328,-99) , 
7, 30.8294, 1, 0, 0.389024,-99) , 
2, 12.5, 0, 0, 0.462242,-99) , 
10, 0.126352, 1, 0, 0.487118,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0101422);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515657,-99) , 
7, 20.89, 0, 0, 0.625763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524396,-99) , 
6, 0.0700545, 1, 0, 0.537958,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288584,-99) , 
8, 1.40203, 1, 0, 0.412728,-99) , 
9, 335.606, 1, 0, 0.525126,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192312,-99) , 
8, 0.4075, 1, 0, 0.316933,-99) , 
5, 2.065, 1, 0, 0.504627,-99) , 
8, 0.115685, 1, 0, 0.516821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261727,-99) , 
1, 76.5, 1, 0, 0.510207,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0119807);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582414,-99) , 
4, 0.926821, 1, 0, 0.633428,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340876,-99) , 
5, 1.65556, 1, 0, 0.506114,-99) , 
8, 1.19566, 1, 0, 0.574741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285975,-99) , 
1, 9.5, 0, 0, 0.554837,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661277,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239356,-99) , 
5, 2.32311, 1, 0, 0.480551,-99) , 
6, 0.99856, 0, 0, 0.501955,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148687,-99) , 
4, 1.37966, 1, 0, 0.299812,-99) , 
7, 27.1645, 1, 0, 0.478028,-99) , 
2, 16.5, 0, 0, 0.506699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29073,-99) , 
7, 130.545, 1, 0, 0.49851,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00890532);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536644,-99) , 
7, 39.3517, 1, 0, 0.601307,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428223,-99) , 
10, 0.103821, 1, 0, 0.502654,-99) , 
2, 12.5, 0, 0, 0.566304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404033,-99) , 
5, 0.477642, 0, 0, 0.552668,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737377,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606559,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260766,-99) , 
4, 2.09664, 1, 0, 0.445736,-99) , 
6, 1.0129, 0, 0, 0.46212,-99) , 
4, 2.29464, 0, 0, 0.473081,-99) , 
4, 1.22115, 1, 0, 0.513402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250952,-99) , 
7, 7.63559, 0, 0, 0.504326,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00745063);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342935,-99) , 
7, 65.2183, 1, 0, 0.521823,-99) , 
2, 55.5, 0, 0, 0.530511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305525,-99) , 
1, 74.5, 1, 0, 0.525031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362515,-99) , 
7, 8.10552, 0, 0, 0.50755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334053,-99) , 
7, 11.3344, 1, 0, 0.446946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231384,-99) , 
0, 12.5, 1, 0, 0.402629,-99) , 
2, 8.5, 0, 0, 0.512173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243549,-99) , 
7, 191.019, 1, 0, 0.506975,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00673615);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704988,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432497,-99) , 
8, 2.26746, 1, 0, 0.546941,-99) , 
0, 35.5, 0, 0, 0.575411,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175282,-99) , 
5, 2.28287, 1, 0, 0.512464,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241825,-99) , 
9, 55.4351, 0, 0, 0.404515,-99) , 
3, 0.900273, 0, 0, 0.498305,-99) , 
13, 1.5, 0, 0, 0.520776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353412,-99) , 
4, 2.06105, 1, 0, 0.513449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257305,-99) , 
1, 72.5, 1, 0, 0.506129,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.00914272);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712951,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465303,-99) , 
12, 3604.33, 1, 0, 0.512869,-99) , 
11, -8.15334, 1, 0, 0.523493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432844,-99) , 
5, 1.87724, 1, 0, 0.521999,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294404,-99) , 
13, 1.5, 0, 0, 0.359682,-99) , 
0, 14.5, 1, 0, 0.431684,-99) , 
4, 1.55863, 1, 0, 0.501349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288157,-99) , 
7, 7.43727, 0, 0, 0.494313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235944,-99) , 
5, 2.36278, 1, 0, 0.486905,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0105754);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539243,-99) , 
7, 27.4886, 1, 0, 0.650924,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397109,-99) , 
2, 8.5, 0, 0, 0.513748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234943,-99) , 
1, 43.5, 1, 0, 0.50256,-99) , 
2, 55.5, 0, 0, 0.515046,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412503,-99) , 
7, 23.5538, 1, 0, 0.530375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100909,-99) , 
4, 1.67603, 1, 0, 0.252676,-99) , 
12, 8226.86, 0, 0, 0.303275,-99) , 
11, 6.60098, 0, 0, 0.385264,-99) , 
3, 0.997652, 1, 0, 0.492838,-99) , 
11, -8.14074, 1, 0, 0.502962,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.00868866);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0538347,-99) , 
5, 2.28805, 1, 0, 0.506604,-99) , 
2, 49.5, 0, 0, 0.516382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320401,-99) , 
7, 145.284, 1, 0, 0.51029,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264105,-99) , 
11, 0.178489, 0, 0, 0.363958,-99) , 
9, 403.355, 1, 0, 0.499694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260512,-99) , 
8, 0.496006, 1, 0, 0.343377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
0, 56.5, 1, 0, 0.305374,-99) , 
13, 1.5, 0, 0, 0.377445,-99) , 
4, 1.76218, 1, 0, 0.483052,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.012397);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466132,-99) , 
4, 0.1005, 0, 0, 0.590068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382227,-99) , 
12, 2648.5, 0, 0, 0.490829,-99) , 
3, 0.953082, 0, 0, 0.567232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309282,-99) , 
5, 1.44278, 0, 0, 0.450838,-99) , 
8, 0.327587, 0, 0, 0.546231,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367246,-99) , 
12, 4024.45, 0, 0, 0.437483,-99) , 
3, 0.981637, 1, 0, 0.507328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272035,-99) , 
4, 1.39008, 1, 0, 0.465903,-99) , 
8, 2.19696, 1, 0, 0.526918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225134,-99) , 
7, 48.1884, 1, 0, 0.424171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153315,-99) , 
5, 2.41077, 1, 0, 0.407729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120021,-99) , 
3, 0.852251, 0, 0, 0.384805,-99) , 
8, 0.11077, 1, 0, 0.426099,-99) , 
5, 1.87644, 1, 0, 0.501021,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0120274);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54419,-99) , 
0, 25.5, 0, 0, 0.567852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371922,-99) , 
7, 52.9197, 1, 0, 0.550449,-99) , 
0, 61.5, 0, 0, 0.563201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301048,-99) , 
7, 142.961, 1, 0, 0.555229,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503406,-99) , 
3, 0.997073, 1, 0, 0.583034,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401551,-99) , 
3, 0.980242, 1, 0, 0.474353,-99) , 
11, 4.04783, 0, 0, 0.511379,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312765,-99) , 
7, 16.3266, 0, 0, 0.445322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232267,-99) , 
3, 0.996607, 1, 0, 0.386382,-99) , 
8, 2.03379, 1, 0, 0.479457,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212168,-99) , 
2, 15.5, 0, 0, 0.320323,-99) , 
12, 3657.99, 1, 0, 0.460185,-99) , 
11, -0.659034, 1, 0, 0.500982,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00901235);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546483,-99) , 
8, 0.481064, 1, 0, 0.591318,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31897,-99) , 
3, 0.991817, 1, 0, 0.451921,-99) , 
0, 12.5, 0, 0, 0.556153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22898,-99) , 
5, 2.4849, 1, 0, 0.547286,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130371,-99) , 
7, 185.942, 1, 0, 0.498017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210063,-99) , 
5, 2.34329, 1, 0, 0.491767,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546071,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227193,-99) , 
8, 1.08286, 1, 0, 0.312084,-99) , 
4, 1.84628, 0, 0, 0.357182,-99) , 
9, 33.8204, 0, 0, 0.475937,-99) , 
13, 1.5, 0, 0, 0.497085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242476,-99) , 
7, 7.00158, 0, 0, 0.491451,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.010257);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.783588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622691,-99) , 
4, 1.07055, 1, 0, 0.70105,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397567,-99) , 
9, 88.7388, 1, 0, 0.493007,-99) , 
6, 0.666062, 1, 0, 0.598091,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194269,-99) , 
0, 70.5, 1, 0, 0.488158,-99) , 
2, 55.5, 0, 0, 0.498464,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394355,-99) , 
3, 0.998882, 0, 0, 0.530231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208246,-99) , 
11, -3.25418, 1, 0, 0.307879,-99) , 
11, 5.74745, 0, 0, 0.413756,-99) , 
3, 0.997638, 1, 0, 0.48443,-99) , 
12, 10194.5, 0, 0, 0.498679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153606,-99) , 
5, 2.4901, 1, 0, 0.494682,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0162734);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580738,-99) , 
4, 0.438132, 1, 0, 0.60064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478052,-99) , 
5, 0.846619, 0, 0, 0.57888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437651,-99) , 
3, 0.834878, 0, 0, 0.560153,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588757,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456588,-99) , 
6, 0.716767, 1, 0, 0.579673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261231,-99) , 
3, 0.997859, 1, 0, 0.419335,-99) , 
11, -5.63167, 1, 0, 0.462178,-99) , 
11, 6.34423, 0, 0, 0.486027,-99) , 
3, 0.98855, 1, 0, 0.522947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57593,-99) , 
6, 0.703681, 0, 0, 0.627385,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224147,-99) , 
2, 10.5, 0, 0, 0.472264,-99) , 
12, 2169.66, 1, 0, 0.541812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296865,-99) , 
5, 2.12486, 1, 0, 0.475328,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214496,-99) , 
3, 0.985981, 1, 0, 0.285995,-99) , 
9, 110.899, 1, 0, 0.402382,-99) , 
8, 0.704365, 1, 0, 0.472274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181972,-99) , 
7, 52.5703, 1, 0, 0.441164,-99) , 
5, 1.71512, 1, 0, 0.490595,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0064274);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500696,-99) , 
6, 0.775872, 1, 0, 0.627386,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482363,-99) , 
11, 0.575448, 0, 0, 0.516672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249378,-99) , 
7, 7.00841, 0, 0, 0.510286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264799,-99) , 
5, 2.36561, 1, 0, 0.503615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23375,-99) , 
3, 0.99959, 1, 0, 0.496151,-99) , 
11, -7.03703, 1, 0, 0.506948,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00943092);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759401,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311625,-99) , 
7, 74.4537, 1, 0, 0.517434,-99) , 
2, 52.5, 0, 0, 0.53001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255444,-99) , 
1, 68.5, 1, 0, 0.521342,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312625,-99) , 
0, 14.5, 1, 0, 0.475607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16785,-99) , 
4, 2.00247, 1, 0, 0.463473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156081,-99) , 
7, 25.2132, 1, 0, 0.44224,-99) , 
2, 11.5, 0, 0, 0.494031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297435,-99) , 
7, 137.601, 1, 0, 0.486875,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.012099);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261418,-99) , 
4, 1.74444, 1, 0, 0.55601,-99) , 
9, 62.0224, 1, 0, 0.630483,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295422,-99) , 
4, 1.79688, 1, 0, 0.536155,-99) , 
9, 62.5114, 1, 0, 0.588247,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473333,-99) , 
2, 17.5, 0, 0, 0.516093,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344896,-99) , 
12, 7154.54, 0, 0, 0.393551,-99) , 
3, 0.990342, 1, 0, 0.475332,-99) , 
11, 5.62468, 0, 0, 0.490544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360078,-99) , 
4, 1.07894, 1, 0, 0.495815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311775,-99) , 
3, 0.988259, 1, 0, 0.415915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156497,-99) , 
5, 1.96994, 1, 0, 0.387644,-99) , 
8, 2.52675, 1, 0, 0.474543,-99) , 
11, -6.78582, 1, 0, 0.487799,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00741737);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526159,-99) , 
11, -12.7458, 0, 0, 0.659447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495767,-99) , 
2, 34.5, 0, 0, 0.511762,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292163,-99) , 
11, 8.5313, 0, 0, 0.383089,-99) , 
3, 0.998869, 1, 0, 0.499287,-99) , 
11, -8.47874, 1, 0, 0.508782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175811,-99) , 
7, 225.738, 1, 0, 0.503582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0867805,-99) , 
5, 2.54301, 1, 0, 0.499936,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.012556);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511001,-99) , 
1, 24.5, 1, 0, 0.648595,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520336,-99) , 
4, 1.95716, 0, 0, 0.540625,-99) , 
10, 0.29736, 1, 0, 0.574103,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475825,-99) , 
11, -0.337322, 1, 0, 0.5686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257867,-99) , 
4, 1.2351, 1, 0, 0.390542,-99) , 
8, 0.729306, 1, 0, 0.471414,-99) , 
10, 0.152345, 0, 0, 0.545621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332321,-99) , 
3, 0.999467, 1, 0, 0.534784,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573952,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347332,-99) , 
12, 4789.2, 1, 0, 0.447353,-99) , 
11, -6.64226, 1, 0, 0.463938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24149,-99) , 
5, 2.22303, 1, 0, 0.451537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118896,-99) , 
7, 55.813, 1, 0, 0.436792,-99) , 
1, 11.5, 0, 0, 0.496504,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0125168);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499782,-99) , 
7, 39.2814, 1, 0, 0.58297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338658,-99) , 
3, 0.977697, 1, 0, 0.446166,-99) , 
7, 10.9957, 0, 0, 0.562922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377639,-99) , 
9, 29.7057, 0, 0, 0.546415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375494,-99) , 
5, 0.524738, 0, 0, 0.533403,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605068,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375325,-99) , 
5, 2.16261, 1, 0, 0.60371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293571,-99) , 
4, 1.49762, 0, 0, 0.417354,-99) , 
7, 13.4199, 0, 0, 0.49705,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49889,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165665,-99) , 
1, 12.5, 0, 0, 0.313267,-99) , 
5, 1.59925, 1, 0, 0.364192,-99) , 
7, 19.4065, 1, 0, 0.439024,-99) , 
8, 0.0785923, 1, 0, 0.456284,-99) , 
4, 1.28457, 1, 0, 0.499994,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00587379);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726969,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368691,-99) , 
5, 0.720196, 0, 0, 0.512501,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0596102,-99) , 
1, 13.5, 0, 0, 0.355611,-99) , 
7, 65.5263, 1, 0, 0.502774,-99) , 
2, 57.5, 0, 0, 0.509621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224223,-99) , 
7, 190.533, 1, 0, 0.506241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315945,-99) , 
1, 70.5, 1, 0, 0.500294,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00874098);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450325,-99) , 
1, 39.5, 1, 0, 0.551045,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120905,-99) , 
7, 40.3792, 1, 0, 0.409202,-99) , 
1, 10.5, 0, 0, 0.533896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460507,-99) , 
4, 1.63509, 0, 0, 0.490954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21197,-99) , 
7, 24.8931, 1, 0, 0.467244,-99) , 
2, 12.5, 0, 0, 0.506444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303836,-99) , 
3, 0.999633, 1, 0, 0.499778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230811,-99) , 
5, 2.39649, 1, 0, 0.493658,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0106287);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480016,-99) , 
8, 0.589094, 0, 0, 0.59451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443095,-99) , 
4, 1.3268, 1, 0, 0.576998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437476,-99) , 
9, 319.939, 1, 0, 0.554894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379155,-99) , 
9, 32.4865, 0, 0, 0.538943,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421551,-99) , 
10, 0.243536, 1, 0, 0.577697,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438349,-99) , 
3, 0.975776, 0, 0, 0.475233,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270352,-99) , 
7, 22.5462, 1, 0, 0.382088,-99) , 
3, 0.98598, 1, 0, 0.437198,-99) , 
11, 4.74847, 0, 0, 0.458823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0846896,-99) , 
7, 170.299, 1, 0, 0.453312,-99) , 
5, 1.54331, 1, 0, 0.491155,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.009689);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524659,-99) , 
6, 0.77716, 1, 0, 0.619581,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580147,-99) , 
12, -0.547932, 0, 0, 0.614499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407482,-99) , 
6, 0.981861, 1, 0, 0.573889,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345706,-99) , 
9, 33.3426, 0, 0, 0.479856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234446,-99) , 
2, 6.5, 0, 0, 0.471347,-99) , 
11, 2.72918, 0, 0, 0.494111,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466381,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237877,-99) , 
12, -3340.44, 1, 0, 0.300773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153131,-99) , 
5, 2.03092, 1, 0, 0.286789,-99) , 
9, 52.538, 1, 0, 0.335383,-99) , 
3, 0.998055, 1, 0, 0.47419,-99) , 
11, -6.76864, 1, 0, 0.486259,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00665349);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507724,-99) , 
9, 61.7414, 0, 0, 0.598222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344581,-99) , 
9, 229.175, 1, 0, 0.493509,-99) , 
6, 0.543147, 1, 0, 0.546054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428712,-99) , 
8, 0.374054, 0, 0, 0.504358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19906,-99) , 
1, 43.5, 1, 0, 0.414836,-99) , 
11, 0.552481, 0, 0, 0.48032,-99) , 
11, -0.78874, 1, 0, 0.506349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247413,-99) , 
5, 2.49822, 1, 0, 0.50332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277794,-99) , 
1, 5.5, 0, 0, 0.497554,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.00997444);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556963,-99) , 
11, 8.32252, 0, 0, 0.565977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428765,-99) , 
8, 0.22018, 0, 0, 0.556135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404947,-99) , 
10, 0.0412928, 0, 0, 0.543684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368737,-99) , 
5, 0.353329, 0, 0, 0.533473,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48352,-99) , 
5, 2.14885, 0, 0, 0.603329,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257173,-99) , 
5, 2.13755, 1, 0, 0.457226,-99) , 
9, 84.5737, 1, 0, 0.532686,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43323,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169109,-99) , 
1, 13.5, 1, 0, 0.401895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120668,-99) , 
7, 24.2016, 1, 0, 0.380115,-99) , 
2, 13.5, 0, 0, 0.459266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0852832,-99) , 
7, 124.198, 1, 0, 0.449392,-99) , 
5, 1.84604, 1, 0, 0.509647,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0111115);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51911,-99) , 
1, 37.5, 1, 0, 0.663896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533101,-99) , 
7, 17.9779, 1, 0, 0.596239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426754,-99) , 
3, 0.997454, 1, 0, 0.563197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364346,-99) , 
5, 1.92953, 0, 0, 0.444883,-99) , 
9, 70.7487, 0, 0, 0.517691,-99) , 
2, 23.5, 0, 0, 0.554325,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468721,-99) , 
8, 1.40716, 1, 0, 0.513656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313368,-99) , 
6, 0.254637, 1, 0, 0.400419,-99) , 
3, 0.910126, 0, 0, 0.495167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309199,-99) , 
3, 0.999328, 1, 0, 0.484461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207099,-99) , 
5, 2.16848, 1, 0, 0.468309,-99) , 
13, 1.5, 0, 0, 0.494676,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0105146);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
6, 0.777463, 1, 0, 0.640269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429024,-99) , 
3, 0.99631, 0, 0, 0.571405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495695,-99) , 
9, 60.3285, 0, 0, 0.571962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330973,-99) , 
3, 0.995457, 1, 0, 0.533521,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46176,-99) , 
3, 0.891483, 1, 0, 0.479859,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0611212,-99) , 
4, 1.60613, 1, 0, 0.326976,-99) , 
11, 0.466958, 0, 0, 0.453169,-99) , 
11, -0.392958, 1, 0, 0.4797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323503,-99) , 
11, -4.00871, 0, 0, 0.470656,-99) , 
11, -5.24052, 1, 0, 0.483586,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0119515);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598698,-99) , 
0, 13.5, 0, 0, 0.662995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483957,-99) , 
7, 39.6037, 1, 0, 0.623065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359467,-99) , 
11, 13.4099, 1, 0, 0.584975,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552986,-99) , 
6, 0.324018, 1, 0, 0.638165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460376,-99) , 
3, 0.997213, 0, 0, 0.527382,-99) , 
11, -3.33404, 0, 0, 0.567123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43875,-99) , 
8, 0.286225, 0, 0, 0.546535,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499922,-99) , 
11, 1.03371, 0, 0, 0.570028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257351,-99) , 
2, 7.5, 0, 0, 0.457836,-99) , 
13, 1.5, 0, 0, 0.488897,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143497,-99) , 
3, 0.998847, 1, 0, 0.287658,-99) , 
12, -2419.59, 1, 0, 0.334083,-99) , 
3, 0.991623, 1, 0, 0.454999,-99) , 
11, -1.86571, 1, 0, 0.489083,-99) , 
11, 5.31224, 0, 0, 0.501478,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0088861);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716849,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52613,-99) , 
1, 37.5, 1, 0, 0.602361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308237,-99) , 
7, 188.653, 1, 0, 0.576787,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239966,-99) , 
0, 38.5, 1, 0, 0.491976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.094383,-99) , 
7, 63.7941, 1, 0, 0.482263,-99) , 
2, 29.5, 0, 0, 0.500405,-99) , 
11, -11.414, 1, 0, 0.508478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29115,-99) , 
9, 471.222, 1, 0, 0.498191,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0158675);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.875281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553851,-99) , 
8, 0.896038, 1, 0, 0.640515,-99) , 
5, 1.46616, 1, 0, 0.718148,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456206,-99) , 
6, 0.280284, 1, 0, 0.53835,-99) , 
1, 21.5, 1, 0, 0.634053,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390456,-99) , 
4, 1.15452, 0, 0, 0.48249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213093,-99) , 
5, 2.02766, 1, 0, 0.439859,-99) , 
7, 11.8148, 1, 0, 0.496896,-99) , 
0, 16.5, 0, 0, 0.569516,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506951,-99) , 
3, 0.985291, 1, 0, 0.565735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417579,-99) , 
8, 0.44706, 0, 0, 0.54022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280913,-99) , 
10, 0.174333, 1, 0, 0.424462,-99) , 
2, 11.5, 0, 0, 0.507694,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172479,-99) , 
5, 2.45419, 1, 0, 0.446654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123287,-99) , 
3, 0.999448, 1, 0, 0.432843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128781,-99) , 
3, 0.857246, 0, 0, 0.410513,-99) , 
4, 1.18025, 1, 0, 0.459079,-99) , 
13, 1.5, 0, 0, 0.495202,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00973529);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.819235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66947,-99) , 
1, 33.5, 1, 0, 0.729323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432842,-99) , 
1, 33.5, 1, 0, 0.511131,-99) , 
9, 109.523, 1, 0, 0.631351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346649,-99) , 
1, 15.5, 0, 0, 0.59018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28544,-99) , 
7, 7.02814, 0, 0, 0.498093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0724558,-99) , 
5, 2.57083, 1, 0, 0.494658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24173,-99) , 
7, 49.5617, 1, 0, 0.48133,-99) , 
2, 30.5, 0, 0, 0.49964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199748,-99) , 
1, 83.5, 1, 0, 0.493912,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.00990136);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649049,-99) , 
4, 1.07719, 1, 0, 0.720983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482649,-99) , 
1, 42.5, 1, 0, 0.628941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461263,-99) , 
7, 125.456, 1, 0, 0.573829,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49182,-99) , 
12, -1478.89, 1, 0, 0.512475,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281487,-99) , 
7, 40.6006, 1, 0, 0.436552,-99) , 
3, 0.990569, 1, 0, 0.478746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185867,-99) , 
0, 49.5, 1, 0, 0.473631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0633988,-99) , 
7, 81.6132, 1, 0, 0.466256,-99) , 
2, 35.5, 0, 0, 0.482617,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0145656);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.763396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634201,-99) , 
4, 1.06706, 0, 0, 0.668056,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468283,-99) , 
12, 3898.71, 0, 0, 0.536056,-99) , 
8, 2.2716, 1, 0, 0.624177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472272,-99) , 
8, 0.536007, 0, 0, 0.595681,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414691,-99) , 
10, 0.566317, 1, 0, 0.510527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375112,-99) , 
6, 1.01484, 0, 0, 0.464337,-99) , 
6, 0.956297, 1, 0, 0.559938,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693668,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327941,-99) , 
12, 3419.01, 1, 0, 0.436778,-99) , 
9, 151.556, 0, 0, 0.557308,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422008,-99) , 
3, 0.997573, 1, 0, 0.549771,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245277,-99) , 
4, 1.73532, 1, 0, 0.396634,-99) , 
9, 51.8521, 1, 0, 0.444493,-99) , 
8, 0.307588, 1, 0, 0.474469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211455,-99) , 
0, 73.5, 1, 0, 0.461645,-99) , 
5, 1.54305, 1, 0, 0.504889,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0117625);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766408,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518529,-99) , 
9, 98.5068, 1, 0, 0.647362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483129,-99) , 
8, 1.00283, 0, 0, 0.576496,-99) , 
6, 0.205796, 1, 0, 0.614001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243435,-99) , 
4, 2.01546, 1, 0, 0.59244,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369126,-99) , 
3, 0.998423, 1, 0, 0.523572,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101348,-99) , 
3, 0.829889, 0, 0, 0.41944,-99) , 
4, 1.53217, 1, 0, 0.495249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52016,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156042,-99) , 
4, 1.66391, 1, 0, 0.312619,-99) , 
9, 51.6864, 1, 0, 0.369699,-99) , 
8, 2.54318, 1, 0, 0.476083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192254,-99) , 
2, 6.5, 0, 0, 0.4693,-99) , 
12, 8497.66, 0, 0, 0.490273,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0129612);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602413,-99) , 
0, 15.5, 1, 0, 0.67298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541509,-99) , 
12, 5419.63, 1, 0, 0.637962,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511272,-99) , 
6, 0.660968, 1, 0, 0.595331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420347,-99) , 
9, 374.728, 1, 0, 0.562214,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0936365,-99) , 
2, 9.5, 0, 0, 0.345745,-99) , 
5, 1.76134, 1, 0, 0.507069,-99) , 
8, 0.526811, 1, 0, 0.550999,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430713,-99) , 
7, 46.5695, 1, 0, 0.604066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445454,-99) , 
10, 0.237615, 0, 0, 0.558202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340989,-99) , 
9, 28.5838, 0, 0, 0.478474,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310885,-99) , 
11, 2.7922, 0, 0, 0.372399,-99) , 
9, 109.669, 1, 0, 0.455366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192731,-99) , 
5, 2.27658, 1, 0, 0.44626,-99) , 
12, 8693.69, 0, 0, 0.466737,-99) , 
9, 158.739, 0, 0, 0.496512,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0100094);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443581,-99) , 
5, 1.90836, 1, 0, 0.54189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306153,-99) , 
6, 1.00652, 0, 0, 0.435157,-99) , 
6, 0.969426, 1, 0, 0.524615,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335723,-99) , 
8, 1.33088, 0, 0, 0.418824,-99) , 
9, 34.9011, 0, 0, 0.511415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38931,-99) , 
8, 2.89263, 1, 0, 0.502897,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253163,-99) , 
10, 0.295187, 0, 0, 0.53092,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321168,-99) , 
13, 0.5, 1, 0, 0.378057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0530684,-99) , 
2, 8.5, 0, 0, 0.346445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0493542,-99) , 
7, 34.5486, 1, 0, 0.311468,-99) , 
1, 14.5, 0, 0, 0.402428,-99) , 
4, 1.73154, 1, 0, 0.487237,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00704736);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462748,-99) , 
7, 44.1596, 1, 0, 0.609723,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
2, 52.5, 0, 0, 0.506812,-99) , 
11, 5.12302, 0, 0, 0.52216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276289,-99) , 
7, 173.639, 1, 0, 0.516129,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161949,-99) , 
0, 11.5, 1, 0, 0.358068,-99) , 
7, 8.84538, 0, 0, 0.505326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.54963, 1, 0, 0.501932,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.00884484);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488118,-99) , 
8, 0.376687, 0, 0, 0.555851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384356,-99) , 
2, 7.5, 0, 0, 0.546348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33766,-99) , 
2, 20.5, 0, 0, 0.403251,-99) , 
5, 2.16834, 1, 0, 0.534264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648072,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364385,-99) , 
1, 17.5, 0, 0, 0.420684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19644,-99) , 
0, 52.5, 1, 0, 0.395144,-99) , 
12, 9130.86, 0, 0, 0.431241,-99) , 
8, 2.37305, 1, 0, 0.5143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264871,-99) , 
3, 0.999642, 1, 0, 0.506865,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00908148);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527061,-99) , 
4, 0.838942, 1, 0, 0.552411,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230939,-99) , 
9, 21.7098, 1, 0, 0.415771,-99) , 
9, 29.0206, 0, 0, 0.53934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347688,-99) , 
1, 6.5, 0, 0, 0.529893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229173,-99) , 
1, 75.5, 1, 0, 0.522239,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287263,-99) , 
5, 1.87632, 1, 0, 0.415872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178311,-99) , 
2, 7.5, 0, 0, 0.360035,-99) , 
7, 9.08513, 0, 0, 0.509156,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0108597);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57897,-99) , 
3, 0.993874, 1, 0, 0.66444,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653526,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409797,-99) , 
5, 1.645, 1, 0, 0.484747,-99) , 
9, 36.3034, 1, 0, 0.521761,-99) , 
9, 192.347, 0, 0, 0.569304,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513361,-99) , 
11, -5.49007, 1, 0, 0.534016,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311512,-99) , 
3, 0.981472, 1, 0, 0.399303,-99) , 
8, 0.404607, 0, 0, 0.51103,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262323,-99) , 
9, 49.5504, 1, 0, 0.337955,-99) , 
8, 0.179658, 1, 0, 0.405636,-99) , 
5, 1.89492, 1, 0, 0.48683,-99) , 
12, -508.044, 1, 0, 0.50738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288869,-99) , 
1, 70.5, 1, 0, 0.50042,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00754717);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610141,-99) , 
6, 0.372653, 1, 0, 0.650588,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485051,-99) , 
3, 0.982022, 1, 0, 0.536802,-99) , 
8, 1.73821, 0, 0, 0.56795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449441,-99) , 
5, 0.844693, 0, 0, 0.545774,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165403,-99) , 
7, 106.181, 1, 0, 0.450467,-99) , 
5, 1.53794, 1, 0, 0.496519,-99) , 
13, 1.5, 0, 0, 0.51849,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275188,-99) , 
4, 1.28228, 1, 0, 0.408231,-99) , 
8, 2.78614, 1, 0, 0.508332,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280621,-99) , 
5, 2.00207, 0, 0, 0.348116,-99) , 
9, 461.387, 1, 0, 0.499636,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0119461);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500401,-99) , 
5, 1.86057, 1, 0, 0.638517,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552574,-99) , 
7, 21.3308, 1, 0, 0.634532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478634,-99) , 
5, 2.05508, 1, 0, 0.585523,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498537,-99) , 
5, 1.11922, 0, 0, 0.536429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347706,-99) , 
5, 1.42148, 1, 0, 0.473036,-99) , 
5, 1.61755, 0, 0, 0.526578,-99) , 
12, -704.689, 1, 0, 0.55459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497366,-99) , 
7, 9.92085, 1, 0, 0.513715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308394,-99) , 
7, 7.37044, 0, 0, 0.504865,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231904,-99) , 
3, 0.996817, 1, 0, 0.465375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107196,-99) , 
2, 30.5, 0, 0, 0.395118,-99) , 
0, 37.5, 1, 0, 0.484213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236889,-99) , 
5, 2.28749, 1, 0, 0.476321,-99) , 
13, 1.5, 0, 0, 0.500541,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00663513);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755855,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129972,-99) , 
5, 2.41106, 1, 0, 0.491703,-99) , 
12, -11027.6, 1, 0, 0.498667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2321,-99) , 
7, 7.11167, 0, 0, 0.493602,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210442,-99) , 
9, 72.9377, 1, 0, 0.304295,-99) , 
3, 0.99939, 1, 0, 0.483273,-99) , 
12, 23186.6, 0, 0, 0.489442,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0138637);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709884,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396212,-99) , 
11, 1.46215, 0, 0, 0.521696,-99) , 
12, 5323.18, 0, 0, 0.579576,-99) , 
5, 1.2921, 1, 0, 0.619087,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437321,-99) , 
5, 1.65454, 0, 0, 0.52549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255077,-99) , 
5, 2.12353, 1, 0, 0.498251,-99) , 
0, 15.5, 0, 0, 0.563756,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559404,-99) , 
4, 1.46484, 0, 0, 0.648357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499906,-99) , 
7, 22.7302, 1, 0, 0.591246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311183,-99) , 
8, 2.45014, 1, 0, 0.555773,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451004,-99) , 
4, 1.4585, 1, 0, 0.555274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363381,-99) , 
9, 39.6735, 0, 0, 0.519918,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35463,-99) , 
4, 1.2128, 1, 0, 0.438619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165063,-99) , 
3, 0.996964, 1, 0, 0.415958,-99) , 
11, -2.29299, 1, 0, 0.452165,-99) , 
11, 3.50505, 0, 0, 0.473894,-99) , 
13, 1.5, 0, 0, 0.501151,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0139078);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.863196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696169,-99) , 
4, 1.15319, 1, 0, 0.782366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583707,-99) , 
1, 34.5, 1, 0, 0.688847,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0598503,-99) , 
1, 24.5, 0, 0, 0.520863,-99) , 
7, 104.758, 1, 0, 0.634688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118521,-99) , 
1, 10.5, 0, 0, 0.612385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440943,-99) , 
9, 55.9085, 0, 0, 0.519889,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170556,-99) , 
5, 1.96994, 1, 0, 0.412973,-99) , 
8, 2.52977, 1, 0, 0.50288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208027,-99) , 
0, 40.5, 1, 0, 0.495997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108215,-99) , 
7, 58.2282, 1, 0, 0.484718,-99) , 
2, 29.5, 0, 0, 0.507309,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00846171);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700577,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550508,-99) , 
4, 0.738458, 1, 0, 0.616637,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309522,-99) , 
5, 1.87457, 1, 0, 0.473919,-99) , 
3, 0.987114, 1, 0, 0.55752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212308,-99) , 
5, 2.45372, 1, 0, 0.549487,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467232,-99) , 
10, 0.0640228, 1, 0, 0.483227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277404,-99) , 
7, 7.60801, 0, 0, 0.475822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290782,-99) , 
9, 405.224, 1, 0, 0.46477,-99) , 
6, 0.292851, 1, 0, 0.491838,-99) , 
11, 12.9557, 0, 0, 0.49867,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00986169);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579102,-99) , 
7, 40.9521, 1, 0, 0.661591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469099,-99) , 
8, 0.587451, 0, 0, 0.614681,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468323,-99) , 
9, 124.563, 0, 0, 0.534525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315192,-99) , 
7, 27.3982, 1, 0, 0.500626,-99) , 
2, 18.5, 0, 0, 0.543884,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219237,-99) , 
9, 505.759, 1, 0, 0.486453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187565,-99) , 
3, 0.763295, 0, 0, 0.476144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221347,-99) , 
7, 126.252, 1, 0, 0.468232,-99) , 
4, 1.06625, 1, 0, 0.497585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341798,-99) , 
5, 0.648488, 0, 0, 0.488092,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0132174);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484815,-99) , 
4, 0.0742164, 0, 0, 0.595865,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327278,-99) , 
5, 1.68148, 1, 0, 0.514021,-99) , 
8, 1.42908, 1, 0, 0.556895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334124,-99) , 
10, 0.716826, 0, 0, 0.430915,-99) , 
9, 48.1206, 0, 0, 0.53279,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526594,-99) , 
10, 0.396329, 1, 0, 0.60055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351048,-99) , 
0, 11.5, 1, 0, 0.439093,-99) , 
10, 0.240007, 0, 0, 0.525498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151455,-99) , 
5, 2.28775, 1, 0, 0.4365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211041,-99) , 
0, 29.5, 1, 0, 0.391068,-99) , 
11, -0.390279, 1, 0, 0.458223,-99) , 
4, 1.29104, 1, 0, 0.500916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181958,-99) , 
3, 0.999788, 1, 0, 0.495073,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00774794);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599023,-99) , 
12, 6221.37, 0, 0, 0.633397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501616,-99) , 
10, 0.0845657, 1, 0, 0.526379,-99) , 
4, 0.682723, 1, 0, 0.561861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387147,-99) , 
5, 0.484095, 0, 0, 0.543271,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250933,-99) , 
10, 1.56288, 1, 0, 0.472262,-99) , 
9, 19.6274, 1, 0, 0.481486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198945,-99) , 
1, 51.5, 1, 0, 0.469356,-99) , 
5, 1.51484, 1, 0, 0.501676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 328.131, 1, 0, 0.498761,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00824631);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557506,-99) , 
1, 33.5, 1, 0, 0.657654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462816,-99) , 
8, 1.88568, 1, 0, 0.560738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394208,-99) , 
3, 0.997523, 1, 0, 0.5271,-99) , 
2, 21.5, 0, 0, 0.566414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662278,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185041,-99) , 
7, 99.3422, 1, 0, 0.487537,-99) , 
2, 57.5, 0, 0, 0.498217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2753,-99) , 
3, 0.999428, 1, 0, 0.486712,-99) , 
13, 1.5, 0, 0, 0.510101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178415,-99) , 
5, 2.49857, 1, 0, 0.506094,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00818137);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301765,-99) , 
1, 10.5, 0, 0, 0.608349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 2.19136, 1, 0, 0.518431,-99) , 
2, 20.5, 0, 0, 0.542309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330594,-99) , 
1, 50.5, 1, 0, 0.533943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329753,-99) , 
7, 145.284, 1, 0, 0.527238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33245,-99) , 
2, 7.5, 0, 0, 0.518178,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0111073);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578646,-99) , 
7, 26.5929, 1, 0, 0.638298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405737,-99) , 
6, 0.0763573, 1, 0, 0.505684,-99) , 
8, 0.965576, 0, 0, 0.588585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367219,-99) , 
7, 12.3478, 0, 0, 0.555036,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693125,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337416,-99) , 
7, 23.6647, 1, 0, 0.512913,-99) , 
3, 0.996642, 1, 0, 0.576983,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450987,-99) , 
3, 0.986002, 1, 0, 0.505323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243877,-99) , 
3, 0.996442, 1, 0, 0.410231,-99) , 
11, -0.789454, 1, 0, 0.45565,-99) , 
11, 5.99886, 0, 0, 0.47111,-99) , 
4, 0.739812, 1, 0, 0.491471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233885,-99) , 
1, 74.5, 1, 0, 0.485393,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00761058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694521,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451592,-99) , 
1, 9.5, 0, 0, 0.568052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311942,-99) , 
4, 1.23269, 1, 0, 0.539946,-99) , 
6, 0.249673, 0, 0, 0.560502,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708628,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300099,-99) , 
12, 14936.4, 1, 0, 0.478844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177845,-99) , 
5, 2.36261, 1, 0, 0.473416,-99) , 
12, 21781.4, 0, 0, 0.482249,-99) , 
6, 0.289805, 1, 0, 0.50719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203202,-99) , 
7, 7.00283, 0, 0, 0.501411,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0135702);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.815828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661116,-99) , 
2, 19.5, 0, 0, 0.727534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558482,-99) , 
8, 1.82223, 1, 0, 0.676653,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542413,-99) , 
6, 0.643151, 1, 0, 0.6055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266157,-99) , 
3, 0.998177, 1, 0, 0.441503,-99) , 
11, 5.07496, 0, 0, 0.537897,-99) , 
3, 0.986185, 1, 0, 0.583313,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478731,-99) , 
3, 0.991416, 1, 0, 0.541201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33092,-99) , 
2, 8.5, 0, 0, 0.525776,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342876,-99) , 
7, 31.2291, 1, 0, 0.463173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135748,-99) , 
4, 1.4307, 1, 0, 0.272175,-99) , 
11, 0.205583, 0, 0, 0.399047,-99) , 
11, -0.237826, 1, 0, 0.490507,-99) , 
11, 1.39629, 0, 0, 0.524065,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281994,-99) , 
9, 20.9866, 1, 0, 0.381647,-99) , 
9, 29.7023, 0, 0, 0.511422,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.011036);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687519,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456194,-99) , 
7, 46.5985, 1, 0, 0.535289,-99) , 
12, -6305.38, 1, 0, 0.548097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634452,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369281,-99) , 
9, 110.118, 1, 0, 0.432809,-99) , 
12, 8451.72, 0, 0, 0.465077,-99) , 
8, 1.96723, 1, 0, 0.523383,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295978,-99) , 
7, 21.3595, 0, 0, 0.381593,-99) , 
9, 29.4787, 0, 0, 0.51175,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414725,-99) , 
12, 6183.31, 0, 0, 0.533598,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239568,-99) , 
6, 0.928196, 0, 0, 0.33147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0293807,-99) , 
7, 30.8294, 1, 0, 0.290095,-99) , 
1, 14.5, 0, 0, 0.396183,-99) , 
4, 1.73784, 1, 0, 0.49484,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0100051);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519541,-99) , 
2, 12.5, 0, 0, 0.620735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514714,-99) , 
8, 0.119553, 1, 0, 0.527441,-99) , 
4, 0.643893, 1, 0, 0.546446,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0733571,-99) , 
5, 1.58067, 1, 0, 0.37916,-99) , 
7, 106.923, 1, 0, 0.536135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308094,-99) , 
5, 2.30059, 1, 0, 0.527893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136157,-99) , 
2, 15.5, 0, 0, 0.255546,-99) , 
9, 21.0158, 1, 0, 0.389114,-99) , 
9, 31.7712, 0, 0, 0.513495,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0149602);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553055,-99) , 
1, 22.5, 1, 0, 0.666174,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381223,-99) , 
7, 21.5581, 1, 0, 0.555968,-99) , 
0, 17.5, 0, 0, 0.601324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454244,-99) , 
7, 65.0095, 1, 0, 0.581933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32045,-99) , 
4, 2.01235, 1, 0, 0.568274,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670561,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446985,-99) , 
9, 276.224, 1, 0, 0.542601,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378575,-99) , 
0, 20.5, 0, 0, 0.453058,-99) , 
10, 0.139833, 1, 0, 0.486513,-99) , 
2, 48.5, 0, 0, 0.504076,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470958,-99) , 
7, 18.1632, 0, 0, 0.541898,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276694,-99) , 
6, 0.706014, 1, 0, 0.475487,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205697,-99) , 
11, 7.94808, 0, 0, 0.251557,-99) , 
11, -1.17827, 1, 0, 0.34639,-99) , 
8, 0.217108, 1, 0, 0.397341,-99) , 
5, 1.76978, 1, 0, 0.47048,-99) , 
13, 1.5, 0, 0, 0.500395,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.00885924);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623705,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456899,-99) , 
1, 10.5, 0, 0, 0.539492,-99) , 
9, 145.431, 0, 0, 0.590751,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512399,-99) , 
10, 0.378653, 1, 0, 0.59951,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315941,-99) , 
3, 0.998061, 1, 0, 0.477106,-99) , 
11, -6.78582, 1, 0, 0.488935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325108,-99) , 
9, 490.577, 1, 0, 0.482184,-99) , 
11, 5.12302, 0, 0, 0.497371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104616,-99) , 
9, 70.8803, 1, 0, 0.275984,-99) , 
8, 0.172994, 1, 0, 0.359566,-99) , 
5, 2.10974, 1, 0, 0.484283,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00852397);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659053,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477785,-99) , 
3, 0.987146, 1, 0, 0.517656,-99) , 
12, 14854.5, 0, 0, 0.524715,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413676,-99) , 
12, 4960.47, 0, 0, 0.464409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320606,-99) , 
10, 0.709773, 1, 0, 0.432485,-99) , 
6, 0.92773, 1, 0, 0.505988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190561,-99) , 
5, 2.23812, 1, 0, 0.499733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505252,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180418,-99) , 
9, 45.7061, 1, 0, 0.281882,-99) , 
8, 0.248599, 1, 0, 0.362618,-99) , 
4, 1.7757, 1, 0, 0.482588,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.010623);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520218,-99) , 
9, 112.592, 1, 0, 0.628217,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464747,-99) , 
4, 1.01055, 1, 0, 0.551738,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108273,-99) , 
7, 45.3582, 1, 0, 0.463356,-99) , 
1, 15.5, 0, 0, 0.496372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310986,-99) , 
5, 0.372507, 0, 0, 0.487767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209034,-99) , 
5, 2.36539, 1, 0, 0.480677,-99) , 
11, -7.03703, 1, 0, 0.493151,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0124296);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436406,-99) , 
3, 0.998604, 1, 0, 0.632776,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211229,-99) , 
7, 64.8743, 1, 0, 0.520248,-99) , 
2, 35.5, 0, 0, 0.534565,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283114,-99) , 
5, 1.57202, 0, 0, 0.384726,-99) , 
9, 32.4003, 0, 0, 0.520376,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575353,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264987,-99) , 
3, 0.970379, 0, 0, 0.482034,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111274,-99) , 
10, 0.0929584, 1, 0, 0.261386,-99) , 
9, 73.3758, 1, 0, 0.367738,-99) , 
8, 0.10487, 1, 0, 0.414005,-99) , 
5, 1.96558, 1, 0, 0.500785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133749,-99) , 
1, 87.5, 1, 0, 0.495488,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00857667);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556618,-99) , 
6, 0.230278, 0, 0, 0.588404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397326,-99) , 
9, 32.46, 0, 0, 0.570174,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499157,-99) , 
2, 55.5, 0, 0, 0.512035,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364755,-99) , 
8, 0.588832, 1, 0, 0.43705,-99) , 
5, 1.81562, 1, 0, 0.490723,-99) , 
6, 0.291525, 1, 0, 0.517061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345775,-99) , 
2, 7.5, 0, 0, 0.508628,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253267,-99) , 
8, 0.874514, 1, 0, 0.398697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174019,-99) , 
3, 0.996249, 1, 0, 0.328568,-99) , 
9, 401.671, 1, 0, 0.495628,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0083175);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541,-99) , 
8, 1.33472, 0, 0, 0.624638,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412026,-99) , 
9, 32.8767, 0, 0, 0.517832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3524,-99) , 
9, 467.607, 1, 0, 0.509054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434705,-99) , 
8, 0.216621, 1, 0, 0.502096,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0913762,-99) , 
11, -0.193655, 1, 0, 0.344252,-99) , 
11, 0.570431, 0, 0, 0.429396,-99) , 
5, 1.93004, 1, 0, 0.492134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14525,-99) , 
1, 98.5, 1, 0, 0.486168,-99) , 
12, 12718.6, 0, 0, 0.497793,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00975866);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406468,-99) , 
7, 23.245, 1, 0, 0.540837,-99) , 
1, 16.5, 0, 0, 0.590233,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560961,-99) , 
9, 118.637, 0, 0, 0.615042,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343149,-99) , 
3, 0.997674, 1, 0, 0.477366,-99) , 
12, -4394.55, 1, 0, 0.492144,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527009,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0839624,-99) , 
7, 39.2776, 1, 0, 0.247032,-99) , 
8, 0.432531, 1, 0, 0.376997,-99) , 
4, 1.74778, 1, 0, 0.477854,-99) , 
11, -5.89505, 1, 0, 0.491349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231996,-99) , 
7, 7.5399, 0, 0, 0.482957,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0120545);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358924,-99) , 
0, 27.5, 1, 0, 0.535559,-99) , 
11, 7.98243, 0, 0, 0.546683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180872,-99) , 
5, 1.89368, 1, 0, 0.357982,-99) , 
7, 8.0842, 0, 0, 0.531507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189442,-99) , 
5, 2.36325, 1, 0, 0.523216,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35663,-99) , 
1, 13.5, 0, 0, 0.62406,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435138,-99) , 
12, -5523.5, 1, 0, 0.454799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187364,-99) , 
1, 10.5, 0, 0, 0.438292,-99) , 
11, -4.45955, 1, 0, 0.472694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194713,-99) , 
2, 14.5, 0, 0, 0.440834,-99) , 
7, 28.4575, 1, 0, 0.49358,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0111696);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689102,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532342,-99) , 
0, 10.5, 1, 0, 0.548928,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243984,-99) , 
8, 0.247409, 1, 0, 0.40072,-99) , 
5, 2.16559, 1, 0, 0.537036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178223,-99) , 
0, 68.5, 1, 0, 0.528995,-99) , 
2, 51.5, 0, 0, 0.539451,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388221,-99) , 
6, 0.8452, 1, 0, 0.552527,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26151,-99) , 
4, 1.76123, 1, 0, 0.445165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0998012,-99) , 
4, 1.62994, 1, 0, 0.260353,-99) , 
11, 5.46253, 0, 0, 0.354162,-99) , 
11, -4.99106, 1, 0, 0.422112,-99) , 
3, 0.997566, 1, 0, 0.516791,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0129778);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.77807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547396,-99) , 
7, 74.4938, 1, 0, 0.662181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34556,-99) , 
4, 1.81995, 1, 0, 0.565237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380057,-99) , 
5, 1.89117, 0, 0, 0.438642,-99) , 
9, 70.0214, 0, 0, 0.522668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19467,-99) , 
5, 2.41094, 1, 0, 0.513384,-99) , 
2, 28.5, 0, 0, 0.544554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484741,-99) , 
6, 0.67204, 1, 0, 0.602825,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51603,-99) , 
9, 123.702, 1, 0, 0.649666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151258,-99) , 
7, 71.2161, 1, 0, 0.43348,-99) , 
2, 43.5, 0, 0, 0.453536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225025,-99) , 
3, 0.999094, 1, 0, 0.439531,-99) , 
11, 6.35554, 0, 0, 0.455867,-99) , 
13, 1.5, 0, 0, 0.483893,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0131289);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.772714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629102,-99) , 
2, 18.5, 0, 0, 0.68097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142511,-99) , 
4, 2.02435, 1, 0, 0.468462,-99) , 
12, 9282.14, 0, 0, 0.507193,-99) , 
6, 0.282294, 1, 0, 0.559038,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519753,-99) , 
7, 17.4586, 0, 0, 0.577803,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407244,-99) , 
1, 14.5, 0, 0, 0.477319,-99) , 
10, 0.138414, 1, 0, 0.509258,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394858,-99) , 
11, 6.24313, 0, 0, 0.428002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141911,-99) , 
7, 66.3141, 1, 0, 0.405542,-99) , 
5, 1.74816, 1, 0, 0.473657,-99) , 
13, 1.5, 0, 0, 0.499229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150803,-99) , 
3, 0.99466, 1, 0, 0.304072,-99) , 
9, 433.012, 1, 0, 0.487607,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0111106);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669116,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566884,-99) , 
6, 0.826271, 1, 0, 0.649092,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303786,-99) , 
3, 0.997854, 1, 0, 0.511176,-99) , 
11, 5.12302, 0, 0, 0.527382,-99) , 
11, -6.19285, 1, 0, 0.539711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359197,-99) , 
2, 9.5, 0, 0, 0.527402,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454098,-99) , 
8, 0.855406, 0, 0, 0.520472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155798,-99) , 
5, 2.31865, 1, 0, 0.511099,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221983,-99) , 
5, 1.89073, 1, 0, 0.442687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236245,-99) , 
12, 5218.99, 1, 0, 0.37627,-99) , 
10, 0.0644618, 0, 0, 0.478444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223374,-99) , 
7, 30.9172, 1, 0, 0.450026,-99) , 
1, 11.5, 0, 0, 0.494898,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0127906);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744432,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570091,-99) , 
11, 0.27516, 0, 0, 0.65777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490165,-99) , 
1, 16.5, 0, 0, 0.586619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38107,-99) , 
11, 4.24867, 0, 0, 0.462585,-99) , 
3, 0.987255, 1, 0, 0.531834,-99) , 
12, 6920, 0, 0, 0.567915,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495368,-99) , 
5, 2.02784, 1, 0, 0.62081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371558,-99) , 
6, 0.727143, 1, 0, 0.466176,-99) , 
0, 15.5, 0, 0, 0.541109,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43999,-99) , 
11, 1.13043, 0, 0, 0.494367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340816,-99) , 
11, -0.387215, 1, 0, 0.388565,-99) , 
5, 1.70187, 1, 0, 0.443143,-99) , 
13, 1.5, 0, 0, 0.47231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204058,-99) , 
1, 57.5, 1, 0, 0.463952,-99) , 
4, 0.810004, 1, 0, 0.494852,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.014417);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566714,-99) , 
12, 10048.2, 0, 0, 0.583391,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300599,-99) , 
9, 131.916, 1, 0, 0.424258,-99) , 
7, 92.6707, 1, 0, 0.56566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3935,-99) , 
9, 32.4429, 0, 0, 0.550064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417746,-99) , 
1, 10.5, 0, 0, 0.558818,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287888,-99) , 
9, 46.6787, 1, 0, 0.386088,-99) , 
8, 0.534237, 1, 0, 0.456575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144318,-99) , 
7, 125.177, 1, 0, 0.443385,-99) , 
4, 1.53355, 1, 0, 0.522835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495099,-99) , 
11, 1.77402, 1, 0, 0.576633,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199575,-99) , 
3, 0.900939, 0, 0, 0.398412,-99) , 
11, 0.426814, 0, 0, 0.485007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329054,-99) , 
3, 0.996361, 1, 0, 0.44794,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170894,-99) , 
0, 15.5, 1, 0, 0.426345,-99) , 
7, 12.6774, 0, 0, 0.500747,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00954561);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702685,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.799252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583417,-99) , 
7, 28.5461, 1, 0, 0.697869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529406,-99) , 
8, 0.803332, 0, 0, 0.641491,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353002,-99) , 
9, 44.5819, 0, 0, 0.52915,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239573,-99) , 
6, 0.14641, 0, 0, 0.377706,-99) , 
8, 1.92102, 1, 0, 0.486881,-99) , 
5, 1.5056, 1, 0, 0.536212,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604166,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393466,-99) , 
7, 40.8827, 1, 0, 0.452159,-99) , 
8, 0.0667468, 1, 0, 0.460497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242283,-99) , 
10, 0.0295358, 0, 0, 0.452889,-99) , 
6, 0.297772, 1, 0, 0.480197,-99) , 
12, 21648.6, 0, 0, 0.486822,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.012708);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500075,-99) , 
10, 0.10759, 0, 0, 0.617094,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478111,-99) , 
10, 0.120578, 1, 0, 0.515313,-99) , 
8, 1.57332, 0, 0, 0.541031,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365311,-99) , 
2, 14.5, 0, 0, 0.425849,-99) , 
5, 1.81705, 0, 0, 0.452789,-99) , 
8, 2.42206, 1, 0, 0.52077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274866,-99) , 
7, 7.38223, 0, 0, 0.512557,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39271,-99) , 
7, 19.318, 0, 0, 0.513643,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307016,-99) , 
8, 1.33364, 0, 0, 0.493004,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106473,-99) , 
4, 1.8311, 1, 0, 0.320099,-99) , 
9, 47.7316, 1, 0, 0.37048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115154,-99) , 
5, 2.32283, 1, 0, 0.35759,-99) , 
8, 0.307933, 1, 0, 0.401942,-99) , 
4, 1.51447, 1, 0, 0.482309,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00525061);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493836,-99) , 
7, 10.5302, 1, 0, 0.607375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49783,-99) , 
11, -8.83746, 1, 0, 0.507052,-99) , 
0, 10.5, 1, 0, 0.517527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285918,-99) , 
7, 6.99522, 0, 0, 0.513242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287472,-99) , 
7, 188.592, 1, 0, 0.509361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299773,-99) , 
3, 0.99962, 1, 0, 0.501574,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0145519);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46031,-99) , 
11, 7.65194, 1, 0, 0.534969,-99) , 
4, 1.63103, 0, 0, 0.594515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475843,-99) , 
5, 1.46604, 1, 0, 0.512911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28643,-99) , 
4, 1.64011, 0, 0, 0.393618,-99) , 
9, 34.0469, 0, 0, 0.497744,-99) , 
12, -3152.39, 1, 0, 0.514874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324941,-99) , 
2, 7.5, 0, 0, 0.50493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51107,-99) , 
10, 1.04905, 1, 0, 0.604446,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335342,-99) , 
9, 93.4036, 1, 0, 0.431416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107035,-99) , 
7, 134.815, 1, 0, 0.362466,-99) , 
4, 0.829871, 1, 0, 0.473953,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0247406,-99) , 
4, 1.35561, 1, 0, 0.196269,-99) , 
2, 27.5, 0, 0, 0.402111,-99) , 
7, 44.5468, 1, 0, 0.483674,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0140126);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800419,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411328,-99) , 
7, 21.098, 1, 0, 0.596608,-99) , 
2, 22.5, 0, 0, 0.638673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439088,-99) , 
4, 1.31095, 1, 0, 0.530807,-99) , 
12, 3569.09, 1, 0, 0.59685,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323354,-99) , 
3, 0.768227, 0, 0, 0.547583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365666,-99) , 
8, 2.17561, 1, 0, 0.509877,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.167038,-99) , 
4, 1.37427, 1, 0, 0.370987,-99) , 
9, 61.4832, 0, 0, 0.473505,-99) , 
3, 0.935119, 0, 0, 0.542785,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451706,-99) , 
6, 0.748491, 1, 0, 0.589314,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448151,-99) , 
11, 3.8414, 0, 0, 0.483134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274226,-99) , 
3, 0.999591, 1, 0, 0.47251,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505657,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290294,-99) , 
5, 1.66854, 1, 0, 0.427498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186802,-99) , 
9, 142.339, 1, 0, 0.348792,-99) , 
8, 2.26926, 1, 0, 0.447667,-99) , 
11, -8.07836, 1, 0, 0.463644,-99) , 
3, 0.983637, 1, 0, 0.498936,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0101073);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424772,-99) , 
3, 0.958132, 0, 0, 0.582847,-99) , 
3, 0.910293, 1, 0, 0.60352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442784,-99) , 
9, 346.492, 1, 0, 0.586183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0879565,-99) , 
5, 2.53337, 1, 0, 0.577493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441809,-99) , 
3, 0.998113, 1, 0, 0.581257,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294437,-99) , 
4, 1.75757, 1, 0, 0.461619,-99) , 
11, 3.68694, 0, 0, 0.484993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31382,-99) , 
3, 0.999372, 1, 0, 0.474545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15775,-99) , 
2, 6.5, 0, 0, 0.467931,-99) , 
13, 1.5, 0, 0, 0.501561,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0115371);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.824999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651457,-99) , 
0, 62.5, 0, 0, 0.743866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537537,-99) , 
4, 1.38419, 1, 0, 0.69127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362616,-99) , 
1, 32.5, 1, 0, 0.48115,-99) , 
3, 0.996919, 1, 0, 0.618258,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503614,-99) , 
12, 10340.1, 0, 0, 0.518272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292055,-99) , 
7, 7.39457, 0, 0, 0.509981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212308,-99) , 
0, 40.5, 1, 0, 0.503405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.119607,-99) , 
7, 59.4611, 1, 0, 0.489499,-99) , 
2, 32.5, 0, 0, 0.509331,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0113649);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453183,-99) , 
9, 54.424, 0, 0, 0.536209,-99) , 
12, 11141.8, 0, 0, 0.552028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450339,-99) , 
7, 23.4443, 1, 0, 0.555107,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217664,-99) , 
5, 1.66919, 1, 0, 0.401046,-99) , 
8, 2.84777, 0, 0, 0.463362,-99) , 
8, 2.19687, 1, 0, 0.529837,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632285,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564096,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278064,-99) , 
9, 59.6502, 1, 0, 0.362808,-99) , 
8, 0.185886, 1, 0, 0.404401,-99) , 
6, 1.00428, 0, 0, 0.444685,-99) , 
4, 1.52454, 1, 0, 0.507528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192844,-99) , 
1, 83.5, 1, 0, 0.501816,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0113585);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430396,-99) , 
9, 344.334, 1, 0, 0.556137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291206,-99) , 
2, 7.5, 0, 0, 0.54644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379281,-99) , 
8, 0.168368, 0, 0, 0.535511,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362181,-99) , 
12, 2981.72, 1, 0, 0.509551,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215434,-99) , 
9, 61.9197, 1, 0, 0.355526,-99) , 
8, 0.721269, 1, 0, 0.448322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0501605,-99) , 
3, 0.999455, 1, 0, 0.432186,-99) , 
5, 1.93101, 1, 0, 0.513366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163542,-99) , 
7, 180.335, 1, 0, 0.507751,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0101429);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709399,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486151,-99) , 
0, 21.5, 0, 0, 0.555135,-99) , 
8, 2.53288, 0, 0, 0.598765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329279,-99) , 
8, 2.80969, 1, 0, 0.516196,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155195,-99) , 
2, 74.5, 0, 0, 0.321612,-99) , 
7, 99.8536, 1, 0, 0.502971,-99) , 
9, 51.978, 1, 0, 0.518807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285812,-99) , 
1, 5.5, 0, 0, 0.512345,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453277,-99) , 
9, 21.0091, 1, 0, 0.511159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284808,-99) , 
10, 0.731854, 0, 0, 0.448284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210044,-99) , 
8, 0.390468, 0, 0, 0.399667,-99) , 
9, 32.4429, 0, 0, 0.500627,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0187031);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582245,-99) , 
10, 0.886466, 1, 0, 0.693526,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484937,-99) , 
3, 0.988057, 1, 0, 0.566166,-99) , 
4, 0.935722, 1, 0, 0.621995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380267,-99) , 
1, 82.5, 1, 0, 0.602414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317225,-99) , 
1, 11.5, 0, 0, 0.57948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512519,-99) , 
2, 10.5, 0, 0, 0.589087,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373263,-99) , 
7, 16.3587, 0, 0, 0.448676,-99) , 
9, 82.792, 0, 0, 0.534541,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376007,-99) , 
7, 12.8187, 0, 0, 0.469246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311228,-99) , 
1, 12.5, 1, 0, 0.426485,-99) , 
4, 1.52826, 1, 0, 0.502883,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277085,-99) , 
5, 1.64516, 1, 0, 0.451063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134071,-99) , 
7, 49.5873, 1, 0, 0.386598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136801,-99) , 
0, 16.5, 0, 0, 0.313594,-99) , 
7, 28.3562, 1, 0, 0.469633,-99) , 
2, 21.5, 0, 0, 0.501124,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0127308);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56885,-99) , 
12, 2865.21, 1, 0, 0.641527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478073,-99) , 
5, 1.18495, 0, 0, 0.609249,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44235,-99) , 
8, 0.617798, 0, 0, 0.5579,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43794,-99) , 
6, 0.974439, 0, 0, 0.463026,-99) , 
5, 1.61933, 1, 0, 0.511944,-99) , 
13, 1.5, 0, 0, 0.54329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307676,-99) , 
7, 8.42437, 0, 0, 0.530174,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461479,-99) , 
8, 1.13398, 1, 0, 0.576012,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413324,-99) , 
7, 30.8908, 1, 0, 0.502811,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226279,-99) , 
3, 0.998487, 1, 0, 0.357004,-99) , 
11, -2.89053, 1, 0, 0.430344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139589,-99) , 
5, 2.12684, 1, 0, 0.408585,-99) , 
11, 8.35544, 0, 0, 0.436758,-99) , 
3, 0.993831, 1, 0, 0.499082,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0075675);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574827,-99) , 
11, -3.27558, 0, 0, 0.66714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537152,-99) , 
2, 10.5, 0, 0, 0.636647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487639,-99) , 
5, 1.30739, 0, 0, 0.595253,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405698,-99) , 
8, 0.861658, 1, 0, 0.468389,-99) , 
9, 226.176, 1, 0, 0.567878,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462813,-99) , 
6, 0.823812, 1, 0, 0.608884,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433722,-99) , 
3, 0.992797, 1, 0, 0.487922,-99) , 
11, -6.64853, 1, 0, 0.498088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3177,-99) , 
3, 0.999471, 1, 0, 0.489165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283432,-99) , 
3, 0.770952, 0, 0, 0.480302,-99) , 
13, 1.5, 0, 0, 0.507659,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0122511);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.801458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538636,-99) , 
7, 74.4938, 1, 0, 0.66671,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68443,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272927,-99) , 
4, 1.99978, 1, 0, 0.526541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318728,-99) , 
7, 34.9336, 1, 0, 0.494997,-99) , 
3, 0.890831, 1, 0, 0.520192,-99) , 
2, 28.5, 0, 0, 0.552026,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428185,-99) , 
5, 0.962092, 0, 0, 0.561647,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423164,-99) , 
10, 0.202825, 0, 0, 0.47898,-99) , 
5, 1.50922, 1, 0, 0.511411,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27215,-99) , 
2, 23.5, 0, 0, 0.44748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20767,-99) , 
1, 13.5, 0, 0, 0.400618,-99) , 
7, 35.2566, 1, 0, 0.480969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227172,-99) , 
5, 2.30012, 1, 0, 0.473291,-99) , 
13, 1.5, 0, 0, 0.497385,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0179701);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704448,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475172,-99) , 
3, 0.98923, 0, 0, 0.565618,-99) , 
7, 39.986, 1, 0, 0.614164,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482953,-99) , 
10, 0.126169, 1, 0, 0.561958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387226,-99) , 
6, 0.807145, 1, 0, 0.506197,-99) , 
0, 20.5, 0, 0, 0.548928,-99) , 
6, 0.130946, 1, 0, 0.573914,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507533,-99) , 
10, 0.282174, 1, 0, 0.569876,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393197,-99) , 
5, 1.44504, 0, 0, 0.466275,-99) , 
7, 16.4363, 0, 0, 0.534302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536477,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247564,-99) , 
11, -4.39961, 1, 0, 0.362682,-99) , 
12, -2973.47, 1, 0, 0.417546,-99) , 
3, 0.995891, 1, 0, 0.500319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29744,-99) , 
6, 0.57573, 0, 0, 0.432077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0409295,-99) , 
10, 0.384833, 1, 0, 0.278521,-99) , 
9, 60.4247, 1, 0, 0.333847,-99) , 
8, 0.137255, 1, 0, 0.384713,-99) , 
5, 1.65953, 1, 0, 0.452055,-99) , 
13, 1.5, 0, 0, 0.48844,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00805327);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685318,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549149,-99) , 
6, 0.763115, 1, 0, 0.622161,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455896,-99) , 
9, 56.2459, 0, 0, 0.567863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35125,-99) , 
8, 2.6939, 1, 0, 0.546109,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475816,-99) , 
11, -0.775945, 1, 0, 0.513869,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382028,-99) , 
12, 10058.9, 0, 0, 0.422583,-99) , 
3, 0.985012, 1, 0, 0.470821,-99) , 
13, 1.5, 0, 0, 0.493277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247158,-99) , 
1, 5.5, 0, 0, 0.48798,-99) , 
12, -6083.21, 1, 0, 0.499998,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0158872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610371,-99) , 
11, -3.33785, 0, 0, 0.659443,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376208,-99) , 
8, 0.567439, 1, 0, 0.500625,-99) , 
4, 1.40096, 1, 0, 0.599428,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488585,-99) , 
2, 20.5, 0, 0, 0.530774,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134086,-99) , 
1, 26.5, 1, 0, 0.368867,-99) , 
3, 0.996864, 1, 0, 0.503913,-99) , 
12, 6295.69, 0, 0, 0.528577,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378614,-99) , 
7, 24.6353, 0, 0, 0.473231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209722,-99) , 
8, 0.483401, 0, 0, 0.399267,-99) , 
9, 32.46, 0, 0, 0.513654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375384,-99) , 
7, 11.5774, 0, 0, 0.558401,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419141,-99) , 
3, 0.993245, 0, 0, 0.515139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32524,-99) , 
0, 11.5, 1, 0, 0.435507,-99) , 
12, 1512.19, 1, 0, 0.485718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227303,-99) , 
7, 22.6528, 1, 0, 0.435798,-99) , 
1, 9.5, 0, 0, 0.494569,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00639933);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623418,-99) , 
7, 29.2655, 0, 0, 0.681298,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419606,-99) , 
5, 0.814349, 0, 0, 0.538215,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426087,-99) , 
11, 6.24293, 0, 0, 0.458971,-99) , 
5, 1.89503, 1, 0, 0.518256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275845,-99) , 
2, 6.5, 0, 0, 0.512634,-99) , 
11, -8.15041, 1, 0, 0.522294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324101,-99) , 
7, 145.535, 1, 0, 0.515809,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.014734);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510716,-99) , 
10, 0.193693, 1, 0, 0.554735,-99) , 
12, 1540.33, 1, 0, 0.611571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643179,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387544,-99) , 
12, -750.113, 1, 0, 0.464184,-99) , 
12, 7893.05, 0, 0, 0.509847,-99) , 
3, 0.985966, 1, 0, 0.559859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343333,-99) , 
7, 10.2448, 0, 0, 0.538428,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499298,-99) , 
12, 2176.53, 1, 0, 0.538787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324495,-99) , 
10, 0.216531, 0, 0, 0.413472,-99) , 
8, 1.91141, 1, 0, 0.50627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305196,-99) , 
3, 0.848183, 0, 0, 0.491925,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36238,-99) , 
1, 14.5, 0, 0, 0.492521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23979,-99) , 
9, 57.2174, 1, 0, 0.421676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0787036,-99) , 
6, 0.31923, 0, 0, 0.384051,-99) , 
10, 0.467495, 1, 0, 0.464764,-99) , 
4, 1.06656, 1, 0, 0.495119,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.010455);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640725,-99) , 
6, 0.267488, 1, 0, 0.670962,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412972,-99) , 
8, 0.63453, 0, 0, 0.529686,-99) , 
10, 0.202017, 1, 0, 0.569033,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176652,-99) , 
7, 142.553, 1, 0, 0.497369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162509,-99) , 
1, 52.5, 1, 0, 0.481992,-99) , 
5, 1.646, 1, 0, 0.531333,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421725,-99) , 
12, 3537.8, 1, 0, 0.5152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313524,-99) , 
4, 1.77163, 1, 0, 0.481073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330167,-99) , 
4, 0.943173, 0, 0, 0.444212,-99) , 
7, 13.9184, 0, 0, 0.507762,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252394,-99) , 
3, 0.992652, 1, 0, 0.353609,-99) , 
9, 392.531, 1, 0, 0.495282,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00964973);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506539,-99) , 
0, 23.5, 1, 0, 0.651403,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557198,-99) , 
6, 0.0674761, 1, 0, 0.58012,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441266,-99) , 
11, 0.731229, 0, 0, 0.471644,-99) , 
3, 0.927203, 0, 0, 0.537876,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351367,-99) , 
9, 29.9813, 0, 0, 0.501332,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142095,-99) , 
8, 2.24207, 1, 0, 0.389688,-99) , 
7, 39.9669, 1, 0, 0.47199,-99) , 
3, 0.987086, 1, 0, 0.507047,-99) , 
11, -8.168, 1, 0, 0.515764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198221,-99) , 
3, 0.999712, 1, 0, 0.509096,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00541705);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480575,-99) , 
6, 0.462866, 1, 0, 0.517191,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262296,-99) , 
7, 20.702, 0, 0, 0.38255,-99) , 
9, 29.0345, 0, 0, 0.507033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324646,-99) , 
1, 6.5, 0, 0, 0.498477,-99) , 
11, -8.03473, 1, 0, 0.506758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327209,-99) , 
4, 2.01436, 1, 0, 0.498818,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00882782);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660565,-99) , 
3, 0.985433, 1, 0, 0.698154,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487124,-99) , 
12, 1944.58, 0, 0, 0.557715,-99) , 
6, 0.189832, 1, 0, 0.589134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460317,-99) , 
9, 273.266, 1, 0, 0.5701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272759,-99) , 
5, 2.48678, 1, 0, 0.562456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522653,-99) , 
4, 1.6225, 0, 0, 0.535871,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284974,-99) , 
8, 2.47624, 0, 0, 0.438501,-99) , 
8, 2.21449, 1, 0, 0.512831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396766,-99) , 
9, 33.0727, 0, 0, 0.500964,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54954,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195782,-99) , 
9, 77.1154, 1, 0, 0.310803,-99) , 
8, 0.177034, 1, 0, 0.37552,-99) , 
4, 1.71571, 1, 0, 0.481561,-99) , 
13, 1.5, 0, 0, 0.506563,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0125418);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.791965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568121,-99) , 
7, 21.6398, 1, 0, 0.657112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454532,-99) , 
9, 60.1998, 0, 0, 0.607282,-99) , 
2, 32.5, 0, 0, 0.637414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
7, 20.0464, 0, 0, 0.532589,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260163,-99) , 
2, 23.5, 0, 0, 0.429328,-99) , 
7, 32.0687, 1, 0, 0.499605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180261,-99) , 
5, 2.3005, 1, 0, 0.494159,-99) , 
8, 0.685313, 1, 0, 0.518444,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6244,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364956,-99) , 
4, 1.42917, 0, 0, 0.435714,-99) , 
3, 0.941107, 1, 0, 0.469869,-99) , 
8, 0.0838229, 1, 0, 0.513533,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235529,-99) , 
5, 2.11791, 0, 0, 0.300446,-99) , 
9, 69.3591, 0, 0, 0.444272,-99) , 
8, 0.382882, 0, 0, 0.502471,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0095857);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544244,-99) , 
3, 0.997207, 0, 0, 0.628717,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508643,-99) , 
8, 0.316996, 1, 0, 0.534696,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4044,-99) , 
3, 0.975497, 0, 0, 0.478192,-99) , 
6, 0.622795, 1, 0, 0.512274,-99) , 
11, -5.54672, 1, 0, 0.523291,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152326,-99) , 
11, 4.60673, 0, 0, 0.29362,-99) , 
11, -4.3283, 1, 0, 0.379925,-99) , 
3, 0.99901, 1, 0, 0.5112,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555238,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0711917,-99) , 
10, 0.262333, 0, 0, 0.276478,-99) , 
8, 0.177489, 1, 0, 0.371826,-99) , 
4, 1.89355, 1, 0, 0.49973,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00969523);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700774,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531056,-99) , 
8, 1.09002, 0, 0, 0.593222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408088,-99) , 
0, 23.5, 0, 0, 0.480847,-99) , 
9, 79.9195, 0, 0, 0.552703,-99) , 
6, 0.540685, 0, 0, 0.573168,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672596,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388399,-99) , 
8, 1.60798, 1, 0, 0.469056,-99) , 
2, 24.5, 0, 0, 0.498528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196478,-99) , 
1, 50.5, 1, 0, 0.482899,-99) , 
5, 1.60118, 1, 0, 0.523477,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193022,-99) , 
7, 125.087, 1, 0, 0.497854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38628,-99) , 
4, 0.928548, 0, 0, 0.472638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328906,-99) , 
5, 2.06635, 1, 0, 0.46033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244578,-99) , 
3, 0.838457, 0, 0, 0.450883,-99) , 
6, 0.669253, 1, 0, 0.494062,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.00524993);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368713,-99) , 
3, 0.999653, 1, 0, 0.545946,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363316,-99) , 
9, 116.252, 1, 0, 0.46231,-99) , 
8, 2.42384, 1, 0, 0.531181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29981,-99) , 
7, 7.08498, 0, 0, 0.525938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362054,-99) , 
5, 0.533437, 0, 0, 0.518116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239103,-99) , 
10, 4.71292, 1, 0, 0.513774,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.00947383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625962,-99) , 
2, 16.5, 0, 0, 0.688316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468517,-99) , 
8, 0.963022, 0, 0, 0.621735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463976,-99) , 
6, 0.921516, 1, 0, 0.564269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417122,-99) , 
7, 40.8108, 1, 0, 0.560745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391626,-99) , 
8, 2.3791, 1, 0, 0.532646,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453636,-99) , 
3, 0.994009, 1, 0, 0.526645,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371554,-99) , 
11, -1.21343, 1, 0, 0.431056,-99) , 
11, 3.29861, 0, 0, 0.449999,-99) , 
13, 1.5, 0, 0, 0.475149,-99) , 
5, 1.14849, 1, 0, 0.4929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266009,-99) , 
3, 0.999707, 1, 0, 0.487518,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0108815);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684128,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533455,-99) , 
6, 0.0690373, 1, 0, 0.545587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370088,-99) , 
8, 2.89136, 1, 0, 0.533692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302498,-99) , 
0, 15.5, 1, 0, 0.474842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104216,-99) , 
7, 27.7091, 1, 0, 0.455648,-99) , 
2, 12.5, 0, 0, 0.498269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366473,-99) , 
9, 94.9658, 1, 0, 0.48816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0793513,-99) , 
1, 20.5, 0, 0, 0.405385,-99) , 
7, 65.72, 1, 0, 0.486584,-99) , 
12, 22300.1, 0, 0, 0.492308,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.014031);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620631,-99) , 
11, -0.975949, 1, 0, 0.680418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51552,-99) , 
3, 0.963661, 0, 0, 0.637653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272824,-99) , 
7, 174.342, 1, 0, 0.617617,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45208,-99) , 
8, 0.727214, 1, 0, 0.550811,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297492,-99) , 
3, 0.985732, 1, 0, 0.38516,-99) , 
9, 204.76, 0, 0, 0.470755,-99) , 
9, 116.166, 1, 0, 0.549434,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177721,-99) , 
7, 6.93093, 0, 0, 0.499835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334068,-99) , 
4, 0.186112, 0, 0, 0.485382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0457496,-99) , 
5, 2.36643, 1, 0, 0.475459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174422,-99) , 
7, 39.8613, 1, 0, 0.460892,-99) , 
2, 20.5, 0, 0, 0.488781,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0118021);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598796,-99) , 
5, 1.49219, 1, 0, 0.657463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502176,-99) , 
9, 55.7114, 0, 0, 0.612204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393098,-99) , 
5, 2.28685, 1, 0, 0.596294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496037,-99) , 
10, 0.333471, 1, 0, 0.562638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372923,-99) , 
7, 10.2973, 0, 0, 0.536745,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509766,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311945,-99) , 
7, 27.6049, 0, 0, 0.378899,-99) , 
8, 0.388624, 1, 0, 0.406015,-99) , 
3, 0.942241, 0, 0, 0.487714,-99) , 
6, 0.273544, 1, 0, 0.52745,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450181,-99) , 
1, 27.5, 1, 0, 0.574281,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428079,-99) , 
11, -5.84476, 1, 0, 0.457636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263587,-99) , 
10, 0.64506, 1, 0, 0.437341,-99) , 
2, 24.5, 0, 0, 0.464222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295984,-99) , 
7, 99.78, 1, 0, 0.449931,-99) , 
3, 0.990483, 1, 0, 0.493626,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00857596);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735017,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674659,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423741,-99) , 
7, 32.1093, 1, 0, 0.516269,-99) , 
11, -4.61097, 1, 0, 0.541472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383716,-99) , 
8, 2.52334, 1, 0, 0.51869,-99) , 
3, 0.890221, 1, 0, 0.543347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482367,-99) , 
11, -6.56803, 1, 0, 0.493859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302544,-99) , 
3, 0.999383, 1, 0, 0.483995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242072,-99) , 
10, 0.0280609, 0, 0, 0.474446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272022,-99) , 
4, 1.93467, 1, 0, 0.462003,-99) , 
13, 1.5, 0, 0, 0.48637,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0113796);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589105,-99) , 
6, 0.0752872, 1, 0, 0.626893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477256,-99) , 
11, 4.38052, 0, 0, 0.522119,-99) , 
3, 0.986963, 1, 0, 0.573322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355975,-99) , 
4, 0.53571, 0, 0, 0.448711,-99) , 
9, 54.8202, 0, 0, 0.543988,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27913,-99) , 
3, 0.999375, 1, 0, 0.50631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163554,-99) , 
6, 0.179142, 0, 0, 0.497237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125195,-99) , 
11, -1.25085, 1, 0, 0.241306,-99) , 
9, 60.0013, 1, 0, 0.332817,-99) , 
8, 2.27497, 1, 0, 0.468019,-99) , 
4, 1.14836, 1, 0, 0.504745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244119,-99) , 
2, 6.5, 0, 0, 0.498325,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0101621);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.829392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646972,-99) , 
0, 41.5, 0, 0, 0.756599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428773,-99) , 
1, 13.5, 0, 0, 0.689081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339698,-99) , 
0, 61.5, 0, 0, 0.47763,-99) , 
1, 34.5, 1, 0, 0.592609,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39768,-99) , 
9, 29.9643, 0, 0, 0.508829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240525,-99) , 
0, 37.5, 1, 0, 0.503068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173356,-99) , 
7, 53.0321, 1, 0, 0.490883,-99) , 
2, 28.5, 0, 0, 0.506906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293245,-99) , 
7, 158.099, 1, 0, 0.501423,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0108939);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478349,-99) , 
9, 153.06, 0, 0, 0.629674,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498491,-99) , 
11, -1.69993, 1, 0, 0.527011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323141,-99) , 
9, 468.753, 1, 0, 0.516173,-99) , 
8, 0.33275, 1, 0, 0.536162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341589,-99) , 
5, 2.30047, 1, 0, 0.528704,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631735,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442215,-99) , 
2, 28.5, 0, 0, 0.501882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347368,-99) , 
8, 0.58825, 0, 0, 0.466689,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.029224,-99) , 
2, 13.5, 0, 0, 0.258059,-99) , 
4, 1.49515, 1, 0, 0.419268,-99) , 
12, 10196, 0, 0, 0.453934,-99) , 
10, 0.434446, 1, 0, 0.506268,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00869933);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678372,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474999,-99) , 
10, 0.281166, 1, 0, 0.553008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319389,-99) , 
3, 0.999451, 1, 0, 0.533219,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335262,-99) , 
1, 33.5, 1, 0, 0.457298,-99) , 
2, 65.5, 0, 0, 0.465085,-99) , 
11, 1.65516, 0, 0, 0.488802,-99) , 
11, -10.7271, 1, 0, 0.495355,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619517,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0993384,-99) , 
3, 0.97155, 0, 0, 0.272511,-99) , 
8, 0.0912798, 1, 0, 0.371134,-99) , 
5, 2.11123, 1, 0, 0.483314,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0149941);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.834704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585989,-99) , 
3, 0.964552, 0, 0, 0.68925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502543,-99) , 
3, 0.992644, 1, 0, 0.621397,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278654,-99) , 
5, 2.34329, 1, 0, 0.547767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345027,-99) , 
7, 29.5857, 1, 0, 0.523311,-99) , 
2, 21.5, 0, 0, 0.549293,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415817,-99) , 
7, 21.5352, 1, 0, 0.516055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245024,-99) , 
12, 537.715, 1, 0, 0.331502,-99) , 
12, 3077.66, 0, 0, 0.420348,-99) , 
8, 2.40962, 1, 0, 0.523762,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506496,-99) , 
7, 19.0486, 1, 0, 0.599776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414415,-99) , 
0, 19.5, 1, 0, 0.539213,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294452,-99) , 
1, 8.5, 1, 0, 0.369192,-99) , 
10, 0.0468379, 1, 0, 0.410034,-99) , 
2, 11.5, 0, 0, 0.478242,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395656,-99) , 
9, 114.732, 1, 0, 0.516971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328551,-99) , 
6, 0.910344, 0, 0, 0.445712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231023,-99) , 
1, 14.5, 0, 0, 0.386462,-99) , 
7, 28.4685, 1, 0, 0.441325,-99) , 
6, 0.642485, 1, 0, 0.489796,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0101864);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54191,-99) , 
4, 1.4976, 1, 0, 0.661208,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36478,-99) , 
3, 0.975354, 0, 0, 0.485261,-99) , 
10, 0.0423015, 0, 0, 0.591235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730276,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402483,-99) , 
8, 0.320095, 0, 0, 0.516057,-99) , 
4, 0.620726, 1, 0, 0.555027,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476267,-99) , 
8, 1.13252, 1, 0, 0.556137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265003,-99) , 
3, 0.997662, 1, 0, 0.455359,-99) , 
12, -2385.72, 1, 0, 0.476489,-99) , 
11, -2.97194, 1, 0, 0.494492,-99) , 
10, 0.0710719, 1, 0, 0.509461,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235213,-99) , 
5, 1.96448, 0, 0, 0.32721,-99) , 
9, 472.721, 1, 0, 0.499522,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00564201);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744449,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518019,-99) , 
6, 0.201377, 1, 0, 0.542664,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295099,-99) , 
7, 65.0583, 1, 0, 0.474335,-99) , 
5, 1.55894, 1, 0, 0.508523,-99) , 
5, 2.27598, 0, 0, 0.513173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343875,-99) , 
2, 7.5, 0, 0, 0.506053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312684,-99) , 
5, 2.32299, 1, 0, 0.500076,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0121667);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562339,-99) , 
3, 0.987041, 1, 0, 0.61862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211163,-99) , 
7, 236.759, 1, 0, 0.608626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36791,-99) , 
1, 69.5, 1, 0, 0.586237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168242,-99) , 
1, 9.5, 0, 0, 0.564139,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655716,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4004,-99) , 
3, 0.996155, 1, 0, 0.484762,-99) , 
11, -6.63849, 1, 0, 0.499232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 10.1079, 0, 0, 0.314574,-99) , 
5, 2.16483, 1, 0, 0.484936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195924,-99) , 
7, 42.0534, 1, 0, 0.471274,-99) , 
2, 21.5, 0, 0, 0.498456,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0077018);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504558,-99) , 
1, 15.5, 0, 0, 0.537817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143734,-99) , 
7, 216.445, 1, 0, 0.534193,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391905,-99) , 
5, 1.24423, 0, 0, 0.489489,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403111,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164582,-99) , 
10, 0.231284, 0, 0, 0.317329,-99) , 
4, 1.39308, 1, 0, 0.446924,-99) , 
8, 2.27433, 1, 0, 0.514866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214404,-99) , 
2, 6.5, 0, 0, 0.508872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163196,-99) , 
5, 2.49859, 1, 0, 0.505528,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.011794);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711161,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49166,-99) , 
9, 104.243, 1, 0, 0.546156,-99) , 
3, 0.902122, 1, 0, 0.570246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139188,-99) , 
5, 2.48662, 1, 0, 0.561608,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365085,-99) , 
1, 24.5, 1, 0, 0.517682,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 14.5, 0, 0, 0.371008,-99) , 
7, 60.0833, 1, 0, 0.499389,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4013,-99) , 
0, 36.5, 1, 0, 0.469282,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200693,-99) , 
11, 0.366412, 0, 0, 0.292824,-99) , 
7, 21.0531, 0, 0, 0.381722,-99) , 
3, 0.927326, 0, 0, 0.477782,-99) , 
13, 1.5, 0, 0, 0.503365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189567,-99) , 
7, 171.515, 1, 0, 0.496985,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0118836);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565005,-99) , 
10, 0.217834, 1, 0, 0.601455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414858,-99) , 
9, 315.011, 1, 0, 0.575189,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426464,-99) , 
8, 1.8789, 1, 0, 0.519019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359317,-99) , 
5, 1.12085, 0, 0, 0.467936,-99) , 
2, 12.5, 0, 0, 0.536631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433567,-99) , 
7, 30.425, 1, 0, 0.584639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415147,-99) , 
5, 2.05962, 1, 0, 0.541817,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277445,-99) , 
7, 12.7974, 0, 0, 0.515376,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359546,-99) , 
8, 0.108664, 1, 0, 0.388875,-99) , 
9, 48.2319, 1, 0, 0.425156,-99) , 
12, 828.028, 1, 0, 0.461756,-99) , 
5, 1.54718, 1, 0, 0.49568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318567,-99) , 
5, 0.169704, 0, 0, 0.48753,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0107876);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382411,-99) , 
7, 11.428, 0, 0, 0.571459,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0646628,-99) , 
1, 16.5, 0, 0, 0.439894,-99) , 
7, 65.463, 1, 0, 0.547866,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339954,-99) , 
10, 0.275121, 1, 0, 0.495332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249354,-99) , 
0, 14.5, 1, 0, 0.466868,-99) , 
2, 11.5, 0, 0, 0.519625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273503,-99) , 
3, 0.999697, 1, 0, 0.514025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304281,-99) , 
9, 488.938, 1, 0, 0.50528,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0139688);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686965,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516017,-99) , 
6, 0.188217, 1, 0, 0.544814,-99) , 
9, 49.8271, 1, 0, 0.582115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271207,-99) , 
5, 2.36517, 1, 0, 0.574434,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48947,-99) , 
12, 12029.6, 0, 0, 0.506904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293901,-99) , 
8, 0.49578, 1, 0, 0.375153,-99) , 
5, 1.98314, 1, 0, 0.482937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14496,-99) , 
7, 7.00158, 0, 0, 0.473677,-99) , 
11, 1.39449, 0, 0, 0.510508,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446,-99) , 
5, 1.53246, 1, 0, 0.569304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319573,-99) , 
3, 0.98969, 1, 0, 0.412515,-99) , 
9, 100.777, 1, 0, 0.497739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115115,-99) , 
7, 49.9865, 1, 0, 0.268415,-99) , 
2, 28.5, 0, 0, 0.419231,-99) , 
7, 36.8965, 1, 0, 0.486113,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00958912);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676824,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659408,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619128,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503203,-99) , 
12, -1082.14, 1, 0, 0.52805,-99) , 
10, 0.0879205, 1, 0, 0.548694,-99) , 
3, 0.883348, 1, 0, 0.564575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413376,-99) , 
7, 9.38195, 0, 0, 0.554546,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284491,-99) , 
0, 51.5, 1, 0, 0.562919,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284433,-99) , 
11, -0.329441, 1, 0, 0.453808,-99) , 
11, 0.654978, 0, 0, 0.499748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253415,-99) , 
3, 0.999452, 1, 0, 0.488811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239318,-99) , 
9, 475.07, 1, 0, 0.478791,-99) , 
4, 1.14757, 1, 0, 0.514668,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0125111);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473524,-99) , 
11, -3.53891, 0, 0, 0.54988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388567,-99) , 
7, 7.71005, 0, 0, 0.540559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285983,-99) , 
0, 29.5, 1, 0, 0.530407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408668,-99) , 
1, 37.5, 1, 0, 0.563309,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 17.5, 0, 0, 0.373947,-99) , 
7, 104.75, 1, 0, 0.515025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453585,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0659191,-99) , 
7, 45.8317, 1, 0, 0.208175,-99) , 
3, 0.971364, 1, 0, 0.305835,-99) , 
2, 23.5, 0, 0, 0.448548,-99) , 
7, 31.3418, 1, 0, 0.504709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303678,-99) , 
5, 2.30656, 1, 0, 0.4968,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00500974);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645764,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201055,-99) , 
7, 100.689, 1, 0, 0.499281,-99) , 
2, 57.5, 0, 0, 0.505828,-99) , 
8, 0.075155, 1, 0, 0.512427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327476,-99) , 
5, 2.25712, 1, 0, 0.503972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107607,-99) , 
7, 225.738, 1, 0, 0.499764,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0081197);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730722,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42341,-99) , 
6, 0.0595774, 0, 0, 0.544201,-99) , 
5, 1.5051, 1, 0, 0.614332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375104,-99) , 
1, 9.5, 0, 0, 0.568435,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499119,-99) , 
9, 44.5393, 0, 0, 0.561326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296207,-99) , 
7, 106.237, 1, 0, 0.469972,-99) , 
9, 48.7628, 1, 0, 0.484153,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214445,-99) , 
8, 0.855352, 0, 0, 0.369371,-99) , 
9, 29.8494, 0, 0, 0.474159,-99) , 
6, 0.118507, 1, 0, 0.487444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274165,-99) , 
2, 6.5, 0, 0, 0.482789,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.012181);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60962,-99) , 
3, 0.987285, 1, 0, 0.665802,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449061,-99) , 
3, 0.944862, 0, 0, 0.527835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346304,-99) , 
8, 0.236732, 0, 0, 0.513382,-99) , 
6, 0.0839318, 1, 0, 0.530801,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323572,-99) , 
2, 10.5, 0, 0, 0.57903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363649,-99) , 
4, 1.67581, 0, 0, 0.507932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343139,-99) , 
6, 0.582006, 1, 0, 0.506909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.06059, 1, 0, 0.256098,-99) , 
8, 0.606665, 1, 0, 0.403555,-99) , 
9, 63.9637, 1, 0, 0.450924,-99) , 
5, 1.83673, 1, 0, 0.508162,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28499,-99) , 
4, 1.59547, 1, 0, 0.45032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267375,-99) , 
8, 1.59675, 1, 0, 0.390686,-99) , 
9, 336.607, 1, 0, 0.49515,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.00700802);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679267,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445127,-99) , 
5, 1.40383, 0, 0, 0.545302,-99) , 
8, 1.80329, 0, 0, 0.569659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424803,-99) , 
8, 2.52376, 1, 0, 0.549337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632777,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2387,-99) , 
7, 71.4717, 1, 0, 0.475591,-99) , 
2, 54.5, 0, 0, 0.484327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199816,-99) , 
7, 174.845, 1, 0, 0.477393,-99) , 
13, 1.5, 0, 0, 0.499665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234088,-99) , 
3, 0.68989, 0, 0, 0.494905,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00961121);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573473,-99) , 
12, 4216.42, 1, 0, 0.66714,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51767,-99) , 
10, 0.263773, 0, 0, 0.610001,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357156,-99) , 
8, 1.09534, 0, 0, 0.464023,-99) , 
4, 1.45434, 0, 0, 0.537736,-99) , 
6, 0.311315, 1, 0, 0.57939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421376,-99) , 
8, 2.41357, 1, 0, 0.553821,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612987,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327884,-99) , 
9, 24.1213, 0, 0, 0.474504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195433,-99) , 
0, 58.5, 1, 0, 0.464322,-99) , 
2, 50.5, 0, 0, 0.475767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258199,-99) , 
3, 0.999376, 1, 0, 0.463431,-99) , 
13, 1.5, 0, 0, 0.491521,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0110471);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577063,-99) , 
3, 0.996337, 1, 0, 0.655542,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313664,-99) , 
0, 82.5, 1, 0, 0.5196,-99) , 
4, 0.984961, 1, 0, 0.591141,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321295,-99) , 
7, 7.54931, 0, 0, 0.521148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242459,-99) , 
7, 50.2415, 1, 0, 0.510086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178257,-99) , 
0, 37.5, 1, 0, 0.496879,-99) , 
2, 29.5, 0, 0, 0.51477,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36747,-99) , 
10, 0.381469, 1, 0, 0.46491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240482,-99) , 
10, 0.221421, 0, 0, 0.384469,-99) , 
4, 1.77135, 1, 0, 0.49895,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00725593);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522364,-99) , 
0, 72.5, 0, 0, 0.53082,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329611,-99) , 
9, 177.319, 1, 0, 0.435791,-99) , 
8, 2.52258, 1, 0, 0.514483,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3436,-99) , 
3, 0.991113, 1, 0, 0.46427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231865,-99) , 
5, 1.96999, 0, 0, 0.413471,-99) , 
4, 1.77224, 1, 0, 0.500579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249562,-99) , 
1, 5.5, 0, 0, 0.494408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236666,-99) , 
1, 89.5, 1, 0, 0.489297,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0140564);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72945,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364046,-99) , 
5, 1.84021, 1, 0, 0.520272,-99) , 
1, 12.5, 0, 0, 0.624527,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572342,-99) , 
3, 0.993912, 0, 0, 0.662562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518094,-99) , 
3, 0.997974, 1, 0, 0.617385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481759,-99) , 
13, 1.5, 0, 0, 0.531143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24662,-99) , 
7, 22.1925, 1, 0, 0.338745,-99) , 
3, 0.9821, 1, 0, 0.480592,-99) , 
11, 3.51405, 0, 0, 0.513501,-99) , 
11, -2.69832, 1, 0, 0.535916,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429084,-99) , 
4, 1.73335, 1, 0, 0.525731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373136,-99) , 
6, 1.01178, 0, 0, 0.414635,-99) , 
1, 11.5, 1, 0, 0.471018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274786,-99) , 
7, 57.6913, 1, 0, 0.445778,-99) , 
2, 56.5, 0, 0, 0.460005,-99) , 
6, 0.647894, 1, 0, 0.504274,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00965276);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56821,-99) , 
8, 1.42722, 0, 0, 0.602131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319469,-99) , 
7, 218.983, 1, 0, 0.592315,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441314,-99) , 
9, 87.3537, 0, 0, 0.510722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239081,-99) , 
0, 23.5, 1, 0, 0.499054,-99) , 
2, 18.5, 0, 0, 0.531612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305913,-99) , 
3, 0.999663, 1, 0, 0.523512,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455305,-99) , 
3, 0.985162, 1, 0, 0.525919,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297009,-99) , 
7, 20.9988, 1, 0, 0.401243,-99) , 
4, 1.01073, 1, 0, 0.459679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250038,-99) , 
5, 2.28775, 1, 0, 0.453954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27423,-99) , 
9, 229.327, 1, 0, 0.421249,-99) , 
8, 2.26861, 1, 0, 0.501585,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0141414);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75459,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722445,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466555,-99) , 
3, 0.990414, 1, 0, 0.550698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361002,-99) , 
5, 2.00122, 1, 0, 0.517533,-99) , 
11, -6.64226, 1, 0, 0.540328,-99) , 
3, 0.903122, 1, 0, 0.569346,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513874,-99) , 
0, 22.5, 0, 0, 0.531441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382378,-99) , 
0, 30.5, 1, 0, 0.522432,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284885,-99) , 
3, 0.997832, 1, 0, 0.493479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145377,-99) , 
1, 14.5, 0, 0, 0.398043,-99) , 
7, 38.7148, 1, 0, 0.496915,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0825467,-99) , 
5, 1.97528, 1, 0, 0.2396,-99) , 
11, 0.220485, 0, 0, 0.319126,-99) , 
7, 27.7512, 0, 0, 0.405085,-99) , 
3, 0.93696, 0, 0, 0.478371,-99) , 
13, 1.5, 0, 0, 0.505664,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.012423);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506621,-99) , 
0, 13.5, 0, 0, 0.593415,-99) , 
6, 0.196144, 1, 0, 0.622519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423402,-99) , 
5, 2.30438, 1, 0, 0.608445,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443789,-99) , 
11, -0.288226, 1, 0, 0.535999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238573,-99) , 
5, 2.01568, 1, 0, 0.499981,-99) , 
8, 1.91532, 1, 0, 0.577562,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719278,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514586,-99) , 
2, 22.5, 0, 0, 0.562986,-99) , 
3, 0.997112, 0, 0, 0.599677,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412517,-99) , 
5, 1.23455, 0, 0, 0.450501,-99) , 
6, 0.81429, 1, 0, 0.542292,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429001,-99) , 
11, 6.42002, 0, 0, 0.446478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173614,-99) , 
3, 0.999364, 1, 0, 0.435971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 164.605, 1, 0, 0.42849,-99) , 
5, 1.51659, 1, 0, 0.480839,-99) , 
13, 1.5, 0, 0, 0.510183,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0064852);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361063,-99) , 
13, 0.5, 0, 0, 0.526714,-99) , 
5, 1.4044, 1, 0, 0.584707,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245954,-99) , 
7, 143.545, 1, 0, 0.520148,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408313,-99) , 
2, 32.5, 0, 0, 0.44532,-99) , 
4, 0.89459, 0, 0, 0.502429,-99) , 
6, 0.118365, 1, 0, 0.51423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204682,-99) , 
5, 2.57083, 1, 0, 0.511943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227033,-99) , 
7, 6.9903, 0, 0, 0.506586,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0079902);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60404,-99) , 
5, 1.45857, 0, 0, 0.677276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494104,-99) , 
5, 1.85339, 1, 0, 0.637429,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543207,-99) , 
9, 112.592, 1, 0, 0.627763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479484,-99) , 
12, -1258.96, 1, 0, 0.492421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316198,-99) , 
1, 6.5, 0, 0, 0.485352,-99) , 
11, -8.04049, 1, 0, 0.495523,-99) , 
12, -5948.21, 1, 0, 0.509136,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185572,-99) , 
8, 0.168882, 1, 0, 0.33323,-99) , 
5, 2.15812, 1, 0, 0.496511,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0170627);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568823,-99) , 
2, 19.5, 0, 0, 0.597375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333207,-99) , 
2, 28.5, 0, 0, 0.493236,-99) , 
7, 36.8014, 1, 0, 0.568822,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565516,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262045,-99) , 
5, 1.39359, 1, 0, 0.379155,-99) , 
9, 101.366, 1, 0, 0.464164,-99) , 
8, 2.26883, 1, 0, 0.544182,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326677,-99) , 
8, 1.42869, 0, 0, 0.417186,-99) , 
9, 39.0881, 0, 0, 0.526555,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519541,-99) , 
6, 0.900642, 0, 0, 0.594469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213231,-99) , 
7, 57.0665, 1, 0, 0.558867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426758,-99) , 
8, 1.28446, 1, 0, 0.561661,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145257,-99) , 
12, 14073.2, 1, 0, 0.449819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141547,-99) , 
10, 0.316993, 0, 0, 0.212088,-99) , 
12, 5803.92, 0, 0, 0.309192,-99) , 
13, 1.5, 0, 0, 0.40142,-99) , 
11, 3.3415, 0, 0, 0.447137,-99) , 
4, 1.52384, 1, 0, 0.504315,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0108163);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766583,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639705,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446096,-99) , 
10, 0.529491, 1, 0, 0.582982,-99) , 
2, 24.5, 0, 0, 0.621833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290481,-99) , 
4, 2.01003, 1, 0, 0.602513,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467019,-99) , 
2, 14.5, 0, 0, 0.566314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280102,-99) , 
4, 1.24315, 1, 0, 0.410578,-99) , 
8, 0.913994, 1, 0, 0.484882,-99) , 
9, 129.101, 1, 0, 0.548727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670732,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137257,-99) , 
7, 126.163, 1, 0, 0.486451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118045,-99) , 
1, 58.5, 1, 0, 0.475418,-99) , 
10, 3.51715, 0, 0, 0.482209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243495,-99) , 
3, 0.747986, 0, 0, 0.472278,-99) , 
13, 1.5, 0, 0, 0.495391,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00719684);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744255,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541195,-99) , 
4, 1.63259, 0, 0, 0.590425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308449,-99) , 
7, 37.8494, 1, 0, 0.552065,-99) , 
1, 15.5, 0, 0, 0.605945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372546,-99) , 
3, 0.998964, 1, 0, 0.529515,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315172,-99) , 
0, 14.5, 1, 0, 0.445522,-99) , 
1, 9.5, 0, 0, 0.510039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289357,-99) , 
1, 74.5, 1, 0, 0.503573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245063,-99) , 
5, 2.3205, 1, 0, 0.49641,-99) , 
11, -5.92972, 1, 0, 0.508321,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0107251);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524253,-99) , 
6, 1.02745, 0, 0, 0.540349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168809,-99) , 
7, 25.2435, 1, 0, 0.460577,-99) , 
2, 11.5, 0, 0, 0.510221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 218.2, 1, 0, 0.507099,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262581,-99) , 
1, 83.5, 1, 0, 0.487001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260582,-99) , 
0, 65.5, 0, 0, 0.383355,-99) , 
1, 34.5, 1, 0, 0.492999,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284984,-99) , 
8, 0.802966, 0, 0, 0.409348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144289,-99) , 
10, 0.61737, 0, 0, 0.358479,-99) , 
9, 32.4003, 0, 0, 0.479649,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0151318);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569532,-99) , 
9, 96.2742, 1, 0, 0.687325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225818,-99) , 
1, 18.5, 0, 0, 0.649373,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544199,-99) , 
9, 218.433, 1, 0, 0.635911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426918,-99) , 
2, 17.5, 0, 0, 0.506891,-99) , 
9, 89.8129, 0, 0, 0.582525,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427739,-99) , 
10, 0.118308, 1, 0, 0.495068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307392,-99) , 
8, 2.40251, 1, 0, 0.463317,-99) , 
5, 1.60491, 1, 0, 0.512282,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332442,-99) , 
8, 0.419659, 0, 0, 0.471318,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246732,-99) , 
11, 6.85157, 0, 0, 0.329777,-99) , 
5, 1.84932, 1, 0, 0.442735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165862,-99) , 
7, 71.839, 1, 0, 0.426951,-99) , 
6, 0.621355, 1, 0, 0.474234,-99) , 
2, 49.5, 0, 0, 0.488505,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0152768);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.740048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569977,-99) , 
7, 45.7064, 1, 0, 0.688833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517916,-99) , 
7, 21.0753, 0, 0, 0.648678,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376677,-99) , 
2, 42.5, 0, 0, 0.501168,-99) , 
1, 27.5, 1, 0, 0.594348,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510982,-99) , 
12, 3009.16, 1, 0, 0.568005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370424,-99) , 
4, 0.52655, 0, 0, 0.445836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32484,-99) , 
10, 0.241871, 1, 0, 0.411012,-99) , 
4, 0.926981, 0, 0, 0.464424,-99) , 
0, 17.5, 0, 0, 0.535982,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426396,-99) , 
9, 116.681, 0, 0, 0.585153,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374972,-99) , 
3, 0.945943, 0, 0, 0.496726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25306,-99) , 
7, 19.8571, 1, 0, 0.373834,-99) , 
5, 1.8184, 1, 0, 0.445816,-99) , 
8, 0.174916, 1, 0, 0.468565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114384,-99) , 
7, 125.342, 1, 0, 0.459864,-99) , 
4, 1.18144, 1, 0, 0.496894,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00872348);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6703,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392424,-99) , 
8, 0.272366, 0, 0, 0.523378,-99) , 
9, 249.866, 0, 0, 0.543121,-99) , 
3, 0.906639, 1, 0, 0.563508,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484545,-99) , 
6, 0.603173, 1, 0, 0.542039,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410263,-99) , 
9, 49.6029, 1, 0, 0.453414,-99) , 
5, 1.45876, 1, 0, 0.486277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309067,-99) , 
4, -0.180503, 0, 0, 0.47513,-99) , 
13, 1.5, 0, 0, 0.502269,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102403,-99) , 
4, 1.59677, 1, 0, 0.313962,-99) , 
9, 460.99, 1, 0, 0.492271,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00827348);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.827606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620179,-99) , 
5, 1.53564, 1, 0, 0.703976,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527865,-99) , 
10, 0.11336, 1, 0, 0.560616,-99) , 
6, 0.238748, 1, 0, 0.596468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447464,-99) , 
5, 2.05211, 1, 0, 0.572541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295163,-99) , 
8, 2.8192, 1, 0, 0.550162,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477068,-99) , 
2, 46.5, 0, 0, 0.487888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261717,-99) , 
7, 176.712, 1, 0, 0.481974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282411,-99) , 
1, 6.5, 0, 0, 0.470863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154674,-99) , 
4, 2.20664, 1, 0, 0.467329,-99) , 
13, 1.5, 0, 0, 0.492845,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0120125);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475982,-99) , 
5, 1.6371, 0, 0, 0.57058,-99) , 
12, 2747.85, 1, 0, 0.63496,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501487,-99) , 
1, 21.5, 1, 0, 0.624605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310397,-99) , 
10, 0.0907235, 1, 0, 0.371754,-99) , 
2, 15.5, 0, 0, 0.498782,-99) , 
3, 0.986509, 1, 0, 0.562064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461242,-99) , 
12, -6972.01, 1, 0, 0.539043,-99) , 
1, 12.5, 0, 0, 0.593772,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493963,-99) , 
8, 2.84954, 0, 0, 0.510441,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356044,-99) , 
11, -0.996161, 1, 0, 0.413732,-99) , 
4, 1.31089, 1, 0, 0.470436,-99) , 
11, 5.106, 0, 0, 0.486359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274095,-99) , 
3, 0.99947, 1, 0, 0.475899,-99) , 
13, 1.5, 0, 0, 0.501222,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0109489);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644188,-99) , 
7, 60.7283, 1, 0, 0.716004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575624,-99) , 
4, 1.40216, 1, 0, 0.66785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386476,-99) , 
3, 0.999002, 1, 0, 0.629228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523519,-99) , 
5, 1.81045, 1, 0, 0.631382,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458152,-99) , 
4, 1.59092, 0, 0, 0.491641,-99) , 
9, 87.6272, 0, 0, 0.517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255187,-99) , 
8, 0.122413, 0, 0, 0.495422,-99) , 
2, 23.5, 0, 0, 0.530871,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634893,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382869,-99) , 
8, 2.17706, 1, 0, 0.47941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28384,-99) , 
1, 40.5, 1, 0, 0.464961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258996,-99) , 
4, 1.81749, 1, 0, 0.451138,-99) , 
8, 0.116067, 1, 0, 0.469308,-99) , 
9, 109.955, 1, 0, 0.500893,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00866302);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.810557,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500802,-99) , 
4, 1.19944, 1, 0, 0.564567,-99) , 
2, 25.5, 0, 0, 0.591619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442754,-99) , 
7, 63.8449, 1, 0, 0.570234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370423,-99) , 
8, 2.83122, 1, 0, 0.554678,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641685,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346112,-99) , 
9, 30.2296, 0, 0, 0.483023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300632,-99) , 
1, 39.5, 1, 0, 0.472505,-99) , 
10, 1.575, 0, 0, 0.484227,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139943,-99) , 
10, 0.450591, 1, 0, 0.367351,-99) , 
3, 0.999081, 1, 0, 0.474544,-99) , 
13, 1.5, 0, 0, 0.499013,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0114735);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526961,-99) , 
5, 1.51403, 1, 0, 0.644726,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456336,-99) , 
8, 0.41567, 0, 0, 0.552159,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423012,-99) , 
9, 103.822, 1, 0, 0.476471,-99) , 
8, 1.75079, 1, 0, 0.522074,-99) , 
6, 0.116957, 1, 0, 0.537876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386531,-99) , 
2, 8.5, 0, 0, 0.524079,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524405,-99) , 
8, 0.368727, 0, 0, 0.613579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366365,-99) , 
8, 1.77166, 1, 0, 0.557963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313738,-99) , 
3, 0.997574, 1, 0, 0.515531,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344542,-99) , 
10, 0.236808, 0, 0, 0.424992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249583,-99) , 
10, 0.647758, 1, 0, 0.395605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0625591,-99) , 
3, 0.758913, 0, 0, 0.380137,-99) , 
13, 1.5, 0, 0, 0.432203,-99) , 
5, 1.82423, 1, 0, 0.496915,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0126107);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716287,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385617,-99) , 
1, 33.5, 1, 0, 0.563621,-99) , 
0, 66.5, 0, 0, 0.618156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339719,-99) , 
1, 79.5, 1, 0, 0.579822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19754,-99) , 
1, 14.5, 0, 0, 0.548548,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293482,-99) , 
9, 24.3351, 0, 0, 0.50248,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346324,-99) , 
12, 6916.53, 0, 0, 0.432534,-99) , 
12, 4629.98, 1, 0, 0.477384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178796,-99) , 
0, 37.5, 1, 0, 0.471665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177122,-99) , 
7, 59.8717, 1, 0, 0.461627,-99) , 
2, 30.5, 0, 0, 0.477086,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0110639);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581533,-99) , 
4, 0.538054, 1, 0, 0.626446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426599,-99) , 
8, 0.443061, 0, 0, 0.590995,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407269,-99) , 
7, 34.8788, 1, 0, 0.544216,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341675,-99) , 
7, 12.8156, 0, 0, 0.436829,-99) , 
3, 0.992932, 1, 0, 0.509004,-99) , 
2, 20.5, 0, 0, 0.534743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359644,-99) , 
7, 22.3056, 1, 0, 0.556201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109169,-99) , 
1, 11.5, 0, 0, 0.403675,-99) , 
0, 18.5, 1, 0, 0.483669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302643,-99) , 
2, 9.5, 0, 0, 0.455416,-99) , 
4, 1.48025, 1, 0, 0.509859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262636,-99) , 
1, 5.5, 0, 0, 0.503542,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0137674);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.779745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589438,-99) , 
4, 1.47056, 0, 0, 0.66514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458556,-99) , 
4, 1.28621, 1, 0, 0.545418,-99) , 
1, 13.5, 1, 0, 0.586573,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38924,-99) , 
8, 1.3073, 1, 0, 0.571895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325114,-99) , 
8, 0.551544, 0, 0, 0.470099,-99) , 
9, 202.338, 0, 0, 0.499718,-99) , 
1, 11.5, 0, 0, 0.538269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311823,-99) , 
1, 14.5, 0, 0, 0.56086,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211925,-99) , 
10, 0.577127, 1, 0, 0.425036,-99) , 
9, 103.528, 1, 0, 0.489553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172642,-99) , 
2, 13.5, 0, 0, 0.468671,-99) , 
7, 28.9173, 1, 0, 0.514187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294533,-99) , 
5, 2.33217, 1, 0, 0.507268,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0163544);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728439,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562609,-99) , 
6, 0.189645, 1, 0, 0.586068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392502,-99) , 
7, 60.6325, 1, 0, 0.55953,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427804,-99) , 
3, 0.990002, 0, 0, 0.513124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306166,-99) , 
7, 15.9784, 0, 0, 0.446569,-99) , 
9, 80.5378, 0, 0, 0.51962,-99) , 
2, 60.5, 0, 0, 0.538208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490795,-99) , 
1, 10.5, 0, 0, 0.648054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315147,-99) , 
6, 0.0837304, 0, 0, 0.49394,-99) , 
11, 1.96045, 0, 0, 0.538805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311124,-99) , 
7, 9.11943, 0, 0, 0.517317,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387465,-99) , 
5, 1.76635, 1, 0, 0.480408,-99) , 
5, 2.044, 0, 0, 0.527518,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181599,-99) , 
10, 0.299236, 1, 0, 0.381324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108564,-99) , 
4, 1.737, 1, 0, 0.339448,-99) , 
9, 52.3475, 1, 0, 0.403184,-99) , 
8, 0.733113, 1, 0, 0.458172,-99) , 
5, 1.52602, 1, 0, 0.494076,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00985872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613412,-99) , 
9, 115.673, 1, 0, 0.665455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518583,-99) , 
3, 0.998511, 1, 0, 0.615949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413513,-99) , 
5, 1.9808, 1, 0, 0.582575,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721356,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471477,-99) , 
6, 0.751846, 1, 0, 0.574058,-99) , 
13, 0.5, 1, 0, 0.627382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387707,-99) , 
9, 255.829, 1, 0, 0.585665,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488687,-99) , 
8, 0.270431, 1, 0, 0.512991,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300961,-99) , 
13, 0.5, 0, 0, 0.416124,-99) , 
9, 61.4479, 0, 0, 0.485,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150019,-99) , 
5, 1.7098, 1, 0, 0.318253,-99) , 
3, 0.998058, 1, 0, 0.470648,-99) , 
12, 10464.7, 0, 0, 0.486339,-99) , 
11, 5.22317, 0, 0, 0.498898,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00861772);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532013,-99) , 
11, -5.70975, 1, 0, 0.544256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366086,-99) , 
9, 484.546, 1, 0, 0.535079,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254317,-99) , 
8, 0.799381, 0, 0, 0.406761,-99) , 
9, 32.7128, 0, 0, 0.520785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337186,-99) , 
1, 6.5, 0, 0, 0.511609,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360399,-99) , 
6, 0.930065, 0, 0, 0.506958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238745,-99) , 
9, 71.1167, 1, 0, 0.385742,-99) , 
4, 1.82984, 1, 0, 0.497972,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00848234);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525972,-99) , 
4, 0.8415, 1, 0, 0.555723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383517,-99) , 
5, 0.562927, 0, 0, 0.545541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365232,-99) , 
8, 2.9288, 1, 0, 0.534048,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452245,-99) , 
13, 0.5, 1, 0, 0.501334,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254986,-99) , 
5, 1.86706, 1, 0, 0.372651,-99) , 
12, 5577.99, 1, 0, 0.47006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23308,-99) , 
0, 16.5, 1, 0, 0.448878,-99) , 
7, 14.655, 0, 0, 0.507923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208595,-99) , 
3, 0.999683, 1, 0, 0.500682,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00693228);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.783407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60314,-99) , 
11, 0.350617, 1, 0, 0.699337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432375,-99) , 
7, 137.17, 1, 0, 0.612171,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2993,-99) , 
3, 0.757064, 0, 0, 0.501849,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278031,-99) , 
1, 39.5, 1, 0, 0.496462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239155,-99) , 
7, 76.1889, 1, 0, 0.487381,-99) , 
2, 46.5, 0, 0, 0.499377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335773,-99) , 
9, 460.99, 1, 0, 0.491547,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00528503);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698386,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548731,-99) , 
4, 1.49641, 1, 0, 0.665469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463306,-99) , 
11, 10.682, 1, 0, 0.608476,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693009,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397308,-99) , 
3, 0.997998, 1, 0, 0.480118,-99) , 
12, 21856.1, 0, 0, 0.485785,-99) , 
12, -5986.89, 1, 0, 0.496073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175635,-99) , 
7, 140.41, 1, 0, 0.491345,-99) , 
2, 88.5, 0, 0, 0.496594,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0140581);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679544,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464307,-99) , 
9, 158.6, 0, 0, 0.548273,-99) , 
9, 107.801, 1, 0, 0.571298,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455891,-99) , 
4, 1.31525, 0, 0, 0.492127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321859,-99) , 
10, 0.200803, 0, 0, 0.46284,-99) , 
9, 81.5065, 0, 0, 0.532248,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599147,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417404,-99) , 
6, 0.285763, 1, 0, 0.468739,-99) , 
9, 68.5713, 1, 0, 0.511438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289958,-99) , 
9, 91.9656, 1, 0, 0.359458,-99) , 
2, 22.5, 0, 0, 0.463791,-99) , 
7, 29.4705, 1, 0, 0.507678,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463642,-99) , 
3, 0.993635, 1, 0, 0.586725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40477,-99) , 
2, 11.5, 0, 0, 0.529027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326226,-99) , 
6, 0.429391, 0, 0, 0.490577,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196835,-99) , 
7, 21.8571, 1, 0, 0.39415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152137,-99) , 
5, 1.83992, 1, 0, 0.276928,-99) , 
9, 44.7208, 1, 0, 0.35581,-99) , 
8, 0.592818, 1, 0, 0.414563,-99) , 
4, 1.52945, 1, 0, 0.48339,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0112361);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.837559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635098,-99) , 
5, 1.4019, 1, 0, 0.728725,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481262,-99) , 
7, 61.3114, 1, 0, 0.581002,-99) , 
9, 80.031, 1, 0, 0.645747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188034,-99) , 
1, 10.5, 0, 0, 0.61769,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503591,-99) , 
7, 21.3376, 0, 0, 0.530372,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28315,-99) , 
3, 0.979267, 1, 0, 0.388999,-99) , 
7, 35.9099, 1, 0, 0.515601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.140067,-99) , 
0, 42.5, 1, 0, 0.508289,-99) , 
2, 28.5, 0, 0, 0.52648,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261237,-99) , 
1, 91.5, 1, 0, 0.522218,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0137549);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504251,-99) , 
9, 47.4255, 0, 0, 0.611677,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374567,-99) , 
9, 99.12, 1, 0, 0.467027,-99) , 
8, 2.65082, 1, 0, 0.588944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296823,-99) , 
1, 67.5, 1, 0, 0.575917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490341,-99) , 
4, 1.28282, 1, 0, 0.60334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367933,-99) , 
3, 0.93636, 0, 0, 0.548378,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242674,-99) , 
2, 9.5, 1, 0, 0.355637,-99) , 
10, 0.107692, 1, 0, 0.46663,-99) , 
7, 13.512, 0, 0, 0.546692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376177,-99) , 
3, 0.933625, 0, 0, 0.508687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346965,-99) , 
5, 1.98385, 1, 0, 0.492622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281993,-99) , 
9, 371.856, 1, 0, 0.477807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389352,-99) , 
7, 13.2424, 1, 0, 0.448031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238778,-99) , 
3, 0.951235, 0, 0, 0.409772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223271,-99) , 
8, 0.391026, 0, 0, 0.369183,-99) , 
6, 0.850692, 0, 0, 0.443634,-99) , 
6, 0.641242, 1, 0, 0.501615,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.014094);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.812712,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501104,-99) , 
3, 0.987696, 1, 0, 0.582527,-99) , 
11, -3.77852, 1, 0, 0.616339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439581,-99) , 
5, 0.605142, 0, 0, 0.587646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34468,-99) , 
3, 0.982095, 1, 0, 0.443193,-99) , 
7, 14.1983, 0, 0, 0.555524,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495366,-99) , 
8, 2.08076, 1, 0, 0.609609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411877,-99) , 
9, 150.891, 0, 0, 0.479628,-99) , 
0, 12.5, 0, 0, 0.566578,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46688,-99) , 
3, 0.902484, 1, 0, 0.485425,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.126375,-99) , 
4, 1.74025, 1, 0, 0.364666,-99) , 
11, -0.241898, 1, 0, 0.457209,-99) , 
11, 1.2717, 0, 0, 0.499871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325408,-99) , 
1, 27.5, 0, 0, 0.526749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162187,-99) , 
2, 39.5, 0, 0, 0.379281,-99) , 
7, 53.263, 1, 0, 0.483336,-99) , 
4, 1.01135, 1, 0, 0.510385,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0124574);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613971,-99) , 
1, 33.5, 1, 0, 0.691864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51425,-99) , 
9, 183.457, 1, 0, 0.645866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311744,-99) , 
7, 178.503, 1, 0, 0.622995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123438,-99) , 
1, 10.5, 0, 0, 0.59801,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472458,-99) , 
3, 0.987605, 1, 0, 0.509604,-99) , 
11, -8.4128, 1, 0, 0.518182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253953,-99) , 
5, 2.34936, 1, 0, 0.511551,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395798,-99) , 
12, 3018.39, 0, 0, 0.480995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0816651,-99) , 
7, 72.2138, 1, 0, 0.429447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163353,-99) , 
0, 22.5, 0, 0, 0.353762,-99) , 
7, 35.3587, 1, 0, 0.491265,-99) , 
2, 29.5, 0, 0, 0.510685,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00952287);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207438,-99) , 
1, 23.5, 0, 0, 0.659906,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503563,-99) , 
4, 1.28612, 1, 0, 0.575876,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3135,-99) , 
9, 30.2391, 0, 0, 0.483023,-99) , 
13, 1.5, 0, 0, 0.509854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178351,-99) , 
7, 98.2832, 1, 0, 0.502908,-99) , 
2, 55.5, 0, 0, 0.51346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254809,-99) , 
8, 0.494935, 1, 0, 0.336457,-99) , 
9, 396.567, 1, 0, 0.502196,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.013959);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685234,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483657,-99) , 
9, 66.2171, 0, 0, 0.567581,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363456,-99) , 
5, 1.23448, 0, 0, 0.450953,-99) , 
3, 0.957598, 0, 0, 0.536058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328783,-99) , 
4, 0.202094, 0, 0, 0.512745,-99) , 
6, 0.128431, 1, 0, 0.535945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643135,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291161,-99) , 
0, 14.5, 1, 0, 0.466395,-99) , 
2, 16.5, 0, 0, 0.550633,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442651,-99) , 
9, 33.1267, 0, 0, 0.558472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408291,-99) , 
8, 0.943638, 0, 0, 0.509925,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283232,-99) , 
6, 0.859881, 1, 0, 0.420213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.140112,-99) , 
5, 2.07748, 1, 0, 0.389182,-99) , 
9, 52.1283, 1, 0, 0.426199,-99) , 
8, 0.248339, 1, 0, 0.453499,-99) , 
5, 1.49804, 1, 0, 0.487262,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.01136);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754389,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499767,-99) , 
9, 127.19, 1, 0, 0.574805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438944,-99) , 
1, 24.5, 1, 0, 0.545674,-99) , 
3, 0.900603, 1, 0, 0.570453,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472944,-99) , 
6, 0.929854, 1, 0, 0.550799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407803,-99) , 
3, 0.997913, 1, 0, 0.52273,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430528,-99) , 
10, 0.237737, 0, 0, 0.475862,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0594525,-99) , 
1, 18.5, 0, 0, 0.278004,-99) , 
7, 35.0369, 1, 0, 0.440564,-99) , 
5, 1.54562, 1, 0, 0.481022,-99) , 
13, 1.5, 0, 0, 0.507638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259217,-99) , 
5, 2.29389, 1, 0, 0.498334,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0102957);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.788726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55875,-99) , 
5, 1.53284, 1, 0, 0.69901,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491855,-99) , 
6, 0.518674, 1, 0, 0.579426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399083,-99) , 
3, 0.996975, 1, 0, 0.531644,-99) , 
9, 85.4079, 1, 0, 0.604074,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493927,-99) , 
13, 1.5, 0, 0, 0.517868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.41574, 1, 0, 0.514116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20284,-99) , 
7, 52.835, 1, 0, 0.501895,-99) , 
2, 28.5, 0, 0, 0.521334,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21937,-99) , 
3, 0.993378, 1, 0, 0.338037,-99) , 
4, 1.97073, 1, 0, 0.510831,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0105918);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573939,-99) , 
7, 41.198, 1, 0, 0.623603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442366,-99) , 
7, 25.2485, 0, 0, 0.591954,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504807,-99) , 
8, 0.723564, 1, 0, 0.584539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305739,-99) , 
7, 62.2232, 1, 0, 0.398149,-99) , 
3, 0.98467, 1, 0, 0.476647,-99) , 
9, 112.183, 1, 0, 0.540417,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327387,-99) , 
3, 0.819387, 0, 0, 0.499672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319897,-99) , 
5, 2.14209, 1, 0, 0.484594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205707,-99) , 
0, 16.5, 0, 0, 0.317276,-99) , 
7, 27.1191, 1, 0, 0.465326,-99) , 
2, 16.5, 0, 0, 0.495682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246327,-99) , 
3, 0.999708, 1, 0, 0.490532,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00709247);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757993,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371831,-99) , 
0, 14.5, 1, 0, 0.465456,-99) , 
1, 14.5, 0, 0, 0.534123,-99) , 
3, 0.998985, 0, 0, 0.583324,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488222,-99) , 
13, 1.5, 0, 0, 0.509489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135938,-99) , 
5, 2.5431, 1, 0, 0.506605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261769,-99) , 
12, -1975.71, 1, 0, 0.372931,-99) , 
3, 0.99851, 1, 0, 0.493783,-99) , 
12, 9389.81, 0, 0, 0.506449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229307,-99) , 
1, 5.5, 0, 0, 0.501078,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00560239);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447726,-99) , 
8, 0.365502, 0, 0, 0.546805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325592,-99) , 
7, 42.6825, 1, 0, 0.470095,-99) , 
4, 1.38918, 1, 0, 0.51763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366582,-99) , 
5, 0.269395, 0, 0, 0.510719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371682,-99) , 
8, 2.95649, 1, 0, 0.504082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263375,-99) , 
7, 7.41225, 0, 0, 0.497242,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00978965);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428254,-99) , 
7, 22.2818, 0, 0, 0.553473,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124215,-99) , 
7, 47.9176, 1, 0, 0.47719,-99) , 
1, 15.5, 0, 0, 0.506275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265591,-99) , 
1, 78.5, 1, 0, 0.499979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214953,-99) , 
8, 0.945565, 0, 0, 0.321604,-99) , 
9, 24.5782, 0, 0, 0.489853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153523,-99) , 
2, 6.5, 0, 0, 0.483292,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0123241);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584201,-99) , 
10, 0.320652, 1, 0, 0.675074,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549043,-99) , 
10, 0.609821, 0, 0, 0.583221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416844,-99) , 
8, 0.261959, 0, 0, 0.55147,-99) , 
6, 0.293253, 1, 0, 0.591231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312629,-99) , 
5, 1.96834, 1, 0, 0.426529,-99) , 
8, 2.36264, 1, 0, 0.560248,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507382,-99) , 
6, 0.631692, 1, 0, 0.56455,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328416,-99) , 
7, 35.0125, 1, 0, 0.452251,-99) , 
9, 177.803, 1, 0, 0.530814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36729,-99) , 
8, 0.38894, 0, 0, 0.507037,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414614,-99) , 
12, 2380.36, 1, 0, 0.493967,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237297,-99) , 
9, 91.3392, 1, 0, 0.368215,-99) , 
8, 0.796496, 1, 0, 0.435588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152187,-99) , 
7, 59.3167, 1, 0, 0.412328,-99) , 
5, 1.74816, 1, 0, 0.475248,-99) , 
13, 1.5, 0, 0, 0.501749,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.011591);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643762,-99) , 
12, 2320.71, 1, 0, 0.67816,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418232,-99) , 
2, 33.5, 0, 0, 0.526531,-99) , 
7, 24.1232, 1, 0, 0.606656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438231,-99) , 
8, 2.52952, 1, 0, 0.578104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384576,-99) , 
12, -2761.77, 0, 0, 0.546218,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624353,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157082,-99) , 
7, 71.6879, 1, 0, 0.477538,-99) , 
2, 48.5, 0, 0, 0.488055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.081098,-99) , 
10, 1.0221, 1, 0, 0.316063,-99) , 
3, 0.999074, 1, 0, 0.474318,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300597,-99) , 
3, 0.811612, 0, 0, 0.463504,-99) , 
13, 1.5, 0, 0, 0.48788,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0071179);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535839,-99) , 
6, 0.746431, 1, 0, 0.651269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456531,-99) , 
8, 2.51879, 1, 0, 0.532807,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0816658,-99) , 
2, 32.5, 0, 0, 0.446444,-99) , 
7, 65.4745, 1, 0, 0.522441,-99) , 
11, -8.06207, 1, 0, 0.530586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341077,-99) , 
7, 7.43727, 0, 0, 0.524463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28683,-99) , 
3, 0.999706, 1, 0, 0.518971,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00825472);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512354,-99) , 
7, 64.8978, 1, 0, 0.638465,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333441,-99) , 
7, 28.4307, 1, 0, 0.522646,-99) , 
0, 25.5, 0, 0, 0.559198,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491944,-99) , 
4, 1.71121, 0, 0, 0.501292,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172885,-99) , 
9, 71.5095, 1, 0, 0.352366,-99) , 
4, 1.76761, 1, 0, 0.48552,-99) , 
13, 1.5, 0, 0, 0.508398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31976,-99) , 
5, 2.39594, 1, 0, 0.503739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338452,-99) , 
5, 0.461191, 0, 0, 0.496701,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0107761);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681672,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429924,-99) , 
8, 1.5842, 1, 0, 0.53704,-99) , 
3, 0.996602, 1, 0, 0.58989,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744415,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47232,-99) , 
12, 3845.87, 0, 0, 0.539305,-99) , 
4, 0.548866, 0, 0, 0.604781,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395772,-99) , 
10, 0.169365, 1, 0, 0.520098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29232,-99) , 
4, 0.207503, 0, 0, 0.453697,-99) , 
1, 14.5, 0, 0, 0.538465,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482883,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3599,-99) , 
5, 1.9924, 1, 0, 0.460094,-99) , 
8, 0.0744634, 1, 0, 0.473551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257413,-99) , 
7, 94.0554, 1, 0, 0.461746,-99) , 
4, 0.829267, 1, 0, 0.485316,-99) , 
12, -5947.38, 1, 0, 0.496169,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0130702);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543898,-99) , 
6, 0.46454, 1, 0, 0.588012,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277181,-99) , 
8, 0.511306, 0, 0, 0.486306,-99) , 
9, 66.3776, 0, 0, 0.553316,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469566,-99) , 
9, 85.4079, 1, 0, 0.55657,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137626,-99) , 
5, 1.54142, 1, 0, 0.31266,-99) , 
2, 28.5, 0, 0, 0.46677,-99) , 
7, 35.3358, 1, 0, 0.528311,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584439,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515753,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258632,-99) , 
8, 0.495812, 1, 0, 0.331135,-99) , 
11, 2.77321, 0, 0, 0.39445,-99) , 
12, 9346.73, 0, 0, 0.425376,-99) , 
5, 1.95247, 1, 0, 0.50936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244634,-99) , 
8, 0.840552, 1, 0, 0.366077,-99) , 
9, 396.789, 1, 0, 0.499915,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00611718);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551965,-99) , 
12, -8827.81, 0, 0, 0.635107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456194,-99) , 
8, 2.04051, 1, 0, 0.598513,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432853,-99) , 
8, 0.37704, 0, 0, 0.504896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301052,-99) , 
3, 0.726422, 0, 0, 0.499062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256056,-99) , 
10, 0.0349522, 0, 0, 0.336908,-99) , 
9, 392.083, 1, 0, 0.488715,-99) , 
12, -4375.62, 1, 0, 0.502091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246015,-99) , 
5, 2.3653, 1, 0, 0.495874,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00691835);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501491,-99) , 
6, 0.778927, 1, 0, 0.617932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495969,-99) , 
8, 1.01101, 1, 0, 0.521279,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336585,-99) , 
1, 22.5, 1, 0, 0.443278,-99) , 
8, 0.42359, 0, 0, 0.507406,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375421,-99) , 
2, 12.5, 0, 0, 0.522582,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191442,-99) , 
11, -0.661707, 1, 0, 0.302105,-99) , 
8, 0.402649, 1, 0, 0.417525,-99) , 
5, 2.06134, 1, 0, 0.49659,-99) , 
11, -8.1929, 1, 0, 0.503858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262808,-99) , 
3, 0.999692, 1, 0, 0.498164,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0166303);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651076,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721403,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405973,-99) , 
9, 80.5769, 0, 0, 0.512438,-99) , 
2, 17.5, 0, 0, 0.54436,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411625,-99) , 
9, 116.505, 1, 0, 0.508256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328082,-99) , 
2, 23.5, 0, 0, 0.440457,-99) , 
7, 29.3409, 1, 0, 0.501173,-99) , 
11, -5.56097, 1, 0, 0.519917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478526,-99) , 
5, 2.08214, 1, 0, 0.603762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440078,-99) , 
3, 0.993766, 1, 0, 0.554194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377816,-99) , 
9, 55.7993, 0, 0, 0.513052,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43698,-99) , 
3, 0.985849, 1, 0, 0.557745,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279241,-99) , 
3, 0.993673, 0, 0, 0.354529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145011,-99) , 
4, 1.76648, 1, 0, 0.313786,-99) , 
9, 47.0015, 1, 0, 0.391712,-99) , 
8, 0.625168, 1, 0, 0.445794,-99) , 
5, 1.65381, 1, 0, 0.485865,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00975785);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530626,-99) , 
11, -4.67766, 1, 0, 0.556254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457934,-99) , 
2, 55.5, 0, 0, 0.480903,-99) , 
6, 0.830465, 1, 0, 0.533378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323168,-99) , 
3, 0.73872, 0, 0, 0.526514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.48877, 1, 0, 0.52341,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294144,-99) , 
12, 2543.19, 1, 0, 0.414138,-99) , 
7, 17.576, 0, 0, 0.521102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277514,-99) , 
10, 0.629838, 1, 0, 0.484943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262421,-99) , 
5, 1.53692, 0, 0, 0.428492,-99) , 
8, 0.283379, 0, 0, 0.507179,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00810556);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418385,-99) , 
9, 31.2734, 0, 0, 0.556876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392417,-99) , 
1, 10.5, 0, 0, 0.544374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292996,-99) , 
7, 176.998, 1, 0, 0.533748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321059,-99) , 
1, 17.5, 1, 0, 0.498635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34126,-99) , 
4, 1.929, 1, 0, 0.488161,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0935302,-99) , 
2, 12.5, 0, 0, 0.270134,-99) , 
7, 30.3629, 1, 0, 0.468731,-99) , 
2, 16.5, 0, 0, 0.495979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232665,-99) , 
1, 5.5, 0, 0, 0.48996,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0093603);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509449,-99) , 
9, 107.709, 1, 0, 0.536153,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200492,-99) , 
1, 17.5, 0, 0, 0.403127,-99) , 
10, 0.643581, 1, 0, 0.523478,-99) , 
1, 46.5, 0, 0, 0.53232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192105,-99) , 
1, 83.5, 1, 0, 0.526384,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503324,-99) , 
4, 1.65882, 0, 0, 0.55337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296781,-99) , 
8, 0.832018, 0, 0, 0.462422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143706,-99) , 
7, 11.6898, 0, 0, 0.40997,-99) , 
9, 33.6525, 0, 0, 0.513204,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0135769);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571825,-99) , 
4, 1.66941, 1, 0, 0.669952,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412067,-99) , 
0, 12.5, 0, 0, 0.534544,-99) , 
6, 0.739257, 0, 0, 0.582179,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424395,-99) , 
11, -1.09061, 1, 0, 0.503815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286186,-99) , 
8, 0.150921, 0, 0, 0.483932,-99) , 
11, 1.41715, 0, 0, 0.521748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.772799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404571,-99) , 
4, 0.971937, 1, 0, 0.45938,-99) , 
4, 2.17741, 0, 0, 0.474304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171737,-99) , 
0, 16.5, 0, 0, 0.448626,-99) , 
7, 27.916, 1, 0, 0.492838,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107779,-99) , 
0, 10.5, 1, 0, 0.313813,-99) , 
7, 8.32488, 0, 0, 0.483464,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0160157);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511243,-99) , 
12, 5271.62, 1, 0, 0.608677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439202,-99) , 
3, 0.837496, 0, 0, 0.585471,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469004,-99) , 
8, 1.61448, 0, 0, 0.549783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379918,-99) , 
5, 1.4611, 1, 0, 0.49589,-99) , 
3, 0.991915, 1, 0, 0.547204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348574,-99) , 
5, 0.364273, 0, 0, 0.530266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510572,-99) , 
2, 16.5, 0, 0, 0.619112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314776,-99) , 
9, 47.3552, 0, 0, 0.563314,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387449,-99) , 
9, 43.3084, 1, 0, 0.43613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.27245, 1, 0, 0.42076,-99) , 
8, 0.308192, 1, 0, 0.45434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0266735,-99) , 
1, 62.5, 1, 0, 0.445477,-99) , 
4, 1.15215, 1, 0, 0.48664,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0115032);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615134,-99) , 
10, 0.0898384, 1, 0, 0.649131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402945,-99) , 
9, 126.555, 0, 0, 0.502542,-99) , 
7, 12.184, 0, 0, 0.612597,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304787,-99) , 
12, -5745.79, 1, 0, 0.401694,-99) , 
10, 0.665841, 1, 0, 0.575257,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44853,-99) , 
6, 0.0998071, 0, 0, 0.553604,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338657,-99) , 
2, 9.5, 0, 0, 0.455287,-99) , 
6, 0.42523, 1, 0, 0.498666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33131,-99) , 
5, 2.17715, 1, 0, 0.487251,-99) , 
11, 1.5496, 0, 0, 0.517457,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218862,-99) , 
11, 2.1363, 1, 0, 0.333414,-99) , 
3, 0.999454, 1, 0, 0.5071,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0120915);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760598,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488266,-99) , 
3, 0.997122, 0, 0, 0.57555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289742,-99) , 
7, 42.6006, 1, 0, 0.549959,-99) , 
1, 17.5, 0, 0, 0.599461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460188,-99) , 
9, 44.113, 0, 0, 0.629936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318218,-99) , 
7, 24.1956, 1, 0, 0.507159,-99) , 
0, 19.5, 0, 0, 0.55499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272814,-99) , 
7, 147.308, 1, 0, 0.545869,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395692,-99) , 
11, -3.42744, 0, 0, 0.499603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178701,-99) , 
1, 41.5, 1, 0, 0.395801,-99) , 
11, -0.759366, 1, 0, 0.46131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171262,-99) , 
3, 0.998949, 1, 0, 0.452082,-99) , 
11, 0.659366, 0, 0, 0.497938,-99) , 
11, -5.43333, 1, 0, 0.511585,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00655623);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.813888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602421,-99) , 
5, 1.59003, 1, 0, 0.694602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485688,-99) , 
6, 0.848637, 1, 0, 0.615163,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501493,-99) , 
11, -2.14141, 1, 0, 0.518057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38643,-99) , 
11, -4.00287, 0, 0, 0.50837,-99) , 
11, -5.59414, 1, 0, 0.520713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305421,-99) , 
3, 0.999725, 1, 0, 0.515456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272226,-99) , 
4, 2.0596, 1, 0, 0.508201,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0123069);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542816,-99) , 
7, 100.22, 1, 0, 0.651409,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645188,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333525,-99) , 
6, 0.985935, 1, 0, 0.503536,-99) , 
4, 1.22174, 0, 0, 0.528126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326846,-99) , 
10, 0.635789, 1, 0, 0.503035,-99) , 
2, 30.5, 0, 0, 0.535018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481662,-99) , 
8, 0.364217, 0, 0, 0.567305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417356,-99) , 
3, 0.996881, 1, 0, 0.533086,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402485,-99) , 
9, 298.495, 0, 0, 0.428632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0320576,-99) , 
0, 70.5, 1, 0, 0.417154,-99) , 
13, 1.5, 0, 0, 0.457778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11882,-99) , 
7, 142.548, 1, 0, 0.450567,-99) , 
5, 1.52416, 1, 0, 0.486941,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.01082);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481079,-99) , 
9, 221.13, 1, 0, 0.570005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391666,-99) , 
9, 29.5762, 0, 0, 0.556459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459172,-99) , 
9, 78.6783, 0, 0, 0.556308,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323051,-99) , 
9, 52.1231, 1, 0, 0.410831,-99) , 
8, 0.620421, 1, 0, 0.479935,-99) , 
5, 1.70523, 1, 0, 0.525961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281197,-99) , 
0, 11.5, 1, 0, 0.432367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.14, 1, 0, 0.404716,-99) , 
2, 8.5, 0, 0, 0.513961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229529,-99) , 
1, 74.5, 1, 0, 0.507449,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0115207);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67333,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423718,-99) , 
6, 0.866066, 1, 0, 0.556615,-99) , 
2, 15.5, 0, 0, 0.592655,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226484,-99) , 
1, 18.5, 0, 0, 0.443903,-99) , 
7, 40.4996, 1, 0, 0.559217,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460888,-99) , 
9, 68.7232, 0, 0, 0.554811,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325468,-99) , 
12, 5447.6, 0, 0, 0.446346,-99) , 
3, 0.988361, 1, 0, 0.511798,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220775,-99) , 
4, 2.04831, 1, 0, 0.531786,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277482,-99) , 
13, 0.5, 1, 0, 0.376105,-99) , 
13, 1.5, 0, 0, 0.430496,-99) , 
4, 1.3771, 1, 0, 0.482999,-99) , 
11, 2.9114, 0, 0, 0.50163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303991,-99) , 
1, 5.5, 0, 0, 0.49646,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0107122);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51897,-99) , 
4, 1.38967, 1, 0, 0.659698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280622,-99) , 
10, 0.510382, 1, 0, 0.479978,-99) , 
9, 109.932, 1, 0, 0.574118,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483819,-99) , 
13, 1.5, 0, 0, 0.521517,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435236,-99) , 
12, -10504.5, 1, 0, 0.45157,-99) , 
3, 0.984463, 1, 0, 0.483982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0838784,-99) , 
7, 76.6158, 1, 0, 0.475289,-99) , 
2, 35.5, 0, 0, 0.490165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176229,-99) , 
7, 7.00158, 0, 0, 0.483521,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0107727);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601359,-99) , 
8, 1.30293, 0, 0, 0.693099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51364,-99) , 
7, 47.5872, 0, 0, 0.649005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434502,-99) , 
7, 145.374, 1, 0, 0.611657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450303,-99) , 
10, 0.521454, 1, 0, 0.531784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243272,-99) , 
0, 38.5, 1, 0, 0.524947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123949,-99) , 
7, 63.78, 1, 0, 0.513989,-99) , 
2, 30.5, 0, 0, 0.531632,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218505,-99) , 
8, 0.692364, 1, 0, 0.321028,-99) , 
9, 397.188, 1, 0, 0.520285,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0108992);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708732,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511502,-99) , 
5, 1.7898, 1, 0, 0.59087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371425,-99) , 
7, 27.4187, 1, 0, 0.5252,-99) , 
1, 17.5, 0, 0, 0.573572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460639,-99) , 
5, 1.76649, 1, 0, 0.523997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368929,-99) , 
2, 7.5, 0, 0, 0.513176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243499,-99) , 
11, 5.40292, 0, 0, 0.39674,-99) , 
3, 0.998177, 1, 0, 0.499235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352423,-99) , 
6, 0.930417, 0, 0, 0.463993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234918,-99) , 
8, 0.720705, 1, 0, 0.365495,-99) , 
4, 1.72776, 1, 0, 0.480878,-99) , 
11, -3.11823, 1, 0, 0.501189,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0104412);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553272,-99) , 
2, 21.5, 0, 0, 0.607401,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343399,-99) , 
10, 0.418511, 1, 0, 0.495599,-99) , 
9, 109.884, 1, 0, 0.548708,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281698,-99) , 
4, 1.82158, 1, 0, 0.513398,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.105307,-99) , 
5, 2.16712, 1, 0, 0.330838,-99) , 
0, 12.5, 1, 0, 0.467035,-99) , 
2, 11.5, 0, 0, 0.520399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343759,-99) , 
1, 51.5, 1, 0, 0.511797,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282092,-99) , 
5, 1.87592, 1, 0, 0.436629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195551,-99) , 
8, 0.561946, 0, 0, 0.375902,-99) , 
9, 30.2296, 0, 0, 0.499508,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0126766);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61036,-99) , 
3, 0.984815, 1, 0, 0.668846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519556,-99) , 
3, 0.953823, 0, 0, 0.640331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431142,-99) , 
10, 0.0281439, 0, 0, 0.606464,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405922,-99) , 
8, 1.46171, 1, 0, 0.499261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193723,-99) , 
5, 2.16781, 1, 0, 0.477552,-99) , 
0, 14.5, 1, 0, 0.561341,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508642,-99) , 
8, 1.24286, 0, 0, 0.559191,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0338907,-99) , 
1, 16.5, 0, 0, 0.455715,-99) , 
7, 72.549, 1, 0, 0.537154,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312276,-99) , 
1, 7.5, 0, 0, 0.527802,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556394,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274511,-99) , 
7, 18.6741, 1, 0, 0.393637,-99) , 
11, -2.94388, 1, 0, 0.428687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138369,-99) , 
5, 2.2523, 1, 0, 0.414001,-99) , 
2, 11.5, 0, 0, 0.500713,-99) , 
10, 0.107383, 1, 0, 0.518877,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00704441);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678379,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500055,-99) , 
5, 1.24885, 0, 0, 0.553357,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247295,-99) , 
8, 2.9245, 1, 0, 0.472699,-99) , 
5, 1.49613, 1, 0, 0.505416,-99) , 
11, 8.94968, 0, 0, 0.515462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329055,-99) , 
7, 129.308, 1, 0, 0.508076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30544,-99) , 
9, 488.15, 1, 0, 0.498584,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00819818);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518398,-99) , 
3, 0.976226, 0, 0, 0.54813,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24707,-99) , 
5, 2.1268, 1, 0, 0.475632,-99) , 
3, 0.986018, 1, 0, 0.51157,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297002,-99) , 
11, -0.652941, 1, 0, 0.380598,-99) , 
8, 2.80655, 1, 0, 0.49939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291555,-99) , 
4, 2.03884, 1, 0, 0.491578,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325289,-99) , 
2, 8.5, 0, 0, 0.392841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111299,-99) , 
0, 11.5, 1, 0, 0.321694,-99) , 
7, 8.57185, 0, 0, 0.479978,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0125192);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557802,-99) , 
5, 1.07159, 1, 0, 0.661208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517489,-99) , 
3, 0.989746, 1, 0, 0.581378,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415909,-99) , 
12, 3241.8, 0, 0, 0.474229,-99) , 
8, 2.19758, 1, 0, 0.552799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312648,-99) , 
5, 1.04987, 0, 0, 0.420179,-99) , 
10, 0.454605, 1, 0, 0.520116,-99) , 
2, 35.5, 0, 0, 0.542904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345877,-99) , 
9, 45.3153, 0, 0, 0.511941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295485,-99) , 
9, 98.9172, 1, 0, 0.427921,-99) , 
8, 0.727538, 1, 0, 0.466675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201621,-99) , 
3, 0.739267, 0, 0, 0.459208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251084,-99) , 
7, 106.213, 1, 0, 0.45197,-99) , 
5, 1.57703, 1, 0, 0.496202,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0135474);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556853,-99) , 
7, 71.7435, 1, 0, 0.677872,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694901,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490042,-99) , 
9, 95.5943, 0, 0, 0.567789,-99) , 
3, 0.912619, 1, 0, 0.605121,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369477,-99) , 
7, 27.4125, 1, 0, 0.478721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278843,-99) , 
4, 2.00748, 1, 0, 0.464372,-99) , 
3, 0.982745, 1, 0, 0.52408,-99) , 
0, 30.5, 0, 0, 0.559095,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481824,-99) , 
3, 0.98499, 1, 0, 0.521278,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329303,-99) , 
13, 0.5, 0, 0, 0.412457,-99) , 
3, 0.919848, 0, 0, 0.502925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30755,-99) , 
9, 369.221, 1, 0, 0.484028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14478,-99) , 
11, 2.58894, 0, 0, 0.243575,-99) , 
12, 7564.43, 0, 0, 0.301773,-99) , 
8, 0.151247, 1, 0, 0.368066,-99) , 
5, 1.90302, 1, 0, 0.460015,-99) , 
13, 1.5, 0, 0, 0.490381,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00851364);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531962,-99) , 
7, 23.5396, 1, 0, 0.637083,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290596,-99) , 
4, 1.8866, 1, 0, 0.519038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340398,-99) , 
1, 14.5, 0, 0, 0.437729,-99) , 
10, 0.334266, 1, 0, 0.48747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232235,-99) , 
1, 5.5, 0, 0, 0.481491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19906,-99) , 
3, 0.989708, 1, 0, 0.302966,-99) , 
9, 460.614, 1, 0, 0.471857,-99) , 
12, -8876.44, 1, 0, 0.48244,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0144281);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738909,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49725,-99) , 
5, 1.83669, 1, 0, 0.583131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439611,-99) , 
5, 1.12108, 0, 0, 0.555447,-99) , 
6, 0.0915227, 1, 0, 0.579109,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407437,-99) , 
2, 15.5, 0, 0, 0.466812,-99) , 
9, 226.662, 1, 0, 0.5522,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731507,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489821,-99) , 
11, 4.28749, 0, 0, 0.569164,-99) , 
5, 2.01059, 0, 0, 0.605876,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136723,-99) , 
5, 2.2201, 1, 0, 0.527988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281417,-99) , 
9, 113.275, 1, 0, 0.478837,-99) , 
9, 157.922, 0, 0, 0.52255,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61645,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363484,-99) , 
9, 81.2851, 0, 0, 0.45481,-99) , 
2, 28.5, 0, 0, 0.485136,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282668,-99) , 
8, 1.17652, 1, 0, 0.39751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143582,-99) , 
3, 0.905969, 0, 0, 0.3579,-99) , 
5, 1.60326, 1, 0, 0.424709,-99) , 
11, 0.574814, 0, 0, 0.470083,-99) , 
13, 1.5, 0, 0, 0.495612,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.010995);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547576,-99) , 
4, 0.33959, 1, 0, 0.5841,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332061,-99) , 
6, 0.168028, 0, 0, 0.462712,-99) , 
1, 9.5, 0, 0, 0.557922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214953,-99) , 
5, 2.36425, 1, 0, 0.551866,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617215,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38927,-99) , 
8, 2.58054, 1, 0, 0.4788,-99) , 
6, 1.04624, 0, 0, 0.496138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34453,-99) , 
5, 0.557998, 0, 0, 0.481735,-99) , 
6, 0.461168, 1, 0, 0.516669,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366176,-99) , 
6, 0.717635, 0, 0, 0.518498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239702,-99) , 
9, 54.6519, 1, 0, 0.365703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0904483,-99) , 
5, 2.18027, 1, 0, 0.312151,-99) , 
8, 0.403253, 1, 0, 0.400943,-99) , 
4, 1.72375, 1, 0, 0.500127,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00777557);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712336,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493774,-99) , 
6, 0.131899, 1, 0, 0.506769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37404,-99) , 
8, 2.955, 1, 0, 0.499562,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320444,-99) , 
5, 1.76517, 1, 0, 0.584869,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275866,-99) , 
11, -4.95444, 1, 0, 0.346692,-99) , 
11, 7.01212, 0, 0, 0.411437,-99) , 
3, 0.997463, 1, 0, 0.482213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307071,-99) , 
5, 2.32311, 1, 0, 0.476398,-99) , 
12, 23320.4, 0, 0, 0.481569,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0110126);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495129,-99) , 
7, 38.7016, 1, 0, 0.639002,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517081,-99) , 
6, 0.278194, 1, 0, 0.573496,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172914,-99) , 
7, 44.1814, 1, 0, 0.48325,-99) , 
2, 21.5, 0, 0, 0.505817,-99) , 
12, 11139.5, 0, 0, 0.519096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303885,-99) , 
9, 504.131, 1, 0, 0.511274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55485,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513772,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0607856,-99) , 
0, 19.5, 1, 0, 0.215936,-99) , 
11, 2.88674, 0, 0, 0.309203,-99) , 
8, 0.172083, 1, 0, 0.404659,-99) , 
5, 2.0664, 1, 0, 0.497573,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0118033);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724289,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49209,-99) , 
8, 0.883891, 0, 0, 0.562707,-99) , 
12, 662.751, 1, 0, 0.607775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345899,-99) , 
5, 2.22083, 1, 0, 0.588525,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501404,-99) , 
9, 43.4666, 1, 0, 0.614429,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382722,-99) , 
11, -0.800108, 1, 0, 0.469384,-99) , 
9, 33.8496, 0, 0, 0.539028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460614,-99) , 
10, 0.131371, 1, 0, 0.526505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251636,-99) , 
5, 1.71367, 1, 0, 0.42825,-99) , 
8, 0.780563, 1, 0, 0.465169,-99) , 
9, 52.4905, 1, 0, 0.48481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260801,-99) , 
3, 0.751309, 0, 0, 0.478036,-99) , 
6, 0.113064, 1, 0, 0.494051,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0106264);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715738,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500611,-99) , 
0, 22.5, 0, 0, 0.545632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370789,-99) , 
3, 0.956746, 0, 0, 0.521654,-99) , 
3, 0.909802, 1, 0, 0.547594,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468024,-99) , 
5, 1.66906, 1, 0, 0.513639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243012,-99) , 
1, 25.5, 1, 0, 0.500848,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28677,-99) , 
2, 30.5, 0, 0, 0.441702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159549,-99) , 
1, 13.5, 0, 0, 0.389688,-99) , 
7, 38.5158, 1, 0, 0.474432,-99) , 
13, 1.5, 0, 0, 0.496224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.57136, 1, 0, 0.493431,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00997365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373732,-99) , 
7, 27.2945, 1, 0, 0.503506,-99) , 
0, 42.5, 0, 0, 0.530235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342487,-99) , 
10, 0.632141, 1, 0, 0.481343,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174921,-99) , 
5, 1.74473, 1, 0, 0.372271,-99) , 
0, 27.5, 1, 0, 0.452923,-99) , 
13, 1.5, 0, 0, 0.476013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107993,-99) , 
5, 2.40029, 1, 0, 0.470548,-99) , 
8, 0.0705947, 1, 0, 0.480836,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0105662);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56654,-99) , 
8, 1.86023, 1, 0, 0.650854,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380909,-99) , 
10, 0.184024, 1, 0, 0.484831,-99) , 
2, 13.5, 0, 0, 0.586138,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481587,-99) , 
13, 1.5, 0, 0, 0.510041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242373,-99) , 
1, 50.5, 1, 0, 0.500526,-99) , 
4, 0.844309, 1, 0, 0.529975,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619393,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452369,-99) , 
6, 1.01323, 0, 0, 0.491967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122639,-99) , 
7, 119.399, 1, 0, 0.473609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301664,-99) , 
10, 0.389846, 0, 0, 0.369178,-99) , 
4, 1.20205, 0, 0, 0.435863,-99) , 
6, 0.834853, 1, 0, 0.499666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1843,-99) , 
5, 2.39905, 1, 0, 0.493606,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0113265);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536689,-99) , 
3, 0.991993, 1, 0, 0.660057,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57727,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486527,-99) , 
8, 0.695003, 1, 0, 0.527514,-99) , 
4, 0.408859, 1, 0, 0.551572,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273681,-99) , 
8, 0.9155, 0, 0, 0.404197,-99) , 
9, 39.5249, 0, 0, 0.531895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262199,-99) , 
1, 69.5, 1, 0, 0.523072,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44282,-99) , 
2, 12.5, 0, 0, 0.498255,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28832,-99) , 
2, 52.5, 0, 0, 0.391406,-99) , 
7, 48.7153, 1, 0, 0.475182,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27098,-99) , 
3, 0.889321, 1, 0, 0.350428,-99) , 
3, 0.942342, 0, 0, 0.454062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112546,-99) , 
7, 233.463, 1, 0, 0.447162,-99) , 
6, 0.62803, 1, 0, 0.490207,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.010909);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69027,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34184,-99) , 
7, 16.4829, 0, 0, 0.527373,-99) , 
12, 1524.03, 1, 0, 0.586096,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343349,-99) , 
8, 0.95455, 0, 0, 0.410382,-99) , 
9, 154.323, 0, 0, 0.461731,-99) , 
6, 0.100428, 1, 0, 0.539051,-99) , 
6, 0.182123, 0, 0, 0.564332,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702076,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374815,-99) , 
12, 15026.2, 1, 0, 0.490783,-99) , 
6, 0.740762, 1, 0, 0.584259,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267763,-99) , 
1, 66.5, 1, 0, 0.491609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290509,-99) , 
11, -1.12762, 1, 0, 0.354549,-99) , 
8, 2.53032, 1, 0, 0.469942,-99) , 
11, -5.67265, 1, 0, 0.485408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171579,-99) , 
3, 0.999708, 1, 0, 0.47877,-99) , 
6, 0.208105, 1, 0, 0.499386,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00774227);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540049,-99) , 
3, 0.893502, 1, 0, 0.567403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189135,-99) , 
5, 2.4837, 1, 0, 0.55877,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139891,-99) , 
7, 188.696, 1, 0, 0.479256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238408,-99) , 
7, 7.36943, 0, 0, 0.470848,-99) , 
13, 1.5, 0, 0, 0.4981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25252,-99) , 
1, 70.5, 1, 0, 0.491847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1739,-99) , 
3, 0.999747, 1, 0, 0.486108,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.00540375);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719521,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290148,-99) , 
1, 58.5, 1, 0, 0.529295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146258,-99) , 
7, 134.82, 1, 0, 0.523422,-99) , 
2, 88.5, 0, 0, 0.528401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331182,-99) , 
1, 5.5, 0, 0, 0.523196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302065,-99) , 
3, 0.999635, 1, 0, 0.516541,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00721574);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307993,-99) , 
7, 99.4351, 1, 0, 0.52818,-99) , 
0, 83.5, 0, 0, 0.53451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355467,-99) , 
4, 1.98444, 1, 0, 0.526021,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556115,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221193,-99) , 
12, 8057.44, 0, 0, 0.320211,-99) , 
11, 7.1073, 0, 0, 0.407988,-99) , 
3, 0.998962, 1, 0, 0.515069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100028,-99) , 
1, 83.5, 1, 0, 0.508896,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0137065);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580987,-99) , 
1, 25.5, 1, 0, 0.677966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46393,-99) , 
9, 105.424, 1, 0, 0.524712,-99) , 
4, 1.00203, 1, 0, 0.610039,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512357,-99) , 
7, 16.2296, 0, 0, 0.557138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378141,-99) , 
7, 29.5336, 1, 0, 0.523787,-99) , 
1, 15.5, 0, 0, 0.557608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314844,-99) , 
10, 0.444066, 0, 0, 0.421257,-99) , 
5, 0.720725, 0, 0, 0.53666,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473256,-99) , 
11, 6.35975, 0, 0, 0.500995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259036,-99) , 
8, 0.712267, 1, 0, 0.401227,-99) , 
9, 126.789, 1, 0, 0.461752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0774559,-99) , 
7, 163.516, 1, 0, 0.455814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0577808,-99) , 
3, 0.999683, 1, 0, 0.447054,-99) , 
5, 1.65962, 1, 0, 0.496616,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0118155);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.78956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635769,-99) , 
10, 0.328895, 1, 0, 0.713831,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514276,-99) , 
1, 16.5, 0, 0, 0.568933,-99) , 
5, 1.43179, 1, 0, 0.634583,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465788,-99) , 
10, 0.339487, 0, 0, 0.52679,-99) , 
5, 1.02422, 0, 0, 0.59299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457238,-99) , 
7, 26.1277, 1, 0, 0.535152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34927,-99) , 
9, 61.3531, 0, 0, 0.478426,-99) , 
13, 0.5, 0, 0, 0.55167,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306364,-99) , 
9, 472.123, 1, 0, 0.495205,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246299,-99) , 
1, 25.5, 1, 0, 0.484352,-99) , 
2, 32.5, 0, 0, 0.498736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0846364,-99) , 
1, 18.5, 0, 0, 0.337309,-99) , 
7, 58.8669, 1, 0, 0.478847,-99) , 
4, 1.06941, 1, 0, 0.510109,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0103953);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714506,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459741,-99) , 
8, 2.26883, 1, 0, 0.553775,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236942,-99) , 
8, 0.205986, 0, 0, 0.4458,-99) , 
9, 61.7471, 0, 0, 0.519533,-99) , 
2, 52.5, 0, 0, 0.53077,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447134,-99) , 
9, 98.447, 1, 0, 0.524008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38675,-99) , 
8, 0.832559, 0, 0, 0.48608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0892592,-99) , 
8, 1.44741, 1, 0, 0.303806,-99) , 
5, 1.86875, 1, 0, 0.446202,-99) , 
3, 0.996256, 1, 0, 0.508658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132334,-99) , 
4, 1.72635, 1, 0, 0.329516,-99) , 
9, 396.789, 1, 0, 0.496842,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.013194);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518253,-99) , 
5, 1.50374, 1, 0, 0.593704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468363,-99) , 
5, 0.711949, 0, 0, 0.572298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388105,-99) , 
12, 2301.22, 0, 0, 0.474246,-99) , 
8, 2.20995, 1, 0, 0.543769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350307,-99) , 
9, 34.3482, 0, 0, 0.524406,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501142,-99) , 
7, 16.7259, 0, 0, 0.59302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441722,-99) , 
11, -1.89338, 1, 0, 0.48954,-99) , 
11, 3.96868, 0, 0, 0.512707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290108,-99) , 
5, 2.14247, 1, 0, 0.488858,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504967,-99) , 
5, 1.98544, 0, 0, 0.565481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303055,-99) , 
10, 1.17199, 0, 0, 0.398161,-99) , 
8, 0.766172, 1, 0, 0.466989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179856,-99) , 
1, 12.5, 0, 0, 0.403251,-99) , 
7, 28.0949, 1, 0, 0.462821,-99) , 
4, 1.01018, 1, 0, 0.486492,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00660071);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498653,-99) , 
6, 1.05665, 1, 0, 0.596108,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468161,-99) , 
13, 1.5, 0, 0, 0.493528,-99) , 
6, 1.00621, 0, 0, 0.50736,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397679,-99) , 
13, 0.5, 0, 0, 0.486569,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299196,-99) , 
9, 47.2923, 1, 0, 0.374634,-99) , 
4, 1.27959, 1, 0, 0.446655,-99) , 
8, 1.78647, 1, 0, 0.487213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33475,-99) , 
5, 2.27702, 1, 0, 0.481449,-99) , 
12, 21415.8, 0, 0, 0.486691,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0156834);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608512,-99) , 
3, 0.974959, 0, 0, 0.680656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41117,-99) , 
5, 1.37091, 0, 0, 0.528083,-99) , 
8, 1.45774, 0, 0, 0.592107,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484935,-99) , 
2, 12.5, 0, 0, 0.586738,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392498,-99) , 
9, 112.509, 1, 0, 0.453022,-99) , 
11, 5.22024, 0, 0, 0.486182,-99) , 
3, 0.988583, 1, 0, 0.526932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439259,-99) , 
10, 0.321554, 0, 0, 0.496967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322761,-99) , 
6, 0.628034, 1, 0, 0.433422,-99) , 
3, 0.943377, 0, 0, 0.507288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626012,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475358,-99) , 
7, 12.1875, 1, 0, 0.52782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317265,-99) , 
12, 4023.78, 1, 0, 0.477863,-99) , 
11, -4.43903, 1, 0, 0.501022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552468,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173169,-99) , 
1, 10.5, 0, 0, 0.330202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0761376,-99) , 
6, 0.705539, 1, 0, 0.266642,-99) , 
10, 0.849233, 0, 0, 0.327287,-99) , 
8, 0.60744, 1, 0, 0.422256,-99) , 
5, 1.84336, 1, 0, 0.484686,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0129463);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52645,-99) , 
3, 0.998813, 1, 0, 0.656335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444273,-99) , 
10, 0.157496, 0, 0, 0.594515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518643,-99) , 
5, 1.5215, 1, 0, 0.55695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415561,-99) , 
5, 0.817289, 0, 0, 0.537053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455819,-99) , 
5, 2.16772, 1, 0, 0.597957,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269147,-99) , 
9, 40.1466, 1, 0, 0.346116,-99) , 
8, 0.499132, 1, 0, 0.448311,-99) , 
4, 1.48322, 1, 0, 0.513681,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428924,-99) , 
0, 12.5, 0, 0, 0.573706,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293902,-99) , 
9, 97.096, 1, 0, 0.417185,-99) , 
6, 0.865876, 1, 0, 0.51846,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554403,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34288,-99) , 
6, 0.998798, 0, 0, 0.365683,-99) , 
2, 48.5, 0, 0, 0.387917,-99) , 
11, 4.67974, 0, 0, 0.438308,-99) , 
3, 0.988555, 1, 0, 0.479499,-99) , 
11, -6.5188, 1, 0, 0.489274,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0076962);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511715,-99) , 
1, 37.5, 1, 0, 0.589077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244722,-99) , 
0, 36.5, 1, 0, 0.505512,-99) , 
2, 30.5, 0, 0, 0.519556,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149698,-99) , 
12, -1178.92, 1, 0, 0.343567,-99) , 
12, 7166.31, 0, 0, 0.43093,-99) , 
3, 0.999095, 1, 0, 0.511797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201788,-99) , 
4, 2.20676, 1, 0, 0.507938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250895,-99) , 
7, 7.00283, 0, 0, 0.502409,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00947016);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36101,-99) , 
1, 17.5, 0, 0, 0.617106,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452401,-99) , 
3, 0.941749, 0, 0, 0.536498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318187,-99) , 
9, 509.567, 1, 0, 0.524146,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553745,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304331,-99) , 
7, 18.6537, 0, 0, 0.383887,-99) , 
9, 68.6656, 1, 0, 0.422944,-99) , 
8, 2.25175, 1, 0, 0.502571,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372647,-99) , 
9, 96.1606, 1, 0, 0.513829,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318518,-99) , 
0, 31.5, 0, 0, 0.391041,-99) , 
8, 1.01875, 0, 0, 0.456454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146437,-99) , 
1, 8.5, 0, 0, 0.43144,-99) , 
10, 0.467729, 1, 0, 0.486819,-99) , 
10, 1.67081, 0, 0, 0.495999,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00667093);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485879,-99) , 
9, 94.3823, 1, 0, 0.623858,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417657,-99) , 
7, 44.1776, 1, 0, 0.522836,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311533,-99) , 
11, -4.01575, 0, 0, 0.447491,-99) , 
6, 0.814134, 1, 0, 0.499267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292479,-99) , 
5, 2.39888, 1, 0, 0.49473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0708454,-99) , 
7, 115.573, 1, 0, 0.49,-99) , 
2, 56.5, 0, 0, 0.498839,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0118002);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518436,-99) , 
13, 0.5, 0, 0, 0.613365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491239,-99) , 
11, -6.29495, 1, 0, 0.505816,-99) , 
6, 0.198815, 1, 0, 0.529363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351582,-99) , 
8, 0.13491, 0, 0, 0.519215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286548,-99) , 
2, 7.5, 0, 0, 0.509709,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451214,-99) , 
2, 13.5, 0, 0, 0.582364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382266,-99) , 
9, 60.9009, 0, 0, 0.527046,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166549,-99) , 
6, 0.781453, 1, 0, 0.465274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240049,-99) , 
2, 33.5, 0, 0, 0.303994,-99) , 
11, -0.660264, 1, 0, 0.377995,-99) , 
8, 0.303446, 1, 0, 0.437267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133988,-99) , 
7, 9.12935, 0, 0, 0.414522,-99) , 
5, 1.90798, 1, 0, 0.489368,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.012528);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535382,-99) , 
10, 0.45219, 1, 0, 0.580049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320346,-99) , 
4, 1.58857, 1, 0, 0.489884,-99) , 
10, 0.267951, 0, 0, 0.540645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0902659,-99) , 
7, 231.989, 1, 0, 0.535558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330601,-99) , 
1, 78.5, 1, 0, 0.526137,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351746,-99) , 
4, 1.73762, 1, 0, 0.512798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318806,-99) , 
5, 1.11735, 0, 0, 0.489163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.2878, 1, 0, 0.474254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0691619,-99) , 
7, 30.9268, 1, 0, 0.457837,-99) , 
2, 12.5, 0, 0, 0.499568,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0134181);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561285,-99) , 
10, 0.447922, 1, 0, 0.632925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449417,-99) , 
9, 252.603, 1, 0, 0.601966,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486456,-99) , 
5, 2.35411, 0, 0, 0.520968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166473,-99) , 
1, 9.5, 0, 0, 0.496186,-99) , 
5, 1.55894, 1, 0, 0.555452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300943,-99) , 
3, 0.99962, 1, 0, 0.540061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37802,-99) , 
6, 0.930359, 1, 0, 0.484192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263726,-99) , 
7, 31.4807, 1, 0, 0.471295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152922,-99) , 
5, 2.32243, 1, 0, 0.462758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0852014,-99) , 
0, 26.5, 1, 0, 0.451218,-99) , 
2, 16.5, 0, 0, 0.488413,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00876603);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.804822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56586,-99) , 
7, 70.5692, 1, 0, 0.672358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434947,-99) , 
6, 0.868232, 1, 0, 0.547522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354008,-99) , 
8, 2.65901, 1, 0, 0.52127,-99) , 
0, 32.5, 0, 0, 0.551231,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494527,-99) , 
12, -5220.69, 1, 0, 0.505875,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194711,-99) , 
5, 1.60057, 1, 0, 0.348741,-99) , 
3, 0.99911, 1, 0, 0.49287,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161702,-99) , 
0, 21.5, 1, 0, 0.358682,-99) , 
4, 1.77282, 1, 0, 0.479845,-99) , 
13, 1.5, 0, 0, 0.501287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272127,-99) , 
5, 2.36545, 1, 0, 0.495941,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00838806);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669565,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509186,-99) , 
12, 13061.7, 0, 0, 0.519617,-99) , 
2, 29.5, 0, 0, 0.528695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292029,-99) , 
1, 37.5, 1, 0, 0.522106,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655303,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 10.5, 0, 0, 0.382561,-99) , 
4, 0.826502, 1, 0, 0.488989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129006,-99) , 
0, 38.5, 0, 0, 0.424252,-99) , 
7, 60.1573, 1, 0, 0.509592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341322,-99) , 
5, 0.333292, 0, 0, 0.502432,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00760545);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526654,-99) , 
2, 48.5, 0, 0, 0.534546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377336,-99) , 
1, 50.5, 1, 0, 0.526134,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284943,-99) , 
5, 1.78882, 1, 0, 0.366463,-99) , 
9, 27.0497, 0, 0, 0.514839,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355942,-99) , 
6, 0.496749, 1, 0, 0.44999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269846,-99) , 
9, 190.046, 1, 0, 0.4074,-99) , 
8, 2.69374, 1, 0, 0.500909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141483,-99) , 
2, 12.5, 0, 0, 0.335075,-99) , 
5, 2.17556, 1, 0, 0.48967,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0148422);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753999,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570511,-99) , 
3, 0.970451, 0, 0, 0.622145,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393681,-99) , 
12, 8303.23, 0, 0, 0.483584,-99) , 
3, 0.985337, 1, 0, 0.560291,-99) , 
12, -3159.5, 1, 0, 0.580922,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407108,-99) , 
9, 70.8239, 0, 0, 0.588492,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176117,-99) , 
5, 2.36109, 1, 0, 0.502381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267046,-99) , 
6, 0.227873, 0, 0, 0.456865,-99) , 
8, 0.311876, 1, 0, 0.494563,-99) , 
4, 0.98399, 1, 0, 0.538426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354019,-99) , 
12, 5150.28, 1, 0, 0.564042,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355783,-99) , 
9, 111.598, 1, 0, 0.447669,-99) , 
9, 207.573, 0, 0, 0.47463,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223189,-99) , 
12, 3748.05, 0, 0, 0.357477,-99) , 
6, 0.720482, 0, 0, 0.45831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280125,-99) , 
3, 0.849445, 0, 0, 0.447665,-99) , 
6, 0.624692, 1, 0, 0.500309,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0108212);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705226,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461295,-99) , 
12, -1032.61, 0, 0, 0.587847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376433,-99) , 
7, 45.5151, 1, 0, 0.550054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35534,-99) , 
9, 38.6841, 0, 0, 0.521657,-99) , 
2, 42.5, 0, 0, 0.546365,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469617,-99) , 
11, -1.23093, 1, 0, 0.532312,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315783,-99) , 
5, 1.96445, 1, 0, 0.452985,-99) , 
10, 0.237973, 0, 0, 0.489294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336767,-99) , 
5, 1.63434, 0, 0, 0.423277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266076,-99) , 
4, 1.59313, 1, 0, 0.380336,-99) , 
3, 0.943551, 0, 0, 0.467848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200464,-99) , 
7, 143.61, 1, 0, 0.461304,-99) , 
4, 0.866137, 1, 0, 0.487956,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00792883);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75405,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45826,-99) , 
2, 11.5, 0, 0, 0.505264,-99) , 
2, 35.5, 0, 0, 0.517037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177257,-99) , 
7, 110.635, 1, 0, 0.50945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304609,-99) , 
5, 1.73364, 1, 0, 0.506229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219739,-99) , 
2, 47.5, 0, 0, 0.397664,-99) , 
1, 37.5, 1, 0, 0.49979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354372,-99) , 
5, 0.358333, 0, 0, 0.493983,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00944412);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519416,-99) , 
11, -0.872239, 1, 0, 0.547912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396585,-99) , 
9, 397.377, 1, 0, 0.538575,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421152,-99) , 
10, 0.237043, 0, 0, 0.502264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155479,-99) , 
8, 0.724177, 1, 0, 0.415814,-99) , 
5, 2.09071, 1, 0, 0.525474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0515565,-99) , 
7, 309.468, 1, 0, 0.52275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589141,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293271,-99) , 
8, 1.20673, 1, 0, 0.378967,-99) , 
9, 21.0158, 1, 0, 0.455869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15928,-99) , 
8, 0.381205, 0, 0, 0.399158,-99) , 
9, 33.8106, 0, 0, 0.508608,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0113237);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500324,-99) , 
1, 38.5, 1, 0, 0.607085,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38226,-99) , 
7, 40.8979, 1, 0, 0.520206,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132296,-99) , 
4, 1.34415, 1, 0, 0.323603,-99) , 
1, 24.5, 1, 0, 0.502944,-99) , 
2, 34.5, 0, 0, 0.516703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100433,-99) , 
7, 170.523, 1, 0, 0.510145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567995,-99) , 
12, 3272.92, 0, 0, 0.604339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412018,-99) , 
3, 0.995099, 1, 0, 0.53989,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17935,-99) , 
4, 1.72553, 1, 0, 0.381363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137941,-99) , 
1, 31.5, 1, 0, 0.357467,-99) , 
12, 10195.4, 0, 0, 0.390723,-99) , 
5, 1.28137, 1, 0, 0.443436,-99) , 
8, 1.78735, 1, 0, 0.488564,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0108171);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.815297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603465,-99) , 
7, 32.5355, 1, 0, 0.661956,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471591,-99) , 
10, 0.119076, 1, 0, 0.535026,-99) , 
2, 17.5, 0, 0, 0.577842,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500164,-99) , 
11, 6.00661, 0, 0, 0.525489,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3072,-99) , 
5, 1.54427, 1, 0, 0.419068,-99) , 
8, 2.39676, 1, 0, 0.508427,-99) , 
3, 0.987431, 1, 0, 0.533026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285833,-99) , 
1, 5.5, 0, 0, 0.526834,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410442,-99) , 
3, 0.89829, 1, 0, 0.534763,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554139,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249467,-99) , 
11, -0.110941, 1, 0, 0.359986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130609,-99) , 
4, 1.61036, 1, 0, 0.326327,-99) , 
13, 1.5, 0, 0, 0.390947,-99) , 
11, 0.516409, 0, 0, 0.438491,-99) , 
3, 0.939593, 0, 0, 0.508626,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0155314);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572062,-99) , 
6, 0.667032, 1, 0, 0.696228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555481,-99) , 
7, 22.687, 1, 0, 0.593521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432954,-99) , 
5, 0.655841, 0, 0, 0.569267,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329217,-99) , 
8, 0.435991, 1, 0, 0.403633,-99) , 
2, 31.5, 0, 0, 0.45411,-99) , 
4, 1.19399, 1, 0, 0.522017,-99) , 
12, 9389.24, 0, 0, 0.543773,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41798,-99) , 
8, 0.4598, 0, 0, 0.553386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340156,-99) , 
3, 0.939448, 0, 0, 0.52911,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275064,-99) , 
12, 2416.38, 1, 0, 0.344406,-99) , 
3, 0.998057, 0, 0, 0.376469,-99) , 
6, 0.411762, 0, 0, 0.472198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0895792,-99) , 
7, 58.2942, 1, 0, 0.458033,-99) , 
1, 12.5, 0, 0, 0.503364,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0122994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530476,-99) , 
8, 1.67135, 0, 0, 0.585048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395982,-99) , 
10, 0.10643, 1, 0, 0.445925,-99) , 
3, 0.993698, 1, 0, 0.541102,-99) , 
11, 9.00353, 0, 0, 0.555022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352397,-99) , 
5, 1.95919, 1, 0, 0.559789,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401053,-99) , 
11, -6.77317, 1, 0, 0.446007,-99) , 
3, 0.987203, 1, 0, 0.499274,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294923,-99) , 
9, 80.1239, 0, 0, 0.431968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14062,-99) , 
4, 1.60686, 1, 0, 0.389212,-99) , 
11, -0.412749, 1, 0, 0.475276,-99) , 
11, 0.54714, 0, 0, 0.510125,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0863324,-99) , 
5, 2.0069, 1, 0, 0.350115,-99) , 
3, 0.99939, 1, 0, 0.501275,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00688301);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499328,-99) , 
7, 24.5804, 0, 0, 0.597874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42478,-99) , 
8, 2.52291, 1, 0, 0.501174,-99) , 
12, 11053.6, 0, 0, 0.510321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315267,-99) , 
7, 6.99944, 0, 0, 0.505972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316601,-99) , 
5, 2.32025, 1, 0, 0.499191,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0901651,-99) , 
12, -1958.88, 1, 0, 0.277056,-99) , 
12, 5915.49, 0, 0, 0.369721,-99) , 
3, 0.998949, 1, 0, 0.486206,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0131948);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541269,-99) , 
9, 146.914, 1, 0, 0.615288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33337,-99) , 
1, 8.5, 0, 0, 0.588555,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435943,-99) , 
8, 1.77447, 1, 0, 0.501445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249025,-99) , 
5, 2.28775, 1, 0, 0.491292,-99) , 
2, 15.5, 0, 0, 0.522319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0624215,-99) , 
7, 100.698, 1, 0, 0.514993,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625937,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37683,-99) , 
8, 0.69542, 1, 0, 0.453626,-99) , 
9, 77.4647, 1, 0, 0.523205,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303834,-99) , 
0, 40.5, 0, 0, 0.467467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190816,-99) , 
2, 23.5, 0, 0, 0.41101,-99) , 
1, 24.5, 1, 0, 0.494451,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00925488);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581884,-99) , 
10, 0.126615, 1, 0, 0.633177,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405679,-99) , 
5, 1.94298, 1, 0, 0.53257,-99) , 
11, 1.44688, 0, 0, 0.567898,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280767,-99) , 
4, 2.04377, 1, 0, 0.571758,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227789,-99) , 
1, 9.5, 0, 0, 0.462826,-99) , 
0, 14.5, 1, 0, 0.503602,-99) , 
6, 0.58704, 1, 0, 0.538305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284309,-99) , 
7, 6.99473, 0, 0, 0.533517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275777,-99) , 
1, 83.5, 1, 0, 0.528525,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0131991);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.778176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521856,-99) , 
0, 21.5, 0, 0, 0.616096,-99) , 
12, 1661.73, 1, 0, 0.678359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492987,-99) , 
13, 0.5, 0, 0, 0.603507,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539347,-99) , 
6, 0.715106, 1, 0, 0.596476,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341848,-99) , 
3, 0.998775, 1, 0, 0.490385,-99) , 
11, -4.96049, 1, 0, 0.505901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278183,-99) , 
7, 153.069, 1, 0, 0.499416,-99) , 
6, 0.195302, 1, 0, 0.521567,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382184,-99) , 
6, 0.631242, 0, 0, 0.503292,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344183,-99) , 
4, 1.84219, 1, 0, 0.497819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418128,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0939563,-99) , 
13, 1.5, 0, 0, 0.229691,-99) , 
8, 0.254378, 1, 0, 0.345709,-99) , 
9, 61.4817, 1, 0, 0.406061,-99) , 
5, 1.93515, 1, 0, 0.499165,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.01295);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.778648,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601069,-99) , 
9, 341.846, 0, 0, 0.684675,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447873,-99) , 
0, 11.5, 1, 0, 0.533671,-99) , 
12, 2544.55, 1, 0, 0.607246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383196,-99) , 
8, 2.45045, 1, 0, 0.583072,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733012,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513924,-99) , 
1, 33.5, 1, 0, 0.592655,-99) , 
6, 0.113137, 1, 0, 0.636367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60502,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302071,-99) , 
9, 54.4518, 0, 0, 0.444937,-99) , 
13, 1.5, 0, 0, 0.493891,-99) , 
2, 20.5, 0, 0, 0.556251,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661815,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433924,-99) , 
11, 1.60576, 0, 0, 0.476851,-99) , 
12, 13035.3, 0, 0, 0.494208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115347,-99) , 
1, 13.5, 0, 0, 0.468271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170216,-99) , 
2, 29.5, 0, 0, 0.382855,-99) , 
7, 44.2716, 1, 0, 0.472083,-99) , 
4, 0.84466, 1, 0, 0.49888,-99) , 
10, 0.0656284, 1, 0, 0.513025,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0107436);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426542,-99) , 
5, 1.53642, 1, 0, 0.58963,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545152,-99) , 
9, 32.3551, 1, 0, 0.59894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462588,-99) , 
9, 83.4838, 0, 0, 0.48605,-99) , 
4, 1.64147, 0, 0, 0.518222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307924,-99) , 
7, 42.8382, 1, 0, 0.503685,-99) , 
2, 28.5, 0, 0, 0.51852,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403583,-99) , 
1, 27.5, 1, 0, 0.557976,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286808,-99) , 
7, 28.6482, 1, 0, 0.455985,-99) , 
2, 18.5, 0, 0, 0.480641,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161017,-99) , 
2, 49.5, 0, 0, 0.336753,-99) , 
7, 60.0108, 1, 0, 0.462958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251025,-99) , 
4, 1.95976, 1, 0, 0.453945,-99) , 
9, 97.6767, 1, 0, 0.484544,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00657345);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490835,-99) , 
5, 1.67111, 1, 0, 0.535851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369847,-99) , 
8, 0.563531, 1, 0, 0.459526,-99) , 
9, 227.065, 1, 0, 0.519345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363706,-99) , 
1, 6.5, 0, 0, 0.511472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227337,-99) , 
7, 185.942, 1, 0, 0.506574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283907,-99) , 
3, 0.730458, 0, 0, 0.500161,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00733496);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70419,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496895,-99) , 
1, 15.5, 0, 0, 0.559858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364052,-99) , 
8, 1.9929, 1, 0, 0.515352,-99) , 
5, 1.49711, 1, 0, 0.573149,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50559,-99) , 
8, 1.35052, 0, 0, 0.588337,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173407,-99) , 
7, 140.058, 1, 0, 0.472288,-99) , 
6, 1.01822, 0, 0, 0.485655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318073,-99) , 
9, 477.147, 1, 0, 0.477768,-99) , 
6, 0.117148, 1, 0, 0.492048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196022,-99) , 
3, 0.999788, 1, 0, 0.487029,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00936144);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533365,-99) , 
9, 115.558, 1, 0, 0.638935,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506349,-99) , 
11, 4.45452, 0, 0, 0.527643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15623,-99) , 
0, 70.5, 1, 0, 0.518879,-99) , 
2, 53.5, 0, 0, 0.531807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229315,-99) , 
3, 0.999695, 1, 0, 0.524771,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431999,-99) , 
1, 7.5, 1, 0, 0.463375,-99) , 
10, 0.0324911, 1, 0, 0.489458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327304,-99) , 
5, 1.22084, 0, 0, 0.463288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212438,-99) , 
5, 2.14057, 1, 0, 0.446493,-99) , 
2, 11.5, 0, 0, 0.499133,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.010113);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.740921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543158,-99) , 
10, 0.227152, 1, 0, 0.65388,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455545,-99) , 
4, 0.264672, 1, 0, 0.518604,-99) , 
6, 0.227469, 0, 0, 0.564236,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448753,-99) , 
7, 35.6738, 1, 0, 0.547426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372762,-99) , 
5, 1.72436, 1, 0, 0.439412,-99) , 
11, 0.766905, 0, 0, 0.483394,-99) , 
6, 0.350878, 1, 0, 0.517229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595518,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386102,-99) , 
11, 9.76895, 0, 0, 0.403429,-99) , 
11, -9.39009, 1, 0, 0.425931,-99) , 
6, 1.0099, 0, 0, 0.451333,-99) , 
3, 0.992146, 1, 0, 0.489402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207986,-99) , 
7, 6.91891, 0, 0, 0.484525,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00753173);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271403,-99) , 
1, 22.5, 0, 0, 0.65458,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456491,-99) , 
2, 11.5, 0, 0, 0.61202,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496772,-99) , 
9, 21.0158, 1, 0, 0.503404,-99) , 
11, 6.38719, 0, 0, 0.514877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102205,-99) , 
7, 105.858, 1, 0, 0.50734,-99) , 
2, 60.5, 0, 0, 0.515528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207476,-99) , 
7, 6.9993, 0, 0, 0.509862,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0104493);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748795,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509598,-99) , 
0, 61.5, 0, 0, 0.577105,-99) , 
3, 0.993212, 0, 0, 0.621934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414986,-99) , 
3, 0.998503, 1, 0, 0.587076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22421,-99) , 
1, 12.5, 0, 0, 0.562318,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514095,-99) , 
11, -6.53891, 1, 0, 0.530877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354922,-99) , 
4, 0.10064, 0, 0, 0.517687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380638,-99) , 
0, 12.5, 1, 0, 0.44831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235472,-99) , 
5, 2.27128, 1, 0, 0.439179,-99) , 
7, 14.33, 0, 0, 0.487861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208726,-99) , 
7, 50.0093, 1, 0, 0.472735,-99) , 
2, 29.5, 0, 0, 0.488787,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0138712);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590235,-99) , 
13, 1.5, 0, 0, 0.632654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463541,-99) , 
1, 9.5, 0, 0, 0.597867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408988,-99) , 
11, -4.28601, 0, 0, 0.527357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420951,-99) , 
12, 1018.99, 0, 0, 0.493915,-99) , 
6, 0.805969, 1, 0, 0.55106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387466,-99) , 
0, 19.5, 0, 0, 0.436035,-99) , 
8, 0.436805, 0, 0, 0.533966,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757115,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364752,-99) , 
5, 2.16558, 1, 0, 0.552679,-99) , 
8, 0.0859956, 1, 0, 0.637327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450008,-99) , 
9, 57.931, 0, 0, 0.591838,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253043,-99) , 
3, 0.999048, 1, 0, 0.490599,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0782949,-99) , 
5, 2.11939, 1, 0, 0.344011,-99) , 
9, 120.481, 1, 0, 0.432297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0661108,-99) , 
5, 2.27223, 1, 0, 0.415967,-99) , 
8, 0.307952, 1, 0, 0.467623,-99) , 
5, 1.64719, 1, 0, 0.503468,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0128525);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530608,-99) , 
9, 109.914, 1, 0, 0.557598,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265155,-99) , 
2, 46.5, 0, 0, 0.396457,-99) , 
1, 34.5, 1, 0, 0.540031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494301,-99) , 
2, 33.5, 0, 0, 0.526576,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239298,-99) , 
3, 0.982807, 0, 0, 0.343899,-99) , 
13, 0.5, 0, 0, 0.465309,-99) , 
9, 69.7216, 0, 0, 0.516308,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304955,-99) , 
9, 34.1398, 1, 0, 0.396302,-99) , 
8, 0.16115, 1, 0, 0.447895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
6, 0.478764, 0, 0, 0.417676,-99) , 
4, 1.72347, 1, 0, 0.501567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248542,-99) , 
3, 0.999744, 1, 0, 0.496473,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0136407);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552104,-99) , 
8, 1.92611, 1, 0, 0.641193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697282,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392955,-99) , 
3, 0.999007, 1, 0, 0.519694,-99) , 
6, 0.115547, 1, 0, 0.538781,-99) , 
5, 1.40067, 0, 0, 0.563857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392092,-99) , 
8, 0.36651, 0, 0, 0.54624,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552466,-99) , 
12, 2265.29, 1, 0, 0.599514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270907,-99) , 
7, 16.9425, 1, 0, 0.455476,-99) , 
0, 15.5, 0, 0, 0.531199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32586,-99) , 
8, 2.69119, 1, 0, 0.511222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61561,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372148,-99) , 
7, 18.0713, 0, 0, 0.502011,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267573,-99) , 
5, 1.76583, 1, 0, 0.359063,-99) , 
8, 0.219923, 1, 0, 0.391653,-99) , 
8, 2.85938, 0, 0, 0.413653,-99) , 
13, 1.5, 0, 0, 0.446877,-99) , 
5, 1.55492, 1, 0, 0.493709,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.00688255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515307,-99) , 
11, -5.75626, 1, 0, 0.538352,-99) , 
3, 0.89632, 1, 0, 0.563219,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467598,-99) , 
5, 1.51045, 1, 0, 0.502166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236948,-99) , 
3, 0.746844, 0, 0, 0.492418,-99) , 
13, 1.5, 0, 0, 0.513998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314657,-99) , 
5, 2.30686, 1, 0, 0.506706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173706,-99) , 
3, 0.999761, 1, 0, 0.501741,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00771324);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559713,-99) , 
3, 0.998665, 0, 0, 0.576617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400862,-99) , 
1, 10.5, 0, 0, 0.563902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349429,-99) , 
3, 0.999619, 1, 0, 0.550391,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449117,-99) , 
11, 2.35135, 1, 0, 0.506055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237742,-99) , 
1, 10.5, 0, 0, 0.395448,-99) , 
3, 0.888499, 0, 0, 0.492826,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20371,-99) , 
3, 0.977568, 1, 0, 0.296447,-99) , 
7, 34.6945, 1, 0, 0.475249,-99) , 
2, 21.5, 0, 0, 0.496159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233701,-99) , 
1, 85.5, 1, 0, 0.491927,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00795241);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551251,-99) , 
3, 0.993547, 1, 0, 0.626497,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455364,-99) , 
5, 1.64792, 1, 0, 0.568858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347589,-99) , 
10, 1.13824, 1, 0, 0.534531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302478,-99) , 
7, 12.2895, 0, 0, 0.491187,-99) , 
8, 0.722318, 1, 0, 0.543338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451815,-99) , 
6, 0.919265, 1, 0, 0.587538,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35322,-99) , 
4, 1.771, 1, 0, 0.472111,-99) , 
11, -8.47874, 1, 0, 0.482207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322937,-99) , 
12, 148.262, 0, 0, 0.473855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.54984, 1, 0, 0.470334,-99) , 
12, -564.1, 1, 0, 0.486891,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00542357);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410885,-99) , 
9, 396.906, 1, 0, 0.518895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409614,-99) , 
2, 24.5, 0, 0, 0.461835,-99) , 
10, 0.299538, 1, 0, 0.49588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285219,-99) , 
3, 0.999687, 1, 0, 0.492011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269788,-99) , 
4, 2.05407, 1, 0, 0.48525,-99) , 
12, 23211.6, 0, 0, 0.490962,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00775652);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54259,-99) , 
11, 12.6535, 0, 0, 0.615652,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480323,-99) , 
9, 77.6768, 1, 0, 0.592076,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350282,-99) , 
1, 29.5, 1, 0, 0.481719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15256,-99) , 
7, 71.6561, 1, 0, 0.469176,-99) , 
2, 45.5, 0, 0, 0.479355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221965,-99) , 
3, 0.999696, 1, 0, 0.475406,-99) , 
12, -8167.05, 1, 0, 0.484564,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00659676);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677496,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512662,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239747,-99) , 
9, 488.344, 1, 0, 0.505654,-99) , 
10, 0.0266662, 1, 0, 0.511523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282843,-99) , 
1, 71.5, 1, 0, 0.505344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241909,-99) , 
7, 6.9953, 0, 0, 0.499538,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175939,-99) , 
8, 1.41991, 1, 0, 0.294657,-99) , 
3, 0.999331, 1, 0, 0.487357,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00941572);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522698,-99) , 
12, -5187.74, 1, 0, 0.536603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342024,-99) , 
9, 424.059, 1, 0, 0.525204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392528,-99) , 
9, 32.3972, 0, 0, 0.511061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286688,-99) , 
0, 10.5, 0, 0, 0.484012,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
3, 0.971743, 0, 0, 0.292392,-99) , 
8, 1.77431, 1, 0, 0.443028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0547528,-99) , 
1, 44.5, 1, 0, 0.42874,-99) , 
5, 1.84537, 1, 0, 0.489439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197034,-99) , 
2, 6.5, 0, 0, 0.484275,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0105019);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.827823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649576,-99) , 
0, 32.5, 0, 0, 0.723953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
7, 63.9754, 1, 0, 0.640828,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537312,-99) , 
5, 1.91927, 1, 0, 0.620293,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367712,-99) , 
1, 10.5, 1, 0, 0.443415,-99) , 
6, 0.384641, 1, 0, 0.515805,-99) , 
0, 22.5, 0, 0, 0.562141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185234,-99) , 
5, 2.48678, 1, 0, 0.553743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301991,-99) , 
1, 34.5, 1, 0, 0.512819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354695,-99) , 
11, 0.584435, 0, 0, 0.41255,-99) , 
3, 0.954327, 0, 0, 0.485562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319559,-99) , 
7, 106.298, 1, 0, 0.476867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295953,-99) , 
1, 6.5, 0, 0, 0.467769,-99) , 
13, 1.5, 0, 0, 0.492768,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0143175);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611136,-99) , 
3, 0.976216, 0, 0, 0.645843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457041,-99) , 
4, 1.54045, 1, 0, 0.601501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481588,-99) , 
9, 144.222, 0, 0, 0.589642,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370427,-99) , 
11, -1.22563, 1, 0, 0.450767,-99) , 
8, 0.69145, 1, 0, 0.499513,-99) , 
11, 0.55402, 0, 0, 0.539174,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57163,-99) , 
5, 1.56521, 1, 0, 0.683793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256964,-99) , 
7, 36.5544, 1, 0, 0.478624,-99) , 
2, 28.5, 0, 0, 0.524399,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272498,-99) , 
4, 1.63868, 1, 0, 0.474511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165933,-99) , 
5, 1.32564, 1, 0, 0.293924,-99) , 
7, 38.7194, 1, 0, 0.428712,-99) , 
9, 97.1307, 1, 0, 0.473611,-99) , 
3, 0.988651, 1, 0, 0.50762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211704,-99) , 
7, 7.00062, 0, 0, 0.502651,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0109297);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405546,-99) , 
5, 1.8593, 1, 0, 0.516629,-99) , 
3, 0.997721, 0, 0, 0.596265,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531414,-99) , 
12, -3761.7, 1, 0, 0.550591,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396819,-99) , 
5, 1.51537, 1, 0, 0.482682,-99) , 
9, 126.789, 1, 0, 0.522812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384488,-99) , 
5, 1.93049, 1, 0, 0.543242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346323,-99) , 
12, -1447.92, 1, 0, 0.3842,-99) , 
9, 153.671, 0, 0, 0.442366,-99) , 
2, 11.5, 0, 0, 0.492008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329812,-99) , 
5, 1.51493, 1, 0, 0.476119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168549,-99) , 
1, 22.5, 0, 0, 0.403402,-99) , 
7, 60.0402, 1, 0, 0.47961,-99) , 
12, 11209, 0, 0, 0.491366,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0125725);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682142,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478195,-99) , 
9, 69.7077, 0, 0, 0.543695,-99) , 
2, 16.5, 0, 0, 0.563464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206881,-99) , 
5, 2.49074, 1, 0, 0.558401,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395896,-99) , 
2, 28.5, 0, 0, 0.544106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371214,-99) , 
12, 6461.53, 1, 0, 0.50561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195239,-99) , 
2, 19.5, 0, 0, 0.46203,-99) , 
0, 25.5, 1, 0, 0.529433,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455531,-99) , 
6, 0.831709, 1, 0, 0.602871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495239,-99) , 
1, 10.5, 0, 0, 0.560863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340274,-99) , 
5, 1.31523, 1, 0, 0.406278,-99) , 
11, 5.12119, 0, 0, 0.461011,-99) , 
11, -6.53218, 1, 0, 0.487124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270719,-99) , 
5, 2.07728, 1, 0, 0.469302,-99) , 
3, 0.991604, 1, 0, 0.504148,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00838397);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681843,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434858,-99) , 
8, 2.79574, 1, 0, 0.547194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418187,-99) , 
9, 32.2025, 0, 0, 0.534942,-99) , 
11, -6.63902, 1, 0, 0.544926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339549,-99) , 
6, 1.12108, 1, 0, 0.52963,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4478,-99) , 
9, 135.725, 0, 0, 0.526174,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330701,-99) , 
9, 129.126, 1, 0, 0.430079,-99) , 
8, 0.593777, 1, 0, 0.466466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163419,-99) , 
7, 163.312, 1, 0, 0.462157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149201,-99) , 
9, 526.215, 1, 0, 0.452531,-99) , 
4, 1.28682, 1, 0, 0.496664,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0059389);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488313,-99) , 
7, 13.4706, 0, 0, 0.541469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411953,-99) , 
5, 0.680326, 0, 0, 0.533487,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409007,-99) , 
9, 54.8521, 1, 0, 0.474602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19535,-99) , 
9, 163.676, 1, 0, 0.415692,-99) , 
8, 2.69467, 1, 0, 0.520524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311343,-99) , 
1, 74.5, 1, 0, 0.514024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2628,-99) , 
2, 6.5, 0, 0, 0.509052,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0117347);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756856,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488491,-99) , 
3, 0.985093, 1, 0, 0.584481,-99) , 
12, 6036.28, 0, 0, 0.635366,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615303,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35577,-99) , 
9, 56.5302, 0, 0, 0.485068,-99) , 
11, -3.07159, 1, 0, 0.518982,-99) , 
4, 1.18759, 1, 0, 0.572785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0896192,-99) , 
4, 2.06392, 1, 0, 0.556057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467983,-99) , 
6, 0.820742, 1, 0, 0.591577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340019,-99) , 
7, 46.8196, 1, 0, 0.54183,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482453,-99) , 
12, 1700.13, 0, 0, 0.506737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395977,-99) , 
2, 48.5, 0, 0, 0.416412,-99) , 
11, 1.01191, 0, 0, 0.461966,-99) , 
12, 6873.46, 0, 0, 0.479413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254453,-99) , 
2, 6.5, 0, 0, 0.473482,-99) , 
13, 1.5, 0, 0, 0.497068,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00886952);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5224,-99) , 
7, 29.8496, 1, 0, 0.606027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429145,-99) , 
8, 2.46305, 1, 0, 0.578597,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142186,-99) , 
4, 1.65132, 1, 0, 0.417257,-99) , 
9, 226.217, 1, 0, 0.545201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54933,-99) , 
0, 11.5, 1, 0, 0.625772,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421126,-99) , 
2, 17.5, 0, 0, 0.480852,-99) , 
7, 11.7748, 1, 0, 0.507049,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244502,-99) , 
11, -0.546209, 0, 0, 0.452112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19015,-99) , 
3, 0.997674, 1, 0, 0.435832,-99) , 
11, -0.777907, 1, 0, 0.474857,-99) , 
11, 2.67008, 0, 0, 0.492129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227001,-99) , 
7, 6.59422, 0, 0, 0.488485,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00857814);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500179,-99) , 
8, 1.20085, 0, 0, 0.583242,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520974,-99) , 
2, 15.5, 0, 0, 0.59519,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332972,-99) , 
3, 0.997856, 1, 0, 0.491352,-99) , 
12, -5231.85, 1, 0, 0.50233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32107,-99) , 
1, 6.5, 0, 0, 0.49514,-99) , 
11, -4.9293, 1, 0, 0.507609,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165036,-99) , 
9, 147.533, 1, 0, 0.51774,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18948,-99) , 
13, 1.5, 0, 0, 0.300064,-99) , 
6, 0.928104, 0, 0, 0.402162,-99) , 
4, 1.77041, 1, 0, 0.494726,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0134899);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684813,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67573,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498209,-99) , 
11, 2.44877, 0, 0, 0.545413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400654,-99) , 
5, 2.04305, 1, 0, 0.52223,-99) , 
11, -6.70721, 1, 0, 0.539188,-99) , 
3, 0.901589, 1, 0, 0.559861,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317449,-99) , 
7, 21.3218, 0, 0, 0.588458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268905,-99) , 
7, 27.5715, 1, 0, 0.481331,-99) , 
0, 20.5, 0, 0, 0.513103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244771,-99) , 
7, 60.222, 1, 0, 0.505052,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409375,-99) , 
5, 1.28817, 1, 0, 0.482806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132461,-99) , 
2, 27.5, 0, 0, 0.427735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0439817,-99) , 
1, 14.5, 0, 0, 0.38461,-99) , 
0, 40.5, 1, 0, 0.485994,-99) , 
13, 1.5, 0, 0, 0.508372,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0118694);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524905,-99) , 
7, 29.6368, 1, 0, 0.595834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316323,-99) , 
0, 13.5, 1, 0, 0.490756,-99) , 
7, 13.0237, 0, 0, 0.566924,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398296,-99) , 
4, 1.72361, 1, 0, 0.523106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303622,-99) , 
2, 17.5, 0, 0, 0.423727,-99) , 
1, 13.5, 1, 0, 0.487148,-99) , 
6, 0.593303, 1, 0, 0.530497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284127,-99) , 
5, 2.29449, 1, 0, 0.521961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339863,-99) , 
4, 0.823104, 1, 0, 0.459187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.105263,-99) , 
1, 21.5, 0, 0, 0.394386,-99) , 
7, 63.883, 1, 0, 0.505666,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0121966);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547535,-99) , 
3, 0.991729, 1, 0, 0.628751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484128,-99) , 
5, 1.15192, 0, 0, 0.590076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430901,-99) , 
5, 2.0729, 1, 0, 0.566892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353925,-99) , 
9, 358.833, 1, 0, 0.545845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420966,-99) , 
8, 2.24462, 1, 0, 0.514015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366374,-99) , 
8, 2.46737, 0, 0, 0.424886,-99) , 
9, 55.9809, 0, 0, 0.48884,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113559,-99) , 
2, 31.5, 0, 0, 0.431922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0419933,-99) , 
1, 14.5, 0, 0, 0.37753,-99) , 
0, 40.5, 1, 0, 0.471609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205978,-99) , 
2, 6.5, 0, 0, 0.464443,-99) , 
13, 1.5, 0, 0, 0.490012,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0079395);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530143,-99) , 
4, 0.943656, 1, 0, 0.647235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460207,-99) , 
2, 13.5, 0, 0, 0.636723,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40322,-99) , 
5, 1.92311, 1, 0, 0.495505,-99) , 
4, 2.04034, 0, 0, 0.504013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182966,-99) , 
0, 53.5, 1, 0, 0.495323,-99) , 
2, 42.5, 0, 0, 0.508931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204043,-99) , 
7, 221.1, 1, 0, 0.50545,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0110913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401672,-99) , 
7, 23.8047, 1, 0, 0.69968,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437446,-99) , 
6, 0.490411, 1, 0, 0.522067,-99) , 
4, 1.6372, 0, 0, 0.59131,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501431,-99) , 
11, 0.316687, 0, 0, 0.536736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298317,-99) , 
10, 0.234452, 1, 0, 0.429042,-99) , 
12, -6.55942, 0, 0, 0.518045,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469228,-99) , 
4, 1.56856, 1, 0, 0.548941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333309,-99) , 
8, 0.605647, 1, 0, 0.39421,-99) , 
13, 1.5, 0, 0, 0.446569,-99) , 
5, 1.71591, 1, 0, 0.489855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248299,-99) , 
2, 6.5, 0, 0, 0.484052,-99) , 
12, -4371.15, 1, 0, 0.498714,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0100928);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540101,-99) , 
6, 0.773121, 1, 0, 0.653625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287743,-99) , 
4, 2.04417, 1, 0, 0.572048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352897,-99) , 
9, 56.2647, 0, 0, 0.477119,-99) , 
12, 2478.96, 1, 0, 0.523994,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465496,-99) , 
2, 17.5, 0, 0, 0.521843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211462,-99) , 
5, 1.55948, 1, 0, 0.364965,-99) , 
9, 105.366, 1, 0, 0.447212,-99) , 
8, 1.89263, 1, 0, 0.500383,-99) , 
11, -8.06207, 1, 0, 0.508503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318335,-99) , 
3, 0.99962, 1, 0, 0.502205,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0116962);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524303,-99) , 
11, -0.414149, 1, 0, 0.580086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372435,-99) , 
7, 22.2066, 0, 0, 0.560645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323886,-99) , 
3, 0.999448, 1, 0, 0.544276,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486701,-99) , 
7, 20.5709, 0, 0, 0.50731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141882,-99) , 
7, 12.6746, 0, 0, 0.327129,-99) , 
4, 1.82159, 1, 0, 0.488191,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251464,-99) , 
2, 13.5, 0, 0, 0.348047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0330064,-99) , 
5, 1.97634, 1, 0, 0.316471,-99) , 
7, 25.3352, 1, 0, 0.461705,-99) , 
2, 17.5, 0, 0, 0.493578,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228439,-99) , 
2, 14.5, 1, 0, 0.342164,-99) , 
9, 460.99, 1, 0, 0.485153,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00587146);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627881,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483553,-99) , 
4, 0.858972, 1, 0, 0.544884,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322241,-99) , 
7, 29.5639, 1, 0, 0.468959,-99) , 
2, 21.5, 0, 0, 0.490339,-99) , 
10, 0.027435, 1, 0, 0.496598,-99) , 
11, -8.14074, 1, 0, 0.503299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301993,-99) , 
3, 0.99962, 1, 0, 0.497311,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00850661);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571406,-99) , 
5, 1.49213, 1, 0, 0.622234,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424461,-99) , 
6, 0.161548, 0, 0, 0.505839,-99) , 
13, 0.5, 0, 0, 0.579682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409189,-99) , 
10, 0.0605338, 0, 0, 0.555061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656523,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308153,-99) , 
9, 409.615, 1, 0, 0.489592,-99) , 
12, -11016.1, 1, 0, 0.500697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225282,-99) , 
10, 0.180003, 1, 0, 0.353802,-99) , 
6, 0.381417, 0, 0, 0.485483,-99) , 
6, 0.297409, 1, 0, 0.508099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326474,-99) , 
2, 7.5, 0, 0, 0.500286,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00485459);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663906,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4951,-99) , 
11, 6.47579, 0, 0, 0.506702,-99) , 
11, -10.1546, 1, 0, 0.513788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250532,-99) , 
7, 192.747, 1, 0, 0.509837,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296222,-99) , 
8, 1.78998, 1, 0, 0.415706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15672,-99) , 
4, 1.81444, 1, 0, 0.396964,-99) , 
9, 350.007, 1, 0, 0.498874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323263,-99) , 
7, 8.04673, 0, 0, 0.491413,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0081426);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558608,-99) , 
9, 158.329, 1, 0, 0.659089,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379653,-99) , 
7, 39.5956, 1, 0, 0.534744,-99) , 
0, 48.5, 0, 0, 0.555079,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36474,-99) , 
4, 1.69293, 1, 0, 0.486698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223798,-99) , 
5, 2.28775, 1, 0, 0.477159,-99) , 
11, -0.767837, 1, 0, 0.507125,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541944,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265856,-99) , 
9, 159.124, 1, 0, 0.401445,-99) , 
11, 6.8995, 0, 0, 0.441373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288741,-99) , 
4, 1.67019, 1, 0, 0.41419,-99) , 
3, 0.997518, 1, 0, 0.492309,-99) , 
11, -8.07372, 1, 0, 0.503112,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00925872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456835,-99) , 
9, 65.5906, 0, 0, 0.543611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330083,-99) , 
5, 2.05411, 1, 0, 0.522723,-99) , 
8, 0.281408, 1, 0, 0.549921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349065,-99) , 
7, 80.186, 1, 0, 0.534317,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655826,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4156,-99) , 
9, 228.559, 1, 0, 0.545076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354144,-99) , 
11, 0.0889344, 1, 0, 0.512082,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396708,-99) , 
11, -0.959475, 1, 0, 0.446384,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199385,-99) , 
13, 0.5, 1, 0, 0.306301,-99) , 
5, 1.90823, 1, 0, 0.424724,-99) , 
13, 1.5, 0, 0, 0.44943,-99) , 
9, 18.9319, 1, 0, 0.457945,-99) , 
12, 1557.31, 1, 0, 0.485153,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0110169);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619715,-99) , 
11, 0.315584, 0, 0, 0.685248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423173,-99) , 
5, 2.28606, 1, 0, 0.660147,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475391,-99) , 
10, 0.327684, 1, 0, 0.54259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305353,-99) , 
7, 8.75102, 0, 0, 0.527106,-99) , 
6, 0.217798, 1, 0, 0.561204,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459858,-99) , 
8, 0.915335, 1, 0, 0.572679,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416704,-99) , 
10, 0.54927, 0, 0, 0.464921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253827,-99) , 
8, 0.531285, 0, 0, 0.417011,-99) , 
9, 154.27, 0, 0, 0.474123,-99) , 
13, 0.5, 0, 0, 0.533113,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586596,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323681,-99) , 
1, 6.5, 0, 0, 0.470006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238227,-99) , 
6, 0.981764, 1, 0, 0.45404,-99) , 
6, 1.00709, 0, 0, 0.472891,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284396,-99) , 
7, 88.8829, 1, 0, 0.457113,-99) , 
3, 0.994221, 1, 0, 0.506691,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00693929);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522566,-99) , 
1, 20.5, 1, 0, 0.604437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484141,-99) , 
5, 2.07245, 1, 0, 0.587731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441149,-99) , 
11, 5.85781, 1, 0, 0.571057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510266,-99) , 
9, 100.652, 0, 0, 0.590842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407319,-99) , 
5, 1.84767, 1, 0, 0.480878,-99) , 
11, 3.93585, 0, 0, 0.502516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327592,-99) , 
6, 1.07442, 1, 0, 0.492305,-99) , 
13, 1.5, 0, 0, 0.517217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314129,-99) , 
3, 0.737073, 0, 0, 0.509317,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0092172);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641253,-99) , 
1, 12.5, 0, 0, 0.705176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456023,-99) , 
9, 118.211, 1, 0, 0.550397,-99) , 
6, 0.594938, 1, 0, 0.62915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411358,-99) , 
7, 52.9796, 1, 0, 0.593403,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692789,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485332,-99) , 
6, 1.00678, 0, 0, 0.502978,-99) , 
3, 0.889645, 1, 0, 0.518224,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369291,-99) , 
3, 0.992557, 1, 0, 0.483481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323023,-99) , 
8, 0.54536, 1, 0, 0.37432,-99) , 
11, -0.359017, 1, 0, 0.449973,-99) , 
11, 0.558388, 0, 0, 0.485656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218298,-99) , 
5, 2.39543, 1, 0, 0.481186,-99) , 
12, 8493.46, 0, 0, 0.500486,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0129488);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58743,-99) , 
7, 53.6796, 1, 0, 0.689845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506314,-99) , 
10, 0.189055, 0, 0, 0.651674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473101,-99) , 
1, 37.5, 1, 0, 0.611962,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3966,-99) , 
2, 74.5, 0, 0, 0.483181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 17.5, 0, 0, 0.412208,-99) , 
7, 96.3875, 1, 0, 0.565266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480758,-99) , 
9, 153.309, 1, 0, 0.590035,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225409,-99) , 
5, 2.36524, 1, 0, 0.477625,-99) , 
12, 8628.58, 0, 0, 0.494174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201181,-99) , 
7, 40.3792, 1, 0, 0.484189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174468,-99) , 
1, 24.5, 1, 0, 0.471498,-99) , 
2, 21.5, 0, 0, 0.498005,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0133891);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483807,-99) , 
8, 0.649859, 0, 0, 0.622396,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344238,-99) , 
3, 0.946089, 0, 0, 0.509758,-99) , 
4, 1.07229, 1, 0, 0.554238,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517814,-99) , 
5, 1.85976, 0, 0, 0.586949,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290075,-99) , 
3, 0.996371, 1, 0, 0.441751,-99) , 
1, 7.5, 1, 0, 0.474588,-99) , 
7, 14.6522, 0, 0, 0.516623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245722,-99) , 
5, 2.36255, 1, 0, 0.510179,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526847,-99) , 
2, 55.5, 0, 0, 0.560549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358422,-99) , 
7, 143.092, 1, 0, 0.533587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314516,-99) , 
9, 287.73, 1, 0, 0.506412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407184,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106143,-99) , 
7, 41.0491, 1, 0, 0.221729,-99) , 
3, 0.973196, 1, 0, 0.293918,-99) , 
2, 21.5, 0, 0, 0.442804,-99) , 
7, 30.9461, 1, 0, 0.489112,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0176217);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.776846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568014,-99) , 
7, 34.2688, 1, 0, 0.681452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522053,-99) , 
7, 15.8621, 0, 0, 0.631134,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478167,-99) , 
6, 0.771913, 1, 0, 0.566249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316892,-99) , 
10, 0.212464, 0, 0, 0.41292,-99) , 
11, -0.314442, 1, 0, 0.521774,-99) , 
12, 1430.86, 1, 0, 0.558087,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369183,-99) , 
8, 1.70937, 0, 0, 0.442856,-99) , 
5, 0.827197, 0, 0, 0.536817,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151137,-99) , 
5, 2.30241, 1, 0, 0.510391,-99) , 
8, 0.0607444, 1, 0, 0.560842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339531,-99) , 
9, 31.7761, 0, 0, 0.53966,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428365,-99) , 
11, -0.13259, 1, 0, 0.528466,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580648,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354553,-99) , 
11, 0.152773, 0, 0, 0.467629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174205,-99) , 
8, 1.47191, 1, 0, 0.269733,-99) , 
4, 1.2829, 1, 0, 0.346795,-99) , 
9, 47.6277, 1, 0, 0.401066,-99) , 
8, 0.711428, 1, 0, 0.470905,-99) , 
5, 1.65738, 1, 0, 0.50675,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00895592);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746096,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457846,-99) , 
7, 11.0336, 0, 0, 0.577202,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378715,-99) , 
2, 20.5, 0, 0, 0.47486,-99) , 
10, 0.249723, 1, 0, 0.533704,-99) , 
5, 2.10226, 0, 0, 0.553681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346705,-99) , 
4, 2.00927, 1, 0, 0.541687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482471,-99) , 
7, 127.887, 1, 0, 0.622785,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39319,-99) , 
5, 1.99709, 1, 0, 0.488376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301922,-99) , 
7, 64.9332, 1, 0, 0.478016,-99) , 
2, 48.5, 0, 0, 0.490129,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400124,-99) , 
9, 102.703, 1, 0, 0.473138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219989,-99) , 
9, 99.3383, 1, 0, 0.288972,-99) , 
8, 0.995585, 1, 0, 0.377859,-99) , 
12, 1864.49, 0, 0, 0.473485,-99) , 
12, 418.644, 1, 0, 0.493158,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00986706);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560115,-99) , 
5, 1.53922, 1, 0, 0.656764,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413477,-99) , 
2, 28.5, 0, 0, 0.468004,-99) , 
12, -8005.13, 0, 0, 0.576565,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.775543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514462,-99) , 
4, 0.831561, 1, 0, 0.629648,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294782,-99) , 
10, 1.25099, 1, 0, 0.506359,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274395,-99) , 
8, 1.06613, 0, 0, 0.395443,-99) , 
5, 1.16193, 0, 0, 0.483955,-99) , 
2, 42.5, 0, 0, 0.495892,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21956,-99) , 
11, -5.08513, 1, 0, 0.346197,-99) , 
3, 0.998898, 1, 0, 0.484569,-99) , 
12, -3107.46, 1, 0, 0.497639,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.012793);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562123,-99) , 
1, 20.5, 1, 0, 0.664836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500528,-99) , 
5, 1.90868, 1, 0, 0.624958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484868,-99) , 
4, 0.428681, 0, 0, 0.600466,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417096,-99) , 
9, 216.239, 1, 0, 0.544419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339149,-99) , 
10, 1.03359, 1, 0, 0.523137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235389,-99) , 
0, 16.5, 0, 0, 0.339029,-99) , 
3, 0.994502, 0, 0, 0.463158,-99) , 
3, 0.987702, 1, 0, 0.525644,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581988,-99) , 
8, 1.29315, 0, 0, 0.653969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45339,-99) , 
10, 0.120468, 0, 0, 0.593106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339937,-99) , 
7, 61.527, 1, 0, 0.557912,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325444,-99) , 
11, -0.000109118, 0, 0, 0.454654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251942,-99) , 
5, 2.24217, 1, 0, 0.444257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178981,-99) , 
3, 0.998857, 1, 0, 0.431016,-99) , 
11, 5.33046, 0, 0, 0.460508,-99) , 
11, -0.411366, 1, 0, 0.489892,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0100653);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541525,-99) , 
0, 17.5, 0, 0, 0.627507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359082,-99) , 
7, 85.4726, 1, 0, 0.601006,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510952,-99) , 
5, 1.40202, 0, 0, 0.602217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37056,-99) , 
12, 2136.04, 0, 0, 0.509055,-99) , 
11, 1.42, 0, 0, 0.537532,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141742,-99) , 
5, 2.34304, 1, 0, 0.477277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0712523,-99) , 
7, 49.0875, 1, 0, 0.464763,-99) , 
1, 14.5, 0, 0, 0.497674,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202484,-99) , 
11, -5.20867, 1, 0, 0.339471,-99) , 
3, 0.999006, 1, 0, 0.48622,-99) , 
11, 6.51192, 0, 0, 0.49695,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00562608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515252,-99) , 
9, 192.27, 0, 0, 0.596567,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180045,-99) , 
5, 2.36124, 1, 0, 0.516323,-99) , 
8, 0.230455, 1, 0, 0.528074,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322478,-99) , 
3, 0.986587, 1, 0, 0.405935,-99) , 
9, 24.0891, 0, 0, 0.52058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253425,-99) , 
2, 6.5, 0, 0, 0.515404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267207,-99) , 
3, 0.999786, 1, 0, 0.510441,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00658803);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600824,-99) , 
3, 0.956582, 1, 0, 0.692537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527897,-99) , 
9, 68.6523, 0, 0, 0.642921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469975,-99) , 
3, 0.993171, 1, 0, 0.584585,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650888,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455312,-99) , 
5, 1.62318, 1, 0, 0.494099,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395486,-99) , 
11, -7.05691, 1, 0, 0.419109,-99) , 
3, 0.996049, 1, 0, 0.474008,-99) , 
11, -10.8256, 1, 0, 0.482118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280118,-99) , 
3, 0.763607, 0, 0, 0.473865,-99) , 
6, 0.0907539, 1, 0, 0.487894,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00960657);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49664,-99) , 
9, 82.5279, 0, 0, 0.546013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231833,-99) , 
0, 19.5, 0, 0, 0.475151,-99) , 
7, 30.5644, 1, 0, 0.52225,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603973,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164958,-99) , 
9, 71.2898, 1, 0, 0.323145,-99) , 
8, 0.161919, 1, 0, 0.424278,-99) , 
5, 2.06567, 1, 0, 0.510184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298289,-99) , 
7, 7.25003, 0, 0, 0.504267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19996,-99) , 
1, 84.5, 1, 0, 0.499171,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00783599);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547659,-99) , 
0, 89.5, 0, 0, 0.642686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219618,-99) , 
1, 17.5, 0, 0, 0.60776,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503588,-99) , 
7, 51.4206, 1, 0, 0.597623,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198227,-99) , 
7, 58.6722, 1, 0, 0.470004,-99) , 
2, 28.5, 0, 0, 0.480018,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125364,-99) , 
2, 23.5, 0, 0, 0.338224,-99) , 
1, 34.5, 1, 0, 0.472077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117625,-99) , 
7, 109.341, 1, 0, 0.46688,-99) , 
2, 51.5, 0, 0, 0.477817,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0114299);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663721,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509826,-99) , 
3, 0.952022, 0, 0, 0.575116,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434094,-99) , 
11, 5.39282, 0, 0, 0.474764,-99) , 
3, 0.990342, 1, 0, 0.534079,-99) , 
11, -5.66378, 1, 0, 0.548952,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391042,-99) , 
8, 0.966331, 1, 0, 0.552732,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370281,-99) , 
10, 0.236668, 0, 0, 0.433465,-99) , 
12, 424.542, 1, 0, 0.470479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0203072,-99) , 
0, 103.5, 1, 0, 0.463396,-99) , 
5, 1.67205, 1, 0, 0.513033,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490319,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211673,-99) , 
5, 1.5711, 1, 0, 0.291093,-99) , 
4, 1.63788, 0, 0, 0.352894,-99) , 
9, 29.5036, 0, 0, 0.498221,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00653795);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66278,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491804,-99) , 
4, 1.09479, 1, 0, 0.588464,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109821,-99) , 
0, 52.5, 1, 0, 0.468444,-99) , 
2, 36.5, 0, 0, 0.476795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219183,-99) , 
7, 104.718, 1, 0, 0.470241,-99) , 
2, 66.5, 0, 0, 0.478705,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183072,-99) , 
3, 0.999788, 1, 0, 0.473575,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00611277);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691209,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
2, 21.5, 0, 0, 0.508793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161606,-99) , 
7, 106.029, 1, 0, 0.503033,-99) , 
2, 54.5, 0, 0, 0.511622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315426,-99) , 
1, 70.5, 1, 0, 0.505111,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374908,-99) , 
11, -0.432719, 1, 0, 0.446975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273747,-99) , 
8, 1.92779, 1, 0, 0.394733,-99) , 
7, 10.1368, 0, 0, 0.491446,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0109236);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683144,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548652,-99) , 
3, 0.903135, 1, 0, 0.574966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356577,-99) , 
10, 0.119021, 1, 0, 0.423441,-99) , 
5, 1.8789, 1, 0, 0.549877,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419381,-99) , 
3, 0.988447, 0, 0, 0.535569,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349689,-99) , 
6, 0.618038, 1, 0, 0.428406,-99) , 
2, 23.5, 0, 0, 0.467839,-99) , 
5, 1.2288, 0, 0, 0.512998,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249832,-99) , 
0, 19.5, 1, 0, 0.514269,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277577,-99) , 
1, 15.5, 0, 0, 0.388542,-99) , 
7, 20.5073, 1, 0, 0.460685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178975,-99) , 
2, 7.5, 0, 0, 0.449337,-99) , 
4, 1.29127, 1, 0, 0.485525,-99) , 
12, 25866, 0, 0, 0.490456,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0134487);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793532,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559113,-99) , 
5, 1.82831, 0, 0, 0.624995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390017,-99) , 
3, 0.862668, 1, 0, 0.473963,-99) , 
3, 0.953902, 0, 0, 0.570321,-99) , 
2, 55.5, 0, 0, 0.606614,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653417,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422834,-99) , 
8, 0.830303, 1, 0, 0.482252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254422,-99) , 
1, 54.5, 1, 0, 0.456906,-99) , 
6, 0.135275, 1, 0, 0.496177,-99) , 
9, 90.1485, 1, 0, 0.546145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474551,-99) , 
7, 10.8785, 1, 0, 0.580434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327271,-99) , 
7, 10.8196, 0, 0, 0.467201,-99) , 
0, 10.5, 1, 0, 0.489471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300846,-99) , 
5, 2.15685, 1, 0, 0.476806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137801,-99) , 
7, 59.0911, 1, 0, 0.464781,-99) , 
1, 14.5, 0, 0, 0.499051,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00932209);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694012,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490754,-99) , 
7, 16.0207, 0, 0, 0.565163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404927,-99) , 
5, 0.720324, 0, 0, 0.543024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351792,-99) , 
7, 59.9409, 1, 0, 0.523123,-99) , 
0, 63.5, 0, 0, 0.540932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61071,-99) , 
3, 0.987288, 1, 0, 0.664933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458084,-99) , 
13, 0.5, 0, 0, 0.598776,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225463,-99) , 
5, 2.49724, 1, 0, 0.482267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118182,-99) , 
0, 28.5, 1, 0, 0.471139,-99) , 
2, 21.5, 0, 0, 0.492545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298076,-99) , 
7, 65.0846, 1, 0, 0.477595,-99) , 
5, 1.54221, 1, 0, 0.506245,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00622151);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565843,-99) , 
1, 12.5, 1, 0, 0.632631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513604,-99) , 
6, 0.0733497, 1, 0, 0.523698,-99) , 
11, 2.85809, 0, 0, 0.539646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338609,-99) , 
5, 2.36561, 1, 0, 0.534439,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704649,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44914,-99) , 
7, 17.2237, 1, 0, 0.582269,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421097,-99) , 
5, 0.954163, 1, 0, 0.440822,-99) , 
1, 7.5, 1, 0, 0.466208,-99) , 
12, 23569.8, 0, 0, 0.477849,-99) , 
3, 0.992772, 1, 0, 0.511188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330781,-99) , 
5, 0.310764, 0, 0, 0.504472,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0153628);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649261,-99) , 
11, 7.47471, 1, 0, 0.710455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500579,-99) , 
6, 0.921845, 1, 0, 0.640131,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.805314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545282,-99) , 
8, 1.0587, 1, 0, 0.696692,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493131,-99) , 
9, 72.5861, 1, 0, 0.53889,-99) , 
3, 0.986491, 1, 0, 0.579618,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452803,-99) , 
5, 1.48212, 1, 0, 0.490221,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253739,-99) , 
1, 11.5, 1, 0, 0.355285,-99) , 
3, 0.992252, 1, 0, 0.465419,-99) , 
11, -1.88379, 1, 0, 0.506988,-99) , 
11, 5.21576, 0, 0, 0.525438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505909,-99) , 
12, 3842.39, 0, 0, 0.602306,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429663,-99) , 
6, 0.604141, 1, 0, 0.531527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284841,-99) , 
1, 28.5, 1, 0, 0.450283,-99) , 
2, 48.5, 0, 0, 0.502161,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29622,-99) , 
5, 1.83128, 1, 0, 0.415019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196972,-99) , 
8, 0.574629, 0, 0, 0.352647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111896,-99) , 
7, 86.568, 1, 0, 0.329321,-99) , 
1, 14.5, 0, 0, 0.445118,-99) , 
10, 0.481779, 1, 0, 0.503973,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00919052);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484797,-99) , 
9, 58.2787, 0, 0, 0.583075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350256,-99) , 
9, 108.31, 1, 0, 0.471179,-99) , 
8, 1.95092, 1, 0, 0.549207,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63501,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428373,-99) , 
11, 5.76084, 0, 0, 0.463064,-99) , 
11, -10.2795, 1, 0, 0.477634,-99) , 
3, 0.990342, 1, 0, 0.517029,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552887,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328622,-99) , 
6, 0.379794, 1, 0, 0.393449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.14119, 1, 0, 0.369158,-99) , 
9, 183.005, 0, 0, 0.41656,-99) , 
7, 9.95267, 0, 0, 0.505401,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256045,-99) , 
8, 0.616544, 1, 0, 0.371404,-99) , 
9, 396.909, 1, 0, 0.496584,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00492139);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517329,-99) , 
9, 46.7215, 1, 0, 0.529354,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369742,-99) , 
4, 1.62494, 0, 0, 0.424745,-99) , 
9, 33.3352, 0, 0, 0.517029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351043,-99) , 
2, 7.5, 0, 0, 0.5094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336279,-99) , 
7, 137.147, 1, 0, 0.503179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0968616,-99) , 
5, 2.57137, 1, 0, 0.499944,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.01221);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513996,-99) , 
5, 0.719112, 0, 0, 0.648486,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375561,-99) , 
2, 17.5, 0, 0, 0.529033,-99) , 
4, 1.10373, 1, 0, 0.593442,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256695,-99) , 
0, 19.5, 1, 0, 0.426198,-99) , 
7, 20.8175, 0, 0, 0.558208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367774,-99) , 
1, 55.5, 1, 0, 0.537529,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345241,-99) , 
10, 0.66619, 1, 0, 0.490793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299787,-99) , 
7, 6.98871, 0, 0, 0.481609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201826,-99) , 
5, 2.28813, 1, 0, 0.472093,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.088962,-99) , 
7, 86.568, 1, 0, 0.259308,-99) , 
7, 33.5625, 1, 0, 0.449366,-99) , 
1, 14.5, 0, 0, 0.487525,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00542154);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437099,-99) , 
6, 0.877904, 1, 0, 0.608187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494323,-99) , 
2, 60.5, 0, 0, 0.504074,-99) , 
10, 0.0702027, 1, 0, 0.52042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323731,-99) , 
7, 7.37056, 0, 0, 0.514684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31002,-99) , 
9, 596.675, 1, 0, 0.50967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21325,-99) , 
3, 0.999785, 1, 0, 0.50506,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00679787);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689688,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487793,-99) , 
6, 0.415858, 1, 0, 0.517296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384527,-99) , 
9, 29.558, 0, 0, 0.505526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396953,-99) , 
8, 0.0858873, 1, 0, 0.437641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182585,-99) , 
3, 0.998277, 1, 0, 0.409108,-99) , 
5, 1.92956, 1, 0, 0.487506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236927,-99) , 
1, 5.5, 0, 0, 0.481476,-99) , 
4, 2.19234, 0, 0, 0.488233,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0103836);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.803927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692767,-99) , 
6, 0.721539, 1, 0, 0.747703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594445,-99) , 
8, 1.12532, 0, 0, 0.670868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499506,-99) , 
10, 2.79646, 1, 0, 0.631789,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31005,-99) , 
5, 1.62889, 1, 0, 0.469631,-99) , 
7, 44.2908, 1, 0, 0.561187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345345,-99) , 
8, 1.83746, 1, 0, 0.502564,-99) , 
9, 103.137, 1, 0, 0.56969,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502038,-99) , 
5, 1.34513, 1, 0, 0.524487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385617,-99) , 
9, 24.1173, 0, 0, 0.515961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197952,-99) , 
5, 2.3653, 1, 0, 0.509035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22404,-99) , 
7, 44.0577, 1, 0, 0.496138,-99) , 
2, 23.5, 0, 0, 0.515304,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0102225);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504269,-99) , 
3, 0.957469, 0, 0, 0.591909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38191,-99) , 
10, 0.389191, 1, 0, 0.450333,-99) , 
8, 0.498249, 0, 0, 0.560297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304954,-99) , 
13, 1.5, 0, 0, 0.431101,-99) , 
5, 1.97563, 1, 0, 0.533999,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446607,-99) , 
9, 71.5318, 1, 0, 0.480351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31254,-99) , 
9, 26.173, 0, 0, 0.466578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23363,-99) , 
4, 2.07994, 1, 0, 0.455093,-99) , 
6, 0.595438, 1, 0, 0.497132,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477479,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242858,-99) , 
1, 12.5, 0, 0, 0.316809,-99) , 
5, 1.51091, 1, 0, 0.383874,-99) , 
9, 277.389, 1, 0, 0.480882,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0102814);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659367,-99) , 
12, 2984.89, 1, 0, 0.708373,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533778,-99) , 
3, 0.99595, 0, 0, 0.600431,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338593,-99) , 
12, 4145.33, 1, 0, 0.476381,-99) , 
2, 12.5, 0, 0, 0.541331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389327,-99) , 
7, 52.7416, 1, 0, 0.520865,-99) , 
4, 0.669445, 1, 0, 0.556961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510373,-99) , 
2, 23.5, 0, 0, 0.549275,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427538,-99) , 
12, 248.887, 1, 0, 0.459148,-99) , 
9, 108.869, 1, 0, 0.500613,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301835,-99) , 
8, 1.0264, 1, 0, 0.363301,-99) , 
9, 33.1078, 0, 0, 0.486023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233835,-99) , 
3, 0.748463, 0, 0, 0.476871,-99) , 
13, 1.5, 0, 0, 0.500255,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00825922);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734384,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356595,-99) , 
3, 0.946501, 0, 0, 0.548774,-99) , 
3, 0.892293, 1, 0, 0.572105,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430178,-99) , 
8, 0.467076, 0, 0, 0.542558,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363302,-99) , 
8, 1.03161, 1, 0, 0.45772,-99) , 
5, 1.64661, 1, 0, 0.504124,-99) , 
13, 1.5, 0, 0, 0.525298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257009,-99) , 
7, 6.59311, 0, 0, 0.521168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0904863,-99) , 
7, 249.298, 1, 0, 0.51766,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00781103);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396321,-99) , 
1, 6.5, 0, 0, 0.514479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320017,-99) , 
1, 71.5, 1, 0, 0.508254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283293,-99) , 
4, 1.07527, 1, 0, 0.395626,-99) , 
3, 0.841936, 0, 0, 0.499327,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61651,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19137,-99) , 
9, 63.6742, 1, 0, 0.288798,-99) , 
8, 0.137298, 1, 0, 0.370983,-99) , 
4, 1.7722, 1, 0, 0.485427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239545,-99) , 
7, 7.51227, 0, 0, 0.478505,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0169543);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702379,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523409,-99) , 
5, 1.53997, 0, 0, 0.544935,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302236,-99) , 
9, 123.266, 0, 0, 0.436108,-99) , 
8, 0.577883, 0, 0, 0.519475,-99) , 
2, 47.5, 0, 0, 0.533677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380288,-99) , 
6, 1.03748, 0, 0, 0.472984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30214,-99) , 
3, 0.994336, 1, 0, 0.408498,-99) , 
6, 0.962355, 1, 0, 0.501358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423667,-99) , 
11, -2.90505, 1, 0, 0.483498,-99) , 
8, 0.0792446, 1, 0, 0.538105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227767,-99) , 
9, 41.8257, 0, 0, 0.501028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422803,-99) , 
0, 12.5, 1, 0, 0.471562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178835,-99) , 
3, 0.999065, 1, 0, 0.451849,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176849,-99) , 
5, 2.00632, 1, 0, 0.331159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.116052,-99) , 
8, 2.0102, 1, 0, 0.256435,-99) , 
9, 120.633, 1, 0, 0.379038,-99) , 
8, 0.58985, 1, 0, 0.431647,-99) , 
5, 1.64819, 1, 0, 0.470911,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00466792);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516649,-99) , 
8, 1.07659, 1, 0, 0.638313,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475648,-99) , 
3, 0.988678, 1, 0, 0.511425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353915,-99) , 
1, 6.5, 0, 0, 0.504242,-99) , 
11, -8.15889, 1, 0, 0.512366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125118,-99) , 
7, 219.989, 1, 0, 0.509708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294613,-99) , 
1, 70.5, 1, 0, 0.503786,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0115898);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57085,-99) , 
11, 0.221374, 0, 0, 0.670595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521935,-99) , 
7, 78.422, 1, 0, 0.620256,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410037,-99) , 
10, 0.446067, 1, 0, 0.515616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130083,-99) , 
0, 36.5, 1, 0, 0.499023,-99) , 
2, 24.5, 0, 0, 0.524244,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460454,-99) , 
8, 0.728781, 0, 0, 0.598595,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447994,-99) , 
4, 1.92434, 0, 0, 0.468955,-99) , 
3, 0.998567, 0, 0, 0.504269,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362683,-99) , 
5, 1.37972, 1, 0, 0.461603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21847,-99) , 
1, 12.5, 0, 0, 0.401921,-99) , 
7, 28.4825, 1, 0, 0.465252,-99) , 
3, 0.986459, 1, 0, 0.493855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273603,-99) , 
7, 7.25003, 0, 0, 0.489305,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0121055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560013,-99) , 
11, 3.96283, 0, 0, 0.592429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448566,-99) , 
5, 0.96608, 0, 0, 0.571055,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487038,-99) , 
6, 0.212433, 1, 0, 0.526379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314605,-99) , 
2, 12.5, 0, 0, 0.484089,-99) , 
10, 0.290242, 1, 0, 0.531998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406466,-99) , 
9, 373.278, 1, 0, 0.520491,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308133,-99) , 
0, 19.5, 0, 0, 0.422904,-99) , 
9, 135.08, 0, 0, 0.525763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408305,-99) , 
4, 1.99756, 0, 0, 0.439853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.078919,-99) , 
5, 2.28598, 1, 0, 0.412722,-99) , 
8, 0.407948, 1, 0, 0.458912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0618491,-99) , 
7, 117.601, 1, 0, 0.448287,-99) , 
5, 1.83695, 1, 0, 0.500443,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0127819);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574108,-99) , 
1, 11.5, 0, 0, 0.658341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42332,-99) , 
9, 220.157, 1, 0, 0.602604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566507,-99) , 
2, 19.5, 0, 0, 0.616758,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42864,-99) , 
3, 0.957379, 0, 0, 0.489815,-99) , 
8, 0.880134, 1, 0, 0.540988,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486912,-99) , 
10, 0.0958791, 1, 0, 0.529642,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364704,-99) , 
13, 1.5, 0, 0, 0.401111,-99) , 
11, 2.7104, 0, 0, 0.462344,-99) , 
3, 0.986281, 1, 0, 0.504964,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399039,-99) , 
9, 77.1154, 1, 0, 0.534168,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204731,-99) , 
10, 0.467674, 1, 0, 0.357951,-99) , 
4, 1.95952, 0, 0, 0.447084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0893838,-99) , 
2, 9.5, 0, 0, 0.404129,-99) , 
4, 1.73025, 1, 0, 0.490361,-99) , 
11, -5.90795, 1, 0, 0.504046,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0133452);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556104,-99) , 
6, 0.496529, 1, 0, 0.611025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431824,-99) , 
4, 1.97869, 0, 0, 0.499326,-99) , 
5, 1.75651, 1, 0, 0.575943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414246,-99) , 
9, 334.507, 1, 0, 0.557572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38102,-99) , 
4, 0.344924, 0, 0, 0.515955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.3012, 1, 0, 0.503437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117844,-99) , 
2, 11.5, 0, 0, 0.286198,-99) , 
7, 24.474, 1, 0, 0.474477,-99) , 
2, 15.5, 0, 0, 0.510987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226126,-99) , 
12, 9113.94, 0, 0, 0.312664,-99) , 
11, 7.075, 0, 0, 0.391112,-99) , 
3, 0.999083, 1, 0, 0.500063,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0100151);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498122,-99) , 
2, 29.5, 0, 0, 0.524931,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 1.69055, 1, 0, 0.39174,-99) , 
3, 0.997075, 1, 0, 0.504361,-99) , 
11, -6.9615, 1, 0, 0.513183,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458607,-99) , 
11, -4.73775, 1, 0, 0.486022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240125,-99) , 
3, 0.993401, 0, 0, 0.347501,-99) , 
5, 1.88857, 1, 0, 0.456358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124873,-99) , 
7, 40.5481, 1, 0, 0.43821,-99) , 
1, 10.5, 0, 0, 0.488151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.53262, 1, 0, 0.485105,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0119993);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57653,-99) , 
8, 1.33842, 0, 0, 0.601108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429898,-99) , 
7, 65.6714, 1, 0, 0.578767,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462791,-99) , 
8, 2.85731, 0, 0, 0.503786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340124,-99) , 
9, 181.697, 1, 0, 0.465648,-99) , 
8, 1.85715, 1, 0, 0.539164,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398664,-99) , 
4, 1.62074, 1, 0, 0.511243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315129,-99) , 
6, 0.947744, 0, 0, 0.392704,-99) , 
8, 0.671554, 0, 0, 0.48116,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303909,-99) , 
12, 2932.69, 0, 0, 0.354781,-99) , 
3, 0.942357, 0, 0, 0.460902,-99) , 
6, 0.621399, 1, 0, 0.504091,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530529,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252307,-99) , 
1, 11.5, 0, 0, 0.366788,-99) , 
12, 346.208, 1, 0, 0.414266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0486289,-99) , 
5, 2.36593, 1, 0, 0.38324,-99) , 
4, 2.37977, 0, 0, 0.407673,-99) , 
5, 1.97661, 1, 0, 0.486822,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0110346);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751111,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435049,-99) , 
0, 32.5, 0, 0, 0.570542,-99) , 
1, 19.5, 1, 0, 0.611479,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.08313,-99) , 
1, 28.5, 0, 0, 0.479224,-99) , 
7, 101.762, 1, 0, 0.584202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216888,-99) , 
1, 9.5, 0, 0, 0.57159,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502415,-99) , 
5, 2.24208, 0, 0, 0.51366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254472,-99) , 
5, 2.36617, 1, 0, 0.507121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285262,-99) , 
7, 40.701, 1, 0, 0.49815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185652,-99) , 
0, 29.5, 1, 0, 0.487534,-99) , 
2, 21.5, 0, 0, 0.510993,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00608682);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514107,-99) , 
12, 5341.68, 1, 0, 0.618567,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412112,-99) , 
2, 14.5, 0, 0, 0.509922,-99) , 
3, 0.995624, 1, 0, 0.583039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447699,-99) , 
8, 0.293558, 0, 0, 0.558047,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542254,-99) , 
4, 1.6689, 0, 0, 0.587257,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349281,-99) , 
3, 0.999103, 1, 0, 0.484078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0536181,-99) , 
4, 2.04074, 1, 0, 0.47891,-99) , 
12, -5176.89, 1, 0, 0.489634,-99) , 
13, 1.5, 0, 0, 0.509919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351926,-99) , 
5, 2.3005, 1, 0, 0.503762,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00464997);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717771,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457944,-99) , 
5, 1.83228, 1, 0, 0.505767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170161,-99) , 
7, 99.5303, 1, 0, 0.499777,-99) , 
2, 61.5, 0, 0, 0.506336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151715,-99) , 
7, 216.655, 1, 0, 0.503712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307215,-99) , 
1, 76, 1, 0, 0.49912,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0125394);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567072,-99) , 
9, 76.6873, 1, 0, 0.6013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464859,-99) , 
2, 9.5, 0, 0, 0.575267,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467557,-99) , 
11, 2.71967, 0, 0, 0.53714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372242,-99) , 
10, 0.168083, 0, 0, 0.480746,-99) , 
3, 0.996269, 1, 0, 0.548824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38291,-99) , 
8, 0.168238, 0, 0, 0.536528,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757899,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450913,-99) , 
9, 364.489, 1, 0, 0.63994,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562113,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396725,-99) , 
12, -2269.49, 1, 0, 0.431002,-99) , 
13, 1.5, 0, 0, 0.474323,-99) , 
9, 246.715, 0, 0, 0.516865,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679667,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291118,-99) , 
1, 20.5, 1, 0, 0.45388,-99) , 
12, 10408.4, 0, 0, 0.489778,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30428,-99) , 
11, 0.0768301, 0, 0, 0.380002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191994,-99) , 
4, 1.57852, 1, 0, 0.318427,-99) , 
9, 124.257, 1, 0, 0.427618,-99) , 
8, 0.880134, 1, 0, 0.469379,-99) , 
4, 1.20303, 1, 0, 0.503214,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0137192);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.795253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42439,-99) , 
2, 12.5, 0, 0, 0.513709,-99) , 
6, 0.198076, 1, 0, 0.543082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387299,-99) , 
8, 2.54112, 1, 0, 0.522513,-99) , 
3, 0.890599, 1, 0, 0.552027,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482158,-99) , 
5, 1.69439, 1, 0, 0.593183,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418684,-99) , 
9, 157, 0, 0, 0.482131,-99) , 
10, 0.160741, 0, 0, 0.5156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297268,-99) , 
1, 28.5, 1, 0, 0.50398,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516865,-99) , 
11, -0.586867, 1, 0, 0.572089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241364,-99) , 
8, 1.73042, 1, 0, 0.385803,-99) , 
13, 0.5, 0, 0, 0.486653,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310878,-99) , 
7, 22.1247, 1, 0, 0.381923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.040331,-99) , 
7, 62.0528, 1, 0, 0.334907,-99) , 
1, 15.5, 0, 0, 0.42139,-99) , 
10, 0.297478, 1, 0, 0.472141,-99) , 
13, 1.5, 0, 0, 0.49634,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00709614);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171856,-99) , 
5, 2.28787, 1, 0, 0.506759,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233373,-99) , 
3, 0.984976, 1, 0, 0.3761,-99) , 
1, 34.5, 1, 0, 0.494018,-99) , 
2, 79.5, 0, 0, 0.500657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340305,-99) , 
4, 1.94396, 0, 0, 0.493756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269251,-99) , 
12, 2721.86, 0, 0, 0.400223,-99) , 
4, 1.78225, 1, 0, 0.489316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281844,-99) , 
7, 7.37181, 0, 0, 0.48418,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00746838);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512492,-99) , 
5, 1.29547, 0, 0, 0.625997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421679,-99) , 
4, 1.91225, 1, 0, 0.604402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408098,-99) , 
8, 2.58434, 1, 0, 0.576117,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514836,-99) , 
7, 82.0018, 0, 0, 0.597312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273604,-99) , 
7, 57.6725, 1, 0, 0.479437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149861,-99) , 
0, 53.5, 1, 0, 0.473484,-99) , 
2, 35.5, 0, 0, 0.485442,-99) , 
11, 3.58701, 0, 0, 0.503324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282891,-99) , 
7, 130.521, 1, 0, 0.496874,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00921375);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49677,-99) , 
4, 1.66785, 1, 0, 0.660054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4897,-99) , 
7, 11.5282, 1, 0, 0.603828,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529959,-99) , 
10, 0.0879656, 1, 0, 0.550233,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262393,-99) , 
7, 65.3745, 1, 0, 0.472027,-99) , 
5, 1.50073, 1, 0, 0.507579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315565,-99) , 
3, 0.979846, 0, 0, 0.447624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165819,-99) , 
0, 13.5, 1, 0, 0.382548,-99) , 
7, 10.9316, 0, 0, 0.495078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2676,-99) , 
3, 0.999636, 1, 0, 0.487376,-99) , 
0, 10.5, 1, 0, 0.501188,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.00876158);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475213,-99) , 
6, 0.787469, 1, 0, 0.623338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427144,-99) , 
9, 32.8895, 0, 0, 0.531685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302219,-99) , 
8, 2.39876, 1, 0, 0.459478,-99) , 
9, 107.493, 1, 0, 0.495297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234718,-99) , 
11, 1.33932, 0, 0, 0.360633,-99) , 
5, 2.1688, 1, 0, 0.485904,-99) , 
12, 13566.6, 0, 0, 0.496292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204993,-99) , 
1, 5.5, 0, 0, 0.489743,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00994901);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705845,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505013,-99) , 
6, 0.149137, 1, 0, 0.532384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395048,-99) , 
8, 0.295138, 0, 0, 0.507883,-99) , 
11, -5.75626, 1, 0, 0.526098,-99) , 
3, 0.895103, 1, 0, 0.546988,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670134,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448004,-99) , 
3, 0.987367, 1, 0, 0.510327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323361,-99) , 
1, 21.5, 1, 0, 0.480517,-99) , 
2, 34.5, 0, 0, 0.512666,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610255,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206324,-99) , 
5, 2.26918, 1, 0, 0.427206,-99) , 
12, 10834.5, 0, 0, 0.447483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285952,-99) , 
0, 37.5, 1, 0, 0.427104,-99) , 
5, 1.49866, 1, 0, 0.466003,-99) , 
13, 1.5, 0, 0, 0.490448,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0107201);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543395,-99) , 
1, 12.5, 0, 0, 0.644929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476635,-99) , 
9, 155.106, 1, 0, 0.593098,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686563,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495819,-99) , 
9, 43.2059, 1, 0, 0.534813,-99) , 
9, 250.921, 0, 0, 0.565003,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373265,-99) , 
1, 9.5, 0, 0, 0.472403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106694,-99) , 
7, 7.02814, 0, 0, 0.464435,-99) , 
12, 1292.32, 1, 0, 0.496782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381829,-99) , 
11, 10.6726, 1, 0, 0.535793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363538,-99) , 
9, 177.631, 1, 0, 0.480198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225859,-99) , 
5, 1.48634, 1, 0, 0.323388,-99) , 
11, 5.45471, 0, 0, 0.402505,-99) , 
3, 0.996575, 1, 0, 0.477746,-99) , 
11, -5.89894, 1, 0, 0.49166,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.00739898);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661309,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476068,-99) , 
9, 97.5934, 1, 0, 0.507371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207543,-99) , 
7, 6.92395, 0, 0, 0.502015,-99) , 
6, 1.04042, 0, 0, 0.509832,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263356,-99) , 
2, 30.5, 0, 0, 0.374237,-99) , 
5, 0.848424, 0, 0, 0.495611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265129,-99) , 
3, 0.999615, 1, 0, 0.48884,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0121279);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71727,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626308,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506859,-99) , 
1, 9.5, 1, 0, 0.5402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33831,-99) , 
4, 1.67698, 1, 0, 0.508664,-99) , 
9, 47.6526, 1, 0, 0.53723,-99) , 
3, 0.878318, 1, 0, 0.556917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523985,-99) , 
0, 26.5, 1, 0, 0.591852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399027,-99) , 
8, 0.617954, 0, 0, 0.554151,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320275,-99) , 
5, 1.29579, 0, 0, 0.422877,-99) , 
2, 13.5, 0, 0, 0.502771,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 143.432, 1, 0, 0.447851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188715,-99) , 
8, 2.94715, 1, 0, 0.437488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0824557,-99) , 
3, 0.999464, 1, 0, 0.42453,-99) , 
5, 1.5431, 1, 0, 0.462387,-99) , 
13, 1.5, 0, 0, 0.491453,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00705165);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605438,-99) , 
4, 1.30721, 0, 0, 0.668547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460351,-99) , 
10, 0.752613, 1, 0, 0.631896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.783032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515618,-99) , 
6, 0.623296, 1, 0, 0.622151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448761,-99) , 
0, 11.5, 0, 0, 0.573635,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475742,-99) , 
2, 56.5, 0, 0, 0.482687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26868,-99) , 
1, 83.5, 1, 0, 0.477554,-99) , 
11, 5.12941, 0, 0, 0.491957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238969,-99) , 
3, 0.99969, 1, 0, 0.487127,-99) , 
11, -6.53552, 1, 0, 0.500559,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0089385);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.798434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613012,-99) , 
9, 99.1165, 1, 0, 0.702814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485712,-99) , 
1, 33.5, 1, 0, 0.60913,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422123,-99) , 
1, 20.5, 1, 0, 0.511025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215122,-99) , 
7, 49.5224, 1, 0, 0.498644,-99) , 
2, 29.5, 0, 0, 0.512997,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155148,-99) , 
2, 54.5, 0, 0, 0.39224,-99) , 
7, 89.2442, 1, 0, 0.504013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304952,-99) , 
2, 7.5, 0, 0, 0.495999,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00878357);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537839,-99) , 
4, 1.22181, 1, 0, 0.595346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48018,-99) , 
8, 1.23388, 0, 0, 0.514563,-99) , 
10, 0.0723392, 1, 0, 0.532796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27235,-99) , 
7, 6.87565, 0, 0, 0.527645,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535747,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313386,-99) , 
9, 105.627, 1, 0, 0.402634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13011,-99) , 
5, 2.01375, 1, 0, 0.379112,-99) , 
11, -1.09573, 1, 0, 0.437034,-99) , 
8, 2.54283, 1, 0, 0.513751,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463684,-99) , 
8, 1.43906, 1, 0, 0.525248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322819,-99) , 
5, 1.52958, 1, 0, 0.462588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137019,-99) , 
2, 29.5, 0, 0, 0.406529,-99) , 
7, 60.0538, 1, 0, 0.499176,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.011105);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469831,-99) , 
6, 0.84099, 1, 0, 0.625394,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406613,-99) , 
5, 0.818327, 0, 0, 0.559505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415809,-99) , 
11, 6.67913, 0, 0, 0.460375,-99) , 
3, 0.989889, 1, 0, 0.516704,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35873,-99) , 
2, 11.5, 0, 0, 0.536504,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247936,-99) , 
12, 5927.59, 0, 0, 0.340868,-99) , 
11, 1.39427, 0, 0, 0.431943,-99) , 
5, 1.90413, 1, 0, 0.497571,-99) , 
11, -6.78561, 1, 0, 0.508739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334416,-99) , 
2, 7.5, 0, 0, 0.500958,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0159307);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499448,-99) , 
11, 3.31665, 1, 0, 0.600448,-99) , 
4, 1.05827, 0, 0, 0.642377,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482439,-99) , 
9, 117.543, 0, 0, 0.564537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343776,-99) , 
5, 1.74889, 1, 0, 0.517771,-99) , 
11, 0.244014, 0, 0, 0.577725,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535253,-99) , 
10, 0.739463, 1, 0, 0.639118,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379258,-99) , 
2, 48.5, 0, 0, 0.451631,-99) , 
12, 3432.57, 0, 0, 0.539883,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289423,-99) , 
5, 1.27214, 1, 0, 0.378446,-99) , 
2, 21.5, 0, 0, 0.48914,-99) , 
7, 28.4817, 1, 0, 0.539435,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434395,-99) , 
9, 102.532, 0, 0, 0.566637,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0643627,-99) , 
5, 2.38998, 1, 0, 0.435019,-99) , 
8, 0.248588, 1, 0, 0.463865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0327922,-99) , 
3, 0.999714, 1, 0, 0.454662,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106025,-99) , 
9, 520.142, 1, 0, 0.443463,-99) , 
4, 1.29189, 1, 0, 0.498697,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00873496);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406551,-99) , 
5, 0.535457, 0, 0, 0.563897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414548,-99) , 
4, 1.69618, 1, 0, 0.554915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373319,-99) , 
2, 7.5, 0, 0, 0.546977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394723,-99) , 
9, 396.791, 1, 0, 0.537387,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558376,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558041,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236254,-99) , 
11, 1.90027, 0, 0, 0.320968,-99) , 
8, 0.113718, 1, 0, 0.379089,-99) , 
9, 34.5873, 1, 0, 0.418396,-99) , 
2, 60.5, 0, 0, 0.43723,-99) , 
5, 1.94282, 1, 0, 0.517115,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0095766);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44595,-99) , 
12, 5440.31, 1, 0, 0.608682,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486722,-99) , 
2, 18.5, 0, 0, 0.525087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346785,-99) , 
3, 0.999449, 1, 0, 0.516052,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316714,-99) , 
0, 14.5, 1, 0, 0.435042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186332,-99) , 
7, 28.0611, 1, 0, 0.398236,-99) , 
1, 9.5, 0, 0, 0.4941,-99) , 
0, 10.5, 1, 0, 0.507972,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203327,-99) , 
8, 0.161783, 1, 0, 0.364938,-99) , 
5, 2.15693, 1, 0, 0.498284,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00814246);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762971,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392067,-99) , 
7, 100.034, 1, 0, 0.531371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344316,-99) , 
3, 0.990819, 1, 0, 0.431507,-99) , 
7, 12.6753, 0, 0, 0.51315,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430867,-99) , 
7, 27.4932, 1, 0, 0.59545,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373702,-99) , 
13, 1.5, 0, 0, 0.421731,-99) , 
6, 0.92833, 0, 0, 0.452372,-99) , 
5, 1.73114, 1, 0, 0.490414,-99) , 
12, 23854.2, 0, 0, 0.495832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183272,-99) , 
1, 5.5, 0, 0, 0.489348,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0110338);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730675,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495127,-99) , 
2, 17.5, 0, 0, 0.560581,-99) , 
4, 0.563633, 0, 0, 0.608993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42841,-99) , 
8, 0.444112, 0, 0, 0.571401,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531691,-99) , 
6, 0.293065, 1, 0, 0.569898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256668,-99) , 
9, 30.365, 0, 0, 0.543872,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37542,-99) , 
3, 0.954198, 0, 0, 0.49404,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314965,-99) , 
9, 47.1944, 1, 0, 0.380466,-99) , 
5, 1.75801, 1, 0, 0.457802,-99) , 
8, 0.684883, 1, 0, 0.489977,-99) , 
4, 0.739672, 1, 0, 0.506948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326336,-99) , 
5, 0.341122, 0, 0, 0.499498,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.00573987);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537551,-99) , 
6, 1.12357, 1, 0, 0.612066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484277,-99) , 
0, 63.5, 0, 0, 0.491443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148785,-99) , 
7, 174.342, 1, 0, 0.48835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287702,-99) , 
1, 68.5, 1, 0, 0.482111,-99) , 
6, 1.02537, 0, 0, 0.492527,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175605,-99) , 
0, 10.5, 1, 0, 0.335976,-99) , 
7, 8.423, 0, 0, 0.484116,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0134105);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6516,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364076,-99) , 
2, 13.5, 0, 0, 0.509366,-99) , 
7, 17.2701, 1, 0, 0.553779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394347,-99) , 
4, 1.8298, 1, 0, 0.530846,-99) , 
3, 0.9066, 1, 0, 0.556147,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503926,-99) , 
6, 0.44564, 1, 0, 0.543785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37608,-99) , 
9, 289.909, 1, 0, 0.524266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457893,-99) , 
1, 12.5, 0, 0, 0.516275,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321132,-99) , 
6, 0.259718, 1, 0, 0.394579,-99) , 
4, 1.17166, 0, 0, 0.449551,-99) , 
8, 0.949515, 0, 0, 0.496209,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378481,-99) , 
12, 3818.08, 1, 0, 0.52176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145383,-99) , 
3, 0.995979, 1, 0, 0.34456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141113,-99) , 
3, 0.977466, 0, 0, 0.273508,-99) , 
8, 0.312422, 1, 0, 0.374999,-99) , 
5, 1.88086, 1, 0, 0.470012,-99) , 
13, 1.5, 0, 0, 0.495601,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00999199);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705216,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353236,-99) , 
11, -0.272085, 1, 0, 0.49875,-99) , 
11, 0.529134, 0, 0, 0.570433,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609578,-99) , 
6, 0.579103, 1, 0, 0.667454,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343675,-99) , 
5, 1.67169, 1, 0, 0.483479,-99) , 
7, 33.1546, 1, 0, 0.526011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409705,-99) , 
10, 0.265954, 1, 0, 0.473188,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127886,-99) , 
0, 16.5, 0, 0, 0.303943,-99) , 
7, 29.8717, 1, 0, 0.452707,-99) , 
2, 20.5, 0, 0, 0.474728,-99) , 
3, 0.902944, 1, 0, 0.486324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29513,-99) , 
3, 0.746952, 0, 0, 0.480485,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0127984);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619178,-99) , 
2, 48.5, 0, 0, 0.672936,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537525,-99) , 
11, 2.24438, 1, 0, 0.615592,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245359,-99) , 
5, 1.7669, 1, 0, 0.397254,-99) , 
6, 0.517281, 0, 0, 0.518661,-99) , 
11, -0.924448, 1, 0, 0.58353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269851,-99) , 
1, 11.5, 0, 0, 0.565406,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487701,-99) , 
5, 1.2449, 0, 0, 0.556798,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421145,-99) , 
7, 16.7314, 1, 0, 0.480455,-99) , 
5, 1.54945, 1, 0, 0.512412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222384,-99) , 
3, 0.929744, 1, 0, 0.315073,-99) , 
1, 20.5, 1, 0, 0.494454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219553,-99) , 
7, 43.0855, 1, 0, 0.480711,-99) , 
2, 24.5, 0, 0, 0.500767,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00824488);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677487,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530055,-99) , 
0, 45.5, 0, 0, 0.550578,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327419,-99) , 
9, 33.3426, 0, 0, 0.476068,-99) , 
11, -0.947257, 1, 0, 0.505028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52494,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309338,-99) , 
6, 0.87763, 0, 0, 0.355555,-99) , 
13, 0.5, 1, 0, 0.411296,-99) , 
3, 0.997475, 1, 0, 0.487627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517389,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150069,-99) , 
4, 1.35739, 1, 0, 0.296827,-99) , 
8, 0.489173, 1, 0, 0.375572,-99) , 
9, 349.207, 1, 0, 0.475475,-99) , 
11, -10.7098, 1, 0, 0.483328,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00867371);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533625,-99) , 
4, 0.855051, 1, 0, 0.575729,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443934,-99) , 
12, 1521.43, 1, 0, 0.484413,-99) , 
1, 15.5, 0, 0, 0.51228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136922,-99) , 
7, 138.499, 1, 0, 0.507196,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369925,-99) , 
3, 0.956326, 1, 0, 0.464523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184752,-99) , 
7, 51.75, 0, 0, 0.395058,-99) , 
1, 33.5, 1, 0, 0.493974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316323,-99) , 
2, 7.5, 0, 0, 0.486329,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0104064);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.82534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666447,-99) , 
6, 0.615759, 1, 0, 0.753247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553895,-99) , 
9, 36.4236, 0, 0, 0.691352,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6461,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351923,-99) , 
8, 0.88827, 1, 0, 0.42462,-99) , 
3, 0.97091, 1, 0, 0.512852,-99) , 
9, 93.9286, 1, 0, 0.600062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180991,-99) , 
1, 11.5, 0, 0, 0.57169,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496781,-99) , 
10, 0.101905, 1, 0, 0.553762,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351377,-99) , 
10, 0.0460467, 0, 0, 0.462768,-99) , 
8, 0.256632, 1, 0, 0.476203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28053,-99) , 
5, 2.32095, 1, 0, 0.469942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0838014,-99) , 
7, 77.0613, 1, 0, 0.465201,-99) , 
2, 30.5, 0, 0, 0.48533,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.010514);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620264,-99) , 
12, 13185.5, 1, 0, 0.688294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415251,-99) , 
4, 1.99522, 1, 0, 0.663634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462431,-99) , 
3, 0.995913, 0, 0, 0.605242,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49501,-99) , 
6, 0.297646, 1, 0, 0.53879,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288335,-99) , 
1, 8.5, 1, 0, 0.407648,-99) , 
1, 9.5, 0, 0, 0.515865,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470391,-99) , 
1, 10.5, 0, 0, 0.558171,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34617,-99) , 
5, 1.35089, 1, 0, 0.397586,-99) , 
11, 6.695, 0, 0, 0.439756,-99) , 
3, 0.990342, 1, 0, 0.486361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22077,-99) , 
1, 83.5, 1, 0, 0.481058,-99) , 
11, -5.549, 1, 0, 0.496486,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0103612);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52979,-99) , 
11, 1.97655, 0, 0, 0.557067,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427934,-99) , 
6, 0.719139, 0, 0, 0.479727,-99) , 
8, 2.14393, 1, 0, 0.536042,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624668,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32966,-99) , 
11, 6.40806, 0, 0, 0.399699,-99) , 
12, 8473.34, 0, 0, 0.463529,-99) , 
3, 0.996835, 1, 0, 0.517336,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521337,-99) , 
10, 0.236236, 0, 0, 0.580027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379715,-99) , 
9, 55.6996, 0, 0, 0.531711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31755,-99) , 
13, 1.5, 0, 0, 0.389599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215983,-99) , 
5, 2.1634, 1, 0, 0.352442,-99) , 
8, 0.496764, 1, 0, 0.44359,-99) , 
5, 1.87221, 1, 0, 0.499551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263863,-99) , 
7, 7.10011, 0, 0, 0.494568,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00934567);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512845,-99) , 
7, 13.7854, 1, 0, 0.527907,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313701,-99) , 
12, 2186.42, 1, 0, 0.394024,-99) , 
7, 11.2348, 0, 0, 0.516717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262239,-99) , 
3, 0.999639, 1, 0, 0.510033,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271917,-99) , 
11, -0.0338527, 0, 0, 0.375908,-99) , 
4, 1.22755, 0, 0, 0.466019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186165,-99) , 
4, 1.61354, 1, 0, 0.416253,-99) , 
2, 9.5, 0, 0, 0.494697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209654,-99) , 
1, 5.5, 0, 0, 0.487587,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00856353);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450621,-99) , 
8, 1.03595, 0, 0, 0.553731,-99) , 
2, 48.5, 0, 0, 0.576101,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510297,-99) , 
6, 0.092289, 0, 0, 0.595,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287997,-99) , 
8, 2.73891, 1, 0, 0.486061,-99) , 
4, 0.663918, 1, 0, 0.506212,-99) , 
9, 52.7759, 1, 0, 0.525566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330757,-99) , 
5, 0.378446, 0, 0, 0.518074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303399,-99) , 
3, 0.737201, 0, 0, 0.51095,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00577852);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573158,-99) , 
10, 0.285107, 1, 0, 0.625456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442824,-99) , 
5, 1.51491, 1, 0, 0.47221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25648,-99) , 
1, 6.5, 0, 0, 0.464144,-99) , 
12, -10151.3, 1, 0, 0.472959,-99) , 
11, -10.8403, 1, 0, 0.479802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168173,-99) , 
7, 188.592, 1, 0, 0.474997,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00912969);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578438,-99) , 
8, 0.795229, 1, 0, 0.65126,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464486,-99) , 
4, 1.18581, 1, 0, 0.499676,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202454,-99) , 
6, 0.697871, 1, 0, 0.359456,-99) , 
2, 8.5, 0, 0, 0.48563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269614,-99) , 
7, 70.4127, 1, 0, 0.475813,-99) , 
2, 46.5, 0, 0, 0.490704,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253601,-99) , 
7, 32.1068, 1, 0, 0.360626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.08736, 1, 0, 0.333076,-99) , 
3, 0.999164, 1, 0, 0.478017,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00778421);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637674,-99) , 
4, 0.467897, 0, 0, 0.711956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506241,-99) , 
1, 27.5, 1, 0, 0.62286,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319317,-99) , 
9, 137.227, 0, 0, 0.439914,-99) , 
0, 18.5, 0, 0, 0.547119,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241277,-99) , 
0, 53.5, 1, 0, 0.472495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308789,-99) , 
7, 64.9232, 1, 0, 0.46503,-99) , 
2, 55.5, 0, 0, 0.471453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223352,-99) , 
7, 142.826, 1, 0, 0.46666,-99) , 
5, 1.13454, 1, 0, 0.483136,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00853182);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570286,-99) , 
4, 0.586423, 1, 0, 0.608297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480751,-99) , 
12, -342.713, 1, 0, 0.51898,-99) , 
12, 5920.94, 0, 0, 0.544316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373022,-99) , 
7, 8.39538, 0, 0, 0.533435,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485842,-99) , 
8, 0.275696, 1, 0, 0.503828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323578,-99) , 
6, 0.861522, 0, 0, 0.481154,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248744,-99) , 
11, -0.0348719, 1, 0, 0.344939,-99) , 
3, 0.952387, 0, 0, 0.457001,-99) , 
6, 0.797585, 1, 0, 0.507325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171408,-99) , 
3, 0.999762, 1, 0, 0.501638,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0121129);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651593,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53349,-99) , 
9, 66.554, 1, 0, 0.609766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371458,-99) , 
0, 13.5, 0, 0, 0.526817,-99) , 
9, 153.012, 0, 0, 0.569524,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46463,-99) , 
12, 6465.75, 1, 0, 0.547267,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343185,-99) , 
11, 0.488284, 0, 0, 0.458474,-99) , 
11, -0.376858, 1, 0, 0.502701,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555807,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0862446,-99) , 
4, 1.38777, 1, 0, 0.246707,-99) , 
11, -4.97917, 1, 0, 0.388389,-99) , 
3, 0.997631, 1, 0, 0.485741,-99) , 
11, 4.7306, 0, 0, 0.498693,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398,-99) , 
3, 0.98499, 1, 0, 0.4728,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364342,-99) , 
0, 19.5, 1, 0, 0.442937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235053,-99) , 
11, 2.27287, 1, 0, 0.395791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161534,-99) , 
9, 154.692, 1, 0, 0.346568,-99) , 
4, 1.09046, 1, 0, 0.413361,-99) , 
8, 2.39863, 1, 0, 0.482441,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00980796);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706492,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426239,-99) , 
3, 0.983559, 1, 0, 0.533668,-99) , 
5, 1.50597, 1, 0, 0.599727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504218,-99) , 
1, 39.5, 1, 0, 0.623179,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345319,-99) , 
7, 37.7309, 1, 0, 0.497024,-99) , 
2, 33.5, 0, 0, 0.511024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309218,-99) , 
7, 143.61, 1, 0, 0.504026,-99) , 
6, 0.116909, 1, 0, 0.51776,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473445,-99) , 
3, 0.985257, 1, 0, 0.566291,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286419,-99) , 
1, 9.5, 0, 0, 0.514142,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188421,-99) , 
9, 49.5759, 1, 0, 0.332875,-99) , 
8, 0.402709, 1, 0, 0.43266,-99) , 
5, 2.06566, 1, 0, 0.507155,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00914924);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519939,-99) , 
9, 114.88, 1, 0, 0.632423,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476709,-99) , 
7, 13.512, 0, 0, 0.525093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239369,-99) , 
1, 30.5, 1, 0, 0.517773,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0533655,-99) , 
1, 12.5, 0, 0, 0.524627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157224,-99) , 
3, 0.971116, 1, 0, 0.250951,-99) , 
2, 29.5, 0, 0, 0.440119,-99) , 
7, 40.9727, 1, 0, 0.501428,-99) , 
11, -8.49757, 1, 0, 0.509546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25546,-99) , 
7, 7.0015, 0, 0, 0.504781,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00796578);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493817,-99) , 
7, 13.5183, 0, 0, 0.54742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361919,-99) , 
9, 78.3961, 0, 0, 0.447531,-99) , 
6, 0.246254, 0, 0, 0.519405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281704,-99) , 
9, 445.867, 1, 0, 0.475763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161479,-99) , 
0, 15.5, 0, 0, 0.451166,-99) , 
7, 26.2593, 1, 0, 0.491245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251379,-99) , 
7, 6.88711, 0, 0, 0.487153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287327,-99) , 
5, 2.303, 1, 0, 0.481303,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00839967);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662226,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405141,-99) , 
3, 0.998898, 1, 0, 0.511084,-99) , 
2, 30.5, 0, 0, 0.52057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285638,-99) , 
1, 40.5, 1, 0, 0.513774,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623336,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256221,-99) , 
3, 0.982422, 1, 0, 0.356009,-99) , 
5, 1.25882, 1, 0, 0.485143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0570798,-99) , 
1, 20.5, 0, 0, 0.415555,-99) , 
7, 65.3663, 1, 0, 0.502082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276435,-99) , 
2, 6.5, 0, 0, 0.497389,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0126262);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696037,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446845,-99) , 
11, 3.60646, 1, 0, 0.574331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332639,-99) , 
8, 0.964382, 0, 0, 0.466356,-99) , 
5, 1.59363, 0, 0, 0.526416,-99) , 
3, 0.901533, 1, 0, 0.550497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17884,-99) , 
5, 2.48542, 1, 0, 0.543505,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676556,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403135,-99) , 
8, 1.85103, 1, 0, 0.525349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309266,-99) , 
12, 4792.07, 1, 0, 0.490064,-99) , 
12, 6832.88, 0, 0, 0.523027,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403371,-99) , 
5, 1.80952, 1, 0, 0.577161,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30956,-99) , 
3, 0.997454, 1, 0, 0.41994,-99) , 
3, 0.998858, 0, 0, 0.438477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0432568,-99) , 
7, 62.9163, 1, 0, 0.426386,-99) , 
1, 16.5, 0, 0, 0.45898,-99) , 
13, 1.5, 0, 0, 0.485646,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00707368);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54319,-99) , 
7, 13.493, 0, 0, 0.648774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491778,-99) , 
7, 30.0618, 1, 0, 0.589222,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471995,-99) , 
8, 1.08246, 0, 0, 0.540934,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392477,-99) , 
3, 0.952633, 0, 0, 0.478068,-99) , 
4, 1.25152, 1, 0, 0.511519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373612,-99) , 
4, 1.05636, 0, 0, 0.458795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.163337,-99) , 
5, 1.93183, 1, 0, 0.412321,-99) , 
3, 0.997012, 1, 0, 0.500056,-99) , 
3, 0.998616, 0, 0, 0.510467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314058,-99) , 
3, 0.999723, 1, 0, 0.505935,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0108896);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596553,-99) , 
10, 0.294008, 1, 0, 0.683473,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653276,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358157,-99) , 
1, 20.5, 1, 0, 0.50246,-99) , 
2, 35.5, 0, 0, 0.520881,-99) , 
6, 0.226907, 1, 0, 0.551999,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432498,-99) , 
5, 2.07023, 1, 0, 0.625242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337348,-99) , 
2, 12.5, 0, 0, 0.477434,-99) , 
3, 0.986768, 1, 0, 0.545733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62203,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361515,-99) , 
5, 1.90312, 1, 0, 0.440477,-99) , 
10, 0.0324157, 1, 0, 0.457482,-99) , 
13, 1.5, 0, 0, 0.486348,-99) , 
5, 1.45217, 1, 0, 0.511229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214852,-99) , 
2, 80.5, 0, 0, 0.345131,-99) , 
7, 111.023, 1, 0, 0.502593,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00863674);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548884,-99) , 
6, 0.117026, 1, 0, 0.571274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256863,-99) , 
10, 1.17947, 1, 0, 0.493427,-99) , 
5, 1.5247, 1, 0, 0.527587,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346723,-99) , 
12, 8890.72, 0, 0, 0.39296,-99) , 
9, 54.6562, 1, 0, 0.447081,-99) , 
8, 2.24795, 1, 0, 0.509408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0581632,-99) , 
5, 2.54994, 1, 0, 0.50651,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240237,-99) , 
6, 0.582634, 1, 0, 0.321838,-99) , 
7, 27.4754, 0, 0, 0.389241,-99) , 
9, 28.0379, 0, 0, 0.496093,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0121617);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699551,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628187,-99) , 
11, -0.802037, 0, 0, 0.705176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
7, 64.1675, 1, 0, 0.619751,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432852,-99) , 
5, 1.59985, 0, 0, 0.534442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367709,-99) , 
7, 21.6062, 1, 0, 0.482413,-99) , 
2, 18.5, 0, 0, 0.532825,-99) , 
3, 0.900617, 1, 0, 0.555408,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474919,-99) , 
7, 30.9634, 1, 0, 0.544596,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371836,-99) , 
11, 0.117376, 0, 0, 0.435589,-99) , 
3, 0.926869, 0, 0, 0.523901,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322871,-99) , 
5, 1.55486, 0, 0, 0.40212,-99) , 
8, 0.390061, 0, 0, 0.506874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604994,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549688,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212971,-99) , 
11, -1.53592, 1, 0, 0.30226,-99) , 
11, 3.48105, 0, 0, 0.375075,-99) , 
8, 0.0835856, 1, 0, 0.417051,-99) , 
5, 1.84381, 1, 0, 0.485251,-99) , 
13, 1.5, 0, 0, 0.507272,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00628512);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682208,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254513,-99) , 
0, 54.5, 1, 0, 0.513375,-99) , 
2, 52.5, 0, 0, 0.522766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31869,-99) , 
1, 74.5, 1, 0, 0.516723,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228306,-99) , 
6, 0.665078, 1, 0, 0.394286,-99) , 
10, 0.0373372, 0, 0, 0.507975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202635,-99) , 
4, 2.19556, 1, 0, 0.503883,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0133099);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6031,-99) , 
6, 0.270829, 1, 0, 0.648325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461739,-99) , 
7, 12.4831, 0, 0, 0.610137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367576,-99) , 
4, 0.537284, 1, 0, 0.439883,-99) , 
1, 26.5, 1, 0, 0.567453,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367184,-99) , 
11, 0.294499, 0, 0, 0.435303,-99) , 
9, 66.3063, 0, 0, 0.527202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480365,-99) , 
5, 1.89458, 1, 0, 0.56335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336356,-99) , 
10, 0.126303, 0, 0, 0.442877,-99) , 
3, 0.953976, 0, 0, 0.505164,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.045429,-99) , 
7, 129.308, 1, 0, 0.456331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207936,-99) , 
6, 0.134173, 1, 0, 0.319984,-99) , 
6, 0.325439, 0, 0, 0.416901,-99) , 
3, 0.988762, 1, 0, 0.46491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202486,-99) , 
1, 50.5, 1, 0, 0.45388,-99) , 
5, 1.48831, 1, 0, 0.485072,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00454672);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654259,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468258,-99) , 
7, 36.9735, 1, 0, 0.515225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349176,-99) , 
4, 2.0192, 1, 0, 0.509173,-99) , 
12, -10448.3, 1, 0, 0.516503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296267,-99) , 
5, 1.62396, 1, 0, 0.394222,-99) , 
8, 2.80446, 1, 0, 0.505227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.086718,-99) , 
7, 232.804, 1, 0, 0.501259,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00653245);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547999,-99) , 
5, 1.83145, 1, 0, 0.693647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485386,-99) , 
12, -13715.3, 0, 0, 0.626695,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515305,-99) , 
11, 1.87251, 0, 0, 0.539226,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33595,-99) , 
9, 226.587, 1, 0, 0.468952,-99) , 
3, 0.992856, 1, 0, 0.516139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34631,-99) , 
1, 6.5, 0, 0, 0.508456,-99) , 
11, 6.89075, 0, 0, 0.519353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193119,-99) , 
7, 236.361, 1, 0, 0.515873,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0119048);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.775565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635366,-99) , 
10, 0.233515, 0, 0, 0.715835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487071,-99) , 
7, 40.8464, 1, 0, 0.63343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42178,-99) , 
7, 14.213, 0, 0, 0.585254,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543311,-99) , 
5, 1.35701, 1, 0, 0.607108,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633271,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428969,-99) , 
3, 0.986032, 1, 0, 0.464159,-99) , 
5, 1.85532, 0, 0, 0.472883,-99) , 
6, 0.134469, 1, 0, 0.491384,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484489,-99) , 
12, 1356.73, 0, 0, 0.554855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337636,-99) , 
12, 3222.64, 1, 0, 0.493551,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435985,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0286908,-99) , 
3, 0.983843, 0, 0, 0.202128,-99) , 
13, 1.5, 0, 0, 0.291493,-99) , 
8, 0.406811, 1, 0, 0.391106,-99) , 
5, 1.90313, 1, 0, 0.470367,-99) , 
12, 10428.8, 0, 0, 0.484101,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00946021);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623596,-99) , 
9, 96.9108, 1, 0, 0.698156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533814,-99) , 
11, 1.25611, 1, 0, 0.640813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463437,-99) , 
6, 0.237535, 0, 0, 0.600443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193592,-99) , 
5, 2.2709, 1, 0, 0.588746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755431,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431169,-99) , 
9, 70.6103, 0, 0, 0.523145,-99) , 
5, 1.3788, 1, 0, 0.59303,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277209,-99) , 
7, 143.176, 1, 0, 0.501714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336171,-99) , 
4, 0.24143, 0, 0, 0.491467,-99) , 
6, 0.13467, 1, 0, 0.508412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194931,-99) , 
11, 0.723165, 1, 0, 0.328875,-99) , 
7, 10.9286, 0, 0, 0.496417,-99) , 
0, 11.5, 1, 0, 0.51461,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0103174);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503194,-99) , 
4, 1.58334, 1, 0, 0.610468,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471015,-99) , 
6, 1.00488, 0, 0, 0.524485,-99) , 
6, 0.285594, 1, 0, 0.566029,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503617,-99) , 
6, 0.331361, 1, 0, 0.542504,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287518,-99) , 
12, 1775.17, 0, 0, 0.391333,-99) , 
10, 0.177452, 1, 0, 0.476093,-99) , 
2, 18.5, 0, 0, 0.5135,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452554,-99) , 
8, 0.53134, 1, 0, 0.508496,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14337,-99) , 
3, 0.997616, 1, 0, 0.409743,-99) , 
12, 2545.75, 1, 0, 0.458782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175739,-99) , 
7, 98.5792, 1, 0, 0.449584,-99) , 
5, 1.5474, 1, 0, 0.479937,-99) , 
11, -6.9526, 1, 0, 0.491436,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00487642);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670143,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415395,-99) , 
4, 0.156349, 0, 0, 0.510403,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358328,-99) , 
12, -675.186, 1, 0, 0.421238,-99) , 
4, 1.71383, 1, 0, 0.496963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237472,-99) , 
1, 66.5, 1, 0, 0.491634,-99) , 
10, 2.05637, 0, 0, 0.497717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283764,-99) , 
7, 170.41, 1, 0, 0.493687,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.011526);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576589,-99) , 
6, 0.0617366, 0, 0, 0.668041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477262,-99) , 
8, 2.0242, 1, 0, 0.615709,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586944,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497094,-99) , 
5, 1.43628, 1, 0, 0.535253,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339596,-99) , 
2, 27.5, 0, 0, 0.440831,-99) , 
10, 0.757593, 1, 0, 0.514401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179886,-99) , 
3, 0.999712, 1, 0, 0.507014,-99) , 
6, 0.13281, 1, 0, 0.523023,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510629,-99) , 
9, 103.002, 1, 0, 0.594842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320911,-99) , 
4, 1.7236, 1, 0, 0.560982,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384264,-99) , 
3, 0.993555, 1, 0, 0.504938,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209156,-99) , 
11, -0.168226, 1, 0, 0.362297,-99) , 
11, 0.45737, 0, 0, 0.432329,-99) , 
7, 13.5716, 0, 0, 0.475403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185146,-99) , 
7, 23.6264, 1, 0, 0.454101,-99) , 
2, 11.5, 0, 0, 0.500661,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00940288);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.790395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533139,-99) , 
8, 1.62152, 0, 0, 0.636391,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417976,-99) , 
7, 43.0087, 1, 0, 0.505266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0916813,-99) , 
5, 2.41133, 1, 0, 0.500179,-99) , 
11, -5.69716, 1, 0, 0.514229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269637,-99) , 
9, 114.589, 0, 0, 0.384649,-99) , 
8, 0.146154, 0, 0, 0.500533,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573708,-99) , 
9, 117.432, 1, 0, 0.633197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367439,-99) , 
11, -2.18765, 0, 0, 0.545145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440161,-99) , 
6, 1.01603, 0, 0, 0.478952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34709,-99) , 
4, 1.03097, 0, 0, 0.429647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27888,-99) , 
5, 1.66861, 1, 0, 0.396725,-99) , 
8, 0.776657, 1, 0, 0.440838,-99) , 
6, 0.837964, 1, 0, 0.483758,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00997148);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566581,-99) , 
12, -13798.5, 0, 0, 0.650875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629654,-99) , 
4, 1.21549, 1, 0, 0.69594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450412,-99) , 
6, 0.784425, 1, 0, 0.593397,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544531,-99) , 
8, 0.227708, 1, 0, 0.579789,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339748,-99) , 
11, 3.50264, 0, 0, 0.440171,-99) , 
3, 0.988536, 1, 0, 0.518055,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38363,-99) , 
1, 11.5, 0, 0, 0.445997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223024,-99) , 
9, 404.514, 1, 0, 0.431738,-99) , 
11, 0.528931, 0, 0, 0.472388,-99) , 
11, -6.63236, 1, 0, 0.484259,-99) , 
11, 8.56597, 0, 0, 0.494691,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00803647);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544455,-99) , 
3, 0.994547, 1, 0, 0.645984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470235,-99) , 
9, 162.118, 0, 0, 0.523512,-99) , 
6, 0.317987, 1, 0, 0.557066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394647,-99) , 
9, 33.7613, 0, 0, 0.539812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486808,-99) , 
8, 1.39055, 0, 0, 0.508173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316701,-99) , 
8, 2.35792, 0, 0, 0.420403,-99) , 
8, 1.8294, 1, 0, 0.485307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122077,-99) , 
7, 134.257, 1, 0, 0.480233,-99) , 
5, 1.51099, 1, 0, 0.506472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237941,-99) , 
4, 2.14381, 1, 0, 0.501654,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0043503);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506999,-99) , 
2, 17.5, 0, 0, 0.531366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342958,-99) , 
10, 3.66486, 1, 0, 0.52565,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408265,-99) , 
9, 148.498, 0, 0, 0.480539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262296,-99) , 
4, 1.84979, 1, 0, 0.468261,-99) , 
9, 109.958, 1, 0, 0.497463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199415,-99) , 
5, 2.48194, 1, 0, 0.494335,-99) , 
12, 23291.7, 0, 0, 0.498315,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0153229);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717449,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537978,-99) , 
9, 297.88, 0, 0, 0.610721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43548,-99) , 
12, 5068.91, 1, 0, 0.563876,-99) , 
3, 0.996254, 0, 0, 0.602054,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497661,-99) , 
4, 1.61132, 0, 0, 0.54745,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0737953,-99) , 
5, 2.21252, 1, 0, 0.446687,-99) , 
3, 0.990677, 1, 0, 0.503851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293372,-99) , 
2, 9.5, 0, 0, 0.483822,-99) , 
10, 0.131639, 1, 0, 0.531599,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686012,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43995,-99) , 
10, 0.427096, 1, 0, 0.530587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278574,-99) , 
12, 5324.74, 1, 0, 0.482353,-99) , 
12, 9079.78, 0, 0, 0.516097,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296645,-99) , 
4, 1.18797, 1, 0, 0.40009,-99) , 
11, 5.28313, 0, 0, 0.429424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147046,-99) , 
5, 2.03448, 1, 0, 0.41439,-99) , 
9, 68.5694, 1, 0, 0.450887,-99) , 
8, 1.05106, 1, 0, 0.489808,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00799792);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477257,-99) , 
3, 0.996971, 1, 0, 0.564297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429119,-99) , 
8, 0.436431, 0, 0, 0.543637,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454467,-99) , 
11, 0.737341, 0, 0, 0.498239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253989,-99) , 
3, 0.987779, 1, 0, 0.383996,-99) , 
8, 2.30924, 1, 0, 0.477212,-99) , 
5, 1.51679, 1, 0, 0.505799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315499,-99) , 
5, 0.206777, 0, 0, 0.497936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233728,-99) , 
4, 2.04315, 1, 0, 0.489175,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0108248);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561711,-99) , 
9, 77.7264, 1, 0, 0.632312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671012,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4692,-99) , 
4, 1.06601, 0, 0, 0.510972,-99) , 
12, 6406.75, 0, 0, 0.551284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298559,-99) , 
3, 0.98035, 0, 0, 0.406313,-99) , 
9, 66.2884, 0, 0, 0.509515,-99) , 
2, 30.5, 0, 0, 0.535348,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642684,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367676,-99) , 
3, 0.996879, 1, 0, 0.484548,-99) , 
10, 0.331623, 1, 0, 0.514004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353226,-99) , 
5, 1.60768, 0, 0, 0.452422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233217,-99) , 
4, 1.88614, 1, 0, 0.43051,-99) , 
10, 0.267375, 0, 0, 0.464927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146015,-99) , 
7, 135.925, 1, 0, 0.458729,-99) , 
5, 1.50997, 1, 0, 0.491373,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00876927);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543349,-99) , 
8, 0.518901, 1, 0, 0.582718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305013,-99) , 
9, 245.074, 1, 0, 0.484455,-99) , 
10, 0.103851, 1, 0, 0.510855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316897,-99) , 
8, 0.67902, 1, 0, 0.390892,-99) , 
2, 8.5, 0, 0, 0.499023,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330555,-99) , 
5, 0.466337, 0, 0, 0.491232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220476,-99) , 
5, 2.3205, 1, 0, 0.45833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193092,-99) , 
3, 0.997084, 1, 0, 0.382199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0318102,-99) , 
3, 0.942425, 0, 0, 0.337739,-99) , 
8, 0.328089, 1, 0, 0.392729,-99) , 
4, 1.73025, 1, 0, 0.478152,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00996246);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51814,-99) , 
7, 162.726, 1, 0, 0.65066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511919,-99) , 
11, 2.54593, 0, 0, 0.544819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202546,-99) , 
0, 15.5, 1, 0, 0.467152,-99) , 
7, 14.5449, 0, 0, 0.51711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291438,-99) , 
7, 72.5206, 1, 0, 0.506316,-99) , 
2, 55.5, 0, 0, 0.516298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385025,-99) , 
5, 1.55958, 1, 0, 0.459631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328368,-99) , 
11, 0.902558, 1, 0, 0.413862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0835197,-99) , 
5, 2.01369, 1, 0, 0.397519,-99) , 
4, 1.89506, 0, 0, 0.420323,-99) , 
8, 2.39785, 1, 0, 0.498217,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0094237);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566266,-99) , 
7, 17.9211, 1, 0, 0.631742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608864,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317915,-99) , 
1, 24.5, 1, 0, 0.486888,-99) , 
2, 28.5, 0, 0, 0.505724,-99) , 
3, 0.976833, 0, 0, 0.526093,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360559,-99) , 
1, 12.5, 0, 0, 0.44567,-99) , 
5, 1.61311, 1, 0, 0.540278,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425049,-99) , 
2, 31.5, 0, 0, 0.447574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250118,-99) , 
1, 40.5, 1, 0, 0.43296,-99) , 
12, 9497, 0, 0, 0.456759,-99) , 
3, 0.983637, 1, 0, 0.488153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187493,-99) , 
3, 0.692674, 0, 0, 0.482269,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0119194);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631973,-99) , 
11, -1.63281, 1, 0, 0.684816,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565894,-99) , 
3, 0.990484, 1, 0, 0.638284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332545,-99) , 
8, 0.728746, 1, 0, 0.474091,-99) , 
9, 110.294, 1, 0, 0.564939,-99) , 
5, 1.51367, 1, 0, 0.613642,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618032,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299129,-99) , 
10, 0.125131, 1, 0, 0.415256,-99) , 
6, 0.399558, 1, 0, 0.495352,-99) , 
0, 13.5, 0, 0, 0.579904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352689,-99) , 
2, 12.5, 0, 0, 0.557121,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200074,-99) , 
0, 22.5, 1, 0, 0.467273,-99) , 
7, 20.6197, 0, 0, 0.509755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0653728,-99) , 
7, 179.195, 1, 0, 0.505019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234801,-99) , 
1, 75.5, 1, 0, 0.498016,-99) , 
13, 1.5, 0, 0, 0.523482,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.008018);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377956,-99) , 
3, 0.999455, 1, 0, 0.55678,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160257,-99) , 
0, 14.5, 1, 0, 0.470822,-99) , 
2, 9.5, 0, 0, 0.541526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366313,-99) , 
8, 2.99268, 1, 0, 0.5354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282627,-99) , 
1, 72.5, 1, 0, 0.529553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310538,-99) , 
8, 0.63507, 0, 0, 0.477038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234019,-99) , 
2, 11.5, 0, 0, 0.417006,-99) , 
9, 33.0727, 0, 0, 0.517623,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.013551);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781803,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504514,-99) , 
2, 15.5, 1, 0, 0.591377,-99) , 
0, 22.5, 0, 0, 0.660967,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45003,-99) , 
9, 71.401, 1, 0, 0.533149,-99) , 
1, 22.5, 1, 0, 0.607175,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449205,-99) , 
10, 0.133253, 1, 0, 0.548378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328482,-99) , 
3, 0.991746, 1, 0, 0.453242,-99) , 
0, 15.5, 0, 0, 0.545599,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386561,-99) , 
3, 0.91046, 0, 0, 0.50799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 1.78921, 1, 0, 0.377511,-99) , 
7, 9.76926, 0, 0, 0.484991,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323408,-99) , 
10, 0.561361, 0, 0, 0.441207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223818,-99) , 
4, 1.40265, 1, 0, 0.387945,-99) , 
7, 33.3876, 1, 0, 0.458555,-99) , 
9, 20.3047, 1, 0, 0.46685,-99) , 
13, 1.5, 0, 0, 0.491112,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00647101);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674946,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313592,-99) , 
7, 94.0855, 1, 0, 0.510918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339222,-99) , 
5, 0.528166, 0, 0, 0.502081,-99) , 
2, 74.5, 0, 0, 0.507616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31639,-99) , 
3, 0.999705, 1, 0, 0.503429,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162196,-99) , 
1, 14.5, 0, 0, 0.360808,-99) , 
5, 2.15255, 1, 0, 0.493253,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0128658);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518805,-99) , 
1, 19.5, 1, 0, 0.571522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0762556,-99) , 
5, 2.35632, 1, 0, 0.483321,-99) , 
2, 17.5, 0, 0, 0.523384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301413,-99) , 
7, 117.524, 1, 0, 0.515949,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203402,-99) , 
0, 104.5, 0, 0, 0.383021,-99) , 
1, 51.5, 1, 0, 0.505544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439993,-99) , 
3, 0.994974, 1, 0, 0.566333,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381032,-99) , 
11, -4.23197, 1, 0, 0.457798,-99) , 
12, 1777.19, 1, 0, 0.50972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328458,-99) , 
7, 18.7871, 1, 0, 0.486585,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463748,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131638,-99) , 
3, 0.99641, 0, 0, 0.232509,-99) , 
5, 1.48845, 1, 0, 0.328329,-99) , 
0, 13.5, 1, 0, 0.440298,-99) , 
1, 10.5, 0, 0, 0.484302,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0122045);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651277,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493501,-99) , 
9, 65.7383, 0, 0, 0.617993,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355734,-99) , 
4, 0.836789, 1, 0, 0.444378,-99) , 
7, 35.3074, 1, 0, 0.577985,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482511,-99) , 
1, 24.5, 1, 0, 0.550728,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350577,-99) , 
10, 0.125325, 1, 0, 0.428693,-99) , 
2, 16.5, 0, 0, 0.493455,-99) , 
5, 1.15401, 0, 0, 0.547151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365239,-99) , 
9, 34.5664, 0, 0, 0.524739,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458133,-99) , 
8, 0.308878, 1, 0, 0.487156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164847,-99) , 
5, 2.4913, 1, 0, 0.480091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125265,-99) , 
0, 91.5, 1, 0, 0.471344,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492879,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175083,-99) , 
2, 11.5, 0, 0, 0.285656,-99) , 
11, -5.87629, 1, 0, 0.319837,-99) , 
8, 1.91232, 1, 0, 0.438782,-99) , 
4, 1.29783, 1, 0, 0.49008,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0129972);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582539,-99) , 
9, 33.1456, 0, 0, 0.661363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509083,-99) , 
0, 32.5, 0, 0, 0.541406,-99) , 
12, 9584.84, 0, 0, 0.565319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363962,-99) , 
10, 0.639075, 1, 0, 0.485795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262686,-99) , 
10, 0.288874, 0, 0, 0.418143,-99) , 
1, 28.5, 1, 0, 0.52014,-99) , 
10, 1.2223, 0, 0, 0.546594,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404569,-99) , 
3, 0.936836, 0, 0, 0.520262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331868,-99) , 
6, 0.492384, 0, 0, 0.416019,-99) , 
8, 0.368964, 0, 0, 0.503127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113263,-99) , 
8, 0.399659, 1, 0, 0.352821,-99) , 
5, 2.09613, 1, 0, 0.487114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133834,-99) , 
7, 61.4877, 1, 0, 0.477235,-99) , 
1, 14.5, 0, 0, 0.5078,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00891524);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503728,-99) , 
3, 0.965898, 0, 0, 0.586453,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 217.15, 1, 0, 0.49641,-99) , 
3, 0.988102, 1, 0, 0.530062,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549205,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367251,-99) , 
12, 3256.07, 0, 0, 0.462123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25906,-99) , 
4, 1.52174, 1, 0, 0.427036,-99) , 
3, 0.925265, 0, 0, 0.513004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462125,-99) , 
9, 170.345, 0, 0, 0.524842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317209,-99) , 
12, 2946.54, 0, 0, 0.402999,-99) , 
8, 0.192551, 1, 0, 0.464409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301677,-99) , 
9, 45.3153, 0, 0, 0.431851,-99) , 
8, 0.444285, 0, 0, 0.494103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216555,-99) , 
1, 90.5, 1, 0, 0.489761,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0117393);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668978,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677883,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530112,-99) , 
9, 47.1899, 1, 0, 0.563651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440359,-99) , 
8, 0.288149, 0, 0, 0.542335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189708,-99) , 
5, 2.41024, 1, 0, 0.535195,-99) , 
12, -5372.37, 1, 0, 0.553363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63833,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460508,-99) , 
4, 0.530114, 0, 0, 0.526846,-99) , 
5, 1.34367, 1, 0, 0.570623,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39025,-99) , 
7, 40.9204, 0, 0, 0.461002,-99) , 
5, 0.921065, 0, 0, 0.532235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373964,-99) , 
3, 0.960882, 0, 0, 0.569676,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178003,-99) , 
5, 2.34379, 1, 0, 0.440517,-99) , 
6, 0.876481, 0, 0, 0.483631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265036,-99) , 
9, 103.717, 1, 0, 0.401918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208324,-99) , 
1, 17.5, 0, 0, 0.335768,-99) , 
7, 30.7088, 1, 0, 0.442956,-99) , 
4, 0.838348, 1, 0, 0.471524,-99) , 
13, 1.5, 0, 0, 0.496997,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0105227);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536178,-99) , 
5, 1.2306, 0, 0, 0.592425,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377563,-99) , 
4, 1.57107, 0, 0, 0.490988,-99) , 
4, 1.36524, 1, 0, 0.552378,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295545,-99) , 
5, 2.26334, 1, 0, 0.535322,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487393,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315272,-99) , 
1, 15.5, 0, 0, 0.390707,-99) , 
4, 1.0335, 0, 0, 0.475649,-99) , 
13, 0.5, 0, 0, 0.525985,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546595,-99) , 
2, 20.5, 0, 0, 0.604404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465503,-99) , 
4, 0.350778, 0, 0, 0.560091,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395141,-99) , 
11, -6.52585, 1, 0, 0.434685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208397,-99) , 
7, 53.6702, 1, 0, 0.40583,-99) , 
5, 1.28718, 1, 0, 0.455108,-99) , 
3, 0.994221, 1, 0, 0.501262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251009,-99) , 
7, 7.25003, 0, 0, 0.49568,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0121312);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547038,-99) , 
3, 0.997846, 0, 0, 0.636761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446383,-99) , 
7, 33.3166, 1, 0, 0.577001,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513901,-99) , 
3, 0.892887, 1, 0, 0.537981,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360744,-99) , 
6, 1.00288, 0, 0, 0.43039,-99) , 
6, 0.765402, 1, 0, 0.502397,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292145,-99) , 
3, 0.91181, 0, 0, 0.489756,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160587,-99) , 
11, -0.533901, 0, 0, 0.296091,-99) , 
9, 65.8366, 0, 0, 0.42778,-99) , 
13, 0.5, 0, 0, 0.479014,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359602,-99) , 
3, 0.949424, 0, 0, 0.463812,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0376443,-99) , 
5, 1.89052, 1, 0, 0.283264,-99) , 
3, 0.986595, 1, 0, 0.38745,-99) , 
8, 2.46965, 1, 0, 0.46313,-99) , 
12, 10462.1, 0, 0, 0.476495,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0176691);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582506,-99) , 
9, 100.143, 0, 0, 0.601199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411154,-99) , 
7, 9.04486, 0, 0, 0.584393,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598256,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391808,-99) , 
10, 2.63461, 0, 0, 0.425511,-99) , 
13, 1.5, 0, 0, 0.474111,-99) , 
9, 40.5902, 0, 0, 0.548262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31277,-99) , 
5, 2.03507, 0, 0, 0.370228,-99) , 
8, 0.196678, 0, 0, 0.529481,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547534,-99) , 
9, 184.747, 1, 0, 0.606707,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185508,-99) , 
9, 205.366, 0, 0, 0.446737,-99) , 
5, 1.73164, 1, 0, 0.545202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332616,-99) , 
9, 154.449, 0, 0, 0.445595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214628,-99) , 
9, 360.935, 1, 0, 0.404213,-99) , 
3, 0.974398, 0, 0, 0.492835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178532,-99) , 
1, 12.5, 0, 0, 0.4726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203827,-99) , 
0, 61.5, 0, 0, 0.321567,-99) , 
1, 27.5, 1, 0, 0.395638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160346,-99) , 
2, 16.5, 0, 0, 0.35866,-99) , 
7, 28.4463, 1, 0, 0.444918,-99) , 
9, 109.955, 1, 0, 0.48811,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0107093);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509342,-99) , 
7, 12.6591, 0, 0, 0.624983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463185,-99) , 
8, 2.32467, 1, 0, 0.595672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398935,-99) , 
2, 8.5, 0, 0, 0.57607,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329132,-99) , 
10, 0.71564, 0, 0, 0.424019,-99) , 
9, 48.1285, 0, 0, 0.543691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507425,-99) , 
11, -3.28997, 0, 0, 0.629159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433683,-99) , 
11, 2.84708, 1, 0, 0.576023,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44,-99) , 
7, 13.4478, 0, 0, 0.499008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197909,-99) , 
2, 30.5, 0, 0, 0.358061,-99) , 
7, 41.1178, 1, 0, 0.471273,-99) , 
6, 1.00656, 0, 0, 0.492323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169338,-99) , 
4, 1.61736, 1, 0, 0.332318,-99) , 
3, 0.853747, 0, 0, 0.480583,-99) , 
6, 0.289968, 1, 0, 0.501097,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0103946);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633154,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541896,-99) , 
6, 0.262554, 1, 0, 0.572952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380616,-99) , 
5, 2.28413, 1, 0, 0.565077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406732,-99) , 
3, 0.728373, 0, 0, 0.556039,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203984,-99) , 
11, 1.25742, 0, 0, 0.345037,-99) , 
11, -0.416051, 1, 0, 0.423392,-99) , 
1, 9.5, 0, 0, 0.535571,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684277,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409323,-99) , 
13, 0.5, 1, 0, 0.462776,-99) , 
3, 0.998569, 0, 0, 0.493382,-99) , 
2, 47.5, 0, 0, 0.520997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601103,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364219,-99) , 
8, 1.19389, 1, 0, 0.418925,-99) , 
10, 0.687367, 0, 0, 0.444392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202077,-99) , 
7, 50.1389, 1, 0, 0.413215,-99) , 
5, 1.4613, 1, 0, 0.458062,-99) , 
3, 0.988492, 1, 0, 0.49854,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0155005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609834,-99) , 
6, 0.409982, 0, 0, 0.681167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417908,-99) , 
4, 1.72994, 1, 0, 0.647348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358822,-99) , 
4, 0.925287, 0, 0, 0.489361,-99) , 
2, 22.5, 0, 0, 0.532721,-99) , 
12, 1335.68, 1, 0, 0.573297,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67383,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268417,-99) , 
7, 10.3479, 0, 0, 0.458317,-99) , 
13, 1.5, 0, 0, 0.516986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276699,-99) , 
10, 0.817511, 0, 0, 0.359935,-99) , 
9, 70.0857, 0, 0, 0.469865,-99) , 
3, 0.953968, 0, 0, 0.526087,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532618,-99) , 
10, 0.496085, 1, 0, 0.637025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475889,-99) , 
4, 0.428395, 0, 0, 0.576568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4398,-99) , 
10, 0.175746, 0, 0, 0.528072,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436053,-99) , 
3, 0.997162, 0, 0, 0.555412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359619,-99) , 
11, 9.38256, 0, 0, 0.394557,-99) , 
11, -5.2847, 1, 0, 0.441153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238455,-99) , 
7, 50.3429, 1, 0, 0.416176,-99) , 
5, 1.43623, 1, 0, 0.459446,-99) , 
3, 0.990375, 1, 0, 0.496065,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0120204);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.781886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505472,-99) , 
9, 31.1003, 0, 0, 0.588883,-99) , 
4, 1.95573, 0, 0, 0.627594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311953,-99) , 
8, 1.03307, 0, 0, 0.463222,-99) , 
3, 0.97764, 0, 0, 0.571098,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697281,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451074,-99) , 
4, 0.121764, 0, 0, 0.533998,-99) , 
12, 6803.93, 0, 0, 0.567443,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406375,-99) , 
10, 0.244705, 1, 0, 0.584537,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340964,-99) , 
7, 51.0247, 1, 0, 0.444687,-99) , 
11, 4.7475, 0, 0, 0.468738,-99) , 
4, 0.755201, 1, 0, 0.496447,-99) , 
9, 49.2542, 1, 0, 0.515917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366011,-99) , 
2, 7.5, 1, 0, 0.440578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.095946,-99) , 
0, 13.5, 1, 0, 0.375561,-99) , 
2, 8.5, 0, 0, 0.504463,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0160376);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487176,-99) , 
7, 32.2674, 1, 0, 0.643305,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347116,-99) , 
8, 2.21377, 1, 0, 0.527207,-99) , 
10, 0.127878, 0, 0, 0.564619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264377,-99) , 
4, 1.92695, 1, 0, 0.551604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681822,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443584,-99) , 
12, 9112.69, 0, 0, 0.486064,-99) , 
3, 0.98708, 1, 0, 0.517127,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292665,-99) , 
12, 4041.78, 1, 0, 0.373653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0502226,-99) , 
5, 2.2324, 1, 0, 0.358705,-99) , 
3, 0.980273, 0, 0, 0.453215,-99) , 
9, 83.9799, 0, 0, 0.510347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59908,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395629,-99) , 
11, 0.258452, 0, 0, 0.46839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239581,-99) , 
5, 1.66161, 1, 0, 0.409391,-99) , 
13, 1.5, 0, 0, 0.476877,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0659255,-99) , 
7, 63.3093, 1, 0, 0.275261,-99) , 
2, 29.5, 0, 0, 0.413988,-99) , 
7, 40.102, 1, 0, 0.489501,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00778407);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451221,-99) , 
8, 1.06377, 0, 0, 0.537848,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440435,-99) , 
8, 0.270757, 1, 0, 0.461604,-99) , 
5, 1.34437, 1, 0, 0.485659,-99) , 
12, -9613.49, 1, 0, 0.493361,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55549,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314324,-99) , 
2, 82.5, 0, 0, 0.430581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
1, 16.5, 0, 0, 0.367123,-99) , 
7, 94.0855, 1, 0, 0.484383,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255641,-99) , 
1, 12.5, 1, 0, 0.33951,-99) , 
9, 24.1213, 0, 0, 0.474983,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.014041);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554046,-99) , 
2, 29.5, 0, 0, 0.5717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369437,-99) , 
1, 33.5, 1, 0, 0.557562,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476833,-99) , 
11, -1.84567, 1, 0, 0.515008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239025,-99) , 
0, 12.5, 0, 0, 0.33825,-99) , 
7, 16.9311, 1, 0, 0.475798,-99) , 
2, 11.5, 0, 0, 0.525062,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455967,-99) , 
5, 1.81702, 0, 0, 0.526226,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20837,-99) , 
5, 1.66741, 1, 0, 0.360383,-99) , 
9, 69.6262, 1, 0, 0.431141,-99) , 
8, 2.41263, 1, 0, 0.507453,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306104,-99) , 
1, 70, 1, 0, 0.497511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275863,-99) , 
0, 61.5, 0, 0, 0.418174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0455837,-99) , 
1, 16.5, 0, 0, 0.361715,-99) , 
7, 64.1176, 1, 0, 0.490046,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00808804);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554457,-99) , 
7, 19.0845, 0, 0, 0.641031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501316,-99) , 
9, 220.771, 1, 0, 0.608579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483042,-99) , 
2, 33.5, 0, 0, 0.530588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359068,-99) , 
3, 0.960488, 0, 0, 0.494951,-99) , 
6, 0.691848, 1, 0, 0.552819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381075,-99) , 
8, 0.458512, 0, 0, 0.529232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590074,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336887,-99) , 
5, 1.56661, 0, 0, 0.459734,-99) , 
11, -7.2226, 1, 0, 0.470477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139459,-99) , 
7, 163.354, 1, 0, 0.467596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240446,-99) , 
1, 55.5, 1, 0, 0.459781,-99) , 
5, 1.51381, 1, 0, 0.490423,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0129786);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.820674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596184,-99) , 
7, 65.7849, 1, 0, 0.709843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53483,-99) , 
1, 34.5, 1, 0, 0.624649,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540246,-99) , 
6, 0.215974, 1, 0, 0.578096,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408449,-99) , 
3, 0.989889, 1, 0, 0.472726,-99) , 
7, 16.1108, 0, 0, 0.529547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358418,-99) , 
7, 39.2347, 1, 0, 0.508005,-99) , 
2, 28.5, 0, 0, 0.535383,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41061,-99) , 
5, 2.22141, 1, 0, 0.597032,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468018,-99) , 
9, 45.5706, 1, 0, 0.498772,-99) , 
3, 0.955676, 1, 0, 0.527767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349745,-99) , 
4, 1.02722, 0, 0, 0.500204,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311974,-99) , 
6, 0.935588, 1, 0, 0.466625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229365,-99) , 
9, 54.3031, 1, 0, 0.323365,-99) , 
7, 27.8077, 1, 0, 0.430685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205839,-99) , 
5, 2.13268, 1, 0, 0.410406,-99) , 
8, 0.626919, 1, 0, 0.449913,-99) , 
5, 1.54537, 1, 0, 0.489501,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.013165);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649761,-99) , 
3, 0.988017, 1, 0, 0.725484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5367,-99) , 
9, 61.0729, 0, 0, 0.652926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447163,-99) , 
9, 220.119, 1, 0, 0.606858,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512393,-99) , 
7, 32.249, 1, 0, 0.560885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425378,-99) , 
4, 0.415758, 0, 0, 0.541239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333192,-99) , 
0, 11.5, 1, 0, 0.442702,-99) , 
7, 16.5237, 0, 0, 0.510409,-99) , 
6, 0.300458, 1, 0, 0.538118,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671183,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202898,-99) , 
5, 2.34388, 1, 0, 0.482619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110876,-99) , 
1, 15.5, 0, 0, 0.343095,-99) , 
7, 28.5322, 1, 0, 0.44927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0832908,-99) , 
4, 2.03789, 1, 0, 0.43907,-99) , 
4, 2.12055, 0, 0, 0.460961,-99) , 
5, 1.67026, 1, 0, 0.504949,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0115652);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616014,-99) , 
2, 23.5, 1, 0, 0.684589,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394112,-99) , 
11, -0.697249, 1, 0, 0.547979,-99) , 
11, 1.29378, 0, 0, 0.598724,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417316,-99) , 
3, 0.97882, 0, 0, 0.52353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315043,-99) , 
12, 10111.2, 1, 0, 0.504654,-99) , 
1, 14.5, 0, 0, 0.541332,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431127,-99) , 
11, 9.66586, 0, 0, 0.460293,-99) , 
10, 0.793961, 0, 0, 0.484565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24906,-99) , 
7, 120.608, 1, 0, 0.470014,-99) , 
3, 0.995916, 1, 0, 0.513,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573934,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491421,-99) , 
4, 1.22628, 0, 0, 0.532996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342854,-99) , 
5, 1.9477, 1, 0, 0.495853,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363165,-99) , 
3, 0.900753, 1, 0, 0.46514,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0324568,-99) , 
5, 1.95962, 1, 0, 0.286926,-99) , 
11, 0.537811, 0, 0, 0.389286,-99) , 
11, -0.311803, 1, 0, 0.431146,-99) , 
4, 0.441402, 1, 0, 0.453838,-99) , 
3, 0.964358, 0, 0, 0.495789,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00846443);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51276,-99) , 
6, 0.186744, 1, 0, 0.53841,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373029,-99) , 
10, 0.798187, 0, 0, 0.452928,-99) , 
9, 55.9609, 0, 0, 0.515417,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53117,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0499199,-99) , 
5, 1.9141, 1, 0, 0.36875,-99) , 
9, 51.5448, 1, 0, 0.424053,-99) , 
8, 2.52955, 1, 0, 0.500384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254724,-99) , 
3, 0.999712, 1, 0, 0.494466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171661,-99) , 
1, 91.5, 1, 0, 0.490185,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0106282);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575812,-99) , 
6, 0.747577, 1, 0, 0.647521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429068,-99) , 
4, 1.89112, 1, 0, 0.615275,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499675,-99) , 
6, 0.292742, 1, 0, 0.546349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14042,-99) , 
7, 62.1741, 1, 0, 0.46135,-99) , 
1, 16.5, 0, 0, 0.497756,-99) , 
11, 5.22335, 0, 0, 0.512627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351425,-99) , 
3, 0.999463, 1, 0, 0.504043,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423773,-99) , 
6, 0.334577, 0, 0, 0.510784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317359,-99) , 
6, 0.780856, 1, 0, 0.461473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.1707, 1, 0, 0.439225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133554,-99) , 
0, 14.5, 1, 0, 0.407321,-99) , 
2, 9.5, 0, 0, 0.487835,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.010997);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614436,-99) , 
7, 19.3898, 0, 0, 0.700465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456542,-99) , 
8, 0.398303, 1, 0, 0.652794,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521595,-99) , 
6, 0.682064, 0, 0, 0.579745,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30707,-99) , 
1, 10.5, 0, 0, 0.482357,-99) , 
7, 18.8007, 1, 0, 0.522147,-99) , 
5, 2.21335, 0, 0, 0.539394,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402594,-99) , 
9, 32.4865, 0, 0, 0.539364,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361025,-99) , 
5, 1.54684, 1, 0, 0.441589,-99) , 
9, 50.3716, 1, 0, 0.466193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0673902,-99) , 
5, 2.28613, 1, 0, 0.46114,-99) , 
8, 1.14325, 1, 0, 0.499628,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238895,-99) , 
0, 10.5, 1, 0, 0.344476,-99) , 
7, 8.97594, 0, 0, 0.489047,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0186656);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.808406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633645,-99) , 
10, 0.50359, 1, 0, 0.707693,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416784,-99) , 
7, 23.7864, 1, 0, 0.54465,-99) , 
2, 21.5, 0, 0, 0.596092,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482689,-99) , 
3, 0.986473, 1, 0, 0.553294,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355561,-99) , 
3, 0.994911, 0, 0, 0.423813,-99) , 
10, 0.319664, 1, 0, 0.493467,-99) , 
6, 0.678127, 1, 0, 0.545602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40212,-99) , 
8, 0.436431, 0, 0, 0.526402,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487465,-99) , 
12, 5385.95, 1, 0, 0.603004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443183,-99) , 
3, 0.957557, 0, 0, 0.563385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189018,-99) , 
10, 2.77985, 1, 0, 0.53227,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44548,-99) , 
6, 0.519828, 1, 0, 0.596472,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193938,-99) , 
11, 0.658935, 0, 0, 0.433406,-99) , 
11, -0.351854, 1, 0, 0.506815,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272041,-99) , 
8, 2.68379, 1, 0, 0.428,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199264,-99) , 
6, 1.00392, 0, 0, 0.243741,-99) , 
4, 1.48103, 1, 0, 0.348079,-99) , 
8, 0.552489, 1, 0, 0.41156,-99) , 
9, 52.036, 1, 0, 0.446896,-99) , 
5, 1.52416, 1, 0, 0.481462,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0141821);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536709,-99) , 
9, 75.0102, 0, 0, 0.642827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589602,-99) , 
12, 9978.72, 0, 0, 0.649951,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402783,-99) , 
10, 0.137548, 1, 0, 0.477856,-99) , 
1, 14.5, 0, 0, 0.538642,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37539,-99) , 
2, 18.5, 0, 0, 0.445686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193244,-99) , 
4, 1.85858, 1, 0, 0.409549,-99) , 
6, 0.796599, 1, 0, 0.496038,-99) , 
3, 0.958867, 1, 0, 0.523482,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49785,-99) , 
10, 0.25141, 1, 0, 0.569789,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36617,-99) , 
12, -3717.39, 1, 0, 0.443157,-99) , 
3, 0.995836, 1, 0, 0.52711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393037,-99) , 
11, 4.61576, 0, 0, 0.455103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213856,-99) , 
10, 0.572921, 1, 0, 0.419046,-99) , 
5, 1.70604, 1, 0, 0.482609,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342426,-99) , 
4, 0.90223, 0, 0, 0.415192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248508,-99) , 
4, 1.40112, 1, 0, 0.375139,-99) , 
11, 0.37304, 0, 0, 0.458382,-99) , 
11, -0.763702, 1, 0, 0.485957,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0120371);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536727,-99) , 
1, 34.5, 1, 0, 0.615608,-99) , 
8, 1.76913, 0, 0, 0.670501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503147,-99) , 
11, -0.606131, 0, 0, 0.560608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357304,-99) , 
11, 2.15776, 1, 0, 0.487781,-99) , 
9, 103.602, 1, 0, 0.579049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23421,-99) , 
1, 13.5, 0, 0, 0.547947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390207,-99) , 
10, 0.0403888, 0, 0, 0.501327,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280403,-99) , 
4, 1.50253, 0, 0, 0.381386,-99) , 
9, 30.5807, 0, 0, 0.489174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310476,-99) , 
7, 40.701, 1, 0, 0.480386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214201,-99) , 
0, 28.5, 1, 0, 0.463625,-99) , 
2, 24.5, 0, 0, 0.483311,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00957636);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591429,-99) , 
6, 0.476761, 0, 0, 0.634534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
6, 0.890212, 1, 0, 0.592611,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374883,-99) , 
12, 2275.74, 0, 0, 0.47864,-99) , 
7, 48.6614, 1, 0, 0.562995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613769,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321866,-99) , 
5, 1.21533, 0, 0, 0.416775,-99) , 
2, 25.5, 0, 0, 0.465067,-99) , 
9, 69.6871, 0, 0, 0.531221,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460519,-99) , 
11, 2.81497, 0, 0, 0.484342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238421,-99) , 
1, 50.5, 1, 0, 0.476329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112609,-99) , 
1, 5.5, 0, 0, 0.467993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0222319,-99) , 
7, 134.681, 1, 0, 0.460851,-99) , 
5, 1.52501, 1, 0, 0.491332,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.009091);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592163,-99) , 
6, 0.301155, 1, 0, 0.632985,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448512,-99) , 
3, 0.95596, 0, 0, 0.531171,-99) , 
13, 1.5, 0, 0, 0.558895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373334,-99) , 
7, 26.6733, 0, 0, 0.429809,-99) , 
8, 0.443436, 0, 0, 0.538742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329616,-99) , 
9, 30.7002, 0, 0, 0.531482,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346945,-99) , 
9, 70.1713, 1, 0, 0.435638,-99) , 
8, 0.696634, 1, 0, 0.482639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18115,-99) , 
3, 0.999548, 1, 0, 0.473266,-99) , 
5, 1.67009, 1, 0, 0.510148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274393,-99) , 
1, 70.5, 1, 0, 0.504724,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0084731);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516891,-99) , 
4, 1.44159, 1, 0, 0.61863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460533,-99) , 
4, 0.773618, 0, 0, 0.579328,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447258,-99) , 
9, 61.5842, 0, 0, 0.563821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413154,-99) , 
9, 114.881, 1, 0, 0.475653,-99) , 
4, 0.604542, 1, 0, 0.496937,-99) , 
10, 0.0713726, 1, 0, 0.511335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327482,-99) , 
7, 7.49749, 0, 0, 0.505479,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248875,-99) , 
10, 0.758126, 0, 0, 0.32252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106011,-99) , 
4, 2.19803, 1, 0, 0.292245,-99) , 
8, 0.160406, 1, 0, 0.357173,-99) , 
4, 1.85004, 1, 0, 0.492727,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00875791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552958,-99) , 
5, 1.5675, 1, 0, 0.616574,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450627,-99) , 
5, 1.75901, 1, 0, 0.519004,-99) , 
8, 0.787308, 1, 0, 0.536533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.100479,-99) , 
5, 2.28744, 1, 0, 0.530055,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337368,-99) , 
7, 64.6382, 1, 0, 0.522062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343075,-99) , 
6, 0.176952, 0, 0, 0.478767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207678,-99) , 
7, 11.0942, 0, 0, 0.448546,-99) , 
8, 0.468358, 0, 0, 0.510325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28593,-99) , 
12, 2268.4, 1, 0, 0.372835,-99) , 
10, 0.0393613, 0, 0, 0.500909,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00512855);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6551,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367375,-99) , 
5, 2.18027, 1, 0, 0.503372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270871,-99) , 
7, 76.295, 1, 0, 0.495467,-99) , 
2, 49.5, 0, 0, 0.503671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128088,-99) , 
7, 236.401, 1, 0, 0.501748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260067,-99) , 
1, 70.5, 1, 0, 0.494858,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0114149);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729304,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517555,-99) , 
11, 1.26096, 0, 0, 0.540975,-99) , 
8, 0.570153, 1, 0, 0.559207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453463,-99) , 
8, 0.351715, 0, 0, 0.541243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369173,-99) , 
0, 19.5, 0, 0, 0.447995,-99) , 
12, 25.9126, 0, 0, 0.517412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463048,-99) , 
7, 25.4951, 1, 0, 0.578554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327933,-99) , 
4, 1.915, 1, 0, 0.583625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417627,-99) , 
11, -10.7248, 1, 0, 0.443085,-99) , 
3, 0.983695, 1, 0, 0.49765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312164,-99) , 
11, 0.461946, 0, 0, 0.442953,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237249,-99) , 
10, 0.0523372, 1, 0, 0.280745,-99) , 
4, 1.48773, 1, 0, 0.357652,-99) , 
11, -0.298365, 1, 0, 0.43684,-99) , 
11, 6.26281, 0, 0, 0.455486,-99) , 
4, 1.18747, 1, 0, 0.485814,-99)    );
  // itree = 850
  fBoostWeights.push_back(0.0127076);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507632,-99) , 
4, 1.20718, 1, 0, 0.62162,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499473,-99) , 
4, 0.747791, 1, 0, 0.529472,-99) , 
11, 3.67308, 0, 0, 0.548969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4118,-99) , 
9, 33.6228, 0, 0, 0.534461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364288,-99) , 
7, 8.9795, 0, 0, 0.522779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274674,-99) , 
4, 1.86693, 1, 0, 0.480791,-99) , 
3, 0.996012, 0, 0, 0.519562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274002,-99) , 
7, 103.998, 1, 0, 0.509219,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430549,-99) , 
8, 1.76973, 0, 0, 0.521004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312518,-99) , 
12, 2062.9, 0, 0, 0.45306,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136305,-99) , 
4, 1.94196, 1, 0, 0.276787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0290714,-99) , 
0, 31.5, 1, 0, 0.238303,-99) , 
9, 68.4461, 1, 0, 0.340666,-99) , 
8, 0.695029, 1, 0, 0.426466,-99) , 
5, 1.73486, 1, 0, 0.488028,-99)    );
  // itree = 851
  fBoostWeights.push_back(0.0099234);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554729,-99) , 
8, 2.26744, 1, 0, 0.67806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457456,-99) , 
8, 0.597582, 0, 0, 0.616313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422969,-99) , 
10, 0.114739, 1, 0, 0.502916,-99) , 
2, 12.5, 0, 0, 0.574533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419457,-99) , 
5, 0.648272, 0, 0, 0.544412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407289,-99) , 
3, 0.99794, 1, 0, 0.502476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261749,-99) , 
2, 6.5, 0, 0, 0.495586,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0824891,-99) , 
5, 1.96596, 1, 0, 0.30667,-99) , 
9, 52.4228, 1, 0, 0.37224,-99) , 
8, 2.53671, 1, 0, 0.479378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0968255,-99) , 
7, 142.959, 1, 0, 0.472016,-99) , 
4, 0.825557, 1, 0, 0.493554,-99)    );
  // itree = 852
  fBoostWeights.push_back(0.0142784);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672026,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537318,-99) , 
9, 110.492, 1, 0, 0.606618,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372761,-99) , 
11, -0.684702, 1, 0, 0.490665,-99) , 
11, 0.646528, 0, 0, 0.520333,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398632,-99) , 
0, 12.5, 0, 0, 0.507242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279729,-99) , 
4, 1.51294, 1, 0, 0.349721,-99) , 
9, 87.2154, 0, 0, 0.445736,-99) , 
12, -95.3888, 0, 0, 0.501453,-99) , 
7, 26.7003, 0, 0, 0.509563,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407883,-99) , 
3, 0.977597, 1, 0, 0.524572,-99) , 
4, 0.476214, 0, 0, 0.584691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578147,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266724,-99) , 
5, 1.6855, 1, 0, 0.373886,-99) , 
4, 1.74717, 0, 0, 0.415905,-99) , 
4, 0.878757, 1, 0, 0.488008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182987,-99) , 
3, 0.991787, 0, 0, 0.35015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0319787,-99) , 
7, 64.15, 1, 0, 0.291468,-99) , 
1, 14.5, 0, 0, 0.442808,-99) , 
7, 28.4843, 1, 0, 0.486109,-99)    );
  // itree = 853
  fBoostWeights.push_back(0.015542);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741058,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655864,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490505,-99) , 
2, 19.5, 0, 0, 0.541021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358652,-99) , 
3, 0.997605, 1, 0, 0.505017,-99) , 
1, 8.5, 1, 0, 0.527554,-99) , 
3, 0.891383, 1, 0, 0.550018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477844,-99) , 
7, 29.3212, 1, 0, 0.613369,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358767,-99) , 
2, 20.5, 0, 0, 0.48169,-99) , 
10, 0.335822, 1, 0, 0.54443,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302768,-99) , 
0, 11.5, 1, 0, 0.414375,-99) , 
7, 13.8989, 0, 0, 0.507227,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481697,-99) , 
3, 0.992096, 1, 0, 0.560575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153553,-99) , 
7, 40.8136, 1, 0, 0.511724,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200531,-99) , 
4, 1.7221, 1, 0, 0.329562,-99) , 
2, 24.5, 0, 0, 0.367044,-99) , 
12, 198.245, 1, 0, 0.406496,-99) , 
5, 1.70634, 1, 0, 0.469313,-99) , 
13, 1.5, 0, 0, 0.494544,-99)    );
  // itree = 854
  fBoostWeights.push_back(0.0069226);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668035,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332423,-99) , 
1, 5.5, 0, 0, 0.499298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221189,-99) , 
7, 58.5768, 1, 0, 0.491461,-99) , 
2, 33.5, 0, 0, 0.500296,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.140548,-99) , 
7, 137.178, 1, 0, 0.496226,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381721,-99) , 
3, 0.961812, 1, 0, 0.454132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159115,-99) , 
2, 35.5, 0, 0, 0.384631,-99) , 
1, 34.5, 1, 0, 0.485484,-99)    );
  // itree = 855
  fBoostWeights.push_back(0.0136783);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.796947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639113,-99) , 
5, 1.54829, 1, 0, 0.706784,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383459,-99) , 
3, 0.994904, 1, 0, 0.52839,-99) , 
7, 32.4965, 1, 0, 0.622047,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491872,-99) , 
12, 2481.04, 0, 0, 0.623025,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233158,-99) , 
7, 99.9284, 1, 0, 0.478465,-99) , 
2, 55.5, 0, 0, 0.513001,-99) , 
10, 0.33159, 1, 0, 0.552178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342863,-99) , 
7, 18.7539, 0, 0, 0.536403,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51721,-99) , 
7, 15.6619, 1, 0, 0.561471,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377003,-99) , 
4, 1.08551, 0, 0, 0.455624,-99) , 
7, 13.9369, 0, 0, 0.50117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224774,-99) , 
5, 2.32273, 1, 0, 0.493508,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217486,-99) , 
0, 17.5, 0, 0, 0.295373,-99) , 
7, 25.094, 1, 0, 0.466698,-99) , 
2, 15.5, 0, 0, 0.498651,-99)    );
  // itree = 856
  fBoostWeights.push_back(0.0128385);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758182,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550298,-99) , 
11, -3.27154, 0, 0, 0.625078,-99) , 
12, 12738.4, 0, 0, 0.655821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257287,-99) , 
5, 2.09643, 1, 0, 0.633558,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479807,-99) , 
5, 1.81146, 1, 0, 0.582605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302234,-99) , 
5, 1.66264, 0, 0, 0.430466,-99) , 
6, 0.465458, 1, 0, 0.497179,-99) , 
8, 1.26288, 0, 0, 0.559288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368737,-99) , 
10, 0.213302, 0, 0, 0.459693,-99) , 
11, 4.62666, 0, 0, 0.49276,-99) , 
4, 0.689749, 1, 0, 0.525856,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434198,-99) , 
11, 3.41401, 0, 0, 0.463109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263065,-99) , 
3, 0.99903, 1, 0, 0.447247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207191,-99) , 
2, 7.5, 0, 0, 0.433879,-99) , 
13, 1.5, 0, 0, 0.461182,-99) , 
11, -1.85525, 1, 0, 0.492374,-99)    );
  // itree = 857
  fBoostWeights.push_back(0.00979932);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.832819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723739,-99) , 
9, 107.73, 1, 0, 0.773167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533307,-99) , 
4, 1.3828, 1, 0, 0.681261,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476813,-99) , 
5, 1.61195, 0, 0, 0.556026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347888,-99) , 
9, 56.8535, 0, 0, 0.503647,-99) , 
8, 1.13371, 0, 0, 0.575493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403093,-99) , 
8, 2.61539, 1, 0, 0.553813,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509694,-99) , 
2, 8.5, 1, 0, 0.564652,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252204,-99) , 
7, 9.0802, 0, 0, 0.468364,-99) , 
0, 10.5, 1, 0, 0.479395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312217,-99) , 
5, 2.28785, 1, 0, 0.474528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299046,-99) , 
3, 0.999392, 1, 0, 0.465532,-99) , 
13, 1.5, 0, 0, 0.492586,-99)    );
  // itree = 858
  fBoostWeights.push_back(0.0100402);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645889,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669728,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447357,-99) , 
0, 16.5, 1, 0, 0.503865,-99) , 
10, 1.21878, 0, 0, 0.520788,-99) , 
6, 0.130861, 1, 0, 0.538504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416235,-99) , 
5, 2.0774, 1, 0, 0.525253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433558,-99) , 
1, 24.5, 1, 0, 0.507967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350107,-99) , 
4, 1.79946, 1, 0, 0.491775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182319,-99) , 
3, 0.999587, 1, 0, 0.480673,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241937,-99) , 
0, 37.5, 1, 0, 0.394168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202721,-99) , 
7, 19.4234, 0, 0, 0.306843,-99) , 
11, 0.170598, 0, 0, 0.451088,-99) , 
11, -0.675612, 1, 0, 0.482231,-99)    );
  // itree = 859
  fBoostWeights.push_back(0.0150187);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260492,-99) , 
5, 2.36425, 1, 0, 0.616056,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216752,-99) , 
2, 24.5, 0, 0, 0.500401,-99) , 
10, 0.672803, 1, 0, 0.587899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264214,-99) , 
5, 2.03465, 1, 0, 0.410737,-99) , 
9, 31.2272, 0, 0, 0.556691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426394,-99) , 
5, 1.84612, 1, 0, 0.55928,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328513,-99) , 
9, 242.005, 1, 0, 0.425343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0236917,-99) , 
4, 1.66891, 1, 0, 0.394411,-99) , 
8, 0.694339, 1, 0, 0.458946,-99) , 
9, 125.937, 1, 0, 0.515315,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484065,-99) , 
12, 6793.8, 0, 0, 0.52138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316015,-99) , 
7, 20.3102, 0, 0, 0.410477,-99) , 
9, 65.8269, 0, 0, 0.488404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292862,-99) , 
3, 0.888414, 0, 0, 0.465559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258236,-99) , 
5, 1.98379, 1, 0, 0.443138,-99) , 
13, 0.5, 0, 0, 0.491032,-99)    );
  // itree = 860
  fBoostWeights.push_back(0.013599);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552325,-99) , 
3, 0.988499, 1, 0, 0.589517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450245,-99) , 
9, 39.0723, 0, 0, 0.566249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348546,-99) , 
11, 0.16534, 0, 0, 0.439646,-99) , 
9, 227.521, 1, 0, 0.541449,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331243,-99) , 
6, 0.50326, 1, 0, 0.400021,-99) , 
10, 0.0941809, 1, 0, 0.445822,-99) , 
8, 0.650156, 0, 0, 0.517889,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688247,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446411,-99) , 
9, 31.9052, 1, 0, 0.493917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339071,-99) , 
3, 0.997568, 1, 0, 0.465542,-99) , 
11, -5.84925, 1, 0, 0.498276,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423074,-99) , 
4, 1.51316, 0, 0, 0.53948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26581,-99) , 
4, 1.83094, 1, 0, 0.474316,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260691,-99) , 
1, 11.5, 1, 0, 0.351966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0650881,-99) , 
5, 2.01881, 1, 0, 0.282588,-99) , 
8, 0.676955, 1, 0, 0.391561,-99) , 
9, 77.2832, 1, 0, 0.438688,-99) , 
5, 1.75067, 1, 0, 0.489561,-99)    );
  // itree = 861
  fBoostWeights.push_back(0.011373);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476039,-99) , 
9, 282.832, 1, 0, 0.604876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430576,-99) , 
1, 41.5, 1, 0, 0.589784,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350192,-99) , 
3, 0.979515, 1, 0, 0.460047,-99) , 
8, 0.435522, 0, 0, 0.567747,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35336,-99) , 
6, 0.0531294, 1, 0, 0.439059,-99) , 
4, 0.0312964, 0, 0, 0.54765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263872,-99) , 
5, 2.06188, 1, 0, 0.585867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509195,-99) , 
10, 0.409691, 1, 0, 0.573873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349826,-99) , 
10, 0.104806, 0, 0, 0.423575,-99) , 
9, 118.286, 1, 0, 0.513248,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550109,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358611,-99) , 
10, 0.057316, 1, 0, 0.386625,-99) , 
8, 0.163372, 1, 0, 0.409794,-99) , 
13, 1.5, 0, 0, 0.444094,-99) , 
0, 10.5, 1, 0, 0.462601,-99) , 
4, 1.21058, 1, 0, 0.505395,-99)    );
  // itree = 862
  fBoostWeights.push_back(0.00439748);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696564,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277729,-99) , 
7, 79.6201, 1, 0, 0.520905,-99) , 
2, 48.5, 0, 0, 0.526945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36284,-99) , 
1, 51.5, 1, 0, 0.521579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357715,-99) , 
7, 120.554, 1, 0, 0.51443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274974,-99) , 
7, 7.37049, 0, 0, 0.507205,-99)    );
  // itree = 863
  fBoostWeights.push_back(0.00934615);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535499,-99) , 
6, 0.495515, 0, 0, 0.666447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278926,-99) , 
1, 30.5, 0, 0, 0.619828,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469802,-99) , 
2, 11.5, 0, 0, 0.588118,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234885,-99) , 
5, 2.14249, 1, 0, 0.491353,-99) , 
8, 0.289325, 1, 0, 0.509478,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360569,-99) , 
10, 0.644219, 0, 0, 0.455735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249401,-99) , 
1, 20.5, 1, 0, 0.406593,-99) , 
9, 40.523, 0, 0, 0.49282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141365,-99) , 
7, 108.847, 1, 0, 0.488492,-99) , 
2, 55.5, 0, 0, 0.49784,-99)    );
  // itree = 864
  fBoostWeights.push_back(0.0136573);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352078,-99) , 
2, 16.5, 0, 0, 0.516406,-99) , 
1, 12.5, 1, 0, 0.560535,-99) , 
3, 0.906825, 1, 0, 0.584127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579777,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237319,-99) , 
7, 13.3243, 1, 0, 0.340073,-99) , 
6, 0.444569, 1, 0, 0.430611,-99) , 
0, 13.5, 0, 0, 0.53965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504653,-99) , 
7, 23.2901, 0, 0, 0.529159,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231492,-99) , 
5, 1.75616, 1, 0, 0.382175,-99) , 
2, 8.5, 0, 0, 0.512786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342456,-99) , 
0, 30.5, 1, 0, 0.501007,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423939,-99) , 
1, 28.5, 1, 0, 0.496559,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245352,-99) , 
8, 0.966503, 1, 0, 0.32419,-99) , 
12, 2654.24, 0, 0, 0.418674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170503,-99) , 
1, 14.5, 0, 0, 0.371649,-99) , 
7, 37.7406, 1, 0, 0.469767,-99) , 
13, 1.5, 0, 0, 0.49072,-99)    );
  // itree = 865
  fBoostWeights.push_back(0.00851058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481344,-99) , 
8, 0.429214, 0, 0, 0.570995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401476,-99) , 
8, 0.661806, 1, 0, 0.461855,-99) , 
3, 0.94223, 0, 0, 0.548685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399903,-99) , 
9, 399.186, 1, 0, 0.538657,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494148,-99) , 
9, 76.3764, 1, 0, 0.532211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386974,-99) , 
2, 24.5, 0, 0, 0.499147,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145564,-99) , 
7, 47.7642, 1, 0, 0.293021,-99) , 
1, 13.5, 0, 0, 0.459092,-99) , 
7, 32.1649, 1, 0, 0.515063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340822,-99) , 
5, 2.28775, 1, 0, 0.508923,-99)    );
  // itree = 866
  fBoostWeights.push_back(0.0116917);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379061,-99) , 
3, 0.934383, 0, 0, 0.52923,-99) , 
4, 0.676206, 1, 0, 0.550445,-99) , 
5, 1.48402, 0, 0, 0.574388,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459514,-99) , 
6, 0.113408, 1, 0, 0.531427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318945,-99) , 
1, 13.5, 0, 0, 0.460202,-99) , 
4, 0.490506, 0, 0, 0.539479,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552032,-99) , 
10, 0.277055, 0, 0, 0.630809,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392653,-99) , 
2, 12.5, 0, 0, 0.506631,-99) , 
10, 0.337364, 1, 0, 0.54368,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448178,-99) , 
12, 323.93, 1, 0, 0.482927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256894,-99) , 
4, 1.82597, 1, 0, 0.45448,-99) , 
10, 0.23772, 0, 0, 0.491378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249218,-99) , 
7, 67.3962, 1, 0, 0.476603,-99) , 
5, 1.55453, 1, 0, 0.506144,-99)    );
  // itree = 867
  fBoostWeights.push_back(0.0129421);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541548,-99) , 
6, 0.826988, 1, 0, 0.647688,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375369,-99) , 
5, 1.24761, 0, 0, 0.490829,-99) , 
8, 1.23937, 0, 0, 0.577143,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486685,-99) , 
8, 1.72747, 1, 0, 0.598117,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407561,-99) , 
8, 0.304779, 1, 0, 0.457526,-99) , 
13, 1.5, 0, 0, 0.50198,-99) , 
5, 1.50771, 1, 0, 0.533634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255193,-99) , 
4, 2.03302, 1, 0, 0.528413,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
12, -4574.1, 0, 0, 0.573143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410291,-99) , 
11, -8.1955, 1, 0, 0.44231,-99) , 
11, 5.31951, 0, 0, 0.473153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267471,-99) , 
5, 2.13812, 1, 0, 0.460484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245557,-99) , 
10, 0.0396056, 0, 0, 0.447505,-99) , 
3, 0.986965, 1, 0, 0.486716,-99)    );
  // itree = 868
  fBoostWeights.push_back(0.0100255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640707,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470737,-99) , 
5, 1.95834, 0, 0, 0.503359,-99) , 
10, 0.107114, 1, 0, 0.535939,-99) , 
6, 0.16348, 1, 0, 0.566472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390403,-99) , 
5, 2.16023, 1, 0, 0.549631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335704,-99) , 
2, 7.5, 0, 0, 0.516142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321458,-99) , 
1, 30.5, 1, 0, 0.504321,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270395,-99) , 
10, 0.587315, 0, 0, 0.422522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141403,-99) , 
4, 1.61556, 1, 0, 0.378842,-99) , 
10, 0.460266, 1, 0, 0.474127,-99) , 
9, 18.9646, 1, 0, 0.482578,-99) , 
13, 1.5, 0, 0, 0.502894,-99)    );
  // itree = 869
  fBoostWeights.push_back(0.00650932);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598147,-99) , 
7, 41.8978, 1, 0, 0.696188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481902,-99) , 
2, 11.5, 0, 0, 0.630193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423309,-99) , 
11, 11.5417, 1, 0, 0.584115,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662713,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430821,-99) , 
6, 0.778282, 1, 0, 0.483847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289448,-99) , 
1, 38.5, 1, 0, 0.475171,-99) , 
2, 56.5, 0, 0, 0.483152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254185,-99) , 
1, 82.5, 1, 0, 0.478021,-99) , 
11, 5.43283, 0, 0, 0.492194,-99)    );
  // itree = 870
  fBoostWeights.push_back(0.00617376);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467992,-99) , 
5, 1.5576, 1, 0, 0.633372,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645333,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245845,-99) , 
7, 65.7741, 1, 0, 0.494861,-99) , 
2, 35.5, 0, 0, 0.502451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289952,-99) , 
7, 7.00705, 0, 0, 0.497082,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182004,-99) , 
3, 0.989572, 1, 0, 0.356335,-99) , 
1, 39.5, 1, 0, 0.487465,-99) , 
10, 1.79096, 0, 0, 0.49599,-99)    );
  // itree = 871
  fBoostWeights.push_back(0.0103336);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749729,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44653,-99) , 
9, 180.438, 0, 0, 0.55245,-99) , 
9, 88.847, 1, 0, 0.638839,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553824,-99) , 
6, 0.104952, 1, 0, 0.570379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410062,-99) , 
3, 0.998905, 1, 0, 0.5498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356634,-99) , 
2, 8.5, 0, 0, 0.47806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282847,-99) , 
4, 1.81402, 1, 0, 0.462289,-99) , 
11, 0.736522, 0, 0, 0.499787,-99) , 
2, 29.5, 0, 0, 0.514157,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288045,-99) , 
9, 175.363, 1, 0, 0.482227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127544,-99) , 
0, 61.5, 0, 0, 0.389236,-99) , 
7, 81.0738, 1, 0, 0.502938,-99)    );
  // itree = 872
  fBoostWeights.push_back(0.00920375);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52778,-99) , 
1, 28.5, 1, 0, 0.644089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189195,-99) , 
7, 58.2186, 1, 0, 0.501044,-99) , 
2, 28.5, 0, 0, 0.517082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188157,-99) , 
7, 108.744, 1, 0, 0.510632,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171925,-99) , 
6, 0.545724, 1, 0, 0.280483,-99) , 
2, 73.5, 0, 0, 0.388542,-99) , 
1, 40.5, 1, 0, 0.49989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232367,-99) , 
1, 5.5, 0, 0, 0.493398,-99)    );
  // itree = 873
  fBoostWeights.push_back(0.0105805);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453081,-99) , 
3, 0.997636, 1, 0, 0.600742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456622,-99) , 
5, 1.33839, 1, 0, 0.515001,-99) , 
12, 1535.75, 1, 0, 0.546077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364636,-99) , 
2, 25.5, 0, 0, 0.432698,-99) , 
5, 0.837662, 0, 0, 0.52752,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4781,-99) , 
4, 1.63277, 0, 0, 0.567162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362185,-99) , 
3, 0.923879, 0, 0, 0.53897,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36508,-99) , 
3, 0.995011, 1, 0, 0.453233,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194234,-99) , 
9, 101.76, 1, 0, 0.266248,-99) , 
8, 1.81581, 1, 0, 0.41786,-99) , 
9, 61.5842, 1, 0, 0.460482,-99) , 
5, 1.64792, 1, 0, 0.49619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.125376,-99) , 
7, 234.461, 1, 0, 0.492767,-99)    );
  // itree = 874
  fBoostWeights.push_back(0.0110177);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711478,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40678,-99) , 
7, 25.4297, 1, 0, 0.497147,-99) , 
0, 36.5, 0, 0, 0.528191,-99) , 
10, 0.0534895, 1, 0, 0.545454,-99) , 
11, 6.84193, 0, 0, 0.559933,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441246,-99) , 
5, 1.93853, 1, 0, 0.520442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279078,-99) , 
3, 0.746808, 0, 0, 0.513479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168992,-99) , 
7, 71.1394, 1, 0, 0.499189,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385751,-99) , 
7, 84.2191, 0, 0, 0.491324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.150605,-99) , 
2, 33.5, 0, 0, 0.376659,-99) , 
1, 27.5, 1, 0, 0.480949,-99) , 
13, 1.5, 0, 0, 0.505972,-99)    );
  // itree = 875
  fBoostWeights.push_back(0.00802553);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555277,-99) , 
5, 0.967785, 0, 0, 0.634651,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403392,-99) , 
0, 28.5, 1, 0, 0.625203,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30769,-99) , 
5, 1.98566, 1, 0, 0.499316,-99) , 
5, 2.04332, 0, 0, 0.52496,-99) , 
5, 1.18525, 1, 0, 0.541118,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487269,-99) , 
4, 1.59295, 0, 0, 0.595458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436615,-99) , 
3, 0.986676, 1, 0, 0.476682,-99) , 
9, 39.7052, 1, 0, 0.500997,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240692,-99) , 
8, 1.64879, 1, 0, 0.352007,-99) , 
3, 0.93423, 0, 0, 0.480096,-99) , 
6, 0.586937, 1, 0, 0.51248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323863,-99) , 
5, 2.36561, 1, 0, 0.508355,-99)    );
  // itree = 876
  fBoostWeights.push_back(0.0095973);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70179,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424794,-99) , 
12, 5293.26, 1, 0, 0.534243,-99) , 
12, 13301.7, 0, 0, 0.550864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351285,-99) , 
9, 31.8926, 0, 0, 0.528751,-99) , 
10, 0.0460877, 1, 0, 0.555174,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487325,-99) , 
12, 14818.4, 1, 0, 0.61756,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340597,-99) , 
3, 0.998922, 1, 0, 0.505454,-99) , 
12, 9919.98, 0, 0, 0.521091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279035,-99) , 
10, 0.0406072, 0, 0, 0.507874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307443,-99) , 
5, 2.05937, 1, 0, 0.495096,-99) , 
8, 0.729774, 1, 0, 0.517731,-99)    );
  // itree = 877
  fBoostWeights.push_back(0.0107625);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569405,-99) , 
5, 1.19778, 1, 0, 0.613706,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3934,-99) , 
9, 120.73, 1, 0, 0.505754,-99) , 
10, 0.18101, 1, 0, 0.536567,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395202,-99) , 
3, 0.983267, 1, 0, 0.503447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332098,-99) , 
10, 0.171641, 0, 0, 0.380331,-99) , 
6, 0.630258, 1, 0, 0.449534,-99) , 
7, 14.3525, 0, 0, 0.510631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314881,-99) , 
9, 475.07, 1, 0, 0.501265,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290656,-99) , 
11, -0.38665, 1, 0, 0.415823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112626,-99) , 
1, 9.5, 0, 0, 0.360237,-99) , 
5, 2.13964, 1, 0, 0.490117,-99)    );
  // itree = 878
  fBoostWeights.push_back(0.0162839);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599306,-99) , 
3, 0.99377, 1, 0, 0.683779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41822,-99) , 
2, 19.5, 0, 0, 0.548693,-99) , 
10, 0.196131, 1, 0, 0.589744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424849,-99) , 
8, 0.439699, 0, 0, 0.563472,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458464,-99) , 
5, 1.24243, 0, 0, 0.548951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355954,-99) , 
3, 0.988495, 1, 0, 0.454333,-99) , 
2, 12.5, 0, 0, 0.524572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523969,-99) , 
6, 0.326994, 0, 0, 0.60888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380815,-99) , 
4, 1.85187, 1, 0, 0.563441,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550587,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295223,-99) , 
1, 10.5, 1, 0, 0.401506,-99) , 
7, 23.396, 0, 0, 0.459442,-99) , 
11, -0.330898, 1, 0, 0.504984,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647677,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377483,-99) , 
11, -5.30389, 1, 0, 0.417505,-99) , 
0, 10.5, 1, 0, 0.451198,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246926,-99) , 
3, 0.979673, 0, 0, 0.363042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157066,-99) , 
4, 1.59708, 1, 0, 0.292347,-99) , 
9, 130.427, 1, 0, 0.400378,-99) , 
8, 0.630584, 1, 0, 0.444369,-99) , 
5, 1.54939, 1, 0, 0.482928,-99)    );
  // itree = 879
  fBoostWeights.push_back(0.00557081);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719153,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411108,-99) , 
9, 33.0515, 0, 0, 0.503054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306427,-99) , 
7, 64.6113, 1, 0, 0.494953,-99) , 
2, 49.5, 0, 0, 0.502307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27515,-99) , 
1, 60.5, 1, 0, 0.497803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254503,-99) , 
7, 129.167, 1, 0, 0.489197,-99)    );
  // itree = 880
  fBoostWeights.push_back(0.00514967);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571919,-99) , 
11, 4.59209, 1, 0, 0.6073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46612,-99) , 
5, 2.03449, 1, 0, 0.58706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441868,-99) , 
12, 1023.83, 0, 0, 0.51118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297306,-99) , 
3, 0.999103, 1, 0, 0.501568,-99) , 
11, 3.68248, 0, 0, 0.518152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305854,-99) , 
3, 0.999746, 1, 0, 0.51386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311429,-99) , 
7, 7.39556, 0, 0, 0.508876,-99)    );
  // itree = 881
  fBoostWeights.push_back(0.00708913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468632,-99) , 
6, 0.848637, 1, 0, 0.631687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522958,-99) , 
8, 2.2252, 0, 0, 0.563114,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289625,-99) , 
3, 0.935184, 0, 0, 0.471108,-99) , 
3, 0.917489, 1, 0, 0.487846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220271,-99) , 
5, 2.36593, 1, 0, 0.482101,-99) , 
11, -6.74278, 1, 0, 0.492442,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13642,-99) , 
5, 1.74505, 1, 0, 0.338742,-99) , 
3, 0.99939, 1, 0, 0.483456,-99)    );
  // itree = 882
  fBoostWeights.push_back(0.0117888);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709838,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45273,-99) , 
7, 29.5475, 1, 0, 0.531865,-99) , 
2, 28.5, 0, 0, 0.542957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342488,-99) , 
1, 34.5, 1, 0, 0.53335,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401883,-99) , 
12, 3108.53, 0, 0, 0.542582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244626,-99) , 
0, 62.5, 0, 0, 0.410011,-99) , 
7, 64.6653, 1, 0, 0.516834,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705177,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370653,-99) , 
2, 28.5, 0, 0, 0.450442,-99) , 
12, 8654.36, 0, 0, 0.521458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148662,-99) , 
8, 0.281758, 1, 0, 0.233723,-99) , 
9, 208.885, 0, 0, 0.334309,-99) , 
10, 0.280728, 0, 0, 0.418146,-99) , 
5, 1.96478, 1, 0, 0.499388,-99)    );
  // itree = 883
  fBoostWeights.push_back(0.00892856);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433719,-99) , 
6, 0.932251, 1, 0, 0.576619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473767,-99) , 
12, 7494.75, 0, 0, 0.501583,-99) , 
11, 2.56673, 0, 0, 0.521061,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556122,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101527,-99) , 
7, 22.1718, 1, 0, 0.34262,-99) , 
1, 15.5, 0, 0, 0.429791,-99) , 
4, 1.76663, 1, 0, 0.509579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268563,-99) , 
1, 5.5, 0, 0, 0.503867,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.103401,-99) , 
0, 86.5, 0, 0, 0.344386,-99) , 
7, 108.226, 1, 0, 0.495443,-99)    );
  // itree = 884
  fBoostWeights.push_back(0.00709457);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378409,-99) , 
7, 232.497, 1, 0, 0.668559,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502944,-99) , 
6, 1.01674, 0, 0, 0.513922,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185671,-99) , 
10, 0.626759, 0, 0, 0.404724,-99) , 
9, 33.3719, 0, 0, 0.50101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203518,-99) , 
7, 103.292, 1, 0, 0.495518,-99) , 
2, 58.5, 0, 0, 0.504209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219897,-99) , 
5, 2.36561, 1, 0, 0.498682,-99)    );
  // itree = 885
  fBoostWeights.push_back(0.0098831);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52838,-99) , 
0, 18.5, 0, 0, 0.611598,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771321,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479269,-99) , 
6, 0.518205, 1, 0, 0.539902,-99) , 
2, 49.5, 0, 0, 0.557408,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256,-99) , 
7, 21.5674, 1, 0, 0.384978,-99) , 
9, 273.304, 1, 0, 0.530749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40221,-99) , 
1, 9.5, 0, 0, 0.485292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212484,-99) , 
4, 2.14015, 1, 0, 0.481795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270086,-99) , 
10, 0.362421, 1, 0, 0.384391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134151,-99) , 
2, 8.5, 0, 0, 0.335679,-99) , 
11, 0.0608753, 0, 0, 0.458591,-99) , 
11, -0.659946, 1, 0, 0.491442,-99) , 
11, 6.68893, 0, 0, 0.502694,-99)    );
  // itree = 886
  fBoostWeights.push_back(0.00937004);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726357,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737812,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417094,-99) , 
3, 0.992752, 1, 0, 0.520869,-99) , 
1, 21.5, 1, 0, 0.607835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467156,-99) , 
6, 0.204319, 1, 0, 0.511289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280755,-99) , 
7, 26.9089, 1, 0, 0.470811,-99) , 
2, 18.5, 0, 0, 0.522753,-99) , 
3, 0.900673, 1, 0, 0.548701,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306507,-99) , 
7, 7.39197, 0, 0, 0.478453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124647,-99) , 
0, 64.5, 1, 0, 0.471502,-99) , 
2, 46.5, 0, 0, 0.481975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230148,-99) , 
7, 188.303, 1, 0, 0.476998,-99) , 
13, 1.5, 0, 0, 0.499139,-99)    );
  // itree = 887
  fBoostWeights.push_back(0.00661777);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591074,-99) , 
6, 0.833381, 1, 0, 0.665697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505098,-99) , 
2, 27.5, 0, 0, 0.523486,-99) , 
11, 6.40149, 0, 0, 0.533666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354302,-99) , 
3, 0.99938, 1, 0, 0.525037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310452,-99) , 
12, -13714.6, 0, 0, 0.517779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301841,-99) , 
13, 0.5, 0, 0, 0.445108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232987,-99) , 
3, 0.996208, 1, 0, 0.390903,-99) , 
10, 0.0479539, 0, 0, 0.504817,-99)    );
  // itree = 888
  fBoostWeights.push_back(0.00789055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570011,-99) , 
12, 556.311, 1, 0, 0.630119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407122,-99) , 
10, 0.133511, 1, 0, 0.50247,-99) , 
1, 15.5, 0, 0, 0.551104,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481995,-99) , 
11, -7.10282, 1, 0, 0.493456,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291999,-99) , 
10, 0.0325142, 1, 0, 0.336766,-99) , 
10, 0.0475316, 0, 0, 0.478555,-99) , 
8, 0.732518, 1, 0, 0.503834,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309726,-99) , 
3, 0.999619, 1, 0, 0.497915,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262146,-99) , 
10, 0.266374, 0, 0, 0.367338,-99) , 
5, 2.1806, 1, 0, 0.489697,-99)    );
  // itree = 889
  fBoostWeights.push_back(0.0112839);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294268,-99) , 
1, 38.5, 1, 0, 0.523976,-99) , 
2, 55.5, 0, 0, 0.534784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391292,-99) , 
10, 0.0444228, 0, 0, 0.521612,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515073,-99) , 
12, -152.859, 1, 0, 0.558953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324512,-99) , 
7, 54.7008, 1, 0, 0.538338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299264,-99) , 
6, 0.581272, 1, 0, 0.481047,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15791,-99) , 
8, 2.39406, 0, 0, 0.253368,-99) , 
13, 1.5, 0, 0, 0.346989,-99) , 
8, 0.609692, 1, 0, 0.450841,-99) , 
5, 1.84086, 1, 0, 0.501403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.174391,-99) , 
7, 221.21, 1, 0, 0.497702,-99)    );
  // itree = 890
  fBoostWeights.push_back(0.00905098);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.768223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624695,-99) , 
6, 0.383698, 0, 0, 0.706155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483516,-99) , 
9, 459.23, 1, 0, 0.643774,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629634,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407805,-99) , 
8, 0.171465, 0, 0, 0.475909,-99) , 
6, 0.901595, 0, 0, 0.506868,-99) , 
9, 204.605, 0, 0, 0.551229,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508125,-99) , 
12, 11547.8, 1, 0, 0.600394,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34922,-99) , 
3, 0.998974, 1, 0, 0.483597,-99) , 
12, 8474.44, 0, 0, 0.501434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209118,-99) , 
9, 45.6528, 1, 0, 0.320016,-99) , 
4, 1.7636, 1, 0, 0.486463,-99) , 
8, 0.606117, 1, 0, 0.50702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206768,-99) , 
5, 2.53578, 1, 0, 0.504485,-99)    );
  // itree = 891
  fBoostWeights.push_back(0.00976162);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478894,-99) , 
4, 1.46948, 1, 0, 0.59739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467659,-99) , 
9, 108.175, 1, 0, 0.516676,-99) , 
9, 252.036, 0, 0, 0.53283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272765,-99) , 
5, 2.36561, 1, 0, 0.526786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260546,-99) , 
7, 7.39497, 0, 0, 0.519243,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364154,-99) , 
11, -4.74923, 1, 0, 0.419281,-99) , 
11, 6.92642, 0, 0, 0.454272,-99) , 
2, 52.5, 0, 0, 0.477327,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4183,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191614,-99) , 
6, 0.908646, 0, 0, 0.252159,-99) , 
3, 0.997743, 1, 0, 0.333627,-99) , 
5, 1.81159, 1, 0, 0.437671,-99) , 
3, 0.99351, 1, 0, 0.489318,-99)    );
  // itree = 892
  fBoostWeights.push_back(0.00659046);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404596,-99) , 
9, 67.7297, 0, 0, 0.610374,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476199,-99) , 
9, 97.7649, 1, 0, 0.505946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198011,-99) , 
5, 2.36511, 1, 0, 0.50339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291465,-99) , 
7, 7.41294, 0, 0, 0.496791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 2.14068, 1, 0, 0.491192,-99) , 
8, 0.112002, 1, 0, 0.502916,-99)    );
  // itree = 893
  fBoostWeights.push_back(0.0111626);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475789,-99) , 
1, 27.5, 1, 0, 0.587191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420604,-99) , 
7, 21.7919, 0, 0, 0.563821,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379314,-99) , 
4, 0.488967, 0, 0, 0.505612,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15662,-99) , 
4, 1.59235, 1, 0, 0.384361,-99) , 
7, 22.6922, 1, 0, 0.483594,-99) , 
2, 17.5, 0, 0, 0.50886,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407367,-99) , 
1, 60.5, 1, 0, 0.565684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108125,-99) , 
1, 20, 0, 0, 0.501838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0519798,-99) , 
0, 51.5, 0, 0, 0.40844,-99) , 
7, 80.275, 1, 0, 0.500404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347071,-99) , 
5, 0.354639, 0, 0, 0.493852,-99)    );
  // itree = 894
  fBoostWeights.push_back(0.0108795);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548377,-99) , 
6, 0.0967522, 0, 0, 0.612778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405984,-99) , 
1, 9.5, 0, 0, 0.57687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486801,-99) , 
7, 14.5974, 0, 0, 0.540181,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309669,-99) , 
0, 18.5, 0, 0, 0.456289,-99) , 
7, 19.6936, 1, 0, 0.49498,-99) , 
6, 0.203129, 1, 0, 0.513245,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306685,-99) , 
4, 1.92872, 1, 0, 0.452584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136097,-99) , 
4, 1.37376, 0, 0, 0.403845,-99) , 
5, 2.06651, 1, 0, 0.501397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299073,-99) , 
7, 14.8542, 1, 0, 0.371924,-99) , 
9, 409.603, 1, 0, 0.492536,-99)    );
  // itree = 895
  fBoostWeights.push_back(0.0132737);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.773901,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474669,-99) , 
1, 13.5, 1, 0, 0.576875,-99) , 
5, 1.42534, 1, 0, 0.604638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453886,-99) , 
5, 1.23932, 0, 0, 0.575185,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443641,-99) , 
9, 115.627, 1, 0, 0.540267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33007,-99) , 
5, 1.64397, 1, 0, 0.471615,-99) , 
7, 31.3926, 1, 0, 0.547587,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509372,-99) , 
6, 0.725427, 1, 0, 0.645442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411231,-99) , 
8, 2.05222, 1, 0, 0.501909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349128,-99) , 
8, 0.377502, 0, 0, 0.472879,-99) , 
11, -6.62477, 1, 0, 0.502795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536467,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307505,-99) , 
11, -4.95635, 1, 0, 0.375292,-99) , 
0, 25.5, 0, 0, 0.421196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223406,-99) , 
11, -0.415048, 1, 0, 0.386145,-99) , 
13, 0.5, 0, 0, 0.46563,-99) , 
12, 3286.92, 1, 0, 0.509587,-99)    );
  // itree = 896
  fBoostWeights.push_back(0.0112428);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371755,-99) , 
12, -15303.1, 0, 0, 0.588334,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376293,-99) , 
5, 1.94141, 1, 0, 0.619216,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381496,-99) , 
7, 35.8678, 1, 0, 0.527948,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374054,-99) , 
6, 1.00767, 0, 0, 0.435432,-99) , 
6, 0.784425, 1, 0, 0.493679,-99) , 
3, 0.97069, 1, 0, 0.519366,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45552,-99) , 
1, 15.5, 0, 0, 0.498546,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208979,-99) , 
4, 1.60016, 1, 0, 0.377666,-99) , 
11, 0.530286, 0, 0, 0.4598,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141561,-99) , 
12, -254.501, 1, 0, 0.294031,-99) , 
3, 0.997674, 1, 0, 0.442722,-99) , 
11, -0.935833, 1, 0, 0.474971,-99) , 
11, 8.30709, 0, 0, 0.483469,-99)    );
  // itree = 897
  fBoostWeights.push_back(0.0132517);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374338,-99) , 
1, 10.5, 0, 0, 0.617097,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324741,-99) , 
13, 0.5, 0, 0, 0.478081,-99) , 
7, 24.9647, 0, 0, 0.566901,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452789,-99) , 
3, 0.987657, 1, 0, 0.519834,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307522,-99) , 
10, 0.388758, 1, 0, 0.488643,-99) , 
9, 103.528, 1, 0, 0.526481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342118,-99) , 
3, 0.999442, 1, 0, 0.514221,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392215,-99) , 
4, 1.74391, 1, 0, 0.556058,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329874,-99) , 
4, 0.628594, 1, 0, 0.40946,-99) , 
4, 0.948234, 0, 0, 0.509803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354776,-99) , 
6, 0.935071, 1, 0, 0.485238,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301678,-99) , 
3, 0.982274, 1, 0, 0.390339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14447,-99) , 
4, 1.47165, 1, 0, 0.322017,-99) , 
7, 16.9266, 1, 0, 0.444807,-99) , 
2, 12.5, 0, 0, 0.486649,-99)    );
  // itree = 898
  fBoostWeights.push_back(0.00919702);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501025,-99) , 
7, 29.3486, 1, 0, 0.59164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424284,-99) , 
9, 73.4898, 0, 0, 0.539988,-99) , 
2, 33.5, 0, 0, 0.58906,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643207,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270737,-99) , 
5, 2.36524, 1, 0, 0.491649,-99) , 
11, 6.39912, 0, 0, 0.502988,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328782,-99) , 
5, 1.59832, 1, 0, 0.454769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0447327,-99) , 
1, 16.5, 0, 0, 0.383902,-99) , 
7, 59.8474, 1, 0, 0.490966,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299181,-99) , 
3, 0.99939, 1, 0, 0.479737,-99) , 
5, 1.06441, 1, 0, 0.497517,-99)    );
  // itree = 899
  fBoostWeights.push_back(0.0125847);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451414,-99) , 
8, 0.589231, 0, 0, 0.554813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399635,-99) , 
8, 2.74952, 1, 0, 0.533443,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35461,-99) , 
4, 0.990286, 0, 0, 0.426259,-99) , 
0, 13.5, 0, 0, 0.505355,-99) , 
12, 12365.4, 0, 0, 0.519098,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695963,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400844,-99) , 
7, 19.3402, 0, 0, 0.495195,-99) , 
9, 171.148, 0, 0, 0.584404,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391654,-99) , 
9, 119.924, 1, 0, 0.464361,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159374,-99) , 
0, 52.5, 1, 0, 0.447522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0975272,-99) , 
10, 0.237458, 0, 0, 0.220754,-99) , 
5, 2.06597, 1, 0, 0.40814,-99) , 
8, 0.256512, 1, 0, 0.451982,-99) , 
5, 1.66156, 1, 0, 0.490351,-99)    );
  // itree = 900
  fBoostWeights.push_back(0.0144602);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.818932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582947,-99) , 
7, 32.1367, 1, 0, 0.63834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36283,-99) , 
7, 24.6143, 1, 0, 0.527703,-99) , 
2, 17.5, 0, 0, 0.571996,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581247,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326373,-99) , 
10, 0.300276, 0, 0, 0.426232,-99) , 
4, 1.29477, 0, 0, 0.476015,-99) , 
6, 0.930122, 1, 0, 0.541886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403322,-99) , 
8, 0.38504, 0, 0, 0.525097,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50103,-99) , 
9, 75.2179, 0, 0, 0.598718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258688,-99) , 
4, 1.66657, 1, 0, 0.44086,-99) , 
8, 1.26336, 1, 0, 0.540451,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360184,-99) , 
6, 0.350299, 0, 0, 0.495182,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229607,-99) , 
2, 13.5, 0, 0, 0.366034,-99) , 
0, 14.5, 1, 0, 0.424551,-99) , 
13, 1.5, 0, 0, 0.463044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0946742,-99) , 
1, 50.5, 1, 0, 0.450484,-99) , 
5, 1.60408, 1, 0, 0.489426,-99)    );
  // itree = 901
  fBoostWeights.push_back(0.00705992);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729712,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475611,-99) , 
12, 1152.82, 0, 0, 0.56254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454677,-99) , 
11, 0.40794, 0, 0, 0.494414,-99) , 
13, 1.5, 0, 0, 0.5151,-99) , 
5, 2.23792, 0, 0, 0.519889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337922,-99) , 
5, 2.28871, 1, 0, 0.513935,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558884,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154026,-99) , 
11, 8.06359, 0, 0, 0.333995,-99) , 
11, -4.92733, 1, 0, 0.409557,-99) , 
3, 0.999109, 1, 0, 0.505276,-99)    );
  // itree = 902
  fBoostWeights.push_back(0.00644394);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532461,-99) , 
9, 119.594, 0, 0, 0.643835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637338,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375046,-99) , 
1, 34.5, 1, 0, 0.504206,-99) , 
4, -0.0393005, 1, 0, 0.511578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374272,-99) , 
5, 0.459431, 0, 0, 0.505036,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344574,-99) , 
8, 0.406594, 1, 0, 0.443759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0582281,-99) , 
7, 9.91513, 0, 0, 0.408138,-99) , 
5, 2.05201, 1, 0, 0.495025,-99) , 
8, 0.0891197, 1, 0, 0.506476,-99)    );
  // itree = 903
  fBoostWeights.push_back(0.010045);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511957,-99) , 
7, 22.2075, 0, 0, 0.610222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13413,-99) , 
7, 107.492, 1, 0, 0.487437,-99) , 
4, 1.5271, 1, 0, 0.579589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326134,-99) , 
1, 83.5, 1, 0, 0.567317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349215,-99) , 
9, 355.709, 1, 0, 0.549191,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506095,-99) , 
5, 2.23172, 0, 0, 0.515035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329366,-99) , 
5, 2.32311, 1, 0, 0.509372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303358,-99) , 
7, 7.09675, 0, 0, 0.500331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173708,-99) , 
3, 0.984921, 1, 0, 0.280355,-99) , 
7, 27.0101, 1, 0, 0.475997,-99) , 
2, 15.5, 0, 0, 0.508638,-99)    );
  // itree = 904
  fBoostWeights.push_back(0.0111091);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549785,-99) , 
0, 62.5, 0, 0, 0.572667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396528,-99) , 
1, 70.5, 1, 0, 0.559027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370598,-99) , 
3, 0.998749, 1, 0, 0.541491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339924,-99) , 
2, 11.5, 0, 0, 0.527911,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392393,-99) , 
8, 0.274721, 0, 0, 0.534959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270047,-99) , 
4, 0.923968, 1, 0, 0.378906,-99) , 
6, 0.154533, 0, 0, 0.506646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336798,-99) , 
4, 1.82942, 1, 0, 0.491504,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137173,-99) , 
8, 0.54768, 0, 0, 0.321003,-99) , 
3, 0.997178, 0, 0, 0.379802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 88.4923, 1, 0, 0.362683,-99) , 
10, 0.289122, 1, 0, 0.456324,-99) , 
1, 14.5, 0, 0, 0.486573,-99)    );
  // itree = 905
  fBoostWeights.push_back(0.0089014);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462943,-99) , 
12, 3886.46, 1, 0, 0.650886,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543479,-99) , 
11, -1.96677, 0, 0, 0.611197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497247,-99) , 
3, 0.97551, 0, 0, 0.521072,-99) , 
11, -1.22165, 1, 0, 0.54572,-99) , 
5, 2.05011, 0, 0, 0.560085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277562,-99) , 
5, 2.29389, 1, 0, 0.551319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699188,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271597,-99) , 
5, 2.26423, 1, 0, 0.471886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107408,-99) , 
7, 96.01, 1, 0, 0.464011,-99) , 
2, 58.5, 0, 0, 0.473504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231961,-99) , 
1, 49.5, 1, 0, 0.463276,-99) , 
3, 0.986189, 1, 0, 0.505988,-99)    );
  // itree = 906
  fBoostWeights.push_back(0.00914425);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539463,-99) , 
0, 24.5, 0, 0, 0.608237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313493,-99) , 
6, 0.593034, 1, 0, 0.48006,-99) , 
3, 0.927644, 0, 0, 0.577377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315847,-99) , 
7, 14.3647, 0, 0, 0.56031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657955,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376658,-99) , 
0, 18.5, 1, 0, 0.501089,-99) , 
11, 9.39312, 0, 0, 0.511918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239226,-99) , 
7, 41.3688, 1, 0, 0.495031,-99) , 
1, 14.5, 0, 0, 0.520232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336656,-99) , 
1, 51.5, 1, 0, 0.51127,-99)    );
  // itree = 907
  fBoostWeights.push_back(0.00557685);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55623,-99) , 
8, 1.72383, 0, 0, 0.614774,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479221,-99) , 
8, 0.558179, 1, 0, 0.496679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265789,-99) , 
7, 62.9613, 1, 0, 0.493225,-99) , 
2, 30.5, 0, 0, 0.50284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166843,-99) , 
7, 134.526, 1, 0, 0.499138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229282,-99) , 
2, 51.5, 0, 0, 0.351844,-99) , 
1, 37.5, 1, 0, 0.487132,-99)    );
  // itree = 908
  fBoostWeights.push_back(0.0105312);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594315,-99) , 
0, 41.5, 0, 0, 0.701711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455963,-99) , 
9, 34.0263, 0, 0, 0.612507,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187028,-99) , 
7, 126.974, 1, 0, 0.450453,-99) , 
9, 80.031, 1, 0, 0.517617,-99) , 
13, 1.5, 0, 0, 0.578803,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50117,-99) , 
12, 12820.8, 0, 0, 0.51231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304196,-99) , 
7, 7.70893, 0, 0, 0.503784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217971,-99) , 
0, 29.5, 1, 0, 0.490378,-99) , 
2, 24.5, 0, 0, 0.511848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31653,-99) , 
9, 460.784, 1, 0, 0.502268,-99)    );
  // itree = 909
  fBoostWeights.push_back(0.00784364);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71989,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464399,-99) , 
7, 41.1382, 1, 0, 0.544492,-99) , 
5, 2.23826, 0, 0, 0.561907,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44012,-99) , 
9, 70.3953, 1, 0, 0.490406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190814,-99) , 
5, 2.17995, 1, 0, 0.476617,-99) , 
3, 0.994821, 1, 0, 0.524049,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413951,-99) , 
11, 0.545484, 0, 0, 0.463699,-99) , 
7, 62.8751, 0, 0, 0.487607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307133,-99) , 
6, 0.989731, 1, 0, 0.465194,-99) , 
3, 0.954592, 0, 0, 0.509319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330905,-99) , 
2, 6.5, 0, 0, 0.50493,-99)    );
  // itree = 910
  fBoostWeights.push_back(0.00745913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521098,-99) , 
11, 9.19896, 1, 0, 0.604975,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433659,-99) , 
8, 1.96287, 1, 0, 0.520623,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326226,-99) , 
8, 0.999574, 0, 0, 0.445963,-99) , 
9, 55.9809, 0, 0, 0.500201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387119,-99) , 
9, 99.0031, 1, 0, 0.449318,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145323,-99) , 
5, 2.06258, 1, 0, 0.426425,-99) , 
3, 0.996271, 1, 0, 0.484333,-99) , 
12, -9211.54, 1, 0, 0.492416,-99) , 
12, 23228.9, 0, 0, 0.496801,-99)    );
  // itree = 911
  fBoostWeights.push_back(0.0103775);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633074,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500251,-99) , 
9, 242.598, 0, 0, 0.524343,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329224,-99) , 
4, 0.836933, 1, 0, 0.411223,-99) , 
8, 2.52031, 1, 0, 0.506396,-99) , 
11, -1.229, 1, 0, 0.519795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450553,-99) , 
12, 6848.62, 0, 0, 0.539223,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343205,-99) , 
0, 55.5, 0, 0, 0.399502,-99) , 
10, 0.367264, 1, 0, 0.482326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268344,-99) , 
9, 322.38, 1, 0, 0.455156,-99) , 
12, 4880.46, 1, 0, 0.499155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372786,-99) , 
11, -3.47251, 1, 0, 0.449668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241883,-99) , 
7, 71.9141, 1, 0, 0.422623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2082,-99) , 
0, 13.5, 0, 0, 0.366621,-99) , 
4, 1.82942, 1, 0, 0.487003,-99)    );
  // itree = 912
  fBoostWeights.push_back(0.00910105);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45398,-99) , 
8, 2.33746, 1, 0, 0.553905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362253,-99) , 
3, 0.999201, 1, 0, 0.541941,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48713,-99) , 
1, 15.5, 0, 0, 0.564385,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235372,-99) , 
12, 2914.36, 1, 0, 0.326341,-99) , 
8, 1.21052, 0, 0, 0.439325,-99) , 
9, 55.9609, 0, 0, 0.515599,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454408,-99) , 
3, 0.994663, 0, 0, 0.546436,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429409,-99) , 
8, 0.507004, 1, 0, 0.453133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276936,-99) , 
6, 0.700385, 0, 0, 0.435958,-99) , 
9, 47.7019, 1, 0, 0.462414,-99) , 
6, 0.621422, 1, 0, 0.492839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0879524,-99) , 
4, 2.3208, 1, 0, 0.490832,-99)    );
  // itree = 913
  fBoostWeights.push_back(0.00670054);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571957,-99) , 
9, 113.477, 1, 0, 0.658239,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443435,-99) , 
3, 0.993126, 1, 0, 0.49113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292583,-99) , 
7, 53.1046, 1, 0, 0.482026,-99) , 
2, 33.5, 0, 0, 0.493353,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229509,-99) , 
0, 62.5, 0, 0, 0.386397,-99) , 
1, 37.5, 1, 0, 0.484215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29605,-99) , 
7, 142.832, 1, 0, 0.479132,-99)    );
  // itree = 914
  fBoostWeights.push_back(0.0100351);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57502,-99) , 
6, 0.173642, 1, 0, 0.594719,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405497,-99) , 
9, 151.765, 0, 0, 0.479313,-99) , 
12, -1134.95, 0, 0, 0.567105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358171,-99) , 
9, 33.3352, 0, 0, 0.547094,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541432,-99) , 
5, 1.77896, 0, 0, 0.628535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166364,-99) , 
4, 1.76052, 1, 0, 0.573325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628754,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351686,-99) , 
9, 217.905, 1, 0, 0.449311,-99) , 
8, 0.0733831, 1, 0, 0.467177,-99) , 
3, 0.921169, 1, 0, 0.488794,-99) , 
5, 1.51899, 1, 0, 0.513922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270707,-99) , 
1, 5.5, 0, 0, 0.508197,-99)    );
  // itree = 915
  fBoostWeights.push_back(0.00394952);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71893,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468475,-99) , 
1, 10.5, 0, 0, 0.508435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30711,-99) , 
2, 6.5, 0, 0, 0.503688,-99) , 
12, 23051.3, 0, 0, 0.508026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251396,-99) , 
3, 0.999764, 1, 0, 0.503005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128958,-99) , 
5, 2.5356, 1, 0, 0.499811,-99)    );
  // itree = 916
  fBoostWeights.push_back(0.00653793);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675949,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500132,-99) , 
3, 0.997117, 0, 0, 0.507771,-99) , 
9, 556.382, 0, 0, 0.515727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439316,-99) , 
5, 1.81781, 1, 0, 0.557426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274332,-99) , 
11, 6.54492, 0, 0, 0.357198,-99) , 
11, -5.18296, 1, 0, 0.431963,-99) , 
3, 0.99762, 1, 0, 0.501472,-99) , 
11, 12.8151, 0, 0, 0.506092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323887,-99) , 
7, 7.43265, 0, 0, 0.500476,-99)    );
  // itree = 917
  fBoostWeights.push_back(0.011258);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574746,-99) , 
9, 103.437, 1, 0, 0.64228,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392381,-99) , 
8, 1.0351, 0, 0, 0.535012,-99) , 
9, 66.4102, 0, 0, 0.593186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328297,-99) , 
6, 0.611876, 1, 0, 0.453648,-99) , 
10, 0.131349, 0, 0, 0.548415,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468023,-99) , 
5, 1.61405, 1, 0, 0.50987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348572,-99) , 
4, 0.122125, 0, 0, 0.494651,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244207,-99) , 
8, 0.376762, 0, 0, 0.423347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0736491,-99) , 
2, 21.5, 0, 0, 0.38506,-99) , 
0, 30.5, 1, 0, 0.4684,-99) , 
13, 1.5, 0, 0, 0.492473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209584,-99) , 
4, 2.14348, 1, 0, 0.487586,-99)    );
  // itree = 918
  fBoostWeights.push_back(0.0107966);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706634,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685809,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346273,-99) , 
11, 1.0742, 0, 0, 0.446378,-99) , 
10, 1.14833, 0, 0, 0.525257,-99) , 
1, 28.5, 1, 0, 0.578739,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270749,-99) , 
5, 2.36604, 1, 0, 0.511419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338296,-99) , 
5, 0.858015, 0, 0, 0.499807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209608,-99) , 
6, 0.617324, 1, 0, 0.299238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0828955,-99) , 
7, 63.698, 1, 0, 0.243914,-99) , 
7, 40.9665, 1, 0, 0.478881,-99) , 
2, 30.5, 0, 0, 0.493595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257656,-99) , 
7, 185.347, 1, 0, 0.489811,-99)    );
  // itree = 919
  fBoostWeights.push_back(0.00728984);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716491,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393385,-99) , 
8, 2.56707, 1, 0, 0.508035,-99) , 
3, 0.903407, 1, 0, 0.521686,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472715,-99) , 
6, 0.0808825, 1, 0, 0.48859,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240545,-99) , 
5, 1.59596, 0, 0, 0.363939,-99) , 
2, 9.5, 0, 0, 0.463811,-99) , 
11, 0.725465, 0, 0, 0.490214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19509,-99) , 
1, 92.5, 1, 0, 0.485959,-99) , 
11, -10.7535, 1, 0, 0.495789,-99)    );
  // itree = 920
  fBoostWeights.push_back(0.0107672);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.798876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64311,-99) , 
7, 36.8322, 1, 0, 0.708013,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47865,-99) , 
7, 59.5321, 1, 0, 0.578375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418408,-99) , 
5, 1.7573, 1, 0, 0.523422,-99) , 
11, -1.48696, 1, 0, 0.589955,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604902,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316657,-99) , 
5, 1.30321, 1, 0, 0.397095,-99) , 
13, 1.5, 0, 0, 0.46192,-99) , 
6, 0.662587, 1, 0, 0.531261,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721577,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440605,-99) , 
5, 1.46206, 1, 0, 0.468618,-99) , 
5, 2.23579, 0, 0, 0.47713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249095,-99) , 
5, 2.29884, 1, 0, 0.468982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204878,-99) , 
7, 36.3764, 1, 0, 0.456856,-99) , 
2, 19.5, 0, 0, 0.481792,-99)    );
  // itree = 921
  fBoostWeights.push_back(0.00819395);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503357,-99) , 
11, 1.06571, 1, 0, 0.641349,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441031,-99) , 
7, 21.8776, 0, 0, 0.5547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616154,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458049,-99) , 
11, -6.63849, 1, 0, 0.471398,-99) , 
2, 16.5, 0, 0, 0.500548,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0600584,-99) , 
1, 16.5, 0, 0, 0.276864,-99) , 
7, 65.0654, 1, 0, 0.487237,-99) , 
2, 55.5, 0, 0, 0.49523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220754,-99) , 
1, 82.5, 1, 0, 0.48969,-99)    );
  // itree = 922
  fBoostWeights.push_back(0.00930025);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587483,-99) , 
0, 50.5, 0, 0, 0.618618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372639,-99) , 
1, 11.5, 0, 0, 0.592758,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296579,-99) , 
10, 0.919629, 0, 0, 0.449876,-99) , 
1, 40.5, 1, 0, 0.562225,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636513,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187719,-99) , 
7, 6.94076, 0, 0, 0.467205,-99) , 
11, -6.76943, 1, 0, 0.478212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139252,-99) , 
1, 12.5, 0, 0, 0.326111,-99) , 
7, 36.3083, 1, 0, 0.466523,-99) , 
2, 21.5, 0, 0, 0.491292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267858,-99) , 
7, 145.284, 1, 0, 0.485752,-99)    );
  // itree = 923
  fBoostWeights.push_back(0.00778915);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682671,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493373,-99) , 
3, 0.987408, 1, 0, 0.564125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4129,-99) , 
9, 62.1215, 0, 0, 0.525518,-99) , 
12, 6707.21, 0, 0, 0.556064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338748,-99) , 
6, 0.191166, 0, 0, 0.493136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201108,-99) , 
7, 7.00841, 0, 0, 0.486572,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0899926,-99) , 
1, 16.5, 0, 0, 0.337149,-99) , 
7, 65.4435, 1, 0, 0.474593,-99) , 
4, 0.890888, 1, 0, 0.499068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310563,-99) , 
5, 0.424931, 0, 0, 0.491678,-99)    );
  // itree = 924
  fBoostWeights.push_back(0.0107013);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570813,-99) , 
5, 1.59063, 0, 0, 0.636231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506787,-99) , 
3, 0.977448, 0, 0, 0.588613,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503357,-99) , 
3, 0.912615, 1, 0, 0.525255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360063,-99) , 
7, 11.4827, 0, 0, 0.509832,-99) , 
0, 11.5, 1, 0, 0.526037,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56088,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193461,-99) , 
12, -3084.92, 1, 0, 0.309983,-99) , 
12, 7343.97, 0, 0, 0.395009,-99) , 
3, 0.998915, 1, 0, 0.512359,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32918,-99) , 
0, 12.5, 0, 0, 0.563574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243311,-99) , 
6, 0.74378, 1, 0, 0.499552,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240355,-99) , 
8, 0.404725, 1, 0, 0.323358,-99) , 
11, -0.941671, 1, 0, 0.399839,-99) , 
5, 1.98578, 1, 0, 0.493895,-99)    );
  // itree = 925
  fBoostWeights.push_back(0.0104393);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528214,-99) , 
9, 104.113, 1, 0, 0.629957,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301199,-99) , 
0, 28.5, 1, 0, 0.51422,-99) , 
2, 23.5, 0, 0, 0.572897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328865,-99) , 
1, 68.5, 1, 0, 0.55475,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494912,-99) , 
3, 0.998698, 0, 0, 0.505908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206373,-99) , 
5, 2.34246, 1, 0, 0.498512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217139,-99) , 
7, 41.5489, 1, 0, 0.482595,-99) , 
1, 15.5, 0, 0, 0.51009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341066,-99) , 
3, 0.999487, 1, 0, 0.501905,-99)    );
  // itree = 926
  fBoostWeights.push_back(0.0083635);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404106,-99) , 
3, 0.755448, 0, 0, 0.576596,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389197,-99) , 
10, 0.170335, 1, 0, 0.471232,-99) , 
12, 1259.84, 0, 0, 0.5513,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66137,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442255,-99) , 
11, 5.12302, 0, 0, 0.471567,-99) , 
11, -10.1568, 1, 0, 0.483912,-99) , 
3, 0.984629, 1, 0, 0.515291,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365926,-99) , 
8, 0.0845559, 0, 0, 0.508711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337184,-99) , 
13, 1.5, 0, 0, 0.463222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255773,-99) , 
8, 0.402909, 1, 0, 0.373,-99) , 
5, 2.06691, 1, 0, 0.493407,-99)    );
  // itree = 927
  fBoostWeights.push_back(0.00552344);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554148,-99) , 
7, 21.4536, 0, 0, 0.639385,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398355,-99) , 
6, 0.957924, 0, 0, 0.484689,-99) , 
6, 0.754228, 1, 0, 0.56742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479097,-99) , 
11, 6.11284, 0, 0, 0.493432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283503,-99) , 
4, 2.06083, 1, 0, 0.487863,-99) , 
11, -4.69885, 1, 0, 0.499413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32903,-99) , 
9, 519.102, 1, 0, 0.493759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318052,-99) , 
5, 0.354639, 0, 0, 0.486056,-99)    );
  // itree = 928
  fBoostWeights.push_back(0.00700377);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494923,-99) , 
10, 0.0864335, 1, 0, 0.51263,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222337,-99) , 
2, 12.5, 0, 0, 0.391248,-99) , 
5, 2.16809, 1, 0, 0.503679,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321624,-99) , 
6, 0.848328, 1, 0, 0.399619,-99) , 
5, 0.846406, 0, 0, 0.493757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0386497,-99) , 
7, 163.769, 1, 0, 0.490654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356142,-99) , 
5, 1.52717, 1, 0, 0.483742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226591,-99) , 
2, 47.5, 0, 0, 0.3857,-99) , 
1, 37.5, 1, 0, 0.480281,-99)    );
  // itree = 929
  fBoostWeights.push_back(0.0105201);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73083,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.824609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584856,-99) , 
6, 0.322204, 1, 0, 0.65774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
1, 25.5, 1, 0, 0.592547,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359256,-99) , 
0, 14.5, 1, 0, 0.492119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203911,-99) , 
4, 2.00457, 1, 0, 0.47709,-99) , 
2, 15.5, 0, 0, 0.529418,-99) , 
3, 0.906007, 1, 0, 0.559141,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435487,-99) , 
6, 0.606682, 1, 0, 0.539145,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439593,-99) , 
8, 0.10363, 1, 0, 0.462703,-99) , 
4, 1.188, 1, 0, 0.502011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118199,-99) , 
7, 237.164, 1, 0, 0.497772,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24193,-99) , 
4, 1.25235, 0, 0, 0.360572,-99) , 
7, 8.57375, 0, 0, 0.48667,-99) , 
13, 1.5, 0, 0, 0.50937,-99)    );
  // itree = 930
  fBoostWeights.push_back(0.0153928);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500106,-99) , 
2, 13.5, 0, 0, 0.592964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38949,-99) , 
9, 390.579, 1, 0, 0.569424,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495521,-99) , 
11, -1.75197, 1, 0, 0.55024,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321505,-99) , 
9, 157.67, 0, 0, 0.388485,-99) , 
0, 12.5, 1, 0, 0.487204,-99) , 
7, 16.0207, 0, 0, 0.532088,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590565,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399693,-99) , 
4, 1.45276, 0, 0, 0.445495,-99) , 
2, 36.5, 0, 0, 0.481249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246433,-99) , 
5, 1.47215, 1, 0, 0.355109,-99) , 
9, 93.5422, 1, 0, 0.453875,-99) , 
10, 0.451886, 1, 0, 0.508361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605473,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402539,-99) , 
10, 0.316144, 0, 0, 0.499607,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179192,-99) , 
3, 0.971241, 0, 0, 0.410368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115532,-99) , 
9, 86.7688, 1, 0, 0.280515,-99) , 
13, 1.5, 0, 0, 0.370674,-99) , 
8, 0.110967, 1, 0, 0.429545,-99) , 
5, 1.89457, 1, 0, 0.490797,-99)    );
  // itree = 931
  fBoostWeights.push_back(0.00941457);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579109,-99) , 
8, 0.771963, 1, 0, 0.643766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491011,-99) , 
2, 11.5, 0, 0, 0.591827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527821,-99) , 
6, 0.432458, 0, 0, 0.566773,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394511,-99) , 
10, 0.0711246, 1, 0, 0.45948,-99) , 
7, 16.119, 0, 0, 0.530208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347983,-99) , 
5, 0.534813, 0, 0, 0.516554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43469,-99) , 
10, 0.0866257, 1, 0, 0.469265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178578,-99) , 
12, 2374.82, 0, 0, 0.309826,-99) , 
3, 0.944714, 0, 0, 0.438541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12687,-99) , 
7, 104.641, 1, 0, 0.429743,-99) , 
4, 1.34751, 1, 0, 0.482964,-99) , 
12, -4382.13, 1, 0, 0.497398,-99)    );
  // itree = 932
  fBoostWeights.push_back(0.00667645);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662272,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392201,-99) , 
8, 2.89136, 1, 0, 0.509168,-99) , 
9, 36.6059, 1, 0, 0.516966,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253562,-99) , 
9, 20.4044, 1, 0, 0.402629,-99) , 
9, 28.9789, 0, 0, 0.507565,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444221,-99) , 
8, 0.32564, 1, 0, 0.519389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276474,-99) , 
10, 0.280736, 0, 0, 0.412281,-99) , 
4, 1.76933, 1, 0, 0.496987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248333,-99) , 
3, 0.999764, 1, 0, 0.492512,-99)    );
  // itree = 933
  fBoostWeights.push_back(0.0127036);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521813,-99) , 
6, 0.32388, 0, 0, 0.595158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334641,-99) , 
5, 2.3182, 1, 0, 0.587252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448568,-99) , 
5, 1.13679, 0, 0, 0.564215,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489946,-99) , 
8, 1.33782, 0, 0, 0.543164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389661,-99) , 
12, 2295.53, 0, 0, 0.520775,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427873,-99) , 
1, 8.5, 1, 0, 0.480407,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.083836,-99) , 
7, 11.0568, 0, 0, 0.315293,-99) , 
0, 13.5, 1, 0, 0.426918,-99) , 
7, 16.0788, 0, 0, 0.477255,-99) , 
11, 1.52108, 0, 0, 0.50959,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496973,-99) , 
2, 47.5, 0, 0, 0.565916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180765,-99) , 
4, 1.59952, 1, 0, 0.503636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305569,-99) , 
4, 1.17656, 1, 0, 0.421468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279984,-99) , 
11, 2.13324, 1, 0, 0.377856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144023,-99) , 
2, 20.5, 0, 0, 0.342312,-99) , 
9, 93.9253, 1, 0, 0.414414,-99) , 
7, 40.9906, 1, 0, 0.490589,-99)    );
  // itree = 934
  fBoostWeights.push_back(0.012288);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624673,-99) , 
1, 15.5, 0, 0, 0.65074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46412,-99) , 
7, 28.0084, 1, 0, 0.619626,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47318,-99) , 
5, 1.20959, 0, 0, 0.567786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400478,-99) , 
13, 0.5, 0, 0, 0.520231,-99) , 
10, 0.208996, 1, 0, 0.572094,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316296,-99) , 
9, 108.86, 0, 0, 0.419966,-99) , 
6, 0.927859, 0, 0, 0.495623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260617,-99) , 
10, 0.0965307, 0, 0, 0.435656,-99) , 
4, 1.52349, 1, 0, 0.540573,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686909,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450612,-99) , 
12, 9266.29, 0, 0, 0.473029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30941,-99) , 
12, 14531.5, 1, 0, 0.459365,-99) , 
12, 21421.4, 0, 0, 0.47031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.049638,-99) , 
7, 200.661, 1, 0, 0.46394,-99) , 
3, 0.988563, 1, 0, 0.504132,-99)    );
  // itree = 935
  fBoostWeights.push_back(0.0101046);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54712,-99) , 
6, 0.822546, 1, 0, 0.669574,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363595,-99) , 
12, -3330.5, 0, 0, 0.533963,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385015,-99) , 
9, 391.952, 1, 0, 0.523968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287932,-99) , 
3, 0.999687, 1, 0, 0.517645,-99) , 
12, -6413.8, 1, 0, 0.53028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375313,-99) , 
9, 41.3734, 0, 0, 0.532213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393661,-99) , 
10, 0.0490695, 0, 0, 0.501707,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171256,-99) , 
12, 2625.97, 1, 0, 0.338299,-99) , 
5, 1.98398, 1, 0, 0.471645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199744,-99) , 
7, 21.4325, 1, 0, 0.441753,-99) , 
2, 11.5, 0, 0, 0.501014,-99)    );
  // itree = 936
  fBoostWeights.push_back(0.0118571);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.833147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640998,-99) , 
9, 97.878, 1, 0, 0.720804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55645,-99) , 
6, 0.845008, 1, 0, 0.646953,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530882,-99) , 
11, -1.04751, 1, 0, 0.59146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440566,-99) , 
7, 12.6753, 0, 0, 0.547978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351004,-99) , 
7, 35.9533, 1, 0, 0.521657,-99) , 
2, 23.5, 0, 0, 0.560168,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516878,-99) , 
7, 19.0649, 1, 0, 0.627338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505445,-99) , 
6, 0.19942, 1, 0, 0.549763,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390065,-99) , 
5, 1.77105, 1, 0, 0.432255,-99) , 
13, 1.5, 0, 0, 0.474181,-99) , 
11, 5.89701, 0, 0, 0.491241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109774,-99) , 
7, 128.063, 1, 0, 0.484932,-99) , 
5, 1.51426, 1, 0, 0.517349,-99)    );
  // itree = 937
  fBoostWeights.push_back(0.00929099);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.797142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582467,-99) , 
12, 3740.64, 0, 0, 0.660007,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555698,-99) , 
8, 2.72416, 1, 0, 0.612029,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417839,-99) , 
0, 15.5, 0, 0, 0.507205,-99) , 
8, 2.05819, 0, 0, 0.539593,-99) , 
6, 0.18567, 1, 0, 0.560356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405282,-99) , 
9, 32.6451, 0, 0, 0.545504,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480004,-99) , 
4, 1.75771, 1, 0, 0.573772,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466708,-99) , 
13, 1.5, 0, 0, 0.50374,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244302,-99) , 
7, 35.3188, 1, 0, 0.400131,-99) , 
9, 131.732, 1, 0, 0.463384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129489,-99) , 
5, 2.36518, 1, 0, 0.45548,-99) , 
8, 0.217036, 1, 0, 0.477033,-99) , 
5, 1.51907, 1, 0, 0.508004,-99)    );
  // itree = 938
  fBoostWeights.push_back(0.0136677);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57446,-99) , 
6, 0.98845, 1, 0, 0.665657,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508572,-99) , 
6, 0.111884, 1, 0, 0.545303,-99) , 
6, 0.736355, 0, 0, 0.594656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372055,-99) , 
5, 2.14013, 1, 0, 0.575091,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702289,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356699,-99) , 
9, 103.42, 1, 0, 0.452546,-99) , 
4, 1.47216, 0, 0, 0.518884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257623,-99) , 
1, 14.5, 0, 0, 0.471409,-99) , 
7, 29.0303, 1, 0, 0.54097,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65288,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306786,-99) , 
5, 1.97567, 1, 0, 0.47285,-99) , 
11, -7.69921, 1, 0, 0.489695,-99) , 
4, 1.37256, 0, 0, 0.506537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615363,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224615,-99) , 
10, 0.359901, 1, 0, 0.395847,-99) , 
1, 18.5, 0, 0, 0.44833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142833,-99) , 
11, -0.390695, 1, 0, 0.399678,-99) , 
4, 1.47935, 1, 0, 0.477474,-99) , 
11, 0.76854, 0, 0, 0.505005,-99)    );
  // itree = 939
  fBoostWeights.push_back(0.0112429);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608178,-99) , 
2, 34.5, 0, 0, 0.658343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516391,-99) , 
9, 150.39, 1, 0, 0.605553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462552,-99) , 
3, 0.954203, 0, 0, 0.538332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383974,-99) , 
7, 25.308, 1, 0, 0.508007,-99) , 
0, 23.5, 0, 0, 0.54308,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450714,-99) , 
9, 31.5487, 1, 0, 0.471898,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154665,-99) , 
8, 0.605273, 1, 0, 0.325336,-99) , 
6, 0.403096, 0, 0, 0.442723,-99) , 
0, 10.5, 1, 0, 0.465815,-99) , 
4, 1.21033, 1, 0, 0.506633,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436967,-99) , 
9, 122.836, 0, 0, 0.524712,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437064,-99) , 
7, 28.5925, 0, 0, 0.506077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359277,-99) , 
9, 221.267, 1, 0, 0.473838,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284441,-99) , 
12, -196.676, 1, 0, 0.394703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258166,-99) , 
7, 28.0635, 1, 0, 0.336593,-99) , 
11, -3.00319, 1, 0, 0.407461,-99) , 
12, -6367.97, 1, 0, 0.433445,-99) , 
3, 0.996268, 1, 0, 0.488165,-99)    );
  // itree = 940
  fBoostWeights.push_back(0.00786843);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473851,-99) , 
1, 63.5, 1, 0, 0.609595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331952,-99) , 
1, 23.5, 0, 0, 0.576364,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681225,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202238,-99) , 
7, 59.3281, 1, 0, 0.479248,-99) , 
2, 33.5, 0, 0, 0.488038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165682,-99) , 
3, 0.956353, 1, 0, 0.345741,-99) , 
1, 34.5, 1, 0, 0.479933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0436279,-99) , 
7, 106.532, 1, 0, 0.475416,-99) , 
2, 48.5, 0, 0, 0.483572,-99)    );
  // itree = 941
  fBoostWeights.push_back(0.00750669);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521392,-99) , 
10, 0.402322, 1, 0, 0.568001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353817,-99) , 
7, 17.3916, 0, 0, 0.555001,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360264,-99) , 
9, 32.2849, 0, 0, 0.497351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182015,-99) , 
3, 0.992047, 1, 0, 0.311499,-99) , 
7, 26.2997, 1, 0, 0.47732,-99) , 
2, 15.5, 0, 0, 0.513032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265282,-99) , 
7, 181.09, 1, 0, 0.508198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289571,-99) , 
1, 5.5, 0, 0, 0.502789,-99)    );
  // itree = 942
  fBoostWeights.push_back(0.0082737);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723927,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681858,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446769,-99) , 
9, 76.2791, 0, 0, 0.525579,-99) , 
1, 12.5, 1, 0, 0.565531,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350266,-99) , 
3, 0.991624, 1, 0, 0.44295,-99) , 
0, 12.5, 0, 0, 0.533781,-99) , 
6, 0.0923051, 1, 0, 0.556625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413883,-99) , 
6, 0.942304, 1, 0, 0.59939,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459213,-99) , 
0, 11.5, 1, 0, 0.481557,-99) , 
11, 4.88141, 0, 0, 0.497781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340051,-99) , 
1, 6.5, 0, 0, 0.488397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169002,-99) , 
5, 2.41263, 1, 0, 0.484842,-99) , 
13, 1.5, 0, 0, 0.506457,-99)    );
  // itree = 943
  fBoostWeights.push_back(0.00879826);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50346,-99) , 
2, 18.5, 0, 0, 0.544986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375882,-99) , 
10, 0.578026, 1, 0, 0.46952,-99) , 
12, 4606.97, 1, 0, 0.519008,-99) , 
11, -8.2025, 1, 0, 0.52968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350115,-99) , 
9, 25.1646, 0, 0, 0.51764,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391183,-99) , 
8, 0.281171, 0, 0, 0.527192,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370017,-99) , 
10, 0.0538524, 1, 0, 0.422014,-99) , 
9, 71.5318, 1, 0, 0.465399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243754,-99) , 
3, 0.842151, 0, 0, 0.447717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291727,-99) , 
3, 0.998463, 1, 0, 0.430415,-99) , 
5, 1.77655, 1, 0, 0.489051,-99)    );
  // itree = 944
  fBoostWeights.push_back(0.00720076);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504528,-99) , 
7, 10.8195, 1, 0, 0.601846,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415358,-99) , 
12, 12898.5, 1, 0, 0.573823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370445,-99) , 
7, 137.377, 1, 0, 0.552511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251447,-99) , 
7, 44.0148, 1, 0, 0.451899,-99) , 
12, 12203.8, 0, 0, 0.469971,-99) , 
2, 21.5, 0, 0, 0.49685,-99) , 
0, 10.5, 1, 0, 0.507364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270556,-99) , 
7, 7.00705, 0, 0, 0.503127,-99)    );
  // itree = 945
  fBoostWeights.push_back(0.0103074);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380677,-99) , 
9, 47.7111, 0, 0, 0.545272,-99) , 
12, 4628.45, 1, 0, 0.592303,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398238,-99) , 
0, 54.5, 1, 0, 0.507398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191202,-99) , 
4, 2.04006, 1, 0, 0.501787,-99) , 
11, -0.7653, 1, 0, 0.535685,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425549,-99) , 
0, 22.5, 0, 0, 0.490842,-99) , 
12, -6756.83, 0, 0, 0.555391,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457064,-99) , 
2, 34.5, 0, 0, 0.488216,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193682,-99) , 
3, 0.999035, 1, 0, 0.387315,-99) , 
12, 5842.87, 0, 0, 0.436948,-99) , 
11, 5.91198, 0, 0, 0.464465,-99) , 
3, 0.990683, 1, 0, 0.502783,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364307,-99) , 
7, 10.3075, 1, 0, 0.481235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288512,-99) , 
11, 0.195873, 0, 0, 0.396783,-99) , 
2, 8.5, 0, 0, 0.492099,-99)    );
  // itree = 946
  fBoostWeights.push_back(0.0132416);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555803,-99) , 
5, 1.4279, 1, 0, 0.607402,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458077,-99) , 
0, 60.5, 0, 0, 0.504185,-99) , 
10, 0.447922, 1, 0, 0.574729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444572,-99) , 
7, 11.0732, 0, 0, 0.553617,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523735,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293756,-99) , 
9, 137.854, 0, 0, 0.366005,-99) , 
6, 1.02799, 0, 0, 0.422891,-99) , 
5, 0.963928, 0, 0, 0.519034,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490118,-99) , 
12, 10339.3, 0, 0, 0.515018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127749,-99) , 
6, 0.191521, 0, 0, 0.503778,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638521,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430416,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225419,-99) , 
4, 1.53193, 1, 0, 0.338517,-99) , 
8, 0.178811, 1, 0, 0.390608,-99) , 
9, 131.416, 1, 0, 0.460217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0875273,-99) , 
3, 0.999635, 1, 0, 0.449333,-99) , 
4, 1.20594, 1, 0, 0.485624,-99)    );
  // itree = 947
  fBoostWeights.push_back(0.0113215);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.834121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579459,-99) , 
6, 0.188693, 1, 0, 0.624202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349112,-99) , 
5, 2.16559, 1, 0, 0.600335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419464,-99) , 
1, 18.5, 1, 0, 0.485294,-99) , 
10, 0.437897, 1, 0, 0.559515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501864,-99) , 
4, 0.21076, 0, 0, 0.608988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425014,-99) , 
2, 12.5, 0, 0, 0.54839,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507606,-99) , 
6, 0.540365, 1, 0, 0.568424,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417063,-99) , 
6, 1.02771, 0, 0, 0.430967,-99) , 
0, 10.5, 1, 0, 0.452001,-99) , 
4, 0.739252, 1, 0, 0.476638,-99) , 
13, 1.5, 0, 0, 0.501251,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580925,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280627,-99) , 
8, 1.77594, 0, 0, 0.371209,-99) , 
8, 0.518306, 1, 0, 0.454185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283535,-99) , 
12, 5049.54, 1, 0, 0.407398,-99) , 
9, 336.192, 1, 0, 0.489269,-99)    );
  // itree = 948
  fBoostWeights.push_back(0.011143);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538459,-99) , 
0, 15.5, 1, 0, 0.584411,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40621,-99) , 
4, 1.27194, 0, 0, 0.478593,-99) , 
9, 55.9233, 0, 0, 0.561226,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585398,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254949,-99) , 
13, 1.5, 0, 0, 0.345611,-99) , 
11, 0.829188, 0, 0, 0.452565,-99) , 
5, 1.98304, 1, 0, 0.54086,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411283,-99) , 
5, 1.82898, 0, 0, 0.477498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304156,-99) , 
3, 0.938835, 0, 0, 0.420647,-99) , 
8, 2.51794, 1, 0, 0.521193,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566964,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396512,-99) , 
11, -4.94539, 1, 0, 0.435271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277177,-99) , 
4, 1.7472, 1, 0, 0.413376,-99) , 
11, 9.43806, 0, 0, 0.433705,-99) , 
12, 24311.9, 0, 0, 0.445704,-99) , 
3, 0.992851, 1, 0, 0.491814,-99)    );
  // itree = 949
  fBoostWeights.push_back(0.0124265);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485576,-99) , 
7, 40.4315, 1, 0, 0.64223,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586241,-99) , 
6, 0.402119, 1, 0, 0.627709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426097,-99) , 
11, 0.203045, 0, 0, 0.48611,-99) , 
9, 92.0338, 0, 0, 0.565197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370593,-99) , 
0, 18.5, 0, 0, 0.439584,-99) , 
12, -22.5991, 0, 0, 0.538142,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400653,-99) , 
10, 1.58456, 1, 0, 0.579975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3078,-99) , 
3, 0.933736, 0, 0, 0.534004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605089,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414637,-99) , 
3, 0.983394, 1, 0, 0.521212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189872,-99) , 
5, 2.1326, 1, 0, 0.379969,-99) , 
8, 0.406015, 1, 0, 0.427686,-99) , 
9, 47.1899, 1, 0, 0.455168,-99) , 
5, 1.52537, 1, 0, 0.491615,-99) , 
12, -7374.01, 1, 0, 0.501491,-99)    );
  // itree = 950
  fBoostWeights.push_back(0.0105118);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655792,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482335,-99) , 
8, 2.52898, 1, 0, 0.586891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432434,-99) , 
3, 0.996036, 1, 0, 0.504106,-99) , 
13, 1.5, 0, 0, 0.527128,-99) , 
9, 36.4093, 1, 0, 0.537631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370437,-99) , 
9, 24.29, 0, 0, 0.528785,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654715,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644675,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384439,-99) , 
6, 0.782484, 1, 0, 0.472879,-99) , 
8, 2.12966, 0, 0, 0.520706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214346,-99) , 
5, 2.25615, 1, 0, 0.464013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102051,-99) , 
4, 1.75709, 1, 0, 0.251891,-99) , 
8, 0.667438, 1, 0, 0.344551,-99) , 
9, 45.7562, 1, 0, 0.405333,-99) , 
8, 0.111312, 1, 0, 0.44874,-99) , 
4, 1.53223, 1, 0, 0.508244,-99)    );
  // itree = 951
  fBoostWeights.push_back(0.00776458);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697452,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29245,-99) , 
7, 44.5448, 1, 0, 0.511346,-99) , 
2, 29.5, 0, 0, 0.521609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219216,-99) , 
7, 100.698, 1, 0, 0.516484,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458561,-99) , 
12, 3633.14, 0, 0, 0.557302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209028,-99) , 
6, 0.512928, 1, 0, 0.325327,-99) , 
2, 43.5, 0, 0, 0.440734,-99) , 
1, 28.5, 1, 0, 0.505353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332624,-99) , 
9, 459.819, 1, 0, 0.497381,-99)    );
  // itree = 952
  fBoostWeights.push_back(0.00800038);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532171,-99) , 
9, 109.979, 1, 0, 0.582115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384594,-99) , 
9, 33.3049, 0, 0, 0.555818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386744,-99) , 
8, 2.73359, 1, 0, 0.536698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319278,-99) , 
7, 34.4528, 1, 0, 0.482223,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241819,-99) , 
1, 12.5, 1, 0, 0.382572,-99) , 
6, 0.977475, 1, 0, 0.467209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259075,-99) , 
5, 2.25657, 1, 0, 0.45855,-99) , 
2, 20.5, 0, 0, 0.481789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190451,-99) , 
1, 85.5, 1, 0, 0.476556,-99)    );
  // itree = 953
  fBoostWeights.push_back(0.00986844);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726014,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509263,-99) , 
7, 17.5462, 0, 0, 0.563712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366665,-99) , 
10, 1.37925, 1, 0, 0.55197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411658,-99) , 
4, 0.524773, 0, 0, 0.529749,-99) , 
3, 0.830785, 1, 0, 0.546548,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482657,-99) , 
1, 18.5, 1, 0, 0.59116,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408832,-99) , 
12, -1145.44, 0, 0, 0.549501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467179,-99) , 
2, 30.5, 0, 0, 0.497712,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329283,-99) , 
4, 0.811494, 1, 0, 0.405888,-99) , 
9, 115.092, 1, 0, 0.45899,-99) , 
13, 1.5, 0, 0, 0.485377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29715,-99) , 
5, 2.07062, 1, 0, 0.475134,-99) , 
8, 0.745158, 1, 0, 0.501361,-99)    );
  // itree = 954
  fBoostWeights.push_back(0.00683619);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610376,-99) , 
10, 1.10403, 0, 0, 0.685248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233982,-99) , 
1, 17.5, 0, 0, 0.637949,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308578,-99) , 
1, 39.5, 1, 0, 0.510956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221989,-99) , 
7, 75.5122, 1, 0, 0.503038,-99) , 
2, 47.5, 0, 0, 0.512195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216022,-99) , 
7, 6.92395, 0, 0, 0.507405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197479,-99) , 
1, 83.5, 1, 0, 0.50295,-99)    );
  // itree = 955
  fBoostWeights.push_back(0.0056178);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521984,-99) , 
4, 0.730533, 1, 0, 0.541937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344036,-99) , 
3, 0.701984, 0, 0, 0.53349,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488823,-99) , 
2, 18.5, 0, 0, 0.571348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324233,-99) , 
7, 45.7346, 1, 0, 0.45064,-99) , 
5, 1.14107, 1, 0, 0.472667,-99) , 
3, 0.990668, 1, 0, 0.506718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356595,-99) , 
5, 0.484095, 0, 0, 0.500588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282492,-99) , 
7, 7.23977, 0, 0, 0.495414,-99)    );
  // itree = 956
  fBoostWeights.push_back(0.00425332);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662199,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521369,-99) , 
9, 160.098, 0, 0, 0.590023,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47412,-99) , 
2, 35.5, 0, 0, 0.488761,-99) , 
7, 9.9291, 1, 0, 0.499201,-99) , 
3, 0.717826, 1, 0, 0.504417,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274059,-99) , 
7, 7.00291, 0, 0, 0.500664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283392,-99) , 
3, 0.999712, 1, 0, 0.496205,-99)    );
  // itree = 957
  fBoostWeights.push_back(0.0113947);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811852,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218183,-99) , 
7, 51.1285, 1, 0, 0.544866,-99) , 
5, 1.43354, 1, 0, 0.637214,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498362,-99) , 
9, 56.6321, 0, 0, 0.599123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479019,-99) , 
4, 0.948067, 0, 0, 0.561307,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377259,-99) , 
9, 58.6688, 1, 0, 0.450968,-99) , 
8, 2.02391, 1, 0, 0.53151,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499939,-99) , 
7, 61.5974, 1, 0, 0.60977,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365853,-99) , 
4, 0.413494, 0, 0, 0.451309,-99) , 
0, 19.5, 0, 0, 0.534443,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418771,-99) , 
9, 51.5449, 1, 0, 0.447314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238788,-99) , 
6, 0.182751, 0, 0, 0.429966,-99) , 
4, 0.73972, 1, 0, 0.457445,-99) , 
13, 1.5, 0, 0, 0.480558,-99) , 
11, -6.62684, 1, 0, 0.494643,-99)    );
  // itree = 958
  fBoostWeights.push_back(0.00730498);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476386,-99) , 
12, -15258.3, 0, 0, 0.6208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517343,-99) , 
9, 21.7098, 1, 0, 0.529316,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432843,-99) , 
9, 245.59, 0, 0, 0.461441,-99) , 
12, 1819.43, 0, 0, 0.504543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320324,-99) , 
3, 0.999376, 1, 0, 0.496354,-99) , 
11, 8.36496, 0, 0, 0.505433,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367277,-99) , 
12, 3075.05, 1, 0, 0.473816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0884248,-99) , 
0, 13.5, 1, 0, 0.407691,-99) , 
2, 8.5, 0, 0, 0.495966,-99)    );
  // itree = 959
  fBoostWeights.push_back(0.0103594);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626228,-99) , 
0, 30.5, 0, 0, 0.703195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515097,-99) , 
7, 69.1171, 1, 0, 0.631288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426739,-99) , 
3, 0.991498, 1, 0, 0.493399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245351,-99) , 
5, 2.11754, 1, 0, 0.469294,-99) , 
0, 22.5, 0, 0, 0.528997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357539,-99) , 
7, 8.10197, 0, 0, 0.502736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355863,-99) , 
9, 96.7879, 1, 0, 0.421386,-99) , 
7, 30.7786, 1, 0, 0.477705,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515879,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0566274,-99) , 
5, 1.83541, 1, 0, 0.275033,-99) , 
6, 0.282737, 1, 0, 0.378824,-99) , 
3, 0.910313, 0, 0, 0.461964,-99) , 
13, 1.5, 0, 0, 0.481247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268485,-99) , 
4, 2.0612, 1, 0, 0.47489,-99)    );
  // itree = 960
  fBoostWeights.push_back(0.0141591);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569456,-99) , 
10, 0.269565, 1, 0, 0.658133,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588258,-99) , 
7, 57.2222, 1, 0, 0.673254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426801,-99) , 
3, 0.990043, 1, 0, 0.517758,-99) , 
0, 20.5, 0, 0, 0.579286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397661,-99) , 
5, 0.859223, 0, 0, 0.54081,-99) , 
8, 2.33247, 0, 0, 0.569223,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50311,-99) , 
5, 1.98246, 0, 0, 0.55127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332409,-99) , 
1, 8.5, 0, 0, 0.526498,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285872,-99) , 
5, 1.97477, 1, 0, 0.388806,-99) , 
9, 464.938, 0, 0, 0.41537,-99) , 
10, 0.225935, 0, 0, 0.467146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149317,-99) , 
7, 124.132, 1, 0, 0.460202,-99) , 
5, 1.52637, 1, 0, 0.507518,-99)    );
  // itree = 961
  fBoostWeights.push_back(0.00733531);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673231,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494738,-99) , 
12, -1732.78, 1, 0, 0.515911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191639,-99) , 
5, 2.32335, 1, 0, 0.508514,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316395,-99) , 
9, 121.051, 1, 0, 0.46259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248221,-99) , 
0, 15.5, 0, 0, 0.427823,-99) , 
10, 0.385757, 1, 0, 0.483673,-99) , 
9, 18.1751, 1, 0, 0.489641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286103,-99) , 
7, 7.38311, 0, 0, 0.484052,-99)    );
  // itree = 962
  fBoostWeights.push_back(0.0066708);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663673,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479097,-99) , 
6, 0.614334, 1, 0, 0.516681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248252,-99) , 
11, 1.5992, 0, 0, 0.348906,-99) , 
5, 2.08508, 1, 0, 0.502258,-99) , 
8, 0.0438953, 1, 0, 0.50887,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503997,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24376,-99) , 
9, 21.9154, 1, 0, 0.31534,-99) , 
2, 15.5, 0, 0, 0.410379,-99) , 
9, 32.2002, 0, 0, 0.498196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189263,-99) , 
3, 0.999791, 1, 0, 0.493738,-99)    );
  // itree = 963
  fBoostWeights.push_back(0.00862797);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695876,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504256,-99) , 
5, 1.52012, 1, 0, 0.590919,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352763,-99) , 
7, 29.5359, 1, 0, 0.499444,-99) , 
2, 19.5, 0, 0, 0.525114,-99) , 
6, 0.404872, 0, 0, 0.538363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467526,-99) , 
6, 0.884903, 0, 0, 0.570039,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458525,-99) , 
4, 1.65073, 0, 0, 0.471255,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257104,-99) , 
9, 43.1074, 1, 0, 0.36418,-99) , 
4, 1.73662, 1, 0, 0.453312,-99) , 
8, 0.308878, 1, 0, 0.470978,-99) , 
6, 0.445344, 1, 0, 0.500063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211517,-99) , 
3, 0.999712, 1, 0, 0.494488,-99)    );
  // itree = 964
  fBoostWeights.push_back(0.00903699);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757589,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509809,-99) , 
2, 17.5, 0, 0, 0.570388,-99) , 
8, 0.789658, 1, 0, 0.602919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405401,-99) , 
8, 0.390953, 0, 0, 0.570299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542544,-99) , 
9, 154.472, 0, 0, 0.615242,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347811,-99) , 
6, 0.230455, 0, 0, 0.467511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109115,-99) , 
5, 2.30303, 1, 0, 0.459706,-99) , 
8, 0.160484, 1, 0, 0.480463,-99) , 
4, 0.696094, 1, 0, 0.49985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190016,-99) , 
3, 0.999788, 1, 0, 0.495103,-99)    );
  // itree = 965
  fBoostWeights.push_back(0.0122155);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537816,-99) , 
6, 0.324507, 0, 0, 0.603813,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449548,-99) , 
11, 6.19368, 0, 0, 0.503257,-99) , 
4, 1.41736, 1, 0, 0.562848,-99) , 
9, 345.331, 0, 0, 0.577399,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363422,-99) , 
5, 1.66787, 1, 0, 0.577936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264932,-99) , 
8, 1.14762, 1, 0, 0.365973,-99) , 
0, 34.5, 0, 0, 0.474392,-99) , 
7, 29.1295, 1, 0, 0.543164,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502228,-99) , 
8, 1.25881, 0, 0, 0.60745,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379449,-99) , 
1, 8.5, 0, 0, 0.517681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228017,-99) , 
10, 0.556455, 1, 0, 0.417462,-99) , 
6, 0.669278, 1, 0, 0.479389,-99) , 
10, 1.19728, 0, 0, 0.492564,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0507459,-99) , 
5, 1.99318, 1, 0, 0.314081,-99) , 
11, -0.0825825, 1, 0, 0.473004,-99) , 
11, 0.363853, 0, 0, 0.505079,-99)    );
  // itree = 966
  fBoostWeights.push_back(0.0116994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38683,-99) , 
4, 2.12245, 1, 0, 0.64703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218611,-99) , 
3, 0.998904, 1, 0, 0.607969,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442253,-99) , 
9, 61.661, 0, 0, 0.522133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251168,-99) , 
5, 1.96583, 1, 0, 0.503352,-99) , 
4, 1.66326, 0, 0, 0.52687,-99) , 
11, -1.31515, 0, 0, 0.542151,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500876,-99) , 
11, 6.86565, 0, 0, 0.524362,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319561,-99) , 
6, 0.523201, 0, 0, 0.400062,-99) , 
5, 1.25266, 0, 0, 0.49915,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40303,-99) , 
3, 0.98473, 1, 0, 0.517392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0953661,-99) , 
0, 55.5, 1, 0, 0.362844,-99) , 
2, 37.5, 0, 0, 0.417915,-99) , 
7, 29.1622, 1, 0, 0.471663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156797,-99) , 
5, 2.36467, 1, 0, 0.466148,-99) , 
11, -0.986943, 1, 0, 0.494948,-99)    );
  // itree = 967
  fBoostWeights.push_back(0.00759301);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738825,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429744,-99) , 
2, 11.5, 0, 0, 0.531466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300694,-99) , 
9, 509.668, 1, 0, 0.522703,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452011,-99) , 
8, 2.35651, 0, 0, 0.47707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123715,-99) , 
0, 18.5, 1, 0, 0.450662,-99) , 
7, 16.1065, 0, 0, 0.496125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32875,-99) , 
5, 0.294785, 0, 0, 0.488833,-99) , 
12, 23916.8, 0, 0, 0.49425,-99)    );
  // itree = 968
  fBoostWeights.push_back(0.0105619);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.801006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522967,-99) , 
1, 33.5, 1, 0, 0.653733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664881,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401473,-99) , 
6, 0.503957, 0, 0, 0.520603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32512,-99) , 
4, 1.35924, 1, 0, 0.415057,-99) , 
9, 126.789, 1, 0, 0.477365,-99) , 
6, 0.0994727, 1, 0, 0.499364,-99) , 
2, 27.5, 0, 0, 0.53181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697441,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391563,-99) , 
9, 38.5803, 0, 0, 0.486151,-99) , 
4, 2.20448, 0, 0, 0.49214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28645,-99) , 
7, 100.088, 1, 0, 0.481105,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422021,-99) , 
3, 0.863021, 1, 0, 0.498977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330074,-99) , 
8, 2.36628, 1, 0, 0.454815,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16616,-99) , 
12, 2840.09, 0, 0, 0.299618,-99) , 
4, 1.28903, 1, 0, 0.408081,-99) , 
3, 0.954442, 0, 0, 0.46124,-99) , 
13, 1.5, 0, 0, 0.482444,-99)    );
  // itree = 969
  fBoostWeights.push_back(0.00781323);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489136,-99) , 
10, 0.252763, 1, 0, 0.603221,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359953,-99) , 
9, 405.89, 1, 0, 0.493953,-99) , 
12, -3766.89, 1, 0, 0.507072,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408627,-99) , 
9, 47.1899, 1, 0, 0.475929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143319,-99) , 
6, 0.312583, 1, 0, 0.290197,-99) , 
3, 0.972002, 0, 0, 0.414108,-99) , 
5, 1.94298, 1, 0, 0.489394,-99) , 
2, 55.5, 0, 0, 0.498762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211036,-99) , 
7, 188.071, 1, 0, 0.493661,-99)    );
  // itree = 970
  fBoostWeights.push_back(0.0162491);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53802,-99) , 
2, 29.5, 0, 0, 0.555209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352147,-99) , 
7, 71.5648, 1, 0, 0.53681,-99) , 
10, 1.55605, 0, 0, 0.549996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352167,-99) , 
5, 0.342431, 0, 0, 0.534371,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544788,-99) , 
12, 2999.15, 1, 0, 0.657067,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417071,-99) , 
4, 1.7071, 1, 0, 0.510765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280057,-99) , 
6, 0.165305, 0, 0, 0.464929,-99) , 
3, 0.959923, 1, 0, 0.528857,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451441,-99) , 
5, 1.93449, 1, 0, 0.58706,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348245,-99) , 
4, 1.1982, 1, 0, 0.401591,-99) , 
11, -0.850989, 1, 0, 0.476973,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18817,-99) , 
7, 20.3346, 1, 0, 0.316573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.078815,-99) , 
5, 1.90286, 1, 0, 0.255054,-99) , 
9, 124.27, 1, 0, 0.400357,-99) , 
8, 0.685068, 1, 0, 0.457989,-99) , 
5, 1.58249, 1, 0, 0.497839,-99)    );
  // itree = 971
  fBoostWeights.push_back(0.00569058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397744,-99) , 
4, 1.80993, 1, 0, 0.594743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4212,-99) , 
8, 2.30296, 1, 0, 0.557772,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386647,-99) , 
7, 78.0695, 1, 0, 0.494758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254531,-99) , 
3, 0.730944, 0, 0, 0.486835,-99) , 
13, 1.5, 0, 0, 0.506578,-99) , 
9, 18.2751, 1, 0, 0.512617,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327668,-99) , 
5, 2.29775, 1, 0, 0.506052,-99)    );
  // itree = 972
  fBoostWeights.push_back(0.0052817);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469798,-99) , 
7, 38.7252, 1, 0, 0.579132,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42012,-99) , 
12, 4641.74, 1, 0, 0.48492,-99) , 
12, 9684.88, 0, 0, 0.497052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351024,-99) , 
9, 476.805, 1, 0, 0.489861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.15639,-99) , 
7, 141.185, 1, 0, 0.485215,-99) , 
2, 79.5, 0, 0, 0.492642,-99)    );
  // itree = 973
  fBoostWeights.push_back(0.0119672);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563701,-99) , 
8, 1.75168, 1, 0, 0.598992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40541,-99) , 
5, 2.05533, 1, 0, 0.587668,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428171,-99) , 
6, 0.790766, 1, 0, 0.544494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398495,-99) , 
6, 0.229359, 0, 0, 0.50729,-99) , 
8, 1.12969, 0, 0, 0.549776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365777,-99) , 
3, 0.99939, 1, 0, 0.535474,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510632,-99) , 
7, 13.2427, 0, 0, 0.594024,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437131,-99) , 
7, 22.7422, 1, 0, 0.552825,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289737,-99) , 
3, 0.996427, 1, 0, 0.441874,-99) , 
11, 6.34567, 0, 0, 0.469477,-99) , 
10, 0.0657392, 1, 0, 0.492293,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384672,-99) , 
8, 0.683386, 1, 0, 0.468545,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248549,-99) , 
12, 4225.49, 1, 0, 0.401962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192623,-99) , 
1, 36.5, 1, 0, 0.367801,-99) , 
11, 0.318833, 0, 0, 0.466083,-99) , 
11, -0.684636, 1, 0, 0.49442,-99)    );
  // itree = 974
  fBoostWeights.push_back(0.0118666);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.814059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58754,-99) , 
6, 0.522314, 0, 0, 0.673544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45285,-99) , 
6, 0.836017, 1, 0, 0.59288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.28513, 1, 0, 0.552191,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348234,-99) , 
7, 10.1303, 0, 0, 0.481867,-99) , 
8, 1.34327, 0, 0, 0.512698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23061,-99) , 
7, 23.9217, 0, 0, 0.347837,-99) , 
9, 29.6858, 0, 0, 0.497513,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439563,-99) , 
12, -11456.5, 0, 0, 0.575438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351629,-99) , 
2, 11.5, 0, 0, 0.501843,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23161,-99) , 
8, 0.803413, 0, 0, 0.371994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0467241,-99) , 
4, 1.66312, 1, 0, 0.33667,-99) , 
11, 5.49447, 0, 0, 0.414226,-99) , 
3, 0.995841, 1, 0, 0.478424,-99) , 
11, -5.89325, 1, 0, 0.490834,-99)    );
  // itree = 975
  fBoostWeights.push_back(0.00840923);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503054,-99) , 
2, 14.5, 0, 0, 0.639612,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46764,-99) , 
5, 1.53646, 1, 0, 0.502975,-99) , 
10, 0.0556332, 1, 0, 0.512944,-99) , 
10, 0.372889, 0, 0, 0.526871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645642,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391151,-99) , 
2, 27.5, 0, 0, 0.444744,-99) , 
12, 13875.8, 0, 0, 0.466412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27712,-99) , 
9, 128.823, 1, 0, 0.44747,-99) , 
10, 0.477378, 1, 0, 0.503071,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286899,-99) , 
4, 1.47731, 1, 0, 0.457453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268195,-99) , 
3, 0.987317, 1, 0, 0.3769,-99) , 
10, 0.047355, 0, 0, 0.490636,-99)    );
  // itree = 976
  fBoostWeights.push_back(0.00937608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746019,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470024,-99) , 
9, 125.53, 0, 0, 0.644993,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473949,-99) , 
12, 7485.51, 0, 0, 0.498291,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248078,-99) , 
8, 0.797396, 1, 0, 0.379311,-99) , 
4, 1.73531, 1, 0, 0.484468,-99) , 
8, 0.115685, 1, 0, 0.498384,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299489,-99) , 
4, 1.64099, 0, 0, 0.371073,-99) , 
9, 30.0797, 0, 0, 0.487238,-99) , 
2, 88.5, 0, 0, 0.494679,-99)    );
  // itree = 977
  fBoostWeights.push_back(0.00571049);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700789,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510573,-99) , 
2, 28.5, 0, 0, 0.525839,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343858,-99) , 
3, 0.918398, 0, 0, 0.463924,-99) , 
6, 0.641219, 1, 0, 0.500508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0703463,-99) , 
7, 139.65, 1, 0, 0.496123,-99) , 
2, 72.5, 0, 0, 0.503523,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227909,-99) , 
3, 0.99581, 1, 0, 0.368175,-99) , 
9, 403.355, 1, 0, 0.494755,-99)    );
  // itree = 978
  fBoostWeights.push_back(0.00910267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578578,-99) , 
11, -0.859408, 1, 0, 0.642328,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521931,-99) , 
8, 0.72316, 1, 0, 0.58197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429977,-99) , 
11, -1.21319, 1, 0, 0.466201,-99) , 
13, 1.5, 0, 0, 0.498735,-99) , 
3, 0.979388, 0, 0, 0.526639,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466469,-99) , 
11, -10.8227, 1, 0, 0.477117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283906,-99) , 
9, 25.1646, 0, 0, 0.463251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159897,-99) , 
9, 487.833, 1, 0, 0.451965,-99) , 
3, 0.987811, 1, 0, 0.490185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292681,-99) , 
8, 2.96541, 1, 0, 0.48188,-99)    );
  // itree = 979
  fBoostWeights.push_back(0.00903017);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428331,-99) , 
8, 2.69055, 1, 0, 0.546285,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346974,-99) , 
7, 94.2644, 1, 0, 0.534788,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253771,-99) , 
10, 0.714364, 0, 0, 0.42471,-99) , 
9, 39.0841, 0, 0, 0.518597,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389304,-99) , 
7, 27.7565, 1, 0, 0.543793,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425864,-99) , 
2, 55.5, 0, 0, 0.447729,-99) , 
6, 0.93654, 1, 0, 0.483302,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226778,-99) , 
3, 0.988022, 1, 0, 0.311299,-99) , 
6, 0.741747, 0, 0, 0.459985,-99) , 
6, 0.640364, 1, 0, 0.493195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266351,-99) , 
5, 2.33272, 1, 0, 0.48825,-99)    );
  // itree = 980
  fBoostWeights.push_back(0.00939712);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503108,-99) , 
3, 0.988961, 1, 0, 0.599273,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582255,-99) , 
3, 0.986192, 0, 0, 0.622747,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390069,-99) , 
0, 16.5, 0, 0, 0.468057,-99) , 
6, 0.127533, 1, 0, 0.494019,-99) , 
4, 1.19312, 0, 0, 0.516051,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646387,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461011,-99) , 
7, 10.8618, 1, 0, 0.486312,-99) , 
5, 2.21968, 0, 0, 0.509011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51108,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367313,-99) , 
8, 1.11823, 1, 0, 0.452709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.117457,-99) , 
4, 1.72303, 1, 0, 0.287643,-99) , 
12, 2691.55, 1, 0, 0.415785,-99) , 
11, -0.656072, 1, 0, 0.45665,-99) , 
5, 1.52416, 1, 0, 0.483168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228157,-99) , 
3, 0.999788, 1, 0, 0.478845,-99)    );
  // itree = 981
  fBoostWeights.push_back(0.0124281);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742753,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458481,-99) , 
3, 0.998114, 0, 0, 0.567646,-99) , 
12, -5437.62, 0, 0, 0.629967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380595,-99) , 
8, 2.44691, 1, 0, 0.593361,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682181,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419502,-99) , 
3, 0.970524, 1, 0, 0.533176,-99) , 
3, 0.983158, 0, 0, 0.559727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397662,-99) , 
3, 0.998533, 1, 0, 0.495548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371047,-99) , 
3, 0.994717, 0, 0, 0.456158,-99) , 
3, 0.99035, 1, 0, 0.518917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328883,-99) , 
3, 0.999035, 1, 0, 0.536759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345537,-99) , 
6, 0.162867, 0, 0, 0.505418,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350301,-99) , 
4, 1.26908, 1, 0, 0.425055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228522,-99) , 
8, 1.23941, 1, 0, 0.363285,-99) , 
11, -0.317049, 1, 0, 0.44046,-99) , 
5, 1.72447, 1, 0, 0.488679,-99) , 
11, 5.39513, 0, 0, 0.503852,-99)    );
  // itree = 982
  fBoostWeights.push_back(0.00303921);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465798,-99) , 
2, 17.5, 0, 0, 0.490643,-99) , 
11, 9.96613, 0, 0, 0.496883,-99) , 
11, -11.8669, 1, 0, 0.50096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347491,-99) , 
3, 0.999615, 1, 0, 0.496872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310215,-99) , 
3, 0.685509, 0, 0, 0.49343,-99)    );
  // itree = 983
  fBoostWeights.push_back(0.00783478);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558714,-99) , 
11, 8.78307, 1, 0, 0.65868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437988,-99) , 
7, 17.599, 0, 0, 0.569831,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591997,-99) , 
6, 0.560043, 0, 0, 0.649374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39301,-99) , 
6, 0.879783, 1, 0, 0.564527,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403366,-99) , 
11, -2.89737, 0, 0, 0.490635,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175341,-99) , 
3, 0.998476, 0, 0, 0.336539,-99) , 
3, 0.997688, 1, 0, 0.474567,-99) , 
11, -6.76943, 1, 0, 0.483896,-99) , 
11, 6.00661, 0, 0, 0.493418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258239,-99) , 
7, 6.58791, 0, 0, 0.489833,-99)    );
  // itree = 984
  fBoostWeights.push_back(0.0074684);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.803615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634566,-99) , 
11, -2.27875, 1, 0, 0.684704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49727,-99) , 
5, 1.4932, 1, 0, 0.636858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428449,-99) , 
8, 0.422129, 0, 0, 0.593583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615345,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255892,-99) , 
7, 65.3978, 1, 0, 0.470542,-99) , 
2, 55.5, 0, 0, 0.477235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28854,-99) , 
4, 2.2454, 1, 0, 0.474248,-99) , 
4, 0.634923, 1, 0, 0.495884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320979,-99) , 
5, 0.147138, 0, 0, 0.488145,-99)    );
  // itree = 985
  fBoostWeights.push_back(0.0134989);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.831398,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453803,-99) , 
2, 23.5, 0, 0, 0.560073,-99) , 
10, 0.179197, 1, 0, 0.617734,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48495,-99) , 
7, 22.4139, 1, 0, 0.514883,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266146,-99) , 
3, 0.999619, 1, 0, 0.506451,-99) , 
4, 0.516424, 1, 0, 0.528875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251638,-99) , 
9, 461.093, 1, 0, 0.516111,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431038,-99) , 
12, -166.211, 0, 0, 0.567028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377606,-99) , 
8, 2.0403, 1, 0, 0.523705,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505466,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26314,-99) , 
4, 1.62335, 0, 0, 0.323243,-99) , 
8, 1.39415, 0, 0, 0.407463,-99) , 
12, 3996.61, 1, 0, 0.47783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180598,-99) , 
0, 16.5, 1, 0, 0.448027,-99) , 
7, 14.578, 0, 0, 0.494317,-99)    );
  // itree = 986
  fBoostWeights.push_back(0.0103162);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565275,-99) , 
2, 18.5, 0, 0, 0.657691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53357,-99) , 
3, 0.961939, 1, 0, 0.544454,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320218,-99) , 
4, 1.35862, 1, 0, 0.447248,-99) , 
3, 0.95434, 0, 0, 0.520687,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248937,-99) , 
5, 1.64833, 1, 0, 0.413082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0512189,-99) , 
1, 16.5, 0, 0, 0.350699,-99) , 
7, 77.9183, 1, 0, 0.507682,-99) , 
4, 0.275608, 1, 0, 0.52072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295539,-99) , 
5, 0.250726, 0, 0, 0.511774,-99)    );
  // itree = 987
  fBoostWeights.push_back(0.0153121);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.744473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551434,-99) , 
8, 1.95789, 1, 0, 0.652758,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514776,-99) , 
0, 34.5, 0, 0, 0.55022,-99) , 
8, 1.14953, 0, 0, 0.596693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423309,-99) , 
8, 2.65074, 1, 0, 0.570009,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437151,-99) , 
9, 142.722, 1, 0, 0.552306,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394918,-99) , 
2, 19.5, 0, 0, 0.474059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319559,-99) , 
3, 0.97714, 0, 0, 0.427095,-99) , 
4, 1.32319, 0, 0, 0.477598,-99) , 
6, 0.661589, 1, 0, 0.524888,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511223,-99) , 
1, 19.5, 0, 0, 0.560762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259402,-99) , 
5, 2.36545, 1, 0, 0.536563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39741,-99) , 
10, 0.430112, 1, 0, 0.502298,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363557,-99) , 
12, 4247.78, 0, 0, 0.518782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164634,-99) , 
4, 1.89613, 1, 0, 0.43787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.119023,-99) , 
5, 2.01803, 1, 0, 0.266805,-99) , 
0, 14.5, 1, 0, 0.350997,-99) , 
9, 47.6128, 1, 0, 0.405667,-99) , 
8, 0.633145, 1, 0, 0.45016,-99) , 
5, 1.68172, 1, 0, 0.493648,-99)    );
  // itree = 988
  fBoostWeights.push_back(0.00813346);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648727,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506346,-99) , 
0, 23.5, 0, 0, 0.522144,-99) , 
6, 1.01395, 0, 0, 0.533555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.064716,-99) , 
7, 130.083, 1, 0, 0.528333,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576828,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307907,-99) , 
0, 60.5, 0, 0, 0.391284,-99) , 
9, 85.3018, 1, 0, 0.458959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191314,-99) , 
2, 23.5, 0, 0, 0.423559,-99) , 
1, 27.5, 1, 0, 0.511132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251411,-99) , 
7, 7.42721, 0, 0, 0.503865,-99)    );
  // itree = 989
  fBoostWeights.push_back(0.0123699);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.799588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639002,-99) , 
12, 2987.02, 1, 0, 0.711803,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377201,-99) , 
12, 2841.6, 1, 0, 0.456471,-99) , 
6, 0.105742, 0, 0, 0.532249,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268991,-99) , 
3, 0.976249, 1, 0, 0.381223,-99) , 
7, 14.98, 0, 0, 0.474701,-99) , 
5, 1.50628, 1, 0, 0.548838,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445773,-99) , 
9, 62.8378, 0, 0, 0.571808,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443158,-99) , 
9, 38.1948, 1, 0, 0.48024,-99) , 
4, 1.34728, 1, 0, 0.506608,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392944,-99) , 
6, 0.859399, 1, 0, 0.468787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301524,-99) , 
8, 0.853586, 0, 0, 0.43088,-99) , 
5, 1.24969, 0, 0, 0.48479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225396,-99) , 
6, 0.229315, 0, 0, 0.475919,-99) , 
6, 0.204665, 1, 0, 0.492663,-99)    );
  // itree = 990
  fBoostWeights.push_back(0.0113651);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564725,-99) , 
11, 0.383146, 0, 0, 0.627879,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369658,-99) , 
7, 57.4778, 1, 0, 0.512559,-99) , 
2, 49.5, 0, 0, 0.532455,-99) , 
5, 1.3525, 0, 0, 0.557502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417645,-99) , 
8, 0.468517, 0, 0, 0.537606,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586395,-99) , 
4, 1.8758, 0, 0, 0.615729,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.24297, 1, 0, 0.462009,-99) , 
0, 13.5, 0, 0, 0.560232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358317,-99) , 
4, 1.77198, 1, 0, 0.52084,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362016,-99) , 
4, 1.97579, 0, 0, 0.390978,-99) , 
0, 14.5, 1, 0, 0.448459,-99) , 
13, 1.5, 0, 0, 0.483743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194799,-99) , 
1, 50.5, 1, 0, 0.47104,-99) , 
5, 1.53058, 1, 0, 0.500571,-99)    );
  // itree = 991
  fBoostWeights.push_back(0.0123514);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404543,-99) , 
9, 344.625, 1, 0, 0.572857,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391845,-99) , 
9, 169.299, 0, 0, 0.470744,-99) , 
8, 0.466421, 0, 0, 0.545626,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32209,-99) , 
9, 59.96, 0, 0, 0.569756,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228143,-99) , 
11, -0.508306, 1, 0, 0.365435,-99) , 
8, 0.316665, 1, 0, 0.465102,-99) , 
5, 1.90852, 1, 0, 0.526747,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436094,-99) , 
3, 0.945452, 0, 0, 0.534721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186002,-99) , 
4, 1.62324, 1, 0, 0.505425,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256357,-99) , 
7, 24.4517, 1, 0, 0.38111,-99) , 
3, 0.983588, 1, 0, 0.447742,-99) , 
8, 2.28561, 1, 0, 0.511237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372245,-99) , 
5, 0.722735, 0, 0, 0.502033,-99)    );
  // itree = 992
  fBoostWeights.push_back(0.0055037);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559085,-99) , 
4, 1.32772, 0, 0, 0.624511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355465,-99) , 
4, 1.94593, 1, 0, 0.601034,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480385,-99) , 
9, 158.532, 0, 0, 0.505646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0858735,-99) , 
1, 17.5, 0, 0, 0.428126,-99) , 
7, 59.9804, 1, 0, 0.496286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157141,-99) , 
4, 2.24756, 1, 0, 0.493843,-99) , 
11, -6.63949, 1, 0, 0.503554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253111,-99) , 
3, 0.999762, 1, 0, 0.499644,-99)    );
  // itree = 993
  fBoostWeights.push_back(0.00326187);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674556,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210318,-99) , 
5, 2.55097, 1, 0, 0.497772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358546,-99) , 
9, 448.657, 1, 0, 0.493291,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282614,-99) , 
7, 6.99522, 0, 0, 0.489426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288781,-99) , 
3, 0.999635, 1, 0, 0.484233,-99) , 
9, 586.575, 0, 0, 0.490632,-99)    );
  // itree = 994
  fBoostWeights.push_back(0.0102994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616174,-99) , 
5, 2.00336, 0, 0, 0.658882,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487911,-99) , 
2, 17.5, 0, 0, 0.546041,-99) , 
10, 0.0680812, 1, 0, 0.569297,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463038,-99) , 
4, 0.533963, 1, 0, 0.495236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262084,-99) , 
5, 2.22617, 1, 0, 0.481552,-99) , 
3, 0.935089, 0, 0, 0.537932,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639356,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366415,-99) , 
6, 0.983069, 1, 0, 0.510611,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336446,-99) , 
11, -5.10912, 1, 0, 0.39246,-99) , 
11, 2.58369, 0, 0, 0.445804,-99) , 
11, -10.7506, 1, 0, 0.460645,-99) , 
3, 0.988077, 1, 0, 0.498985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204801,-99) , 
1, 5.5, 0, 0, 0.492864,-99)    );
  // itree = 995
  fBoostWeights.push_back(0.0111038);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688105,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521917,-99) , 
4, 0.682068, 1, 0, 0.559517,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3422,-99) , 
10, 0.64523, 0, 0, 0.439733,-99) , 
9, 55.9609, 0, 0, 0.531627,-99) , 
11, 4.61296, 0, 0, 0.552087,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575083,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114771,-99) , 
4, 1.32471, 1, 0, 0.304403,-99) , 
1, 14.5, 0, 0, 0.432651,-99) , 
8, 2.41144, 1, 0, 0.530635,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432669,-99) , 
0, 14.5, 1, 0, 0.595351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263909,-99) , 
7, 9.75609, 0, 0, 0.463522,-99) , 
1, 8.5, 1, 0, 0.482402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258615,-99) , 
1, 6.5, 0, 0, 0.46892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33664,-99) , 
6, 0.717107, 0, 0, 0.45395,-99) , 
6, 0.623008, 1, 0, 0.4974,-99)    );
  // itree = 996
  fBoostWeights.push_back(0.012669);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735468,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550482,-99) , 
11, 6.40845, 0, 0, 0.648655,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343119,-99) , 
3, 0.997735, 0, 0, 0.465561,-99) , 
6, 0.64061, 1, 0, 0.556422,-99) , 
3, 0.991991, 1, 0, 0.603447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436296,-99) , 
7, 44.2888, 1, 0, 0.567948,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673315,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495199,-99) , 
12, 5480.12, 0, 0, 0.539729,-99) , 
8, 2.48203, 0, 0, 0.563642,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452159,-99) , 
0, 12.5, 1, 0, 0.506155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296626,-99) , 
7, 26.7362, 1, 0, 0.481964,-99) , 
2, 16.5, 0, 0, 0.51124,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411653,-99) , 
11, -3.0992, 1, 0, 0.508773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244147,-99) , 
5, 2.0737, 1, 0, 0.489465,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489899,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361935,-99) , 
6, 0.555509, 0, 0, 0.415818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228098,-99) , 
4, 1.45587, 1, 0, 0.363895,-99) , 
3, 0.995398, 0, 0, 0.432829,-99) , 
3, 0.98439, 1, 0, 0.476683,-99) , 
11, 3.16199, 0, 0, 0.496608,-99)    );
  // itree = 997
  fBoostWeights.push_back(0.00926865);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49733,-99) , 
3, 0.987782, 1, 0, 0.553435,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343713,-99) , 
3, 0.954207, 0, 0, 0.459403,-99) , 
6, 0.691686, 1, 0, 0.514509,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586988,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358282,-99) , 
9, 21.6815, 1, 0, 0.386929,-99) , 
8, 0.109924, 1, 0, 0.429663,-99) , 
5, 1.90619, 1, 0, 0.496629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171727,-99) , 
7, 188.592, 1, 0, 0.492003,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220041,-99) , 
8, 0.51795, 1, 0, 0.307085,-99) , 
9, 397.556, 1, 0, 0.480079,-99)    );
  // itree = 998
  fBoostWeights.push_back(0.0110037);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57678,-99) , 
2, 35.5, 0, 0, 0.663727,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510421,-99) , 
10, 0.26595, 0, 0, 0.623164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299911,-99) , 
7, 136.991, 1, 0, 0.60145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400562,-99) , 
1, 51.5, 1, 0, 0.560557,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512023,-99) , 
5, 2.27118, 0, 0, 0.519508,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375697,-99) , 
8, 0.142881, 0, 0, 0.507452,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265417,-99) , 
1, 19.5, 1, 0, 0.423924,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188367,-99) , 
0, 18.5, 0, 0, 0.351988,-99) , 
7, 32.1914, 1, 0, 0.488672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129429,-99) , 
5, 2.36214, 1, 0, 0.482133,-99) , 
2, 24.5, 0, 0, 0.500913,-99)    );
  // itree = 999
  fBoostWeights.push_back(0.00888779);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552219,-99) , 
12, 2813.17, 0, 0, 0.664026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284376,-99) , 
7, 248.779, 1, 0, 0.631011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55184,-99) , 
6, 0.188124, 1, 0, 0.577154,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434667,-99) , 
8, 0.236541, 1, 0, 0.47524,-99) , 
5, 1.51011, 1, 0, 0.520947,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546454,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409424,-99) , 
2, 24.5, 0, 0, 0.429491,-99) , 
12, -4252.91, 1, 0, 0.447096,-99) , 
9, 83.142, 0, 0, 0.491506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319989,-99) , 
7, 65.2068, 1, 0, 0.482446,-99) , 
2, 49.5, 0, 0, 0.494184,-99)    );
  // itree = 1000
  fBoostWeights.push_back(0.0111843);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537974,-99) , 
8, 1.59651, 0, 0, 0.554597,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380598,-99) , 
6, 0.789056, 0, 0, 0.447461,-99) , 
9, 39.5249, 0, 0, 0.538501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463715,-99) , 
6, 0.347458, 1, 0, 0.531317,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297712,-99) , 
9, 41.7716, 1, 0, 0.379112,-99) , 
5, 1.54614, 1, 0, 0.46344,-99) , 
8, 1.9268, 1, 0, 0.516526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27224,-99) , 
4, 1.8866, 1, 0, 0.516267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0610836,-99) , 
7, 47.009, 1, 0, 0.497895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276199,-99) , 
6, 0.231548, 0, 0, 0.449907,-99) , 
1, 9.5, 0, 0, 0.500843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175153,-99) , 
7, 6.59217, 0, 0, 0.496381,-99)    );
  // itree = 1001
  fBoostWeights.push_back(0.0119383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544822,-99) , 
8, 2.12078, 0, 0, 0.57443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152288,-99) , 
4, 2.06368, 1, 0, 0.561706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522977,-99) , 
8, 1.02208, 1, 0, 0.621156,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399788,-99) , 
1, 17.5, 0, 0, 0.464522,-99) , 
7, 16.4994, 1, 0, 0.486008,-99) , 
13, 1.5, 0, 0, 0.511347,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239527,-99) , 
1, 13.5, 0, 0, 0.369224,-99) , 
8, 2.88667, 1, 0, 0.499827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477957,-99) , 
8, 0.658868, 0, 0, 0.559918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207793,-99) , 
9, 124.614, 1, 0, 0.408836,-99) , 
8, 1.07006, 1, 0, 0.493195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350904,-99) , 
5, 1.51761, 0, 0, 0.44655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214499,-99) , 
0, 16.5, 1, 0, 0.42822,-99) , 
7, 14.0613, 0, 0, 0.479954,-99)    );
  // itree = 1002
  fBoostWeights.push_back(0.0107418);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493387,-99) , 
5, 1.78594, 1, 0, 0.654064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697311,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52133,-99) , 
3, 0.998251, 0, 0, 0.603307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403686,-99) , 
7, 23.9379, 1, 0, 0.531281,-99) , 
1, 18.5, 0, 0, 0.565919,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494797,-99) , 
8, 0.30805, 1, 0, 0.52051,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27589,-99) , 
8, 0.347403, 0, 0, 0.431304,-99) , 
9, 55.6623, 0, 0, 0.497004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312413,-99) , 
7, 34.2287, 1, 0, 0.395452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178835,-99) , 
4, 1.39532, 1, 0, 0.327988,-99) , 
3, 0.996562, 1, 0, 0.471878,-99) , 
11, -4.38527, 1, 0, 0.48772,-99) , 
11, 8.481, 0, 0, 0.497136,-99)    );
  // itree = 1003
  fBoostWeights.push_back(0.00743133);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662648,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504613,-99) , 
11, -3.0211, 1, 0, 0.524086,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298032,-99) , 
11, 5.27382, 0, 0, 0.40341,-99) , 
3, 0.99911, 1, 0, 0.514311,-99) , 
6, 0.0460564, 1, 0, 0.523272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310069,-99) , 
1, 80.5, 1, 0, 0.517973,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157381,-99) , 
6, 0.696575, 1, 0, 0.318828,-99) , 
7, 9.05675, 0, 0, 0.503593,-99)    );
  // itree = 1004
  fBoostWeights.push_back(0.0159658);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445009,-99) , 
2, 35.5, 0, 0, 0.569586,-99) , 
10, 0.574713, 1, 0, 0.642255,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418832,-99) , 
6, 0.433924, 0, 0, 0.572134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379887,-99) , 
7, 17.2921, 1, 0, 0.515493,-99) , 
7, 23.7631, 0, 0, 0.575995,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514193,-99) , 
12, 6709.29, 0, 0, 0.611901,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328764,-99) , 
11, -5.80345, 1, 0, 0.395344,-99) , 
12, 5369.75, 1, 0, 0.441254,-99) , 
13, 0.5, 1, 0, 0.497439,-99) , 
9, 113.559, 1, 0, 0.540725,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372076,-99) , 
7, 58.4055, 1, 0, 0.537239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265444,-99) , 
8, 1.32716, 0, 0, 0.364301,-99) , 
0, 11.5, 0, 0, 0.499632,-99) , 
6, 0.112829, 1, 0, 0.523808,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403888,-99) , 
1, 13.5, 0, 0, 0.460767,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173378,-99) , 
7, 54.1772, 0, 0, 0.331065,-99) , 
1, 30.5, 1, 0, 0.435645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.098456,-99) , 
4, 1.92726, 1, 0, 0.426037,-99) , 
12, 605.997, 1, 0, 0.474084,-99) , 
11, -0.945949, 1, 0, 0.500797,-99)    );
  // itree = 1005
  fBoostWeights.push_back(0.0078452);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562526,-99) , 
5, 1.56557, 1, 0, 0.642631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456161,-99) , 
7, 145.738, 1, 0, 0.605237,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239981,-99) , 
7, 61.6369, 1, 0, 0.524477,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24339,-99) , 
6, 0.511969, 1, 0, 0.337939,-99) , 
1, 24.5, 1, 0, 0.508355,-99) , 
2, 34.5, 0, 0, 0.520323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563761,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257845,-99) , 
12, 7133.37, 0, 0, 0.331158,-99) , 
11, 6.61875, 0, 0, 0.400743,-99) , 
11, -8.50318, 1, 0, 0.44047,-99) , 
3, 0.998068, 1, 0, 0.507503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108505,-99) , 
5, 1.94631, 1, 0, 0.392892,-99) , 
8, 2.88254, 1, 0, 0.499636,-99)    );
  // itree = 1006
  fBoostWeights.push_back(0.00642351);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637538,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471781,-99) , 
3, 0.898035, 1, 0, 0.486144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.131962,-99) , 
7, 105.266, 1, 0, 0.479672,-99) , 
2, 61.5, 0, 0, 0.487296,-99) , 
12, -9460.25, 1, 0, 0.494857,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264378,-99) , 
3, 0.985519, 0, 0, 0.467845,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242715,-99) , 
10, 0.244454, 0, 0, 0.384021,-99) , 
4, 1.82969, 1, 0, 0.48398,-99)    );
  // itree = 1007
  fBoostWeights.push_back(0.0110743);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494886,-99) , 
1, 8.5, 1, 0, 0.632127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417981,-99) , 
7, 11.486, 0, 0, 0.527156,-99) , 
0, 10.5, 1, 0, 0.54636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234759,-99) , 
5, 2.29471, 1, 0, 0.537137,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637762,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250626,-99) , 
7, 72.6538, 1, 0, 0.469886,-99) , 
2, 57.5, 0, 0, 0.494936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225487,-99) , 
2, 10.5, 0, 0, 0.463581,-99) , 
10, 0.335598, 1, 0, 0.509529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352206,-99) , 
9, 472.721, 1, 0, 0.501739,-99)    );
  // itree = 1008
  fBoostWeights.push_back(0.0124885);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.811109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603824,-99) , 
11, 0.0523388, 1, 0, 0.707217,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526838,-99) , 
3, 0.995377, 0, 0, 0.591033,-99) , 
11, -1.26302, 0, 0, 0.641067,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426056,-99) , 
4, 1.11952, 0, 0, 0.512307,-99) , 
12, 1042.97, 0, 0, 0.594782,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63124,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199857,-99) , 
5, 1.89761, 1, 0, 0.384278,-99) , 
6, 0.424565, 1, 0, 0.488176,-99) , 
0, 13.5, 0, 0, 0.563025,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3948,-99) , 
9, 336.192, 1, 0, 0.537918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26153,-99) , 
5, 2.12377, 0, 0, 0.388502,-99) , 
5, 1.98396, 1, 0, 0.516463,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352218,-99) , 
0, 18.5, 0, 0, 0.521818,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274588,-99) , 
0, 26.5, 1, 0, 0.374794,-99) , 
6, 0.177149, 1, 0, 0.417353,-99) , 
3, 0.952286, 0, 0, 0.490346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162267,-99) , 
3, 0.999708, 1, 0, 0.483438,-99) , 
13, 1.5, 0, 0, 0.508279,-99)    );
  // itree = 1009
  fBoostWeights.push_back(0.00688336);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62277,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504952,-99) , 
2, 33.5, 0, 0, 0.512115,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233103,-99) , 
3, 0.907459, 1, 0, 0.333949,-99) , 
1, 34.5, 1, 0, 0.499199,-99) , 
2, 54.5, 0, 0, 0.505992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264732,-99) , 
7, 232.607, 1, 0, 0.503113,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240285,-99) , 
8, 0.173661, 1, 0, 0.363933,-99) , 
4, 1.90643, 1, 0, 0.493498,-99)    );
  // itree = 1010
  fBoostWeights.push_back(0.00940449);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585733,-99) , 
8, 1.1907, 1, 0, 0.678171,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67655,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407767,-99) , 
11, 6.351, 0, 0, 0.512129,-99) , 
12, -1296.34, 0, 0, 0.540988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346811,-99) , 
11, 3.83605, 0, 0, 0.514574,-99) , 
3, 0.987425, 1, 0, 0.551768,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481463,-99) , 
11, -1.14275, 0, 0, 0.546519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471432,-99) , 
2, 24.5, 0, 0, 0.492458,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323496,-99) , 
7, 80.3141, 1, 0, 0.480969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520922,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298434,-99) , 
13, 1.5, 0, 0, 0.350197,-99) , 
12, 12250.5, 0, 0, 0.38133,-99) , 
6, 0.662396, 1, 0, 0.453443,-99) , 
6, 1.00791, 0, 0, 0.465096,-99) , 
11, 2.76371, 0, 0, 0.488459,-99)    );
  // itree = 1011
  fBoostWeights.push_back(0.00650255);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733381,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356945,-99) , 
9, 91.6895, 1, 0, 0.502613,-99) , 
8, 0.72389, 1, 0, 0.588498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441279,-99) , 
8, 0.426759, 0, 0, 0.511506,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194286,-99) , 
7, 8.82584, 0, 0, 0.443069,-99) , 
5, 1.89503, 1, 0, 0.495082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301019,-99) , 
3, 0.695257, 0, 0, 0.49106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235531,-99) , 
7, 74.4349, 1, 0, 0.482917,-99) , 
2, 43.5, 0, 0, 0.492104,-99)    );
  // itree = 1012
  fBoostWeights.push_back(0.0112168);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583668,-99) , 
0, 27.5, 0, 0, 0.616557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453702,-99) , 
9, 226.31, 1, 0, 0.579308,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491075,-99) , 
6, 0.267033, 1, 0, 0.526332,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347352,-99) , 
11, 4.93094, 0, 0, 0.431317,-99) , 
3, 0.994215, 1, 0, 0.498241,-99) , 
11, -2.57972, 1, 0, 0.51951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335233,-99) , 
5, 0.4314, 0, 0, 0.508856,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492223,-99) , 
6, 0.55449, 1, 0, 0.612371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405568,-99) , 
7, 22.3899, 0, 0, 0.549015,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404085,-99) , 
6, 0.937985, 0, 0, 0.444209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171266,-99) , 
7, 21.6297, 1, 0, 0.391885,-99) , 
1, 15.5, 0, 0, 0.444166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16535,-99) , 
1, 49.5, 1, 0, 0.433791,-99) , 
5, 1.85357, 1, 0, 0.489444,-99)    );
  // itree = 1013
  fBoostWeights.push_back(0.00995822);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574778,-99) , 
2, 13.5, 0, 0, 0.62799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46013,-99) , 
2, 36.5, 0, 0, 0.498753,-99) , 
12, 9136.44, 0, 0, 0.522159,-99) , 
10, 0.150191, 1, 0, 0.552459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391453,-99) , 
9, 312.935, 1, 0, 0.532743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662665,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441913,-99) , 
3, 0.980953, 1, 0, 0.497948,-99) , 
5, 2.2063, 0, 0, 0.551356,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437212,-99) , 
8, 1.55772, 0, 0, 0.495763,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23214,-99) , 
5, 1.97914, 1, 0, 0.393241,-99) , 
0, 16.5, 1, 0, 0.450689,-99) , 
8, 0.247878, 1, 0, 0.474105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0599317,-99) , 
7, 169.163, 1, 0, 0.469794,-99) , 
5, 1.53058, 1, 0, 0.498797,-99)    );
  // itree = 1014
  fBoostWeights.push_back(0.00541995);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650177,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372486,-99) , 
8, 2.54042, 1, 0, 0.549485,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386129,-99) , 
9, 109.355, 1, 0, 0.481418,-99) , 
9, 160.289, 0, 0, 0.503593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359007,-99) , 
9, 472.956, 1, 0, 0.496871,-99) , 
9, 18.3116, 1, 0, 0.503478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297921,-99) , 
3, 0.99962, 1, 0, 0.497801,-99)    );
  // itree = 1015
  fBoostWeights.push_back(0.0117681);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510004,-99) , 
9, 71.6229, 1, 0, 0.598347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697804,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419739,-99) , 
0, 17.5, 0, 0, 0.544199,-99) , 
9, 284.592, 1, 0, 0.602066,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345029,-99) , 
0, 13.5, 1, 0, 0.534952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348302,-99) , 
6, 0.762903, 1, 0, 0.483779,-99) , 
7, 13.7101, 0, 0, 0.53854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4891,-99) , 
0, 31.5, 0, 0, 0.524236,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199106,-99) , 
0, 61.5, 0, 0, 0.420351,-99) , 
1, 37.5, 1, 0, 0.502332,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12563,-99) , 
5, 2.23863, 1, 0, 0.419622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0911773,-99) , 
7, 45.208, 1, 0, 0.399573,-99) , 
1, 11.5, 0, 0, 0.470618,-99) , 
10, 0.108825, 1, 0, 0.491923,-99) , 
11, -6.42938, 1, 0, 0.501748,-99)    );
  // itree = 1016
  fBoostWeights.push_back(0.00794632);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648864,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490793,-99) , 
9, 69.7216, 0, 0, 0.538033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313971,-99) , 
1, 37.5, 1, 0, 0.529072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216927,-99) , 
7, 79.9888, 1, 0, 0.518788,-99) , 
2, 52.5, 0, 0, 0.52572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465827,-99) , 
12, 2981.42, 0, 0, 0.535008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345171,-99) , 
4, 1.66114, 0, 0, 0.438965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176961,-99) , 
8, 2.09934, 1, 0, 0.385859,-99) , 
5, 1.59882, 1, 0, 0.466897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22401,-99) , 
9, 367.165, 1, 0, 0.44605,-99) , 
3, 0.998089, 1, 0, 0.512231,-99)    );
  // itree = 1017
  fBoostWeights.push_back(0.00818925);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505664,-99) , 
12, 4495.54, 1, 0, 0.620895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408221,-99) , 
11, 7.73746, 1, 0, 0.522645,-99) , 
9, 233.341, 0, 0, 0.537662,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327214,-99) , 
9, 556.382, 0, 0, 0.405149,-99) , 
9, 396.906, 1, 0, 0.528731,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504364,-99) , 
12, 8502.31, 0, 0, 0.546203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313558,-99) , 
6, 0.934978, 1, 0, 0.501613,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238167,-99) , 
7, 25.3447, 1, 0, 0.351615,-99) , 
11, 0.639284, 1, 0, 0.440178,-99) , 
8, 2.28561, 1, 0, 0.510007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185333,-99) , 
7, 6.9419, 0, 0, 0.504492,-99)    );
  // itree = 1018
  fBoostWeights.push_back(0.00830368);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387703,-99) , 
2, 8.5, 0, 0, 0.557857,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448109,-99) , 
7, 38.4267, 0, 0, 0.482375,-99) , 
3, 0.975057, 0, 0, 0.531771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216824,-99) , 
7, 108.173, 1, 0, 0.52452,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267008,-99) , 
7, 85.2803, 0, 0, 0.411286,-99) , 
1, 37.5, 1, 0, 0.5134,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38227,-99) , 
1, 9.5, 0, 0, 0.480204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291093,-99) , 
0, 13.5, 1, 0, 0.41407,-99) , 
10, 0.0497328, 0, 0, 0.502742,-99)    );
  // itree = 1019
  fBoostWeights.push_back(0.00683444);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72172,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472545,-99) , 
2, 11.5, 0, 0, 0.533784,-99) , 
1, 14.5, 0, 0, 0.59294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508899,-99) , 
2, 14.5, 0, 0, 0.54077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418873,-99) , 
9, 32.8917, 0, 0, 0.530621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366656,-99) , 
11, 2.22536, 1, 0, 0.511293,-99) , 
11, 3.74672, 0, 0, 0.525803,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456524,-99) , 
5, 2.11683, 0, 0, 0.493033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248282,-99) , 
3, 0.830083, 0, 0, 0.48136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192597,-99) , 
8, 2.88071, 1, 0, 0.472469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.168339,-99) , 
7, 106.298, 1, 0, 0.462769,-99) , 
4, 1.53078, 1, 0, 0.509002,-99)    );
  // itree = 1020
  fBoostWeights.push_back(0.0111904);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587593,-99) , 
8, 1.16909, 0, 0, 0.661776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503285,-99) , 
11, 1.34498, 1, 0, 0.602893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17406,-99) , 
5, 2.15631, 1, 0, 0.58602,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479327,-99) , 
8, 0.983379, 0, 0, 0.533501,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383216,-99) , 
8, 0.24727, 1, 0, 0.448358,-99) , 
4, 1.50328, 1, 0, 0.511834,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368988,-99) , 
0, 19.5, 1, 0, 0.447425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225653,-99) , 
8, 0.561946, 0, 0, 0.38794,-99) , 
9, 32.9279, 0, 0, 0.49821,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395725,-99) , 
8, 0.66399, 0, 0, 0.499599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242748,-99) , 
8, 1.88804, 1, 0, 0.425511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142709,-99) , 
0, 13.5, 1, 0, 0.360502,-99) , 
7, 11.2379, 0, 0, 0.483224,-99) , 
0, 10.5, 1, 0, 0.496176,-99)    );
  // itree = 1021
  fBoostWeights.push_back(0.00894162);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644592,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336773,-99) , 
5, 2.1577, 1, 0, 0.530481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24986,-99) , 
2, 46.5, 0, 0, 0.42189,-99) , 
7, 65.6638, 1, 0, 0.517405,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260051,-99) , 
8, 0.899419, 0, 0, 0.394902,-99) , 
9, 33.6085, 0, 0, 0.504348,-99) , 
4, 1.65908, 0, 0, 0.51326,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440954,-99) , 
12, 1440.39, 1, 0, 0.530736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286694,-99) , 
7, 44.2036, 1, 0, 0.46522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239139,-99) , 
2, 12.5, 0, 0, 0.386278,-99) , 
4, 1.74363, 1, 0, 0.497298,-99)    );
  // itree = 1022
  fBoostWeights.push_back(0.00804338);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527231,-99) , 
9, 104.267, 1, 0, 0.625629,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545114,-99) , 
3, 0.901469, 1, 0, 0.579078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405977,-99) , 
8, 0.86412, 0, 0, 0.483376,-99) , 
9, 164.445, 0, 0, 0.51531,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349134,-99) , 
6, 0.42897, 0, 0, 0.510739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225344,-99) , 
9, 150.947, 1, 0, 0.389894,-99) , 
8, 0.717778, 1, 0, 0.44752,-99) , 
4, 1.5536, 1, 0, 0.498395,-99) , 
12, 10249.1, 0, 0, 0.507662,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295758,-99) , 
6, 0.703015, 1, 0, 0.397536,-99) , 
12, 14302.6, 1, 0, 0.500672,-99)    );
  // itree = 1023
  fBoostWeights.push_back(0.00679885);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731364,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49092,-99) , 
6, 1.12183, 1, 0, 0.608923,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472314,-99) , 
3, 0.993069, 1, 0, 0.513067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383058,-99) , 
6, 0.971729, 1, 0, 0.502607,-99) , 
6, 1.02767, 0, 0, 0.514048,-99) , 
11, -10.3251, 1, 0, 0.521048,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306728,-99) , 
8, 1.77411, 1, 0, 0.470694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261964,-99) , 
3, 0.990962, 1, 0, 0.374155,-99) , 
4, 1.77824, 1, 0, 0.50646,-99)    );
  // itree = 1024
  fBoostWeights.push_back(0.0109331);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607653,-99) , 
10, 0.450538, 1, 0, 0.669352,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482684,-99) , 
0, 23.5, 1, 0, 0.530266,-99) , 
4, 1.001, 1, 0, 0.587412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288895,-99) , 
4, 2.01906, 1, 0, 0.52686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370463,-99) , 
5, 1.23998, 0, 0, 0.498144,-99) , 
0, 20.5, 0, 0, 0.533419,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584805,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311945,-99) , 
0, 24.5, 1, 0, 0.42249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106782,-99) , 
5, 1.9922, 1, 0, 0.401268,-99) , 
9, 42.0892, 1, 0, 0.446496,-99) , 
8, 2.24824, 1, 0, 0.514852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308117,-99) , 
9, 468.753, 1, 0, 0.505116,-99)    );
  // itree = 1025
  fBoostWeights.push_back(0.0132052);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549133,-99) , 
6, 0.180929, 1, 0, 0.568539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423948,-99) , 
4, 0.0262606, 0, 0, 0.550714,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412885,-99) , 
9, 76.8075, 1, 0, 0.542475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305162,-99) , 
2, 23.5, 0, 0, 0.459167,-99) , 
10, 0.656343, 1, 0, 0.52788,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596309,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297141,-99) , 
3, 0.988401, 1, 0, 0.37156,-99) , 
0, 10.5, 1, 0, 0.439305,-99) , 
7, 13.268, 0, 0, 0.507738,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569529,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642344,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241816,-99) , 
5, 1.93339, 0, 0, 0.418156,-99) , 
12, 5906.73, 0, 0, 0.499178,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189035,-99) , 
5, 2.13561, 1, 0, 0.387338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207426,-99) , 
4, 1.79525, 1, 0, 0.346164,-99) , 
9, 77.2124, 1, 0, 0.418035,-99) , 
8, 0.0838873, 1, 0, 0.440749,-99) , 
5, 1.75091, 1, 0, 0.484835,-99)    );
  // itree = 1026
  fBoostWeights.push_back(0.00975712);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515009,-99) , 
9, 110.626, 1, 0, 0.590516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349829,-99) , 
3, 0.999088, 1, 0, 0.573008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0595308,-99) , 
7, 118.798, 1, 0, 0.526691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313291,-99) , 
0, 20.5, 0, 0, 0.398938,-99) , 
5, 1.41588, 0, 0, 0.48225,-99) , 
8, 1.36, 0, 0, 0.527008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748381,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396242,-99) , 
9, 68.529, 0, 0, 0.506023,-99) , 
5, 1.36105, 1, 0, 0.554751,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355559,-99) , 
8, 2.37014, 1, 0, 0.458895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278808,-99) , 
12, 3321.01, 0, 0, 0.337627,-99) , 
9, 40.4899, 0, 0, 0.439109,-99) , 
6, 0.134857, 1, 0, 0.477636,-99) , 
6, 0.510729, 0, 0, 0.503204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279951,-99) , 
3, 0.689373, 0, 0, 0.499971,-99)    );
  // itree = 1027
  fBoostWeights.push_back(0.0114325);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754345,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454246,-99) , 
11, 0.015726, 1, 0, 0.560701,-99) , 
3, 0.961788, 0, 0, 0.624638,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461785,-99) , 
10, 0.172467, 0, 0, 0.58135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415133,-99) , 
3, 0.994018, 0, 0, 0.51977,-99) , 
3, 0.98228, 1, 0, 0.563947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459222,-99) , 
7, 15.8459, 0, 0, 0.513407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298358,-99) , 
1, 27.5, 1, 0, 0.500936,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234155,-99) , 
4, 1.08874, 1, 0, 0.394802,-99) , 
7, 50.8813, 1, 0, 0.484606,-99) , 
13, 1.5, 0, 0, 0.508666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229195,-99) , 
8, 1.36856, 0, 0, 0.327318,-99) , 
8, 0.106961, 1, 0, 0.390788,-99) , 
5, 2.06635, 1, 0, 0.495554,-99)    );
  // itree = 1028
  fBoostWeights.push_back(0.014948);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.819921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639467,-99) , 
7, 89.1296, 1, 0, 0.721447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515713,-99) , 
8, 1.93563, 1, 0, 0.651511,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430313,-99) , 
4, 0.0889621, 0, 0, 0.554113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41543,-99) , 
7, 43.092, 1, 0, 0.536462,-99) , 
2, 33.5, 0, 0, 0.555469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388859,-99) , 
8, 0.238442, 0, 0, 0.542483,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449742,-99) , 
5, 2.02234, 0, 0, 0.546632,-99) , 
8, 0.388207, 0, 0, 0.591273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259642,-99) , 
9, 88.1354, 0, 0, 0.416038,-99) , 
7, 16.112, 0, 0, 0.529209,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300411,-99) , 
9, 98.853, 1, 0, 0.418516,-99) , 
11, 5.12917, 0, 0, 0.45695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118554,-99) , 
9, 36.944, 1, 0, 0.202402,-99) , 
7, 25.7411, 1, 0, 0.400382,-99) , 
8, 0.582372, 1, 0, 0.459439,-99) , 
5, 1.67314, 1, 0, 0.507031,-99)    );
  // itree = 1029
  fBoostWeights.push_back(0.0096559);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537702,-99) , 
2, 21.5, 0, 0, 0.551887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38218,-99) , 
1, 27.5, 1, 0, 0.545956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36227,-99) , 
7, 7.34916, 0, 0, 0.540695,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219226,-99) , 
8, 1.91434, 1, 0, 0.410869,-99) , 
5, 1.18715, 1, 0, 0.504076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159898,-99) , 
1, 13.5, 0, 0, 0.450835,-99) , 
7, 46.1096, 1, 0, 0.524909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577675,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369253,-99) , 
0, 18.5, 1, 0, 0.464528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282437,-99) , 
12, 1825.92, 0, 0, 0.419561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153712,-99) , 
4, 1.7447, 1, 0, 0.390616,-99) , 
4, 0.876709, 1, 0, 0.455037,-99) , 
3, 0.936911, 0, 0, 0.511494,-99)    );
  // itree = 1030
  fBoostWeights.push_back(0.00878315);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366214,-99) , 
7, 125.685, 1, 0, 0.575952,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298269,-99) , 
7, 38.0894, 1, 0, 0.499339,-99) , 
2, 23.5, 0, 0, 0.519946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343598,-99) , 
5, 0.652227, 0, 0, 0.509578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290881,-99) , 
1, 70.5, 1, 0, 0.501723,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435919,-99) , 
0, 10.5, 1, 0, 0.489266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349267,-99) , 
6, 0.225941, 0, 0, 0.457309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28143,-99) , 
7, 9.01719, 0, 0, 0.427258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112507,-99) , 
7, 55.7909, 1, 0, 0.417059,-99) , 
1, 9.5, 0, 0, 0.48094,-99)    );
  // itree = 1031
  fBoostWeights.push_back(0.00671367);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507471,-99) , 
2, 16.5, 0, 0, 0.531956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350347,-99) , 
3, 0.999506, 1, 0, 0.524061,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239754,-99) , 
6, 0.205989, 0, 0, 0.39577,-99) , 
3, 0.83892, 0, 0, 0.514292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351018,-99) , 
5, 0.504746, 0, 0, 0.506522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607139,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170906,-99) , 
13, 1.5, 0, 0, 0.295379,-99) , 
11, 8.01545, 0, 0, 0.369664,-99) , 
4, 1.91971, 1, 0, 0.497258,-99)    );
  // itree = 1032
  fBoostWeights.push_back(0.00675114);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511109,-99) , 
2, 29.5, 0, 0, 0.527672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233916,-99) , 
7, 142.666, 1, 0, 0.523977,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152719,-99) , 
5, 1.56263, 1, 0, 0.371015,-99) , 
1, 50.5, 1, 0, 0.51534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255481,-99) , 
2, 6.5, 0, 0, 0.510342,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206943,-99) , 
12, 3616.39, 1, 0, 0.348344,-99) , 
9, 396.85, 1, 0, 0.499502,-99)    );
  // itree = 1033
  fBoostWeights.push_back(0.012949);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.77786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595943,-99) , 
12, 750.918, 1, 0, 0.678268,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651646,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491363,-99) , 
9, 62.0626, 1, 0, 0.547554,-99) , 
4, 1.36738, 1, 0, 0.612445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452406,-99) , 
5, 1.18969, 0, 0, 0.57677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482695,-99) , 
5, 1.98537, 1, 0, 0.630953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466451,-99) , 
1, 18.5, 1, 0, 0.57505,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433423,-99) , 
4, 0.951051, 0, 0, 0.489776,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305041,-99) , 
13, 1.5, 0, 0, 0.371133,-99) , 
4, 1.19326, 1, 0, 0.441492,-99) , 
11, -1.69576, 1, 0, 0.485504,-99) , 
11, 0.547171, 0, 0, 0.521609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704485,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251802,-99) , 
4, 2.00232, 1, 0, 0.61073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364772,-99) , 
0, 12.5, 0, 0, 0.527481,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282061,-99) , 
9, 373.444, 1, 0, 0.460425,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455291,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292398,-99) , 
9, 40.0733, 1, 0, 0.36269,-99) , 
10, 0.464131, 1, 0, 0.430951,-99) , 
11, 5.07929, 0, 0, 0.456304,-99) , 
12, 24111.9, 0, 0, 0.46544,-99) , 
3, 0.988534, 1, 0, 0.495549,-99)    );
  // itree = 1034
  fBoostWeights.push_back(0.0104673);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72455,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540514,-99) , 
5, 0.883282, 1, 0, 0.574956,-99) , 
5, 1.42745, 0, 0, 0.597203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41538,-99) , 
8, 0.44227, 0, 0, 0.571437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444331,-99) , 
8, 1.50311, 0, 0, 0.522495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369981,-99) , 
6, 1.03107, 0, 0, 0.456622,-99) , 
6, 0.921446, 1, 0, 0.533432,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590821,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495117,-99) , 
6, 0.118818, 1, 0, 0.532613,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400746,-99) , 
8, 0.0807332, 1, 0, 0.419072,-99) , 
13, 1.5, 0, 0, 0.455741,-99) , 
11, 6.25362, 0, 0, 0.469462,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237732,-99) , 
7, 67.2924, 1, 0, 0.454272,-99) , 
5, 1.50774, 1, 0, 0.488691,-99)    );
  // itree = 1035
  fBoostWeights.push_back(0.0101727);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720466,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565355,-99) , 
6, 0.491905, 0, 0, 0.630607,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474699,-99) , 
4, 1.42564, 0, 0, 0.517397,-99) , 
11, -1.96677, 0, 0, 0.581203,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458221,-99) , 
9, 154.555, 0, 0, 0.503366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336303,-99) , 
4, 1.6209, 1, 0, 0.479023,-99) , 
11, -0.682966, 1, 0, 0.515824,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644134,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142326,-99) , 
7, 40.7657, 1, 0, 0.449061,-99) , 
2, 28.5, 0, 0, 0.469044,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227777,-99) , 
0, 61.5, 0, 0, 0.32233,-99) , 
1, 28.5, 1, 0, 0.451641,-99) , 
3, 0.984786, 1, 0, 0.48228,-99) , 
11, -13.452, 1, 0, 0.487131,-99)    );
  // itree = 1036
  fBoostWeights.push_back(0.00535364);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661444,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480724,-99) , 
4, 0.743949, 1, 0, 0.501839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157524,-99) , 
7, 108.972, 1, 0, 0.49776,-99) , 
2, 55.5, 0, 0, 0.505196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238924,-99) , 
1, 5.5, 0, 0, 0.499283,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254652,-99) , 
1, 70.5, 1, 0, 0.492544,-99)    );
  // itree = 1037
  fBoostWeights.push_back(0.0116045);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586216,-99) , 
6, 0.0539622, 0, 0, 0.663945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538518,-99) , 
5, 1.50922, 1, 0, 0.574694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406469,-99) , 
10, 0.195076, 1, 0, 0.47882,-99) , 
5, 1.1992, 0, 0, 0.548604,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31394,-99) , 
8, 0.3531, 1, 0, 0.420814,-99) , 
5, 1.97359, 1, 0, 0.527314,-99) , 
6, 0.0998632, 1, 0, 0.546158,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424884,-99) , 
6, 0.263394, 0, 0, 0.541868,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336846,-99) , 
3, 0.996341, 0, 0, 0.444424,-99) , 
12, 4693.05, 1, 0, 0.502554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298973,-99) , 
3, 0.999712, 1, 0, 0.494094,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570831,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248381,-99) , 
5, 1.8839, 0, 0, 0.293275,-99) , 
11, -4.32844, 1, 0, 0.374558,-99) , 
8, 2.27425, 1, 0, 0.472987,-99) , 
3, 0.986833, 1, 0, 0.509021,-99)    );
  // itree = 1038
  fBoostWeights.push_back(0.0105047);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598002,-99) , 
8, 1.14628, 1, 0, 0.701854,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439528,-99) , 
6, 0.457276, 1, 0, 0.558661,-99) , 
11, -5.66051, 1, 0, 0.61014,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44156,-99) , 
3, 0.993362, 1, 0, 0.558399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388129,-99) , 
4, 1.38729, 0, 0, 0.490625,-99) , 
6, 0.743571, 1, 0, 0.561889,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135933,-99) , 
5, 2.22574, 1, 0, 0.513999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397874,-99) , 
8, 0.169716, 0, 0, 0.502391,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484713,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176644,-99) , 
8, 0.296175, 1, 0, 0.284698,-99) , 
6, 0.968517, 0, 0, 0.352192,-99) , 
4, 1.72761, 1, 0, 0.482098,-99) , 
11, -1.88447, 1, 0, 0.50736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206269,-99) , 
4, 1.22224, 1, 0, 0.333212,-99) , 
8, 2.91736, 1, 0, 0.497262,-99)    );
  // itree = 1039
  fBoostWeights.push_back(0.00495455);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455003,-99) , 
1, 34.5, 1, 0, 0.537484,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326311,-99) , 
0, 11.5, 1, 0, 0.457621,-99) , 
7, 11.3151, 0, 0, 0.524419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394463,-99) , 
1, 6.5, 0, 0, 0.517847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384886,-99) , 
8, 0.0985831, 0, 0, 0.510078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262753,-99) , 
8, 0.303262, 1, 0, 0.395391,-99) , 
5, 2.16519, 1, 0, 0.502629,-99)    );
  // itree = 1040
  fBoostWeights.push_back(0.006533);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491425,-99) , 
3, 0.998252, 0, 0, 0.594692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399069,-99) , 
8, 0.321722, 0, 0, 0.519906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37193,-99) , 
2, 8.5, 0, 0, 0.506287,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372831,-99) , 
10, 0.0811998, 0, 0, 0.449959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195173,-99) , 
1, 51.5, 1, 0, 0.440532,-99) , 
5, 1.67342, 1, 0, 0.479765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181485,-99) , 
3, 0.999693, 1, 0, 0.473488,-99) , 
11, -6.95384, 1, 0, 0.482992,-99)    );
  // itree = 1041
  fBoostWeights.push_back(0.0106002);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52916,-99) , 
11, -0.573039, 0, 0, 0.560676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45689,-99) , 
8, 2.68012, 1, 0, 0.545741,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416527,-99) , 
8, 1.95022, 1, 0, 0.503151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325554,-99) , 
8, 0.79761, 0, 0, 0.45424,-99) , 
12, 15.8899, 0, 0, 0.521502,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670663,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492603,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242296,-99) , 
3, 0.99885, 1, 0, 0.465757,-99) , 
12, 3899.41, 1, 0, 0.498781,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43592,-99) , 
12, 58.0217, 1, 0, 0.518362,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0470142,-99) , 
4, 1.92872, 1, 0, 0.323382,-99) , 
8, 0.314971, 1, 0, 0.397039,-99) , 
11, -0.793009, 1, 0, 0.442912,-99) , 
5, 1.74802, 1, 0, 0.493423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266519,-99) , 
3, 0.730944, 0, 0, 0.486765,-99)    );
  // itree = 1042
  fBoostWeights.push_back(0.00605104);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730574,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503324,-99) , 
5, 1.66172, 0, 0, 0.569206,-99) , 
2, 50.5, 0, 0, 0.623914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457797,-99) , 
1, 14.5, 0, 0, 0.577729,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420995,-99) , 
5, 2.065, 1, 0, 0.521852,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253936,-99) , 
7, 44.4591, 1, 0, 0.443778,-99) , 
8, 2.24833, 1, 0, 0.504568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231316,-99) , 
6, 0.532398, 0, 0, 0.33723,-99) , 
9, 33.8204, 0, 0, 0.49435,-99) , 
10, 0.876909, 0, 0, 0.505921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273423,-99) , 
1, 91.5, 1, 0, 0.502777,-99)    );
  // itree = 1043
  fBoostWeights.push_back(0.0133473);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469478,-99) , 
4, 1.37803, 1, 0, 0.652383,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409571,-99) , 
10, 0.448217, 1, 0, 0.535264,-99) , 
2, 24.5, 0, 0, 0.564237,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435806,-99) , 
9, 21.9348, 1, 0, 0.558887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310365,-99) , 
5, 1.70564, 0, 0, 0.438194,-99) , 
9, 32.7128, 0, 0, 0.537543,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445975,-99) , 
1, 11.5, 0, 0, 0.530191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376206,-99) , 
4, 0.0015496, 0, 0, 0.502562,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392722,-99) , 
5, 1.95363, 1, 0, 0.469058,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195581,-99) , 
0, 15.5, 1, 0, 0.325265,-99) , 
8, 0.891964, 1, 0, 0.402796,-99) , 
4, 1.25214, 1, 0, 0.462709,-99) , 
9, 126.789, 1, 0, 0.50618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282431,-99) , 
7, 7.92822, 0, 0, 0.496988,-99)    );
  // itree = 1044
  fBoostWeights.push_back(0.00665262);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533879,-99) , 
8, 1.08956, 0, 0, 0.620685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611206,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36946,-99) , 
10, 0.285494, 1, 0, 0.468641,-99) , 
7, 51.0319, 0, 0, 0.502496,-99) , 
11, -0.667957, 1, 0, 0.548607,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403889,-99) , 
10, 0.0578077, 0, 0, 0.502813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362209,-99) , 
4, 0.941933, 0, 0, 0.489021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145076,-99) , 
7, 145.535, 1, 0, 0.482697,-99) , 
4, 0.80606, 1, 0, 0.501642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304721,-99) , 
1, 5.5, 0, 0, 0.496217,-99)    );
  // itree = 1045
  fBoostWeights.push_back(0.00501341);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520002,-99) , 
9, 75.5461, 1, 0, 0.624216,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370732,-99) , 
5, 2.16848, 1, 0, 0.504437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176711,-99) , 
7, 100.698, 1, 0, 0.49813,-99) , 
2, 55.5, 0, 0, 0.504854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320804,-99) , 
7, 7.39457, 0, 0, 0.49951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257441,-99) , 
1, 83.5, 1, 0, 0.495781,-99)    );
  // itree = 1046
  fBoostWeights.push_back(0.00714261);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.772241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574729,-99) , 
0, 14.5, 0, 0, 0.670282,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407616,-99) , 
6, 0.992483, 0, 0, 0.507842,-99) , 
6, 0.779545, 1, 0, 0.596445,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657115,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359289,-99) , 
3, 0.771904, 0, 0, 0.521602,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194276,-99) , 
1, 49.5, 1, 0, 0.451476,-99) , 
3, 0.984709, 1, 0, 0.488706,-99) , 
11, -11.2022, 1, 0, 0.495473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308526,-99) , 
7, 8.10352, 0, 0, 0.48675,-99) , 
11, 5.90997, 0, 0, 0.500125,-99)    );
  // itree = 1047
  fBoostWeights.push_back(0.00835056);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536307,-99) , 
9, 81.9522, 1, 0, 0.591607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466002,-99) , 
8, 1.06196, 0, 0, 0.552099,-99) , 
4, 1.79147, 0, 0, 0.577092,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467437,-99) , 
1, 14.5, 0, 0, 0.519435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218806,-99) , 
1, 65.5, 1, 0, 0.510826,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45171,-99) , 
10, 0.467685, 1, 0, 0.545195,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284213,-99) , 
6, 0.977785, 1, 0, 0.402946,-99) , 
9, 55.2488, 1, 0, 0.44087,-99) , 
6, 0.633923, 1, 0, 0.485926,-99) , 
6, 1.00433, 0, 0, 0.499593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224423,-99) , 
5, 2.38746, 1, 0, 0.49479,-99)    );
  // itree = 1048
  fBoostWeights.push_back(0.00864914);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452161,-99) , 
10, 0.24252, 0, 0, 0.639129,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496745,-99) , 
6, 1.01231, 0, 0, 0.505687,-99) , 
0, 31.5, 0, 0, 0.519777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375039,-99) , 
1, 33.5, 1, 0, 0.511655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611091,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290983,-99) , 
10, 0.917259, 1, 0, 0.41842,-99) , 
9, 75.6532, 1, 0, 0.492281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133988,-99) , 
0, 41.5, 0, 0, 0.430886,-99) , 
7, 65.7682, 1, 0, 0.500564,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410704,-99) , 
1, 9.5, 0, 0, 0.502955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302117,-99) , 
6, 0.795776, 1, 0, 0.454833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217016,-99) , 
0, 13.5, 1, 0, 0.419026,-99) , 
7, 10.0916, 0, 0, 0.490945,-99)    );
  // itree = 1049
  fBoostWeights.push_back(0.0113975);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624875,-99) , 
1, 11.5, 0, 0, 0.688361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504403,-99) , 
11, 5.12788, 0, 0, 0.535855,-99) , 
12, 6848.45, 0, 0, 0.568396,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399614,-99) , 
3, 0.975201, 0, 0, 0.490949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235293,-99) , 
3, 0.999007, 1, 0, 0.468266,-99) , 
6, 0.822769, 1, 0, 0.533162,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661478,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269286,-99) , 
9, 467.108, 1, 0, 0.476746,-99) , 
8, 0.0791413, 1, 0, 0.501185,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254499,-99) , 
6, 0.900763, 0, 0, 0.333957,-99) , 
0, 50.5, 0, 0, 0.379253,-99) , 
9, 56.9319, 0, 0, 0.471699,-99) , 
8, 1.32635, 0, 0, 0.499334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263057,-99) , 
7, 7.00158, 0, 0, 0.494598,-99)    );
  // itree = 1050
  fBoostWeights.push_back(0.0080725);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52803,-99) , 
0, 61.5, 0, 0, 0.536433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.092925,-99) , 
7, 191.705, 1, 0, 0.532457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272536,-99) , 
1, 70, 1, 0, 0.52573,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442577,-99) , 
10, 0.191331, 1, 0, 0.552954,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324636,-99) , 
12, 4873.46, 0, 0, 0.387163,-99) , 
6, 0.306276, 1, 0, 0.456738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0917671,-99) , 
5, 2.29388, 1, 0, 0.444011,-99) , 
3, 0.939803, 0, 0, 0.508787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294186,-99) , 
1, 5.5, 0, 0, 0.503637,-99)    );
  // itree = 1051
  fBoostWeights.push_back(0.012462);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.77714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666145,-99) , 
1, 14.5, 0, 0, 0.724166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43708,-99) , 
13, 0.5, 0, 0, 0.640328,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496661,-99) , 
11, -5.76348, 1, 0, 0.533,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306438,-99) , 
2, 36.5, 0, 0, 0.399832,-99) , 
10, 0.710936, 1, 0, 0.507629,-99) , 
12, 4315.77, 1, 0, 0.532738,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487858,-99) , 
9, 43.2995, 1, 0, 0.507157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297206,-99) , 
1, 47.5, 1, 0, 0.488363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271379,-99) , 
7, 14.822, 0, 0, 0.463079,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0858716,-99) , 
8, 1.21259, 0, 0, 0.289922,-99) , 
8, 0.43159, 1, 0, 0.367282,-99) , 
5, 1.83716, 1, 0, 0.45841,-99) , 
11, -0.379351, 1, 0, 0.491992,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27752,-99) , 
6, 0.817919, 0, 0, 0.331312,-99) , 
9, 404.45, 1, 0, 0.480571,-99)    );
  // itree = 1052
  fBoostWeights.push_back(0.00985639);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79202,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493425,-99) , 
4, 0.357798, 0, 0, 0.581842,-99) , 
6, 0.124171, 1, 0, 0.634008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522527,-99) , 
5, 1.53345, 1, 0, 0.605313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386919,-99) , 
8, 0.346572, 0, 0, 0.56814,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443152,-99) , 
9, 126.789, 1, 0, 0.501221,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296619,-99) , 
4, 1.8572, 0, 0, 0.361098,-99) , 
9, 31.4939, 0, 0, 0.487921,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277344,-99) , 
12, 2600.39, 1, 0, 0.352876,-99) , 
3, 0.865619, 0, 0, 0.475714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300534,-99) , 
3, 0.999443, 1, 0, 0.467438,-99) , 
4, 0.743643, 1, 0, 0.49376,-99)    );
  // itree = 1053
  fBoostWeights.push_back(0.00976724);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673819,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501176,-99) , 
7, 18.2046, 0, 0, 0.56594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385954,-99) , 
1, 25.5, 1, 0, 0.475267,-99) , 
3, 0.991478, 1, 0, 0.528585,-99) , 
4, 1.63297, 0, 0, 0.53867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618855,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303035,-99) , 
8, 0.556137, 1, 0, 0.418197,-99) , 
9, 34.043, 1, 0, 0.474894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0722547,-99) , 
6, 0.462096, 0, 0, 0.442554,-99) , 
4, 1.71392, 1, 0, 0.524918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122782,-99) , 
5, 1.78535, 1, 0, 0.327045,-99) , 
10, 0.0262947, 1, 0, 0.398063,-99) , 
9, 347.553, 1, 0, 0.512412,-99)    );
  // itree = 1054
  fBoostWeights.push_back(0.0118777);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484758,-99) , 
6, 0.92876, 1, 0, 0.565411,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42514,-99) , 
9, 160.674, 0, 0, 0.480848,-99) , 
8, 0.619291, 0, 0, 0.543125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418449,-99) , 
8, 2.70777, 1, 0, 0.528319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498419,-99) , 
3, 0.979685, 1, 0, 0.557112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28113,-99) , 
9, 32.3645, 0, 0, 0.526677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262891,-99) , 
3, 0.997438, 1, 0, 0.469817,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218923,-99) , 
4, 1.28345, 1, 0, 0.334191,-99) , 
9, 54.4799, 1, 0, 0.388246,-99) , 
8, 0.604982, 1, 0, 0.453377,-99) , 
5, 1.76993, 1, 0, 0.504324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162082,-99) , 
4, 1.19238, 1, 0, 0.267885,-99) , 
6, 0.69826, 0, 0, 0.318608,-99) , 
9, 364.841, 1, 0, 0.4889,-99)    );
  // itree = 1055
  fBoostWeights.push_back(0.0108005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45361,-99) , 
6, 0.848264, 1, 0, 0.572989,-99) , 
11, -8.7272, 0, 0, 0.647878,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530825,-99) , 
10, 0.0885373, 1, 0, 0.551373,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355117,-99) , 
0, 11.5, 1, 0, 0.45905,-99) , 
7, 11.4806, 0, 0, 0.529636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427232,-99) , 
9, 84.8571, 1, 0, 0.498867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30941,-99) , 
2, 26.5, 0, 0, 0.44358,-99) , 
7, 36.941, 1, 0, 0.505654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588443,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35477,-99) , 
9, 45.6528, 1, 0, 0.42951,-99) , 
8, 0.227742, 1, 0, 0.476235,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256896,-99) , 
12, 3596.96, 1, 0, 0.408827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225026,-99) , 
3, 0.99297, 1, 0, 0.370055,-99) , 
6, 0.327272, 0, 0, 0.435571,-99) , 
5, 1.84003, 1, 0, 0.487159,-99) , 
11, -6.77317, 1, 0, 0.500496,-99)    );
  // itree = 1056
  fBoostWeights.push_back(0.00872748);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659184,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549653,-99) , 
1, 20.5, 1, 0, 0.629661,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382979,-99) , 
9, 38.4768, 0, 0, 0.515037,-99) , 
10, 0.824814, 0, 0, 0.527467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359149,-99) , 
7, 110.801, 1, 0, 0.519363,-99) , 
11, -7.16176, 1, 0, 0.529031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427817,-99) , 
1, 14.5, 0, 0, 0.521296,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222097,-99) , 
6, 0.927917, 0, 0, 0.393632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151807,-99) , 
10, 0.449053, 1, 0, 0.327391,-99) , 
13, 1.5, 0, 0, 0.405601,-99) , 
4, 1.72285, 1, 0, 0.512939,-99)    );
  // itree = 1057
  fBoostWeights.push_back(0.00535493);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67203,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417437,-99) , 
3, 0.975976, 0, 0, 0.526563,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349292,-99) , 
9, 33.6329, 0, 0, 0.465119,-99) , 
4, 1.47818, 0, 0, 0.484454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 189.106, 1, 0, 0.482081,-99) , 
2, 94.5, 0, 0, 0.48621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252581,-99) , 
1, 5.5, 0, 0, 0.481358,-99)    );
  // itree = 1058
  fBoostWeights.push_back(0.00467861);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684312,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509136,-99) , 
12, 10218.7, 0, 0, 0.519201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216869,-99) , 
12, 15916.1, 1, 0, 0.509963,-99) , 
12, 23224.5, 0, 0, 0.51397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351527,-99) , 
7, 7.38711, 0, 0, 0.508704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368036,-99) , 
5, 0.659022, 0, 0, 0.501221,-99)    );
  // itree = 1059
  fBoostWeights.push_back(0.00687237);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727392,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492223,-99) , 
4, 1.1739, 1, 0, 0.534265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399806,-99) , 
4, 1.36584, 0, 0, 0.473122,-99) , 
7, 14.9613, 0, 0, 0.513816,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275144,-99) , 
1, 15.5, 0, 0, 0.415542,-99) , 
4, 0.119379, 0, 0, 0.503305,-99) , 
12, 21856.3, 0, 0, 0.508795,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281789,-99) , 
9, 558.198, 0, 0, 0.363517,-99) , 
9, 396.671, 1, 0, 0.49873,-99)    );
  // itree = 1060
  fBoostWeights.push_back(0.010106);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226861,-99) , 
7, 95.7529, 1, 0, 0.641861,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359911,-99) , 
3, 0.997186, 1, 0, 0.521118,-99) , 
1, 26.5, 1, 0, 0.586364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30977,-99) , 
1, 8.5, 0, 0, 0.574765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292737,-99) , 
9, 468.753, 1, 0, 0.559152,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617942,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.10905,-99) , 
5, 2.41094, 1, 0, 0.492135,-99) , 
8, 0.175098, 1, 0, 0.506026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295523,-99) , 
7, 41.0491, 1, 0, 0.499221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165257,-99) , 
0, 28.5, 1, 0, 0.488715,-99) , 
2, 18.5, 0, 0, 0.513056,-99)    );
  // itree = 1061
  fBoostWeights.push_back(0.00715712);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496391,-99) , 
9, 92.1655, 0, 0, 0.59479,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653142,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465307,-99) , 
5, 1.50133, 1, 0, 0.494083,-99) , 
10, 0.0380594, 1, 0, 0.502777,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26586,-99) , 
7, 71.7012, 1, 0, 0.453601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160455,-99) , 
2, 8.5, 0, 0, 0.434598,-99) , 
6, 0.673105, 1, 0, 0.478625,-99) , 
6, 1.02788, 0, 0, 0.488465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284674,-99) , 
9, 472.956, 1, 0, 0.479784,-99)    );
  // itree = 1062
  fBoostWeights.push_back(0.0155018);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.774238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555702,-99) , 
5, 1.76716, 1, 0, 0.708637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568499,-99) , 
6, 0.934754, 1, 0, 0.67073,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326257,-99) , 
8, 1.97051, 1, 0, 0.477404,-99) , 
11, 3.6444, 0, 0, 0.537328,-99) , 
11, -0.854963, 1, 0, 0.590135,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60305,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287437,-99) , 
2, 11.5, 0, 0, 0.455078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268924,-99) , 
9, 125.215, 1, 0, 0.390946,-99) , 
5, 1.27062, 1, 0, 0.459309,-99) , 
8, 2.48948, 1, 0, 0.538929,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36568,-99) , 
3, 0.978196, 1, 0, 0.479331,-99) , 
1, 34.5, 1, 0, 0.580958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16306,-99) , 
1, 14.5, 0, 0, 0.5507,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458464,-99) , 
13, 1.5, 0, 0, 0.492355,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291864,-99) , 
7, 11.9953, 1, 0, 0.408485,-99) , 
2, 10.5, 0, 0, 0.463366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284229,-99) , 
7, 40.1216, 1, 0, 0.448338,-99) , 
2, 28.5, 0, 0, 0.466541,-99) , 
8, 1.56561, 0, 0, 0.495096,-99)    );
  // itree = 1063
  fBoostWeights.push_back(0.0119791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43031,-99) , 
10, 0.0445848, 0, 0, 0.591947,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360611,-99) , 
8, 0.168293, 0, 0, 0.514702,-99) , 
10, 0.11734, 1, 0, 0.536823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19301,-99) , 
5, 2.23345, 1, 0, 0.532929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654892,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129806,-99) , 
7, 31.0893, 1, 0, 0.443711,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.179006,-99) , 
2, 23.5, 0, 0, 0.290052,-99) , 
1, 14.5, 1, 0, 0.390191,-99) , 
12, 10253.8, 0, 0, 0.438887,-99) , 
4, 1.52828, 1, 0, 0.508638,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192429,-99) , 
11, 0.427661, 0, 0, 0.333282,-99) , 
7, 8.32894, 0, 0, 0.499269,-99)    );
  // itree = 1064
  fBoostWeights.push_back(0.0130627);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423723,-99) , 
7, 18.8444, 0, 0, 0.592241,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46959,-99) , 
10, 0.0896567, 1, 0, 0.510143,-99) , 
0, 17.5, 0, 0, 0.542707,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44006,-99) , 
9, 60.712, 1, 0, 0.574763,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155219,-99) , 
6, 0.581655, 1, 0, 0.384371,-99) , 
6, 0.699889, 0, 0, 0.448294,-99) , 
5, 1.87775, 1, 0, 0.519349,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369732,-99) , 
10, 0.100095, 1, 0, 0.442246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204888,-99) , 
4, 1.58906, 1, 0, 0.399023,-99) , 
2, 8.5, 0, 0, 0.50557,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648542,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323206,-99) , 
0, 47.5, 0, 0, 0.450572,-99) , 
1, 24.5, 1, 0, 0.484823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148868,-99) , 
1, 13.5, 0, 0, 0.461847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234865,-99) , 
0, 31.5, 0, 0, 0.411971,-99) , 
7, 40.9521, 1, 0, 0.484467,-99)    );
  // itree = 1065
  fBoostWeights.push_back(0.0135392);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693273,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550813,-99) , 
11, -3.61172, 1, 0, 0.583979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358132,-99) , 
8, 1.79503, 1, 0, 0.463739,-99) , 
6, 0.832291, 1, 0, 0.545857,-99) , 
11, 5.37411, 0, 0, 0.568133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373078,-99) , 
0, 33, 0, 0, 0.432234,-99) , 
5, 0.72991, 0, 0, 0.543718,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499073,-99) , 
8, 0.15461, 1, 0, 0.57325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357321,-99) , 
1, 15.5, 0, 0, 0.423157,-99) , 
9, 151.106, 0, 0, 0.496344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386052,-99) , 
4, 1.32157, 1, 0, 0.4549,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243949,-99) , 
6, 0.984502, 0, 0, 0.29629,-99) , 
7, 27.8647, 1, 0, 0.413015,-99) , 
8, 0.684954, 1, 0, 0.449437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112709,-99) , 
0, 112.5, 1, 0, 0.443849,-99) , 
5, 1.5495, 1, 0, 0.490964,-99)    );
  // itree = 1066
  fBoostWeights.push_back(0.00960735);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537624,-99) , 
5, 1.50063, 1, 0, 0.566235,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42739,-99) , 
8, 2.80914, 1, 0, 0.552876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404407,-99) , 
9, 29.4356, 0, 0, 0.540992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233615,-99) , 
4, 1.92546, 1, 0, 0.535819,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721841,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298537,-99) , 
11, -8.70026, 0, 0, 0.465224,-99) , 
6, 0.812527, 1, 0, 0.550469,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316145,-99) , 
6, 0.700992, 0, 0, 0.474165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210853,-99) , 
12, 1340.33, 0, 0, 0.327837,-99) , 
8, 2.5198, 1, 0, 0.450991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25151,-99) , 
7, 9.07583, 0, 0, 0.434826,-99) , 
12, 7738.23, 0, 0, 0.46206,-99) , 
6, 0.588346, 1, 0, 0.501139,-99)    );
  // itree = 1067
  fBoostWeights.push_back(0.00808198);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.822914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661296,-99) , 
1, 16.5, 0, 0, 0.730362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559026,-99) , 
6, 0.446244, 1, 0, 0.64466,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446491,-99) , 
2, 16.5, 0, 0, 0.487694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338348,-99) , 
1, 22.5, 1, 0, 0.456144,-99) , 
11, -6.64913, 1, 0, 0.485922,-99) , 
3, 0.982423, 1, 0, 0.549717,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638324,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47476,-99) , 
12, 7573.41, 0, 0, 0.493743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141855,-99) , 
5, 2.34388, 1, 0, 0.488311,-99) , 
8, 0.0678147, 1, 0, 0.497196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249979,-99) , 
3, 0.702432, 0, 0, 0.490681,-99) , 
13, 1.5, 0, 0, 0.509171,-99)    );
  // itree = 1068
  fBoostWeights.push_back(0.0102778);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692738,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545079,-99) , 
0, 19.5, 0, 0, 0.625773,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443942,-99) , 
3, 0.980299, 1, 0, 0.505376,-99) , 
11, -4.17067, 1, 0, 0.521218,-99) , 
11, 5.0578, 0, 0, 0.539369,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396218,-99) , 
5, 1.84821, 1, 0, 0.60371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432485,-99) , 
6, 0.803263, 1, 0, 0.457918,-99) , 
9, 60.0974, 1, 0, 0.491644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26446,-99) , 
6, 0.71748, 0, 0, 0.471407,-99) , 
6, 0.661479, 1, 0, 0.511334,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417138,-99) , 
9, 22.8797, 0, 0, 0.513334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32705,-99) , 
12, 5600.61, 1, 0, 0.456582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22981,-99) , 
8, 0.348043, 0, 0, 0.409155,-99) , 
9, 32.4003, 0, 0, 0.499949,-99)    );
  // itree = 1069
  fBoostWeights.push_back(0.00742294);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715047,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48818,-99) , 
6, 0.899157, 0, 0, 0.543957,-99) , 
9, 137.199, 0, 0, 0.60571,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448146,-99) , 
1, 9.5, 0, 0, 0.558981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38288,-99) , 
5, 2.16809, 1, 0, 0.541134,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271414,-99) , 
9, 472.721, 1, 0, 0.469132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242542,-99) , 
6, 0.498616, 0, 0, 0.45642,-99) , 
6, 0.462061, 1, 0, 0.494745,-99) , 
12, -5947.38, 1, 0, 0.505372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242875,-99) , 
1, 82.5, 1, 0, 0.501189,-99)    );
  // itree = 1070
  fBoostWeights.push_back(0.00707537);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472945,-99) , 
6, 0.850684, 1, 0, 0.668963,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520668,-99) , 
13, 1.5, 0, 0, 0.54562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450521,-99) , 
12, -10119.9, 1, 0, 0.475514,-99) , 
3, 0.993107, 1, 0, 0.520544,-99) , 
11, -9.36112, 1, 0, 0.528732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25835,-99) , 
3, 0.999788, 1, 0, 0.524512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216849,-99) , 
7, 6.9953, 0, 0, 0.517947,-99)    );
  // itree = 1071
  fBoostWeights.push_back(0.00499331);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
1, 11.5, 0, 0, 0.607456,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724691,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438897,-99) , 
3, 0.992544, 1, 0, 0.478988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313647,-99) , 
2, 7.5, 0, 0, 0.47138,-99) , 
12, 23226.1, 0, 0, 0.476445,-99) , 
6, 1.00742, 0, 0, 0.487032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347231,-99) , 
6, 1.09521, 1, 0, 0.479771,-99)    );
  // itree = 1072
  fBoostWeights.push_back(0.00962947);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.801826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632381,-99) , 
6, 0.57383, 1, 0, 0.717519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547728,-99) , 
7, 86.5168, 1, 0, 0.66959,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537667,-99) , 
8, 0.804121, 1, 0, 0.624941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442841,-99) , 
12, 7310.26, 0, 0, 0.490609,-99) , 
3, 0.988326, 1, 0, 0.554476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214673,-99) , 
4, 1.9058, 1, 0, 0.528242,-99) , 
0, 24.5, 0, 0, 0.572089,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
1, 10.5, 0, 0, 0.58133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461367,-99) , 
11, -2.64044, 1, 0, 0.485632,-99) , 
11, 4.83822, 0, 0, 0.499124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258174,-99) , 
7, 176.712, 1, 0, 0.494422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303749,-99) , 
5, 2.28785, 1, 0, 0.489145,-99) , 
13, 1.5, 0, 0, 0.514891,-99)    );
  // itree = 1073
  fBoostWeights.push_back(0.0105791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751123,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652694,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490469,-99) , 
7, 41.0126, 1, 0, 0.582787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301782,-99) , 
7, 24.0873, 1, 0, 0.459499,-99) , 
2, 17.5, 0, 0, 0.506667,-99) , 
12, 11027.4, 0, 0, 0.531297,-99) , 
3, 0.886489, 1, 0, 0.553262,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516056,-99) , 
4, 0.739312, 1, 0, 0.549017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388027,-99) , 
8, 0.422696, 0, 0, 0.526126,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25546,-99) , 
4, 0.994145, 0, 0, 0.425086,-99) , 
9, 489.139, 0, 0, 0.443802,-99) , 
5, 1.68872, 1, 0, 0.491499,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287364,-99) , 
1, 18.5, 0, 0, 0.382135,-99) , 
4, 0.187322, 0, 0, 0.479538,-99) , 
13, 1.5, 0, 0, 0.501406,-99)    );
  // itree = 1074
  fBoostWeights.push_back(0.00848316);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651083,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531276,-99) , 
9, 115.194, 1, 0, 0.588731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0782201,-99) , 
4, 1.30633, 1, 0, 0.448252,-99) , 
2, 12.5, 0, 0, 0.527816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370478,-99) , 
9, 40.6659, 0, 0, 0.505136,-99) , 
8, 2.84971, 0, 0, 0.520112,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649923,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445166,-99) , 
10, 0.107874, 1, 0, 0.466189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245214,-99) , 
9, 509.668, 1, 0, 0.459401,-99) , 
9, 21.9858, 1, 0, 0.47122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208734,-99) , 
6, 0.318725, 0, 0, 0.460944,-99) , 
6, 0.290064, 1, 0, 0.479428,-99)    );
  // itree = 1075
  fBoostWeights.push_back(0.0105139);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52866,-99) , 
4, 0.992445, 0, 0, 0.569232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416213,-99) , 
6, 0.59885, 0, 0, 0.488154,-99) , 
4, 1.2242, 1, 0, 0.528816,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453064,-99) , 
3, 0.994986, 0, 0, 0.48542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155271,-99) , 
2, 21.5, 0, 0, 0.442846,-99) , 
7, 43.0369, 1, 0, 0.511749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333896,-99) , 
5, 2.29389, 1, 0, 0.506084,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614558,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350375,-99) , 
5, 1.5247, 1, 0, 0.444496,-99) , 
1, 7.5, 1, 0, 0.477552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264001,-99) , 
8, 2.35984, 1, 0, 0.438289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166842,-99) , 
9, 348.83, 1, 0, 0.411307,-99) , 
3, 0.997584, 1, 0, 0.487735,-99)    );
  // itree = 1076
  fBoostWeights.push_back(0.0137034);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.789349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524436,-99) , 
6, 0.466038, 1, 0, 0.601717,-99) , 
1, 20.5, 1, 0, 0.657754,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595109,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342492,-99) , 
8, 1.62552, 1, 0, 0.441347,-99) , 
6, 0.158636, 1, 0, 0.472904,-99) , 
3, 0.920883, 1, 0, 0.501457,-99) , 
0, 22.5, 0, 0, 0.550674,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701575,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426104,-99) , 
4, 0.841653, 1, 0, 0.507749,-99) , 
3, 0.985328, 1, 0, 0.587415,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448375,-99) , 
0, 16.5, 0, 0, 0.532473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241034,-99) , 
11, 0.261345, 0, 0, 0.48295,-99) , 
11, -0.687679, 1, 0, 0.526088,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454192,-99) , 
9, 105.515, 0, 0, 0.545502,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309296,-99) , 
7, 11.0641, 0, 0, 0.418708,-99) , 
11, 4.09635, 0, 0, 0.441905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221894,-99) , 
7, 76.8945, 1, 0, 0.429989,-99) , 
5, 1.54735, 1, 0, 0.475747,-99) , 
13, 1.5, 0, 0, 0.499253,-99)    );
  // itree = 1077
  fBoostWeights.push_back(0.00662973);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701486,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516073,-99) , 
3, 0.922169, 1, 0, 0.53826,-99) , 
6, 0.0915712, 1, 0, 0.562263,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385108,-99) , 
1, 34.5, 1, 0, 0.524703,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.203225,-99) , 
3, 0.999355, 1, 0, 0.442688,-99) , 
5, 1.70608, 1, 0, 0.494765,-99) , 
13, 1.5, 0, 0, 0.515694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293477,-99) , 
4, 2.0612, 1, 0, 0.509427,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328958,-99) , 
9, 433.817, 1, 0, 0.500399,-99)    );
  // itree = 1078
  fBoostWeights.push_back(0.0112902);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489457,-99) , 
7, 12.1925, 0, 0, 0.554491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343841,-99) , 
3, 0.996916, 1, 0, 0.470105,-99) , 
8, 2.53074, 1, 0, 0.536881,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165559,-99) , 
5, 2.28586, 1, 0, 0.521061,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157657,-99) , 
2, 21.5, 0, 0, 0.29601,-99) , 
7, 16.7975, 1, 0, 0.417158,-99) , 
5, 1.84714, 1, 0, 0.513831,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472252,-99) , 
6, 0.717265, 0, 0, 0.599363,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343224,-99) , 
11, 1.28395, 0, 0, 0.43006,-99) , 
10, 0.240526, 0, 0, 0.506809,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363685,-99) , 
3, 0.986972, 1, 0, 0.417798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264747,-99) , 
8, 0.297811, 1, 0, 0.371679,-99) , 
4, 1.36666, 0, 0, 0.43676,-99) , 
8, 0.471217, 0, 0, 0.494814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288048,-99) , 
3, 0.739453, 0, 0, 0.488739,-99)    );
  // itree = 1079
  fBoostWeights.push_back(0.0129141);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567471,-99) , 
10, 0.0469384, 0, 0, 0.640896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469357,-99) , 
10, 0.0497481, 0, 0, 0.538759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275298,-99) , 
5, 1.76961, 1, 0, 0.495204,-99) , 
8, 0.927659, 1, 0, 0.566873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346704,-99) , 
4, 1.81666, 1, 0, 0.550125,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587687,-99) , 
6, 0.449002, 1, 0, 0.653796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482106,-99) , 
7, 71.7692, 1, 0, 0.599024,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582649,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236521,-99) , 
7, 131.983, 1, 0, 0.435999,-99) , 
5, 1.06412, 1, 0, 0.475687,-99) , 
13, 1.5, 0, 0, 0.515015,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48995,-99) , 
10, 0.263402, 0, 0, 0.531267,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314154,-99) , 
12, 2211.19, 1, 0, 0.400661,-99) , 
8, 0.844233, 0, 0, 0.483874,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27061,-99) , 
10, 0.27863, 0, 0, 0.339795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0937374,-99) , 
7, 44.3694, 1, 0, 0.300741,-99) , 
7, 25.373, 1, 0, 0.445837,-99) , 
2, 17.5, 0, 0, 0.477154,-99) , 
10, 0.0816012, 1, 0, 0.493528,-99)    );
  // itree = 1080
  fBoostWeights.push_back(0.00976861);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546146,-99) , 
12, -1113.06, 0, 0, 0.601614,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544502,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438777,-99) , 
7, 39.2472, 1, 0, 0.521023,-99) , 
11, 2.56352, 0, 0, 0.542658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387028,-99) , 
5, 0.71689, 0, 0, 0.530664,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689373,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516283,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279146,-99) , 
3, 0.995649, 1, 0, 0.370602,-99) , 
9, 52.5182, 1, 0, 0.414936,-99) , 
12, 8854.21, 0, 0, 0.451224,-99) , 
8, 2.20157, 1, 0, 0.510111,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394788,-99) , 
10, 0.467861, 1, 0, 0.493639,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172273,-99) , 
10, 0.0669909, 0, 0, 0.339579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.152509,-99) , 
8, 2.38658, 1, 0, 0.323777,-99) , 
10, 0.283541, 0, 0, 0.41292,-99) , 
4, 1.73036, 1, 0, 0.496004,-99)    );
  // itree = 1081
  fBoostWeights.push_back(0.00832197);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682278,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300425,-99) , 
7, 79.2049, 1, 0, 0.524152,-99) , 
2, 52.5, 0, 0, 0.533952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158405,-99) , 
7, 221.868, 1, 0, 0.530395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358583,-99) , 
9, 24.0525, 0, 0, 0.519762,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419698,-99) , 
0, 13.5, 0, 0, 0.552946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378667,-99) , 
13, 0.5, 0, 0, 0.492731,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224693,-99) , 
5, 1.78098, 1, 0, 0.37572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137258,-99) , 
7, 30.6006, 1, 0, 0.309446,-99) , 
9, 103.966, 1, 0, 0.415251,-99) , 
8, 2.39189, 1, 0, 0.501443,-99)    );
  // itree = 1082
  fBoostWeights.push_back(0.0069987);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595333,-99) , 
10, 0.204554, 0, 0, 0.674857,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315487,-99) , 
6, 0.948745, 0, 0, 0.473227,-99) , 
6, 0.740762, 1, 0, 0.577387,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499762,-99) , 
4, 1.73619, 0, 0, 0.512377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359457,-99) , 
5, 2.13565, 1, 0, 0.501323,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0322046,-99) , 
7, 138.467, 1, 0, 0.460102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208501,-99) , 
1, 34.5, 1, 0, 0.437151,-99) , 
3, 0.994189, 1, 0, 0.482695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273837,-99) , 
3, 0.693098, 0, 0, 0.478329,-99) , 
11, -5.53848, 1, 0, 0.489506,-99)    );
  // itree = 1083
  fBoostWeights.push_back(0.0121094);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528639,-99) , 
8, 0.960647, 0, 0, 0.650335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397919,-99) , 
7, 44.4113, 1, 0, 0.534449,-99) , 
5, 1.49866, 1, 0, 0.575348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358873,-99) , 
8, 1.83702, 0, 0, 0.420338,-99) , 
1, 9.5, 0, 0, 0.545872,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4845,-99) , 
5, 1.27511, 0, 0, 0.543953,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461615,-99) , 
11, 5.01737, 0, 0, 0.482034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234163,-99) , 
6, 0.982588, 1, 0, 0.460569,-99) , 
6, 1.00836, 0, 0, 0.479392,-99) , 
6, 0.36507, 1, 0, 0.507692,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432149,-99) , 
10, 0.392905, 1, 0, 0.488056,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148502,-99) , 
8, 0.910059, 1, 0, 0.318996,-99) , 
10, 0.273347, 0, 0, 0.410215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0912425,-99) , 
7, 106.113, 1, 0, 0.396879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
3, 0.838691, 0, 0, 0.376932,-99) , 
4, 1.73764, 1, 0, 0.49138,-99)    );
  // itree = 1084
  fBoostWeights.push_back(0.0188172);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378863,-99) , 
8, 0.575734, 0, 0, 0.520757,-99) , 
11, -5.38816, 1, 0, 0.547828,-99) , 
6, 0.121434, 1, 0, 0.571004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453033,-99) , 
11, 0.788615, 0, 0, 0.539429,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33556,-99) , 
4, 0.688338, 1, 0, 0.399414,-99) , 
5, 1.24874, 0, 0, 0.471645,-99) , 
2, 12.5, 0, 0, 0.5351,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539895,-99) , 
8, 1.12366, 1, 0, 0.632309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428485,-99) , 
11, -3.37224, 0, 0, 0.584927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355039,-99) , 
2, 10.5, 0, 0, 0.517871,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472874,-99) , 
6, 0.42711, 0, 0, 0.604781,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27159,-99) , 
11, -0.549766, 0, 0, 0.424994,-99) , 
3, 0.991945, 0, 0, 0.517769,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310005,-99) , 
10, 0.385434, 1, 0, 0.407305,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0160393,-99) , 
7, 13.3795, 0, 0, 0.209468,-99) , 
10, 0.219261, 0, 0, 0.322427,-99) , 
0, 14.5, 1, 0, 0.414679,-99) , 
13, 1.5, 0, 0, 0.44892,-99) , 
5, 1.60071, 1, 0, 0.493049,-99)    );
  // itree = 1085
  fBoostWeights.push_back(0.0126854);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786578,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504166,-99) , 
0, 50.5, 0, 0, 0.575038,-99) , 
1, 20.5, 1, 0, 0.660606,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477738,-99) , 
8, 1.78615, 0, 0, 0.555153,-99) , 
0, 16.5, 0, 0, 0.622506,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5766,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325933,-99) , 
3, 0.983118, 1, 0, 0.402292,-99) , 
4, 1.24553, 1, 0, 0.482809,-99) , 
10, 0.166728, 0, 0, 0.570126,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48476,-99) , 
7, 10.931, 0, 0, 0.563536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338871,-99) , 
7, 21.3411, 1, 0, 0.536621,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442426,-99) , 
12, 2287.01, 0, 0, 0.526459,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41645,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.118113,-99) , 
1, 8.5, 0, 0, 0.389879,-99) , 
5, 1.53669, 1, 0, 0.46142,-99) , 
0, 14.5, 1, 0, 0.4903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226091,-99) , 
7, 6.88152, 0, 0, 0.485376,-99) , 
13, 1.5, 0, 0, 0.510914,-99)    );
  // itree = 1086
  fBoostWeights.push_back(0.00964992);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520276,-99) , 
6, 0.469618, 1, 0, 0.563215,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451939,-99) , 
12, -2805.01, 1, 0, 0.486452,-99) , 
5, 1.75091, 1, 0, 0.531479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384951,-99) , 
5, 0.720201, 0, 0, 0.522171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21919,-99) , 
7, 7.17793, 0, 0, 0.516625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436795,-99) , 
9, 107.696, 1, 0, 0.543988,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254714,-99) , 
12, 7859.79, 0, 0, 0.319423,-99) , 
8, 2.62125, 1, 0, 0.393086,-99) , 
3, 0.983978, 1, 0, 0.470145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28175,-99) , 
8, 2.4403, 0, 0, 0.431592,-99) , 
8, 2.24864, 1, 0, 0.497331,-99)    );
  // itree = 1087
  fBoostWeights.push_back(0.0119095);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408627,-99) , 
8, 0.695136, 1, 0, 0.679684,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441097,-99) , 
5, 1.92208, 1, 0, 0.523797,-99) , 
5, 2.23609, 0, 0, 0.537287,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253621,-99) , 
3, 0.935906, 0, 0, 0.415879,-99) , 
2, 8.5, 0, 0, 0.523254,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274209,-99) , 
1, 34.5, 1, 0, 0.499272,-99) , 
2, 55.5, 0, 0, 0.54372,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400114,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24218,-99) , 
6, 0.350705, 0, 0, 0.352887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0690048,-99) , 
7, 58.9873, 1, 0, 0.313064,-99) , 
1, 15.5, 0, 0, 0.45368,-99) , 
10, 0.449416, 1, 0, 0.50474,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306655,-99) , 
6, 0.0536506, 1, 0, 0.382891,-99) , 
4, 0.0361056, 0, 0, 0.495098,-99)    );
  // itree = 1088
  fBoostWeights.push_back(0.006399);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566967,-99) , 
5, 0.986681, 0, 0, 0.647677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495449,-99) , 
1, 15.5, 0, 0, 0.581496,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47789,-99) , 
0, 10.5, 1, 0, 0.561839,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442893,-99) , 
0, 15.5, 0, 0, 0.482033,-99) , 
1, 8.5, 1, 0, 0.496593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20074,-99) , 
1, 70.5, 1, 0, 0.491918,-99) , 
4, 0.403125, 1, 0, 0.504306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255203,-99) , 
4, 2.13233, 1, 0, 0.499422,-99)    );
  // itree = 1089
  fBoostWeights.push_back(0.00668171);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54533,-99) , 
9, 145.844, 1, 0, 0.633484,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431694,-99) , 
5, 1.72499, 1, 0, 0.51079,-99) , 
8, 0.644481, 1, 0, 0.527564,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436301,-99) , 
9, 69.5149, 0, 0, 0.535746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329438,-99) , 
5, 1.57847, 0, 0, 0.456978,-99) , 
8, 0.377692, 0, 0, 0.514143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305837,-99) , 
8, 0.299364, 1, 0, 0.399938,-99) , 
5, 2.1651, 1, 0, 0.505858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346844,-99) , 
11, 11.199, 1, 0, 0.500754,-99)    );
  // itree = 1090
  fBoostWeights.push_back(0.00790791);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495186,-99) , 
5, 1.63188, 1, 0, 0.611059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349893,-99) , 
9, 228.479, 1, 0, 0.573672,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448167,-99) , 
11, -8.81066, 0, 0, 0.561845,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418549,-99) , 
12, 4751.7, 1, 0, 0.484578,-99) , 
12, 6933.9, 0, 0, 0.501141,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380771,-99) , 
9, 75.9561, 1, 0, 0.487569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108122,-99) , 
0, 55.5, 0, 0, 0.396313,-99) , 
7, 71.8611, 1, 0, 0.490603,-99) , 
8, 2.61342, 0, 0, 0.502136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270507,-99) , 
1, 5.5, 0, 0, 0.496636,-99)    );
  // itree = 1091
  fBoostWeights.push_back(0.00926161);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709286,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441629,-99) , 
8, 0.963017, 1, 0, 0.534046,-99) , 
1, 34.5, 1, 0, 0.60499,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368381,-99) , 
11, -5.08035, 0, 0, 0.518255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112782,-99) , 
7, 63.2868, 1, 0, 0.510424,-99) , 
2, 30.5, 0, 0, 0.524383,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37372,-99) , 
10, 0.165333, 0, 0, 0.488816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31295,-99) , 
8, 0.445413, 0, 0, 0.443532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287529,-99) , 
8, 2.46708, 1, 0, 0.413754,-99) , 
3, 0.997678, 1, 0, 0.505202,-99) , 
11, -9.51337, 1, 0, 0.513644,-99)    );
  // itree = 1092
  fBoostWeights.push_back(0.011032);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564696,-99) , 
11, 0.905841, 1, 0, 0.63667,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426727,-99) , 
12, 185.912, 0, 0, 0.593926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330199,-99) , 
7, 11.6091, 0, 0, 0.476883,-99) , 
11, 0.381631, 0, 0, 0.525965,-99) , 
3, 0.977811, 0, 0, 0.550426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593905,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42013,-99) , 
8, 1.23837, 0, 0, 0.476119,-99) , 
10, 0.0962074, 1, 0, 0.499125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336792,-99) , 
9, 369.76, 1, 0, 0.485726,-99) , 
3, 0.987966, 1, 0, 0.518088,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404017,-99) , 
8, 0.112797, 1, 0, 0.501649,-99) , 
8, 0.283864, 0, 0, 0.557544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
3, 0.864949, 0, 0, 0.441007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110265,-99) , 
3, 0.998997, 1, 0, 0.41941,-99) , 
8, 0.448038, 1, 0, 0.488247,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278831,-99) , 
6, 0.181622, 0, 0, 0.445151,-99) , 
5, 1.90804, 1, 0, 0.501888,-99)    );
  // itree = 1093
  fBoostWeights.push_back(0.0116833);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559925,-99) , 
7, 18.8451, 0, 0, 0.614969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348292,-99) , 
12, -396.401, 0, 0, 0.468464,-99) , 
7, 37.7993, 1, 0, 0.571538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396349,-99) , 
3, 0.998748, 1, 0, 0.549159,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485721,-99) , 
8, 2.85955, 0, 0, 0.499988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359423,-99) , 
4, 0.0135194, 0, 0, 0.480964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289796,-99) , 
7, 8.73681, 0, 0, 0.469329,-99) , 
11, 0.775919, 0, 0, 0.50325,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448681,-99) , 
9, 98.6431, 1, 0, 0.589245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421605,-99) , 
6, 0.69297, 0, 0, 0.524175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298503,-99) , 
12, -469.559, 0, 0, 0.480034,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474195,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137936,-99) , 
9, 111.895, 1, 0, 0.287333,-99) , 
8, 0.50373, 1, 0, 0.365471,-99) , 
7, 16.8552, 1, 0, 0.421451,-99) , 
4, 1.55623, 1, 0, 0.48442,-99)    );
  // itree = 1094
  fBoostWeights.push_back(0.00803608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509756,-99) , 
0, 52.5, 0, 0, 0.637201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285168,-99) , 
7, 63.1869, 1, 0, 0.517606,-99) , 
2, 35.5, 0, 0, 0.531895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254188,-99) , 
7, 158.099, 1, 0, 0.527619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465752,-99) , 
9, 36.7919, 1, 0, 0.492776,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214174,-99) , 
3, 0.991218, 0, 0, 0.34964,-99) , 
7, 9.88348, 0, 0, 0.460981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151185,-99) , 
0, 25.5, 1, 0, 0.44534,-99) , 
1, 9.5, 0, 0, 0.506069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292111,-99) , 
1, 65.5, 1, 0, 0.499898,-99)    );
  // itree = 1095
  fBoostWeights.push_back(0.0101872);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.768348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610828,-99) , 
8, 2.32384, 0, 0, 0.650753,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424774,-99) , 
5, 1.57183, 1, 0, 0.501818,-99) , 
12, 4034.15, 1, 0, 0.598622,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368671,-99) , 
12, 6255.12, 0, 0, 0.434646,-99) , 
3, 0.99454, 1, 0, 0.552498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556888,-99) , 
0, 20.5, 0, 0, 0.602964,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469487,-99) , 
2, 48.5, 0, 0, 0.480689,-99) , 
11, 5.77171, 0, 0, 0.497976,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472488,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113667,-99) , 
5, 1.7586, 1, 0, 0.299525,-99) , 
12, 4126.89, 0, 0, 0.368549,-99) , 
8, 2.5169, 1, 0, 0.47804,-99) , 
6, 0.299986, 1, 0, 0.503217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.191579,-99) , 
7, 170.102, 1, 0, 0.498576,-99)    );
  // itree = 1096
  fBoostWeights.push_back(0.0119626);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48332,-99) , 
7, 53.7203, 1, 0, 0.615396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438147,-99) , 
3, 0.926005, 0, 0, 0.588059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424483,-99) , 
8, 0.432898, 0, 0, 0.568205,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429546,-99) , 
9, 404.653, 1, 0, 0.541678,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208543,-99) , 
7, 117.992, 1, 0, 0.53381,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287616,-99) , 
11, 4.13289, 1, 0, 0.509275,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248437,-99) , 
3, 0.886425, 1, 0, 0.294926,-99) , 
9, 91.3392, 1, 0, 0.416742,-99) , 
8, 1.12113, 1, 0, 0.486819,-99) , 
5, 1.51892, 1, 0, 0.519195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337893,-99) , 
5, 0.530253, 0, 0, 0.511125,-99)    );
  // itree = 1097
  fBoostWeights.push_back(0.0137248);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614869,-99) , 
6, 0.297798, 1, 0, 0.652704,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366981,-99) , 
10, 0.267055, 1, 0, 0.505612,-99) , 
1, 11.5, 0, 0, 0.600126,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277766,-99) , 
6, 0.23825, 1, 0, 0.400874,-99) , 
4, 1.89596, 0, 0, 0.463773,-99) , 
5, 1.81847, 1, 0, 0.55672,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515333,-99) , 
2, 21.5, 0, 0, 0.545641,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12038,-99) , 
4, 1.66502, 1, 0, 0.426003,-99) , 
8, 0.906504, 1, 0, 0.482622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293716,-99) , 
9, 123.284, 0, 0, 0.466751,-99) , 
9, 109.355, 1, 0, 0.513783,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470156,-99) , 
11, 0.196936, 1, 0, 0.555845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417192,-99) , 
8, 1.22151, 0, 0, 0.462389,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132873,-99) , 
4, 1.50077, 1, 0, 0.363088,-99) , 
8, 1.92301, 1, 0, 0.432394,-99) , 
3, 0.962247, 1, 0, 0.4584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258383,-99) , 
3, 0.871131, 0, 0, 0.440851,-99) , 
13, 0.5, 0, 0, 0.489218,-99)    );
  // itree = 1098
  fBoostWeights.push_back(0.0109904);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746335,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515915,-99) , 
3, 0.974794, 0, 0, 0.640156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509697,-99) , 
8, 0.756826, 0, 0, 0.596045,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455816,-99) , 
3, 0.972807, 1, 0, 0.502055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289055,-99) , 
5, 1.95036, 1, 0, 0.465898,-99) , 
9, 112.964, 1, 0, 0.53017,-99) , 
11, -6.64226, 1, 0, 0.547835,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570719,-99) , 
4, 1.60973, 0, 0, 0.620936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270394,-99) , 
7, 61.9248, 1, 0, 0.578193,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429107,-99) , 
6, 0.3599, 0, 0, 0.478239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279748,-99) , 
9, 469.153, 1, 0, 0.468921,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305726,-99) , 
9, 110.774, 1, 0, 0.450867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265576,-99) , 
13, 0.5, 0, 0, 0.369441,-99) , 
3, 0.90803, 0, 0, 0.451238,-99) , 
12, -2350.09, 1, 0, 0.470569,-99) , 
13, 1.5, 0, 0, 0.493501,-99)    );
  // itree = 1099
  fBoostWeights.push_back(0.0126977);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522885,-99) , 
0, 18.5, 0, 0, 0.578265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299627,-99) , 
3, 0.910271, 0, 0, 0.489928,-99) , 
6, 0.664994, 1, 0, 0.537558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352106,-99) , 
9, 428.642, 1, 0, 0.52604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384361,-99) , 
9, 32.2391, 0, 0, 0.512674,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663719,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333692,-99) , 
11, 1.06523, 0, 0, 0.468342,-99) , 
10, 0.219477, 0, 0, 0.545913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285343,-99) , 
9, 47.3837, 0, 0, 0.502119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472388,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.157869,-99) , 
10, 0.107289, 1, 0, 0.287139,-99) , 
9, 46.4902, 1, 0, 0.349418,-99) , 
8, 0.45124, 1, 0, 0.425585,-99) , 
5, 1.84613, 1, 0, 0.489595,-99)    );
  // itree = 1100
  fBoostWeights.push_back(0.0124678);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483465,-99) , 
8, 0.364575, 1, 0, 0.689095,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565903,-99) , 
4, 1.3162, 0, 0, 0.612689,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293132,-99) , 
9, 68.8975, 0, 0, 0.479341,-99) , 
7, 10.1686, 0, 0, 0.558555,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354184,-99) , 
3, 0.989444, 1, 0, 0.422707,-99) , 
7, 17.6993, 1, 0, 0.526303,-99) , 
5, 2.12175, 0, 0, 0.550004,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328961,-99) , 
5, 1.96395, 1, 0, 0.558725,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429888,-99) , 
2, 31.5, 0, 0, 0.467101,-99) , 
8, 1.34335, 0, 0, 0.507662,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263591,-99) , 
7, 11.7521, 0, 0, 0.498801,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0864614,-99) , 
0, 24.5, 1, 0, 0.271173,-99) , 
1, 9.5, 0, 0, 0.4799,-99) , 
0, 14.5, 1, 0, 0.508574,-99)    );
  // itree = 1101
  fBoostWeights.push_back(0.00805488);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527491,-99) , 
9, 62.921, 0, 0, 0.638293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476583,-99) , 
5, 1.87444, 1, 0, 0.609566,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379346,-99) , 
10, 1.37346, 1, 0, 0.507716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327776,-99) , 
1, 58.5, 1, 0, 0.50188,-99) , 
8, 1.64632, 0, 0, 0.521456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.107716,-99) , 
10, 4.29307, 1, 0, 0.516689,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44992,-99) , 
0, 23.5, 0, 0, 0.535507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426542,-99) , 
9, 108.155, 1, 0, 0.4845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334093,-99) , 
10, 0.182826, 0, 0, 0.413649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.188455,-99) , 
2, 15.5, 1, 0, 0.338487,-99) , 
5, 1.64429, 1, 0, 0.432067,-99) , 
8, 2.20567, 1, 0, 0.496876,-99)    );
  // itree = 1102
  fBoostWeights.push_back(0.00771842);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709457,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661399,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447981,-99) , 
12, 4073.38, 1, 0, 0.515236,-99) , 
11, -6.96078, 1, 0, 0.524676,-99) , 
6, 0.897478, 0, 0, 0.534556,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447622,-99) , 
6, 1.00882, 0, 0, 0.563063,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499927,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252656,-99) , 
5, 1.4716, 1, 0, 0.321442,-99) , 
8, 0.927476, 1, 0, 0.378518,-99) , 
9, 75.788, 1, 0, 0.4564,-99) , 
6, 0.935967, 1, 0, 0.517312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368454,-99) , 
5, 2.28864, 1, 0, 0.512004,-99)    );
  // itree = 1103
  fBoostWeights.push_back(0.0132661);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667398,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112695,-99) , 
4, 2.04296, 1, 0, 0.532793,-99) , 
6, 0.997343, 0, 0, 0.552573,-99) , 
7, 22.8647, 0, 0, 0.581446,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346132,-99) , 
5, 1.83126, 1, 0, 0.602481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588629,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204599,-99) , 
8, 2.04501, 1, 0, 0.367146,-99) , 
12, 1671.47, 0, 0, 0.415473,-99) , 
2, 42.5, 0, 0, 0.470397,-99) , 
7, 28.6836, 1, 0, 0.5447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529593,-99) , 
5, 1.61067, 1, 0, 0.625415,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310504,-99) , 
10, 0.311584, 1, 0, 0.449394,-99) , 
6, 0.718859, 1, 0, 0.550198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410074,-99) , 
10, 0.956205, 0, 0, 0.429319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187154,-99) , 
3, 0.998343, 1, 0, 0.415321,-99) , 
6, 1.00146, 0, 0, 0.437002,-99) , 
11, -4.68236, 1, 0, 0.468954,-99) , 
12, 2993.36, 1, 0, 0.50809,-99)    );
  // itree = 1104
  fBoostWeights.push_back(0.00529466);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490309,-99) , 
6, 0.777506, 1, 0, 0.600013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481658,-99) , 
13, 1.5, 0, 0, 0.500966,-99) , 
11, 6.03622, 0, 0, 0.511503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129004,-99) , 
4, 2.04395, 1, 0, 0.50878,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507008,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29008,-99) , 
8, 0.177372, 1, 0, 0.375147,-99) , 
5, 2.1688, 1, 0, 0.499973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235034,-99) , 
1, 77, 1, 0, 0.494776,-99)    );
  // itree = 1105
  fBoostWeights.push_back(0.012695);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45883,-99) , 
7, 72.3401, 1, 0, 0.592481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343535,-99) , 
7, 22.5278, 0, 0, 0.568155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492633,-99) , 
11, -1.71807, 1, 0, 0.547494,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364667,-99) , 
3, 0.995993, 0, 0, 0.415606,-99) , 
10, 0.245159, 1, 0, 0.496968,-99) , 
2, 17.5, 0, 0, 0.525559,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413055,-99) , 
0, 17.5, 1, 0, 0.512405,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298299,-99) , 
4, 1.47441, 1, 0, 0.448403,-99) , 
9, 275.127, 1, 0, 0.512886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30809,-99) , 
1, 12.5, 1, 0, 0.431778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224291,-99) , 
6, 0.47613, 0, 0, 0.36126,-99) , 
4, 0.744934, 1, 0, 0.417389,-99) , 
8, 2.54229, 1, 0, 0.498387,-99)    );
  // itree = 1106
  fBoostWeights.push_back(0.012986);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554911,-99) , 
0, 16.5, 0, 0, 0.641825,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448705,-99) , 
2, 11.5, 0, 0, 0.530393,-99) , 
8, 2.19017, 1, 0, 0.584602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440651,-99) , 
9, 208.489, 1, 0, 0.554008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489505,-99) , 
2, 23.5, 0, 0, 0.52869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401222,-99) , 
6, 0.906497, 1, 0, 0.492922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329093,-99) , 
4, 0.0250711, 0, 0, 0.468709,-99) , 
8, 1.29017, 0, 0, 0.513609,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492325,-99) , 
11, -4.42625, 1, 0, 0.534333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338324,-99) , 
0, 46.5, 1, 0, 0.502528,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308477,-99) , 
5, 2.36099, 1, 0, 0.478673,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211419,-99) , 
9, 91.241, 1, 0, 0.266264,-99) , 
8, 0.70028, 1, 0, 0.384541,-99) , 
10, 0.202162, 0, 0, 0.445664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12672,-99) , 
3, 0.999456, 1, 0, 0.433311,-99) , 
5, 1.73303, 1, 0, 0.484971,-99)    );
  // itree = 1107
  fBoostWeights.push_back(0.00438288);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676265,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707946,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2856,-99) , 
7, 110.895, 1, 0, 0.514275,-99) , 
2, 93.5, 0, 0, 0.518763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275637,-99) , 
3, 0.999741, 1, 0, 0.514679,-99) , 
6, 0.0224555, 1, 0, 0.519963,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169277,-99) , 
5, 1.99852, 1, 0, 0.397242,-99) , 
7, 8.99282, 0, 0, 0.511979,-99)    );
  // itree = 1108
  fBoostWeights.push_back(0.00881152);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515166,-99) , 
2, 46.5, 0, 0, 0.525059,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301462,-99) , 
5, 2.27111, 0, 0, 0.398846,-99) , 
5, 2.09941, 1, 0, 0.513494,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289317,-99) , 
12, 8354.23, 0, 0, 0.386006,-99) , 
3, 0.999173, 1, 0, 0.503363,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433093,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217313,-99) , 
5, 1.75406, 0, 0, 0.320945,-99) , 
7, 41.3111, 0, 0, 0.365381,-99) , 
9, 32.9926, 0, 0, 0.487131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0565253,-99) , 
4, 1.68397, 1, 0, 0.321013,-99) , 
9, 401.856, 1, 0, 0.475714,-99)    );
  // itree = 1109
  fBoostWeights.push_back(0.00767371);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52755,-99) , 
13, 0.5, 0, 0, 0.629159,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471731,-99) , 
4, 0.775452, 1, 0, 0.505076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330918,-99) , 
4, 0.35515, 0, 0, 0.484035,-99) , 
6, 0.21786, 1, 0, 0.513208,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64044,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389342,-99) , 
6, 0.620976, 1, 0, 0.44873,-99) , 
6, 1.00433, 0, 0, 0.462287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162879,-99) , 
7, 129.424, 1, 0, 0.45567,-99) , 
5, 1.51659, 1, 0, 0.481024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3013,-99) , 
1, 5.5, 0, 0, 0.476487,-99)    );
  // itree = 1110
  fBoostWeights.push_back(0.00894775);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674602,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524339,-99) , 
11, -1.88639, 1, 0, 0.554852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400188,-99) , 
3, 0.998795, 1, 0, 0.539079,-99) , 
8, 2.77132, 0, 0, 0.553389,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519556,-99) , 
10, 0.229267, 1, 0, 0.615909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413098,-99) , 
2, 20.5, 0, 0, 0.464835,-99) , 
12, 605.87, 1, 0, 0.506585,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315881,-99) , 
1, 8.5, 0, 0, 0.477637,-99) , 
6, 0.229012, 0, 0, 0.524187,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606372,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380969,-99) , 
8, 1.77722, 1, 0, 0.477142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328759,-99) , 
10, 0.602323, 1, 0, 0.452022,-99) , 
2, 35.5, 0, 0, 0.471867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245677,-99) , 
7, 140.793, 1, 0, 0.461924,-99) , 
6, 0.796253, 1, 0, 0.504156,-99)    );
  // itree = 1111
  fBoostWeights.push_back(0.0111863);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566164,-99) , 
10, 0.149593, 1, 0, 0.622985,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686574,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442149,-99) , 
9, 61.4479, 0, 0, 0.507202,-99) , 
3, 0.995555, 0, 0, 0.521816,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565253,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225327,-99) , 
6, 0.271699, 1, 0, 0.31146,-99) , 
11, -6.60194, 1, 0, 0.399257,-99) , 
3, 0.997509, 1, 0, 0.502812,-99) , 
12, -3167.61, 1, 0, 0.518334,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55432,-99) , 
4, 1.65033, 0, 0, 0.584965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340145,-99) , 
11, -3.88762, 0, 0, 0.531136,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275947,-99) , 
7, 30.7708, 1, 0, 0.498017,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497034,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307213,-99) , 
10, 0.798204, 0, 0, 0.358012,-99) , 
1, 12.5, 1, 0, 0.425419,-99) , 
6, 1.00234, 0, 0, 0.463604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219962,-99) , 
2, 8.5, 0, 0, 0.450599,-99) , 
6, 0.668595, 1, 0, 0.489409,-99)    );
  // itree = 1112
  fBoostWeights.push_back(0.00675272);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50137,-99) , 
8, 0.072043, 1, 0, 0.558624,-99) , 
3, 0.943898, 1, 0, 0.602958,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459984,-99) , 
5, 1.51406, 1, 0, 0.496723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.155782,-99) , 
5, 2.32327, 1, 0, 0.493082,-99) , 
8, 0.270757, 1, 0, 0.5107,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321798,-99) , 
4, 1.4925, 0, 0, 0.417438,-99) , 
9, 32.1251, 0, 0, 0.50026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.103516,-99) , 
7, 236.361, 1, 0, 0.496744,-99)    );
  // itree = 1113
  fBoostWeights.push_back(0.0102565);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655673,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525923,-99) , 
8, 0.0894677, 1, 0, 0.541304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394758,-99) , 
9, 33.8496, 0, 0, 0.526158,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516209,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183667,-99) , 
9, 87.5744, 0, 0, 0.296362,-99) , 
11, -1.67669, 1, 0, 0.403195,-99) , 
1, 9.5, 0, 0, 0.50211,-99) , 
11, 5.48039, 0, 0, 0.517088,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671675,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411285,-99) , 
10, 0.280689, 1, 0, 0.453418,-99) , 
3, 0.996651, 0, 0, 0.525438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616165,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331468,-99) , 
1, 13.5, 1, 0, 0.422105,-99) , 
10, 1.11387, 0, 0, 0.444045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238889,-99) , 
4, 1.91411, 1, 0, 0.415261,-99) , 
6, 1.00444, 0, 0, 0.455723,-99) , 
6, 0.669891, 1, 0, 0.491906,-99)    );
  // itree = 1114
  fBoostWeights.push_back(0.00773869);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72892,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510575,-99) , 
1, 28.5, 1, 0, 0.578126,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282166,-99) , 
7, 43.3183, 1, 0, 0.493302,-99) , 
2, 28.5, 0, 0, 0.506298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32636,-99) , 
1, 68.5, 1, 0, 0.501212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561689,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217659,-99) , 
9, 76.9156, 1, 0, 0.340571,-99) , 
8, 0.162346, 1, 0, 0.40084,-99) , 
4, 1.73047, 1, 0, 0.488601,-99) , 
6, 0.0226663, 1, 0, 0.495942,-99)    );
  // itree = 1115
  fBoostWeights.push_back(0.00521455);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661829,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507871,-99) , 
5, 1.54756, 1, 0, 0.614333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43481,-99) , 
3, 0.997679, 1, 0, 0.572028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50252,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43082,-99) , 
10, 0.338804, 1, 0, 0.481921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122206,-99) , 
0, 50.5, 1, 0, 0.476309,-99) , 
2, 34.5, 0, 0, 0.488143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355198,-99) , 
5, 2.24246, 1, 0, 0.482028,-99) , 
12, 19900.8, 0, 0, 0.48777,-99)    );
  // itree = 1116
  fBoostWeights.push_back(0.00984178);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561108,-99) , 
10, 0.316969, 0, 0, 0.58336,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288003,-99) , 
9, 313.897, 1, 0, 0.486083,-99) , 
4, 1.39089, 1, 0, 0.55011,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583579,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335502,-99) , 
5, 1.81214, 1, 0, 0.453494,-99) , 
9, 71.089, 1, 0, 0.479715,-99) , 
3, 0.992542, 1, 0, 0.522727,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316553,-99) , 
4, 2.00367, 1, 0, 0.5154,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599649,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560372,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327054,-99) , 
13, 1.5, 0, 0, 0.383356,-99) , 
9, 20.9583, 1, 0, 0.421,-99) , 
2, 52.5, 0, 0, 0.449059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172202,-99) , 
9, 124.654, 1, 0, 0.423925,-99) , 
10, 0.510204, 1, 0, 0.490788,-99)    );
  // itree = 1117
  fBoostWeights.push_back(0.0117386);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546882,-99) , 
12, 3986.91, 0, 0, 0.627821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604451,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355794,-99) , 
9, 179.722, 1, 0, 0.515844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369395,-99) , 
8, 0.663817, 0, 0, 0.48236,-99) , 
10, 0.0962337, 1, 0, 0.508212,-99) , 
6, 0.214507, 1, 0, 0.531086,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381871,-99) , 
4, 1.83052, 1, 0, 0.512819,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234443,-99) , 
9, 47.1564, 1, 0, 0.400244,-99) , 
9, 56.935, 0, 0, 0.48634,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411364,-99) , 
0, 17.5, 0, 0, 0.523967,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109283,-99) , 
7, 30.057, 1, 0, 0.293572,-99) , 
9, 56.4359, 1, 0, 0.391062,-99) , 
8, 1.82349, 1, 0, 0.462169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0997687,-99) , 
1, 70.5, 1, 0, 0.455253,-99) , 
5, 1.49356, 1, 0, 0.487727,-99)    );
  // itree = 1118
  fBoostWeights.push_back(0.00744429);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532073,-99) , 
6, 0.750637, 1, 0, 0.631666,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484263,-99) , 
10, 0.102715, 1, 0, 0.504475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37083,-99) , 
10, 0.0395344, 0, 0, 0.495902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253568,-99) , 
4, 2.20664, 1, 0, 0.493013,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595175,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.101967,-99) , 
4, 1.85616, 1, 0, 0.333191,-99) , 
7, 47.8045, 0, 0, 0.366764,-99) , 
4, 0.456123, 1, 0, 0.409032,-99) , 
3, 0.944471, 0, 0, 0.473282,-99) , 
11, -6.7412, 1, 0, 0.486058,-99)    );
  // itree = 1119
  fBoostWeights.push_back(0.0123662);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.790377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542371,-99) , 
6, 0.774519, 1, 0, 0.668867,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447494,-99) , 
5, 1.59797, 1, 0, 0.509674,-99) , 
1, 11.5, 0, 0, 0.583348,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546533,-99) , 
2, 23.5, 0, 0, 0.562905,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411472,-99) , 
2, 26.5, 0, 0, 0.463723,-99) , 
10, 0.329656, 1, 0, 0.521436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357913,-99) , 
9, 362.896, 1, 0, 0.508073,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508536,-99) , 
6, 0.425187, 0, 0, 0.600275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453907,-99) , 
8, 1.60531, 1, 0, 0.55635,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570916,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21238,-99) , 
11, -4.68356, 1, 0, 0.271124,-99) , 
9, 305.859, 0, 0, 0.331377,-99) , 
13, 1.5, 0, 0, 0.421519,-99) , 
5, 1.8507, 1, 0, 0.487133,-99) , 
11, 4.74489, 0, 0, 0.501676,-99)    );
  // itree = 1120
  fBoostWeights.push_back(0.0140981);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.818671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651911,-99) , 
7, 65.5674, 1, 0, 0.745134,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471758,-99) , 
10, 0.261409, 1, 0, 0.547464,-99) , 
2, 19.5, 0, 0, 0.620578,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458511,-99) , 
10, 0.0546262, 0, 0, 0.580031,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294498,-99) , 
10, 0.19159, 1, 0, 0.400632,-99) , 
9, 167.803, 0, 0, 0.516091,-99) , 
9, 110.047, 1, 0, 0.563346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391814,-99) , 
9, 32.6121, 0, 0, 0.547071,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576756,-99) , 
6, 0.494798, 0, 0, 0.646496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476508,-99) , 
7, 12.5204, 0, 0, 0.598557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410995,-99) , 
10, 0.443059, 1, 0, 0.556234,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620529,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127967,-99) , 
5, 2.3613, 1, 0, 0.463063,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23045,-99) , 
1, 16.5, 0, 0, 0.347608,-99) , 
7, 23.3803, 1, 0, 0.424542,-99) , 
9, 26.6181, 1, 0, 0.44322,-99) , 
8, 0.351555, 1, 0, 0.473992,-99) , 
5, 1.52298, 1, 0, 0.507271,-99)    );
  // itree = 1121
  fBoostWeights.push_back(0.00902896);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764171,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540865,-99) , 
4, 1.5209, 0, 0, 0.592883,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291159,-99) , 
7, 36.9128, 1, 0, 0.532645,-99) , 
2, 35.5, 0, 0, 0.568465,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549362,-99) , 
5, 1.8257, 0, 0, 0.582785,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365774,-99) , 
9, 393.848, 0, 0, 0.429298,-99) , 
5, 1.91514, 1, 0, 0.547934,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377292,-99) , 
7, 14.6081, 0, 0, 0.469813,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156838,-99) , 
5, 2.48068, 1, 0, 0.466526,-99) , 
10, 0.153245, 1, 0, 0.498943,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489783,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226531,-99) , 
10, 0.231907, 0, 0, 0.319321,-99) , 
6, 0.49882, 1, 0, 0.405217,-99) , 
11, -2.84888, 0, 0, 0.486403,-99) , 
11, -5.68154, 1, 0, 0.495157,-99)    );
  // itree = 1122
  fBoostWeights.push_back(0.00995383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494217,-99) , 
6, 0.668614, 1, 0, 0.586505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251942,-99) , 
4, 1.86845, 1, 0, 0.562065,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587769,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360176,-99) , 
13, 0.5, 0, 0, 0.455426,-99) , 
6, 0.97778, 0, 0, 0.48157,-99) , 
9, 145.323, 0, 0, 0.515932,-99) , 
2, 71.5, 0, 0, 0.523031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54106,-99) , 
10, 0.150822, 1, 0, 0.589679,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438435,-99) , 
11, -4.27958, 1, 0, 0.466198,-99) , 
8, 1.91586, 1, 0, 0.497162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292015,-99) , 
10, 0.0510437, 0, 0, 0.476491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302655,-99) , 
8, 1.56856, 0, 0, 0.459147,-99) , 
8, 1.41335, 1, 0, 0.495417,-99)    );
  // itree = 1123
  fBoostWeights.push_back(0.0104043);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572893,-99) , 
1, 37.5, 1, 0, 0.634277,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47973,-99) , 
9, 67.6431, 0, 0, 0.535918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318554,-99) , 
6, 0.401488, 0, 0, 0.405196,-99) , 
7, 38.836, 1, 0, 0.515695,-99) , 
2, 36.5, 0, 0, 0.527099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354861,-99) , 
7, 137.17, 1, 0, 0.520566,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436514,-99) , 
0, 12.5, 0, 0, 0.561178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342853,-99) , 
4, 2.01656, 1, 0, 0.530068,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555036,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130766,-99) , 
11, -0.29153, 1, 0, 0.241464,-99) , 
11, 6.15898, 0, 0, 0.320408,-99) , 
8, 0.10343, 1, 0, 0.378743,-99) , 
13, 1.5, 0, 0, 0.444609,-99) , 
5, 1.89457, 1, 0, 0.503579,-99)    );
  // itree = 1124
  fBoostWeights.push_back(0.00868091);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541035,-99) , 
2, 21.5, 0, 0, 0.562155,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399253,-99) , 
9, 107.178, 1, 0, 0.476259,-99) , 
8, 2.36479, 1, 0, 0.5444,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181993,-99) , 
8, 0.308596, 1, 0, 0.388835,-99) , 
5, 2.16956, 1, 0, 0.53404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281648,-99) , 
1, 58.5, 1, 0, 0.52852,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562636,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251143,-99) , 
5, 1.72507, 1, 0, 0.412434,-99) , 
13, 1.5, 0, 0, 0.471711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239768,-99) , 
1, 14.5, 0, 0, 0.418087,-99) , 
10, 0.922296, 1, 0, 0.514323,-99)    );
  // itree = 1125
  fBoostWeights.push_back(0.0113347);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498906,-99) , 
4, 1.5657, 1, 0, 0.655535,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447221,-99) , 
11, 0.172431, 0, 0, 0.537012,-99) , 
11, -1.22866, 1, 0, 0.570284,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286633,-99) , 
6, 1.0088, 0, 0, 0.448083,-99) , 
6, 0.907846, 1, 0, 0.545387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209834,-99) , 
7, 7.32314, 0, 0, 0.536201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512063,-99) , 
11, -3.13688, 1, 0, 0.563268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350496,-99) , 
4, 1.71355, 1, 0, 0.539587,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382918,-99) , 
4, 1.49832, 0, 0, 0.412219,-99) , 
2, 30.5, 0, 0, 0.43387,-99) , 
3, 0.99717, 0, 0, 0.478351,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547601,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274118,-99) , 
11, -6.7866, 1, 0, 0.326078,-99) , 
5, 2.07719, 1, 0, 0.463979,-99) , 
3, 0.984796, 1, 0, 0.497058,-99)    );
  // itree = 1126
  fBoostWeights.push_back(0.011237);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809046,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520055,-99) , 
7, 43.0267, 1, 0, 0.610973,-99) , 
2, 37.5, 0, 0, 0.650747,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346658,-99) , 
0, 61.5, 0, 0, 0.503179,-99) , 
1, 34.5, 1, 0, 0.597311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418038,-99) , 
7, 137.378, 1, 0, 0.573184,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555507,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461988,-99) , 
3, 0.971466, 0, 0, 0.523715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281308,-99) , 
0, 18.5, 0, 0, 0.396561,-99) , 
7, 27.6455, 1, 0, 0.504044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.158974,-99) , 
5, 2.3615, 1, 0, 0.498084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232132,-99) , 
0, 28.5, 1, 0, 0.485372,-99) , 
2, 23.5, 0, 0, 0.506857,-99)    );
  // itree = 1127
  fBoostWeights.push_back(0.00872968);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669921,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533315,-99) , 
11, -4.67745, 1, 0, 0.55613,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358923,-99) , 
4, 1.2303, 1, 0, 0.445815,-99) , 
5, 1.74755, 1, 0, 0.524078,-99) , 
4, 1.43531, 0, 0, 0.538467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399933,-99) , 
5, 2.15812, 1, 0, 0.525698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464817,-99) , 
10, 0.140234, 0, 0, 0.587064,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361776,-99) , 
6, 1.02363, 1, 0, 0.42757,-99) , 
10, 0.466165, 1, 0, 0.523401,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626657,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447505,-99) , 
10, 1.07323, 0, 0, 0.464812,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0684872,-99) , 
2, 10.5, 0, 0, 0.35927,-99) , 
4, 1.81984, 1, 0, 0.446663,-99) , 
6, 0.996842, 0, 0, 0.46918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337595,-99) , 
7, 8.9978, 0, 0, 0.459517,-99) , 
6, 0.461168, 1, 0, 0.489755,-99)    );
  // itree = 1128
  fBoostWeights.push_back(0.00779198);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636286,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503998,-99) , 
3, 0.977976, 0, 0, 0.529293,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370916,-99) , 
7, 52.5688, 1, 0, 0.467852,-99) , 
3, 0.985401, 1, 0, 0.495827,-99) , 
9, 42.5056, 1, 0, 0.507026,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404758,-99) , 
0, 27.5, 1, 0, 0.487056,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267788,-99) , 
10, 0.731044, 0, 0, 0.414747,-99) , 
9, 33.0876, 0, 0, 0.497222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0643613,-99) , 
5, 2.36604, 1, 0, 0.374686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
3, 0.93405, 0, 0, 0.321016,-99) , 
8, 0.110204, 1, 0, 0.388702,-99) , 
5, 2.12687, 1, 0, 0.488241,-99)    );
  // itree = 1129
  fBoostWeights.push_back(0.013322);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472018,-99) , 
1, 9.5, 0, 0, 0.606534,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366002,-99) , 
10, 0.432153, 1, 0, 0.510591,-99) , 
5, 1.33286, 0, 0, 0.574641,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372695,-99) , 
9, 71.9231, 1, 0, 0.429021,-99) , 
11, 7.2071, 0, 0, 0.464741,-99) , 
3, 0.992797, 1, 0, 0.532107,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351948,-99) , 
11, 0.682577, 0, 0, 0.396918,-99) , 
5, 0.81229, 0, 0, 0.515299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437648,-99) , 
5, 2.21123, 1, 0, 0.574625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164077,-99) , 
2, 11.5, 0, 0, 0.440783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
11, 8.06367, 1, 0, 0.419331,-99) , 
7, 17.1265, 1, 0, 0.464865,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517932,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225138,-99) , 
8, 2.17674, 0, 0, 0.279798,-99) , 
10, 0.0399592, 1, 0, 0.330659,-99) , 
7, 12.9903, 0, 0, 0.426444,-99) , 
5, 1.84613, 1, 0, 0.493511,-99)    );
  // itree = 1130
  fBoostWeights.push_back(0.00587342);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0945158,-99) , 
1, 13.5, 0, 0, 0.620543,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377667,-99) , 
1, 24.5, 1, 0, 0.487535,-99) , 
2, 43.5, 0, 0, 0.497605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256058,-99) , 
1, 75.5, 1, 0, 0.492898,-99) , 
3, 0.831386, 1, 0, 0.499609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301566,-99) , 
3, 0.75157, 0, 0, 0.491569,-99)    );
  // itree = 1131
  fBoostWeights.push_back(0.00977677);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553025,-99) , 
5, 1.50338, 1, 0, 0.601167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402742,-99) , 
6, 0.950866, 1, 0, 0.569375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487553,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154974,-99) , 
7, 100.698, 1, 0, 0.478969,-99) , 
2, 55.5, 0, 0, 0.493175,-99) , 
10, 0.121531, 1, 0, 0.519113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279081,-99) , 
3, 0.745847, 0, 0, 0.511231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58982,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364656,-99) , 
2, 10.5, 0, 0, 0.46615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328136,-99) , 
0, 44.5, 1, 0, 0.441294,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239925,-99) , 
9, 47.1413, 1, 0, 0.311126,-99) , 
5, 1.71315, 1, 0, 0.405571,-99) , 
12, 8927.44, 0, 0, 0.432248,-99) , 
8, 1.91563, 1, 0, 0.487753,-99)    );
  // itree = 1132
  fBoostWeights.push_back(0.00415225);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534646,-99) , 
7, 31.9724, 1, 0, 0.64713,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500117,-99) , 
9, 376.776, 0, 0, 0.506236,-99) , 
11, -8.06815, 1, 0, 0.51425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365677,-99) , 
9, 477.026, 1, 0, 0.507602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295012,-99) , 
3, 0.692812, 0, 0, 0.502426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260959,-99) , 
4, 2.14384, 1, 0, 0.497795,-99)    );
  // itree = 1133
  fBoostWeights.push_back(0.00809762);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499508,-99) , 
2, 10.5, 0, 0, 0.62522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436109,-99) , 
6, 0.594802, 0, 0, 0.51055,-99) , 
6, 0.3507, 1, 0, 0.558382,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.752338,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444859,-99) , 
13, 0.5, 1, 0, 0.479296,-99) , 
4, 2.24503, 0, 0, 0.48818,-99) , 
3, 0.990561, 1, 0, 0.527775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171799,-99) , 
5, 2.54301, 1, 0, 0.525334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318525,-99) , 
5, 0.154287, 0, 0, 0.516691,-99)    );
  // itree = 1134
  fBoostWeights.push_back(0.00560038);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672909,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206663,-99) , 
7, 79.362, 1, 0, 0.519655,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290058,-99) , 
5, 1.51289, 1, 0, 0.386419,-99) , 
1, 26.5, 1, 0, 0.503985,-99) , 
2, 61.5, 0, 0, 0.50959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260055,-99) , 
8, 0.341333, 1, 0, 0.394918,-99) , 
5, 2.16848, 1, 0, 0.502101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254795,-99) , 
7, 162.599, 1, 0, 0.497004,-99)    );
  // itree = 1135
  fBoostWeights.push_back(0.0100841);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558595,-99) , 
6, 0.272207, 1, 0, 0.637315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482166,-99) , 
0, 12.5, 0, 0, 0.595211,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461931,-99) , 
10, 0.26213, 1, 0, 0.518627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345205,-99) , 
7, 8.33783, 0, 0, 0.509678,-99) , 
11, -2.30039, 1, 0, 0.532027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296499,-99) , 
4, 1.75833, 1, 0, 0.51969,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49506,-99) , 
2, 12.5, 0, 0, 0.55521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435545,-99) , 
1, 18.5, 1, 0, 0.522008,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340163,-99) , 
3, 0.99411, 1, 0, 0.495339,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377222,-99) , 
11, 1.01583, 0, 0, 0.436869,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164349,-99) , 
4, 1.51073, 1, 0, 0.30801,-99) , 
9, 104.363, 1, 0, 0.376777,-99) , 
8, 0.518537, 1, 0, 0.403518,-99) , 
13, 1.5, 0, 0, 0.43993,-99) , 
6, 0.676202, 1, 0, 0.48847,-99)    );
  // itree = 1136
  fBoostWeights.push_back(0.00642553);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70673,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493727,-99) , 
9, 109.617, 1, 0, 0.52597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404695,-99) , 
9, 24.6227, 0, 0, 0.517525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397613,-99) , 
9, 369.76, 1, 0, 0.507124,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481736,-99) , 
12, -2511.02, 0, 0, 0.582873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443873,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137826,-99) , 
1, 8.5, 0, 0, 0.411301,-99) , 
12, -276.557, 1, 0, 0.457702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223278,-99) , 
3, 0.998295, 1, 0, 0.432316,-99) , 
5, 1.89684, 1, 0, 0.491242,-99) , 
12, 24098.3, 0, 0, 0.495913,-99)    );
  // itree = 1137
  fBoostWeights.push_back(0.0118635);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591962,-99) , 
9, 88.7915, 1, 0, 0.674471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512369,-99) , 
6, 0.972514, 1, 0, 0.628278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454495,-99) , 
2, 11.5, 0, 0, 0.574489,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468374,-99) , 
3, 0.98824, 1, 0, 0.599592,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273359,-99) , 
5, 1.89434, 1, 0, 0.49011,-99) , 
12, 3948.4, 1, 0, 0.55041,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407389,-99) , 
10, 0.100557, 0, 0, 0.525777,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473327,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290016,-99) , 
11, 0.717982, 0, 0, 0.415621,-99) , 
12, 4024.22, 0, 0, 0.469499,-99) , 
6, 0.449648, 1, 0, 0.507509,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626643,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386201,-99) , 
2, 30.5, 0, 0, 0.427889,-99) , 
12, 10223, 0, 0, 0.459389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267006,-99) , 
9, 118.919, 1, 0, 0.436411,-99) , 
10, 0.403292, 1, 0, 0.484371,-99) , 
11, 5.90997, 0, 0, 0.494933,-99)    );
  // itree = 1138
  fBoostWeights.push_back(0.0101642);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596331,-99) , 
11, -3.60723, 1, 0, 0.622596,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463524,-99) , 
6, 0.204958, 1, 0, 0.509791,-99) , 
5, 1.60256, 1, 0, 0.578344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310641,-99) , 
1, 79.5, 1, 0, 0.56161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120143,-99) , 
1, 8.5, 0, 0, 0.547545,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446555,-99) , 
5, 1.91915, 1, 0, 0.515649,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367725,-99) , 
0, 19.5, 1, 0, 0.501836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341423,-99) , 
5, 1.02815, 0, 0, 0.484863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258693,-99) , 
7, 31.9532, 1, 0, 0.469599,-99) , 
2, 17.5, 0, 0, 0.497707,-99)    );
  // itree = 1139
  fBoostWeights.push_back(0.0109202);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522815,-99) , 
13, 1.5, 0, 0, 0.593667,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211195,-99) , 
4, 2.01653, 1, 0, 0.503195,-99) , 
2, 21.5, 0, 0, 0.518851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38867,-99) , 
9, 468.12, 1, 0, 0.512049,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261163,-99) , 
4, 1.61036, 1, 0, 0.464581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226489,-99) , 
9, 61.3531, 0, 0, 0.403013,-99) , 
3, 0.882557, 0, 0, 0.500627,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330643,-99) , 
2, 56.5, 0, 0, 0.445395,-99) , 
6, 0.726613, 0, 0, 0.519158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193086,-99) , 
1, 15.5, 0, 0, 0.490027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.103878,-99) , 
2, 29.5, 0, 0, 0.420186,-99) , 
7, 59.9919, 1, 0, 0.489333,-99)    );
  // itree = 1140
  fBoostWeights.push_back(0.0114666);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510265,-99) , 
1, 23.5, 1, 0, 0.573181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451654,-99) , 
7, 14.2066, 0, 0, 0.555944,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45059,-99) , 
12, 1586.97, 1, 0, 0.498368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332549,-99) , 
6, 0.986107, 1, 0, 0.475073,-99) , 
1, 11.5, 0, 0, 0.524619,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279721,-99) , 
12, 2201.9, 0, 0, 0.420064,-99) , 
4, 0.0222916, 0, 0, 0.511965,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433192,-99) , 
9, 60.0061, 1, 0, 0.516413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338559,-99) , 
7, 11.3318, 0, 0, 0.44345,-99) , 
9, 233.341, 0, 0, 0.496253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371405,-99) , 
0, 24.5, 0, 0, 0.455972,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181449,-99) , 
3, 0.998061, 1, 0, 0.334937,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0958083,-99) , 
2, 15.5, 0, 0, 0.274003,-99) , 
13, 1.5, 0, 0, 0.352369,-99) , 
7, 16.7257, 1, 0, 0.418522,-99) , 
4, 1.52865, 1, 0, 0.488163,-99)    );
  // itree = 1141
  fBoostWeights.push_back(0.00480796);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708879,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23338,-99) , 
7, 105.952, 1, 0, 0.519046,-99) , 
2, 74.5, 0, 0, 0.525092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351532,-99) , 
3, 0.999501, 1, 0, 0.518129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284112,-99) , 
5, 2.36524, 1, 0, 0.513466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370669,-99) , 
4, -0.176936, 0, 0, 0.504582,-99)    );
  // itree = 1142
  fBoostWeights.push_back(0.00937276);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.798638,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596694,-99) , 
10, 0.105096, 0, 0, 0.700242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27332,-99) , 
4, 1.71155, 1, 0, 0.534281,-99) , 
11, 2.78534, 0, 0, 0.568246,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663924,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382342,-99) , 
3, 0.94039, 1, 0, 0.428569,-99) , 
6, 0.532398, 0, 0, 0.465949,-99) , 
10, 0.252188, 1, 0, 0.525249,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35334,-99) , 
6, 0.71685, 0, 0, 0.489467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314607,-99) , 
9, 30.4601, 0, 0, 0.47488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3433,-99) , 
12, 11342.4, 1, 0, 0.459202,-99) , 
6, 0.63962, 1, 0, 0.497307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255981,-99) , 
5, 2.39594, 1, 0, 0.493363,-99)    );
  // itree = 1143
  fBoostWeights.push_back(0.0126166);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561356,-99) , 
5, 1.34441, 1, 0, 0.644192,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454973,-99) , 
7, 58.6435, 1, 0, 0.551632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36648,-99) , 
4, 0.318228, 0, 0, 0.530577,-99) , 
6, 0.200673, 1, 0, 0.55282,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314063,-99) , 
4, 0.982602, 0, 0, 0.431075,-99) , 
7, 12.7758, 0, 0, 0.530205,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526252,-99) , 
3, 0.978304, 1, 0, 0.622214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463595,-99) , 
12, 3199.94, 1, 0, 0.555444,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625652,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362512,-99) , 
8, 1.43875, 0, 0, 0.463647,-99) , 
5, 1.86929, 1, 0, 0.534854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406003,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2157,-99) , 
4, 1.72235, 1, 0, 0.379053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0793619,-99) , 
4, 1.89278, 1, 0, 0.35167,-99) , 
9, 65.385, 1, 0, 0.428138,-99) , 
8, 0.267579, 1, 0, 0.463073,-99) , 
5, 1.6706, 1, 0, 0.501534,-99)    );
  // itree = 1144
  fBoostWeights.push_back(0.0112961);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486153,-99) , 
9, 181.655, 1, 0, 0.624326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597128,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474726,-99) , 
4, 0.438064, 1, 0, 0.513703,-99) , 
5, 1.41553, 0, 0, 0.57896,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352757,-99) , 
0, 61.5, 0, 0, 0.515504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0962393,-99) , 
1, 17.5, 0, 0, 0.458816,-99) , 
7, 66.1116, 1, 0, 0.547872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327741,-99) , 
7, 17.405, 0, 0, 0.532805,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612476,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62395,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464972,-99) , 
3, 0.999193, 0, 0, 0.47541,-99) , 
6, 0.0802935, 1, 0, 0.489775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272147,-99) , 
7, 31.8934, 1, 0, 0.477785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0527346,-99) , 
5, 2.36278, 1, 0, 0.470481,-99) , 
2, 15.5, 0, 0, 0.497603,-99)    );
  // itree = 1145
  fBoostWeights.push_back(0.0128884);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560631,-99) , 
2, 15.5, 0, 0, 0.646317,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582735,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485825,-99) , 
6, 0.300519, 1, 0, 0.536487,-99) , 
12, 5570.29, 0, 0, 0.565593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461084,-99) , 
8, 0.365495, 0, 0, 0.549947,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385499,-99) , 
6, 0.225442, 0, 0, 0.550742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245332,-99) , 
6, 0.69205, 0, 0, 0.399268,-99) , 
3, 0.997465, 1, 0, 0.516845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456228,-99) , 
4, 2.00032, 0, 0, 0.488015,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198322,-99) , 
5, 1.73778, 1, 0, 0.325259,-99) , 
9, 77.2124, 1, 0, 0.401077,-99) , 
8, 1.14479, 1, 0, 0.46305,-99) , 
4, 1.06585, 1, 0, 0.501224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180631,-99) , 
11, 0.441464, 0, 0, 0.289234,-99) , 
7, 8.57375, 0, 0, 0.4888,-99)    );
  // itree = 1146
  fBoostWeights.push_back(0.0102615);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738725,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688939,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468024,-99) , 
13, 0.5, 1, 0, 0.522552,-99) , 
4, 0.655845, 1, 0, 0.550492,-99) , 
12, 6467.19, 1, 0, 0.57631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339456,-99) , 
1, 11.5, 0, 0, 0.442358,-99) , 
9, 225.305, 1, 0, 0.547277,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494001,-99) , 
4, 0.746819, 1, 0, 0.519876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315868,-99) , 
9, 22.6571, 0, 0, 0.507576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359655,-99) , 
12, 4877.16, 1, 0, 0.493765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379696,-99) , 
5, 1.74139, 1, 0, 0.534901,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453092,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.159936,-99) , 
6, 0.97986, 0, 0, 0.383393,-99) , 
7, 28.1644, 1, 0, 0.450947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2368,-99) , 
7, 12.7973, 0, 0, 0.413997,-99) , 
6, 0.865632, 1, 0, 0.472853,-99) , 
12, 5808.62, 0, 0, 0.494838,-99)    );
  // itree = 1147
  fBoostWeights.push_back(0.0062574);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331769,-99) , 
7, 52.6147, 1, 0, 0.508025,-99) , 
2, 35.5, 0, 0, 0.517297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142512,-99) , 
7, 142.959, 1, 0, 0.513331,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346151,-99) , 
0, 66.5, 0, 0, 0.461388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184356,-99) , 
2, 31.5, 0, 0, 0.406013,-99) , 
1, 34.5, 1, 0, 0.50224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360211,-99) , 
8, 2.95621, 1, 0, 0.495398,-99)    );
  // itree = 1148
  fBoostWeights.push_back(0.0129069);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48995,-99) , 
3, 0.997479, 1, 0, 0.576492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427117,-99) , 
2, 8.5, 0, 0, 0.558744,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488839,-99) , 
9, 93.8093, 1, 0, 0.567887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294564,-99) , 
2, 28.5, 0, 0, 0.474635,-99) , 
7, 40.0509, 1, 0, 0.537704,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471607,-99) , 
5, 2.0853, 0, 0, 0.585672,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241954,-99) , 
9, 256.608, 1, 0, 0.40456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115104,-99) , 
5, 2.28782, 1, 0, 0.391082,-99) , 
8, 0.255413, 1, 0, 0.450235,-99) , 
4, 1.51562, 1, 0, 0.51463,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67272,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504002,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183592,-99) , 
3, 0.982206, 0, 0, 0.28712,-99) , 
9, 18.1751, 1, 0, 0.355047,-99) , 
4, 1.98847, 0, 0, 0.401964,-99) , 
9, 32.9279, 0, 0, 0.50155,-99)    );
  // itree = 1149
  fBoostWeights.push_back(0.0130368);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74687,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468539,-99) , 
10, 0.541675, 0, 0, 0.583743,-99) , 
10, 0.268894, 1, 0, 0.655457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493684,-99) , 
10, 0.102694, 0, 0, 0.606647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326893,-99) , 
7, 71.2555, 1, 0, 0.576701,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671445,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428402,-99) , 
5, 0.986681, 0, 0, 0.520098,-99) , 
8, 2.54715, 0, 0, 0.553338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428387,-99) , 
3, 0.995458, 1, 0, 0.523764,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706729,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400042,-99) , 
11, -5.44976, 1, 0, 0.578172,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413896,-99) , 
6, 1.00545, 0, 0, 0.432365,-99) , 
3, 0.99772, 0, 0, 0.450646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173805,-99) , 
7, 50.9098, 1, 0, 0.261885,-99) , 
2, 41.5, 0, 0, 0.343932,-99) , 
7, 39.5405, 1, 0, 0.431325,-99) , 
4, 0.740465, 1, 0, 0.457217,-99) , 
11, 3.96778, 0, 0, 0.480009,-99)    );
  // itree = 1150
  fBoostWeights.push_back(0.0110864);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748473,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605164,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526152,-99) , 
9, 128.447, 1, 0, 0.565829,-99) , 
11, -1.7675, 0, 0, 0.639526,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690248,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39522,-99) , 
1, 18.5, 1, 0, 0.471901,-99) , 
6, 0.239528, 1, 0, 0.523769,-99) , 
12, 3071.16, 0, 0, 0.582545,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390862,-99) , 
5, 1.27232, 0, 0, 0.454265,-99) , 
0, 15.5, 0, 0, 0.536119,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458114,-99) , 
2, 21.5, 0, 0, 0.473678,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24376,-99) , 
4, 2.01628, 1, 0, 0.46407,-99) , 
12, -9869.91, 1, 0, 0.473529,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220556,-99) , 
3, 0.977862, 1, 0, 0.336397,-99) , 
7, 41.8512, 1, 0, 0.454746,-99) , 
5, 1.46583, 1, 0, 0.485931,-99)    );
  // itree = 1151
  fBoostWeights.push_back(0.00840271);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541567,-99) , 
9, 27.722, 0, 0, 0.62702,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360014,-99) , 
12, 3650.62, 1, 0, 0.456781,-99) , 
8, 0.986063, 0, 0, 0.558163,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475958,-99) , 
3, 0.988741, 1, 0, 0.513767,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0484269,-99) , 
2, 30.5, 0, 0, 0.366908,-99) , 
7, 59.7674, 1, 0, 0.502434,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379151,-99) , 
3, 0.993224, 0, 0, 0.501932,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254681,-99) , 
4, 1.07058, 1, 0, 0.331967,-99) , 
4, 1.4495, 0, 0, 0.394474,-99) , 
9, 54.4175, 0, 0, 0.484315,-99) , 
10, 0.827274, 0, 0, 0.493875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313004,-99) , 
7, 145.284, 1, 0, 0.489887,-99)    );
  // itree = 1152
  fBoostWeights.push_back(0.0107377);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525882,-99) , 
10, 0.0794547, 0, 0, 0.648429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491661,-99) , 
2, 9.5, 1, 0, 0.603067,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671492,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409481,-99) , 
3, 0.99326, 1, 0, 0.499081,-99) , 
12, 12714, 0, 0, 0.511341,-99) , 
11, 6.9273, 0, 0, 0.524093,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427709,-99) , 
3, 0.997347, 1, 0, 0.55001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324607,-99) , 
2, 10.5, 0, 0, 0.515806,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391299,-99) , 
11, 0.534483, 0, 0, 0.500022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146295,-99) , 
4, 1.76656, 1, 0, 0.321926,-99) , 
9, 47.6277, 1, 0, 0.3815,-99) , 
8, 0.505898, 1, 0, 0.432935,-99) , 
4, 1.40595, 1, 0, 0.4937,-99) , 
0, 10.5, 1, 0, 0.506756,-99)    );
  // itree = 1153
  fBoostWeights.push_back(0.0083474);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749315,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455431,-99) , 
3, 0.997043, 0, 0, 0.542033,-99) , 
8, 1.50435, 0, 0, 0.602748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459555,-99) , 
8, 2.47731, 1, 0, 0.579017,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653158,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47237,-99) , 
9, 183.384, 0, 0, 0.502773,-99) , 
7, 24.9406, 0, 0, 0.513074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189531,-99) , 
0, 28.5, 1, 0, 0.50173,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448686,-99) , 
6, 0.180853, 1, 0, 0.473064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271797,-99) , 
1, 83.5, 1, 0, 0.460637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184637,-99) , 
0, 16.5, 0, 0, 0.439105,-99) , 
7, 27.917, 1, 0, 0.479311,-99) , 
11, 5.12302, 0, 0, 0.491881,-99)    );
  // itree = 1154
  fBoostWeights.push_back(0.00812531);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526187,-99) , 
12, 14605.2, 1, 0, 0.620992,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52191,-99) , 
13, 1.5, 0, 0, 0.54883,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429745,-99) , 
11, 5.21624, 0, 0, 0.472789,-99) , 
3, 0.992517, 1, 0, 0.520989,-99) , 
12, 10204.8, 0, 0, 0.532463,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21805,-99) , 
11, -0.403968, 1, 0, 0.359007,-99) , 
5, 2.16878, 1, 0, 0.521671,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196805,-99) , 
3, 0.992605, 1, 0, 0.365282,-99) , 
9, 403.355, 1, 0, 0.510443,-99)    );
  // itree = 1155
  fBoostWeights.push_back(0.00860218);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514387,-99) , 
2, 24.5, 0, 0, 0.53973,-99) , 
6, 0.113626, 1, 0, 0.557736,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304947,-99) , 
4, 2.09542, 1, 0, 0.55011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565661,-99) , 
6, 0.388435, 1, 0, 0.631615,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393777,-99) , 
4, 0.881302, 0, 0, 0.481752,-99) , 
3, 0.950904, 1, 0, 0.515854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336635,-99) , 
9, 336.192, 1, 0, 0.471509,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21801,-99) , 
9, 164.288, 0, 0, 0.326322,-99) , 
3, 0.900364, 0, 0, 0.443977,-99) , 
11, 0.392644, 0, 0, 0.478205,-99) , 
13, 1.5, 0, 0, 0.499304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198378,-99) , 
3, 0.999764, 1, 0, 0.494856,-99)    );
  // itree = 1156
  fBoostWeights.push_back(0.0188348);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54529,-99) , 
2, 13.5, 0, 0, 0.649859,-99) , 
9, 30.4601, 0, 0, 0.696551,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.27437, 1, 0, 0.661199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366926,-99) , 
4, 0.955312, 0, 0, 0.58382,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576146,-99) , 
11, -4.08176, 0, 0, 0.66886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362198,-99) , 
1, 29.5, 1, 0, 0.511022,-99) , 
12, 5848.75, 0, 0, 0.555537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387592,-99) , 
1, 26.5, 1, 0, 0.522279,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278158,-99) , 
3, 0.991835, 1, 0, 0.371677,-99) , 
5, 1.48126, 1, 0, 0.479952,-99) , 
8, 1.41713, 1, 0, 0.518865,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506474,-99) , 
6, 0.694387, 0, 0, 0.558531,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643759,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210816,-99) , 
8, 0.108837, 1, 0, 0.415951,-99) , 
5, 2.07141, 1, 0, 0.505831,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544587,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229585,-99) , 
7, 12.0493, 1, 0, 0.312533,-99) , 
4, 1.07253, 1, 0, 0.368547,-99) , 
8, 0.604791, 1, 0, 0.436574,-99) , 
5, 1.72855, 1, 0, 0.489408,-99) , 
9, 35.3313, 1, 0, 0.503205,-99)    );
  // itree = 1157
  fBoostWeights.push_back(0.00841311);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731517,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
9, 86.954, 0, 0, 0.532878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396451,-99) , 
7, 44.9344, 1, 0, 0.525651,-99) , 
2, 35.5, 0, 0, 0.53301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372528,-99) , 
1, 40.5, 1, 0, 0.526222,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556708,-99) , 
8, 1.17343, 0, 0, 0.654738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430157,-99) , 
9, 33.5804, 0, 0, 0.581664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256015,-99) , 
9, 98.2064, 1, 0, 0.519903,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177918,-99) , 
7, 37.1928, 1, 0, 0.277831,-99) , 
9, 21.7098, 1, 0, 0.372511,-99) , 
2, 30.5, 0, 0, 0.443039,-99) , 
10, 0.658444, 1, 0, 0.509918,-99)    );
  // itree = 1158
  fBoostWeights.push_back(0.0136072);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523844,-99) , 
8, 0.955089, 0, 0, 0.615737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482735,-99) , 
9, 227.811, 1, 0, 0.588524,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529734,-99) , 
3, 0.987052, 1, 0, 0.612695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278283,-99) , 
7, 32.6017, 1, 0, 0.409207,-99) , 
8, 0.620421, 1, 0, 0.511065,-99) , 
5, 1.60255, 1, 0, 0.554672,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33891,-99) , 
3, 0.999449, 1, 0, 0.544794,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540207,-99) , 
1, 8.5, 1, 0, 0.651903,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460665,-99) , 
6, 0.35458, 0, 0, 0.589935,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445809,-99) , 
11, -0.253549, 1, 0, 0.502385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330787,-99) , 
5, 1.24994, 0, 0, 0.476262,-99) , 
0, 10.5, 1, 0, 0.508952,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169816,-99) , 
7, 26.3207, 1, 0, 0.485316,-99) , 
2, 12.5, 0, 0, 0.518806,-99)    );
  // itree = 1159
  fBoostWeights.push_back(0.0108592);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545878,-99) , 
9, 33.4408, 1, 0, 0.565265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379979,-99) , 
6, 1.02783, 0, 0, 0.446071,-99) , 
6, 0.937291, 1, 0, 0.535695,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347798,-99) , 
10, 0.657958, 1, 0, 0.514032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287119,-99) , 
4, 1.12625, 0, 0, 0.433253,-99) , 
8, 0.37713, 0, 0, 0.514945,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446972,-99) , 
10, 0.0360339, 0, 0, 0.548992,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285035,-99) , 
8, 1.0505, 1, 0, 0.359979,-99) , 
10, 0.0712495, 1, 0, 0.469122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299437,-99) , 
1, 9.5, 0, 0, 0.426065,-99) , 
9, 273.401, 1, 0, 0.499581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128191,-99) , 
5, 2.49869, 1, 0, 0.496403,-99)    );
  // itree = 1160
  fBoostWeights.push_back(0.00956906);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651465,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514732,-99) , 
8, 0.47728, 1, 0, 0.574829,-99) , 
4, 1.19058, 1, 0, 0.606698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643762,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386476,-99) , 
10, 0.35136, 0, 0, 0.479759,-99) , 
9, 150.891, 0, 0, 0.52188,-99) , 
5, 1.56589, 0, 0, 0.56628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385346,-99) , 
9, 359.36, 1, 0, 0.547607,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416175,-99) , 
8, 2.67367, 1, 0, 0.538831,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393283,-99) , 
8, 0.370532, 0, 0, 0.518018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364873,-99) , 
2, 8.5, 0, 0, 0.505868,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355416,-99) , 
5, 2.26943, 1, 0, 0.503581,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27544,-99) , 
11, -0.784333, 1, 0, 0.359642,-99) , 
8, 0.67918, 1, 0, 0.437799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215115,-99) , 
7, 59.9938, 1, 0, 0.421758,-99) , 
5, 1.77355, 1, 0, 0.480166,-99) , 
13, 1.5, 0, 0, 0.500751,-99)    );
  // itree = 1161
  fBoostWeights.push_back(0.0054321);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662904,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492591,-99) , 
4, 1.33458, 0, 0, 0.512922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361294,-99) , 
1, 6.5, 0, 0, 0.506388,-99) , 
12, 16517.7, 0, 0, 0.512586,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247848,-99) , 
9, 44.5121, 1, 0, 0.338225,-99) , 
8, 0.161008, 1, 0, 0.410747,-99) , 
4, 1.77614, 1, 0, 0.501658,-99) , 
11, 9.88409, 0, 0, 0.509009,-99)    );
  // itree = 1162
  fBoostWeights.push_back(0.00409608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384387,-99) , 
9, 397.084, 1, 0, 0.532081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454758,-99) , 
3, 0.832507, 1, 0, 0.470647,-99) , 
8, 1.91583, 1, 0, 0.514264,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227404,-99) , 
5, 2.53565, 1, 0, 0.512175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11891,-99) , 
7, 236.66, 1, 0, 0.51024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310742,-99) , 
1, 67.5, 1, 0, 0.503368,-99)    );
  // itree = 1163
  fBoostWeights.push_back(0.00781918);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697614,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389348,-99) , 
11, -3.78029, 0, 0, 0.531471,-99) , 
11, -6.58051, 1, 0, 0.545158,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484924,-99) , 
7, 21.8536, 1, 0, 0.547418,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565961,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399008,-99) , 
8, 0.33451, 1, 0, 0.445697,-99) , 
13, 1.5, 0, 0, 0.482484,-99) , 
5, 1.50928, 1, 0, 0.510991,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263202,-99) , 
0, 10.5, 1, 0, 0.394372,-99) , 
7, 9.04773, 0, 0, 0.502082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280042,-99) , 
4, 2.0222, 1, 0, 0.494359,-99)    );
  // itree = 1164
  fBoostWeights.push_back(0.0123994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717528,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526947,-99) , 
9, 104.106, 1, 0, 0.574558,-99) , 
0, 20.5, 0, 0, 0.607285,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535861,-99) , 
11, 0.122254, 0, 0, 0.597454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415468,-99) , 
10, 0.587079, 0, 0, 0.500489,-99) , 
10, 0.284159, 1, 0, 0.563138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308764,-99) , 
8, 1.70931, 0, 0, 0.376504,-99) , 
2, 23.5, 0, 0, 0.464613,-99) , 
5, 0.970097, 0, 0, 0.532795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682938,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589069,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414433,-99) , 
1, 8.5, 1, 0, 0.455608,-99) , 
3, 0.949818, 1, 0, 0.493977,-99) , 
8, 0.428255, 0, 0, 0.521324,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406823,-99) , 
0, 13.5, 1, 0, 0.462233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231781,-99) , 
5, 2.10083, 1, 0, 0.441079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231881,-99) , 
7, 54.3509, 1, 0, 0.419789,-99) , 
8, 0.548436, 1, 0, 0.459015,-99) , 
5, 1.54356, 1, 0, 0.493969,-99)    );
  // itree = 1165
  fBoostWeights.push_back(0.00683108);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518981,-99) , 
6, 1.0832, 1, 0, 0.589011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679331,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374095,-99) , 
5, 1.75819, 1, 0, 0.598739,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478304,-99) , 
9, 99.8018, 0, 0, 0.492627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406251,-99) , 
8, 0.208739, 1, 0, 0.431388,-99) , 
9, 115.69, 1, 0, 0.463369,-99) , 
2, 37.5, 0, 0, 0.474313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250463,-99) , 
1, 70.5, 1, 0, 0.469253,-99) , 
6, 1.01393, 0, 0, 0.482859,-99)    );
  // itree = 1166
  fBoostWeights.push_back(0.00639315);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526183,-99) , 
9, 174.897, 1, 0, 0.632099,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439948,-99) , 
8, 1.2804, 0, 0, 0.524353,-99) , 
5, 1.11759, 0, 0, 0.568406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187234,-99) , 
7, 163.354, 1, 0, 0.484118,-99) , 
9, 36.6417, 1, 0, 0.495606,-99) , 
5, 1.36938, 1, 0, 0.519121,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300108,-99) , 
9, 20.9198, 1, 0, 0.409054,-99) , 
9, 29.3753, 0, 0, 0.509665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258006,-99) , 
1, 71.5, 1, 0, 0.503669,-99)    );
  // itree = 1167
  fBoostWeights.push_back(0.0127913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696597,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652764,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469646,-99) , 
7, 21.9749, 1, 0, 0.592687,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570884,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406136,-99) , 
12, 11046, 0, 0, 0.450038,-99) , 
11, 1.6029, 0, 0, 0.509064,-99) , 
2, 32.5, 0, 0, 0.542925,-99) , 
3, 0.88986, 1, 0, 0.566405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450587,-99) , 
5, 1.66751, 1, 0, 0.558208,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429174,-99) , 
6, 1.01882, 0, 0, 0.459061,-99) , 
6, 0.290888, 1, 0, 0.507634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374077,-99) , 
9, 29.7488, 0, 0, 0.494862,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402041,-99) , 
8, 0.523206, 1, 0, 0.436612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138638,-99) , 
6, 0.230475, 0, 0, 0.426137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180125,-99) , 
0, 46.5, 1, 0, 0.402055,-99) , 
4, 1.25925, 1, 0, 0.45529,-99) , 
13, 1.5, 0, 0, 0.488859,-99)    );
  // itree = 1168
  fBoostWeights.push_back(0.00967487);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694646,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492514,-99) , 
6, 0.0814261, 0, 0, 0.622751,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472579,-99) , 
1, 8.5, 1, 0, 0.508073,-99) , 
6, 0.27167, 1, 0, 0.542766,-99) , 
6, 1.01394, 0, 0, 0.564385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66802,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51935,-99) , 
8, 2.86999, 0, 0, 0.530845,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315613,-99) , 
7, 35.3981, 0, 0, 0.378408,-99) , 
0, 27.5, 1, 0, 0.511066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316371,-99) , 
4, 1.82221, 1, 0, 0.497503,-99) , 
10, 0.235666, 0, 0, 0.527202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384167,-99) , 
9, 20.4343, 1, 0, 0.475704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206562,-99) , 
8, 0.531326, 0, 0, 0.401528,-99) , 
9, 28.0379, 0, 0, 0.517075,-99)    );
  // itree = 1169
  fBoostWeights.push_back(0.00938488);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250178,-99) , 
5, 2.30663, 1, 0, 0.534796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376588,-99) , 
9, 27.6532, 0, 0, 0.522519,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332406,-99) , 
9, 448.053, 1, 0, 0.511282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305893,-99) , 
7, 139.299, 1, 0, 0.501132,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501475,-99) , 
9, 246.949, 0, 0, 0.526819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3906,-99) , 
4, 0.93739, 0, 0, 0.48814,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318635,-99) , 
4, 1.82265, 1, 0, 0.46999,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0568536,-99) , 
7, 11.3049, 0, 0, 0.258388,-99) , 
0, 14.5, 1, 0, 0.426303,-99) , 
7, 14.8079, 0, 0, 0.477676,-99)    );
  // itree = 1170
  fBoostWeights.push_back(0.0137003);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520263,-99) , 
12, 1586.95, 0, 0, 0.647605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42133,-99) , 
6, 0.32979, 1, 0, 0.493566,-99) , 
0, 21.5, 0, 0, 0.594331,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727087,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439281,-99) , 
9, 166.865, 1, 0, 0.626331,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333862,-99) , 
3, 0.970853, 1, 0, 0.418907,-99) , 
7, 86.8643, 0, 0, 0.495829,-99) , 
1, 26.5, 1, 0, 0.550677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.25477, 1, 0, 0.503993,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307762,-99) , 
5, 2.08315, 0, 0, 0.36868,-99) , 
8, 0.361863, 0, 0, 0.476067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0421263,-99) , 
7, 90.0704, 1, 0, 0.469701,-99) , 
1, 15.5, 0, 0, 0.501455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28703,-99) , 
2, 7.5, 0, 0, 0.49203,-99)    );
  // itree = 1171
  fBoostWeights.push_back(0.0036829);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26536,-99) , 
7, 109.341, 1, 0, 0.505687,-99) , 
0, 85.5, 0, 0, 0.509428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279302,-99) , 
1, 74.5, 1, 0, 0.505517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.16144,-99) , 
7, 236.37, 1, 0, 0.502626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285166,-99) , 
3, 0.750597, 0, 0, 0.496215,-99)    );
  // itree = 1172
  fBoostWeights.push_back(0.0100125);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635486,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538574,-99) , 
4, 1.59703, 1, 0, 0.679554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412178,-99) , 
9, 395.766, 1, 0, 0.536436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.26367,-99) , 
4, 1.74795, 1, 0, 0.512892,-99) , 
8, 0.312014, 1, 0, 0.552921,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401288,-99) , 
3, 0.997623, 1, 0, 0.505842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316747,-99) , 
9, 32.2002, 0, 0, 0.489917,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255539,-99) , 
10, 0.184186, 0, 0, 0.393071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0791748,-99) , 
7, 117.625, 1, 0, 0.38049,-99) , 
5, 1.85253, 1, 0, 0.465652,-99) , 
10, 0.115848, 1, 0, 0.493906,-99) , 
9, 20.9874, 1, 0, 0.502582,-99)    );
  // itree = 1173
  fBoostWeights.push_back(0.00552422);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631472,-99) , 
3, 0.987679, 1, 0, 0.699943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492077,-99) , 
5, 1.51817, 1, 0, 0.620398,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607218,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503917,-99) , 
11, 6.39912, 0, 0, 0.514038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249941,-99) , 
4, 1.5405, 1, 0, 0.386651,-99) , 
9, 401.856, 1, 0, 0.505791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240358,-99) , 
3, 0.999784, 1, 0, 0.501218,-99) , 
4, 0.381147, 1, 0, 0.512776,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31695,-99) , 
3, 0.992228, 0, 0, 0.393552,-99) , 
5, 0.746446, 0, 0, 0.503261,-99)    );
  // itree = 1174
  fBoostWeights.push_back(0.0105412);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500704,-99) , 
10, 0.184325, 0, 0, 0.624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422433,-99) , 
1, 33.5, 1, 0, 0.594707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430764,-99) , 
7, 22.0183, 0, 0, 0.566297,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408341,-99) , 
5, 1.15809, 0, 0, 0.508861,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274693,-99) , 
2, 12.5, 0, 0, 0.389071,-99) , 
7, 25.5511, 1, 0, 0.495513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199638,-99) , 
0, 26.5, 1, 0, 0.488136,-99) , 
2, 16.5, 0, 0, 0.513294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624492,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289951,-99) , 
0, 64.5, 0, 0, 0.38192,-99) , 
9, 77.9625, 1, 0, 0.468769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0973745,-99) , 
1, 17.5, 0, 0, 0.415922,-99) , 
7, 62.0507, 1, 0, 0.501901,-99)    );
  // itree = 1175
  fBoostWeights.push_back(0.011894);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572979,-99) , 
7, 9.57255, 0, 0, 0.643394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381722,-99) , 
0, 16.5, 1, 0, 0.588159,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685669,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527863,-99) , 
5, 1.26411, 1, 0, 0.570296,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414963,-99) , 
11, -0.814044, 1, 0, 0.470678,-99) , 
6, 0.28743, 1, 0, 0.500566,-99) , 
10, 0.0972343, 1, 0, 0.521293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348043,-99) , 
9, 466.593, 1, 0, 0.515353,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493486,-99) , 
2, 17.5, 0, 0, 0.574456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373294,-99) , 
4, 1.56581, 0, 0, 0.506316,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510961,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18221,-99) , 
9, 375.123, 0, 0, 0.236776,-99) , 
9, 43.1034, 1, 0, 0.348453,-99) , 
8, 0.407643, 1, 0, 0.429748,-99) , 
5, 1.93414, 1, 0, 0.499154,-99)    );
  // itree = 1176
  fBoostWeights.push_back(0.00645824);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67017,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502706,-99) , 
6, 0.532798, 1, 0, 0.567437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245196,-99) , 
7, 109.482, 1, 0, 0.494012,-99) , 
5, 1.34643, 1, 0, 0.51733,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38801,-99) , 
9, 21.9858, 1, 0, 0.517978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259771,-99) , 
3, 0.989683, 0, 0, 0.348491,-99) , 
12, 2855.08, 0, 0, 0.436638,-99) , 
9, 33.0018, 0, 0, 0.508208,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284552,-99) , 
1, 83.5, 1, 0, 0.504475,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137165,-99) , 
5, 2.57019, 1, 0, 0.502362,-99)    );
  // itree = 1177
  fBoostWeights.push_back(0.0060437);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647143,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0506298,-99) , 
7, 95.3315, 1, 0, 0.50968,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29286,-99) , 
2, 24.5, 0, 0, 0.436691,-99) , 
1, 20.5, 1, 0, 0.49304,-99) , 
8, 0.0757847, 1, 0, 0.500496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375861,-99) , 
4, -0.145641, 0, 0, 0.49207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324644,-99) , 
4, 2.02312, 1, 0, 0.486321,-99)    );
  // itree = 1178
  fBoostWeights.push_back(0.00812985);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.77992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533152,-99) , 
1, 68.5, 1, 0, 0.662678,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267482,-99) , 
1, 26.5, 0, 0, 0.625481,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663035,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467609,-99) , 
12, -642.6, 1, 0, 0.529621,-99) , 
12, 6359.14, 0, 0, 0.567968,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408866,-99) , 
5, 1.11067, 0, 0, 0.49344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209745,-99) , 
0, 28.5, 1, 0, 0.487794,-99) , 
2, 20.5, 0, 0, 0.505081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154861,-99) , 
4, 0.993111, 1, 0, 0.336352,-99) , 
7, 64.9334, 1, 0, 0.494588,-99) , 
2, 55.5, 0, 0, 0.502621,-99)    );
  // itree = 1179
  fBoostWeights.push_back(0.0120692);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745824,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546205,-99) , 
6, 0.165592, 1, 0, 0.575668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416576,-99) , 
5, 1.01896, 0, 0, 0.547273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347877,-99) , 
8, 2.74022, 1, 0, 0.529939,-99) , 
3, 0.902262, 1, 0, 0.558168,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476013,-99) , 
3, 0.992726, 1, 0, 0.578019,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493356,-99) , 
1, 19.5, 1, 0, 0.540243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312993,-99) , 
7, 21.8777, 1, 0, 0.448794,-99) , 
0, 20.5, 0, 0, 0.490474,-99) , 
4, 1.33146, 0, 0, 0.508488,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43379,-99) , 
12, 6736.33, 0, 0, 0.468985,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.156281,-99) , 
2, 12.5, 0, 0, 0.310255,-99) , 
6, 0.172613, 0, 0, 0.432403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201889,-99) , 
0, 56.5, 1, 0, 0.415102,-99) , 
5, 1.68727, 1, 0, 0.472224,-99) , 
13, 1.5, 0, 0, 0.49913,-99)    );
  // itree = 1180
  fBoostWeights.push_back(0.0117399);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514864,-99) , 
0, 13.5, 0, 0, 0.587417,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420464,-99) , 
11, -1.1978, 1, 0, 0.488934,-99) , 
7, 38.7008, 1, 0, 0.562989,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575343,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346968,-99) , 
10, 0.418572, 0, 0, 0.406402,-99) , 
9, 152.142, 0, 0, 0.47101,-99) , 
8, 0.844042, 0, 0, 0.535511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355024,-99) , 
6, 0.0734111, 1, 0, 0.413857,-99) , 
4, 0.0186188, 0, 0, 0.518662,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607317,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344471,-99) , 
6, 0.960593, 1, 0, 0.54941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360217,-99) , 
5, 2.03499, 0, 0, 0.417244,-99) , 
4, 1.62214, 0, 0, 0.481059,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146314,-99) , 
5, 2.25286, 1, 0, 0.423335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395751,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138055,-99) , 
7, 13.7067, 1, 0, 0.251503,-99) , 
6, 0.727341, 1, 0, 0.378518,-99) , 
8, 0.626792, 1, 0, 0.425502,-99) , 
9, 24.3405, 1, 0, 0.443103,-99) , 
5, 1.66207, 1, 0, 0.485885,-99)    );
  // itree = 1181
  fBoostWeights.push_back(0.012863);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787854,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54637,-99) , 
3, 0.995031, 0, 0, 0.593874,-99) , 
4, 0.46091, 1, 0, 0.637604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491953,-99) , 
5, 0.72073, 0, 0, 0.59105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396344,-99) , 
2, 12.5, 0, 0, 0.53891,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55901,-99) , 
9, 231.89, 1, 0, 0.633143,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34432,-99) , 
12, 2797.5, 1, 0, 0.508299,-99) , 
11, -1.51732, 1, 0, 0.547583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443565,-99) , 
6, 0.584342, 1, 0, 0.522923,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224743,-99) , 
7, 25.3935, 1, 0, 0.394298,-99) , 
1, 15.5, 0, 0, 0.452469,-99) , 
10, 0.107844, 1, 0, 0.486134,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255338,-99) , 
11, 6.50618, 0, 0, 0.341658,-99) , 
3, 0.998898, 1, 0, 0.472184,-99) , 
5, 1.28972, 1, 0, 0.490851,-99)    );
  // itree = 1182
  fBoostWeights.push_back(0.00911416);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648132,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398684,-99) , 
1, 17.5, 0, 0, 0.63938,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318454,-99) , 
7, 35.9945, 1, 0, 0.484429,-99) , 
0, 31.5, 0, 0, 0.497357,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395048,-99) , 
4, 1.10033, 1, 0, 0.516809,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434773,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239936,-99) , 
11, 0.308482, 0, 0, 0.322267,-99) , 
2, 46.5, 0, 0, 0.411771,-99) , 
1, 27.5, 1, 0, 0.484156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287848,-99) , 
9, 24.0979, 0, 0, 0.477313,-99) , 
9, 16.161, 1, 0, 0.482236,-99)    );
  // itree = 1183
  fBoostWeights.push_back(0.00964359);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632129,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629216,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467603,-99) , 
10, 0.255738, 1, 0, 0.515516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352954,-99) , 
8, 0.347899, 0, 0, 0.499086,-99) , 
5, 1.4854, 0, 0, 0.517396,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487273,-99) , 
1, 10.5, 0, 0, 0.608508,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273566,-99) , 
7, 10.1104, 0, 0, 0.464224,-99) , 
12, 366.114, 1, 0, 0.509437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362765,-99) , 
11, 3.16155, 0, 0, 0.397061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111497,-99) , 
0, 45.5, 1, 0, 0.378983,-99) , 
8, 0.660009, 1, 0, 0.439051,-99) , 
5, 1.5542, 1, 0, 0.479159,-99) , 
9, 21.0158, 1, 0, 0.486997,-99)    );
  // itree = 1184
  fBoostWeights.push_back(0.00875892);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.766489,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438784,-99) , 
10, 0.201868, 1, 0, 0.55264,-99) , 
1, 24.5, 0, 0, 0.603285,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.36377, 1, 0, 0.536462,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.806279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443746,-99) , 
5, 2.33157, 0, 0, 0.465303,-99) , 
7, 28.8611, 1, 0, 0.513554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544723,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198645,-99) , 
1, 13.5, 0, 0, 0.307396,-99) , 
12, 2643.12, 1, 0, 0.409765,-99) , 
6, 0.140272, 0, 0, 0.502891,-99) , 
4, 0.390147, 1, 0, 0.513954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36126,-99) , 
5, 0.526478, 0, 0, 0.507608,-99)    );
  // itree = 1185
  fBoostWeights.push_back(0.0083259);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580566,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40234,-99) , 
2, 10.5, 0, 0, 0.545935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301414,-99) , 
3, 0.948455, 0, 0, 0.516658,-99) , 
3, 0.902122, 1, 0, 0.550954,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429692,-99) , 
6, 0.811716, 1, 0, 0.485724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209383,-99) , 
7, 188.592, 1, 0, 0.480075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225872,-99) , 
3, 0.702259, 0, 0, 0.473215,-99) , 
13, 1.5, 0, 0, 0.496305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224613,-99) , 
10, 0.023006, 0, 0, 0.490904,-99)    );
  // itree = 1186
  fBoostWeights.push_back(0.00545267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696298,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444278,-99) , 
5, 1.12433, 0, 0, 0.506233,-99) , 
12, 21086.7, 0, 0, 0.511415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360674,-99) , 
9, 460.99, 1, 0, 0.503317,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141953,-99) , 
0, 11.5, 1, 0, 0.345058,-99) , 
7, 8.72787, 0, 0, 0.493969,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399641,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242029,-99) , 
5, 1.62967, 1, 0, 0.345301,-99) , 
8, 2.89273, 1, 0, 0.484017,-99)    );
  // itree = 1187
  fBoostWeights.push_back(0.00935262);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52372,-99) , 
7, 13.0822, 1, 0, 0.545683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413057,-99) , 
12, 332.396, 1, 0, 0.456981,-99) , 
5, 1.90659, 1, 0, 0.530791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299718,-99) , 
2, 6.5, 0, 0, 0.525357,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562001,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312904,-99) , 
9, 153.872, 0, 0, 0.42055,-99) , 
1, 14.5, 0, 0, 0.490917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225009,-99) , 
9, 42.0947, 0, 0, 0.438801,-99) , 
8, 0.283379, 0, 0, 0.510728,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590805,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377875,-99) , 
3, 0.998875, 0, 0, 0.477739,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196134,-99) , 
9, 62.4035, 1, 0, 0.300748,-99) , 
13, 1.5, 0, 0, 0.353573,-99) , 
10, 0.173869, 1, 0, 0.4032,-99) , 
12, 20026.3, 0, 0, 0.422566,-99) , 
3, 0.997475, 1, 0, 0.492123,-99)    );
  // itree = 1188
  fBoostWeights.push_back(0.00703117);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70982,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631952,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391208,-99) , 
5, 1.82197, 0, 0, 0.47644,-99) , 
11, -0.253284, 1, 0, 0.55313,-99) , 
11, 0.476617, 0, 0, 0.597304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165095,-99) , 
5, 2.2938, 1, 0, 0.583431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491743,-99) , 
9, 88.2546, 1, 0, 0.550188,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489923,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354728,-99) , 
7, 34.2211, 1, 0, 0.476423,-99) , 
2, 25.5, 0, 0, 0.491175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0907064,-99) , 
7, 231.989, 1, 0, 0.488885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237475,-99) , 
1, 68.5, 1, 0, 0.48282,-99) , 
3, 0.903121, 1, 0, 0.497514,-99)    );
  // itree = 1189
  fBoostWeights.push_back(0.00692733);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675143,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688278,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517258,-99) , 
8, 0.076513, 1, 0, 0.528785,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387781,-99) , 
8, 2.03408, 0, 0, 0.443718,-99) , 
9, 68.7131, 0, 0, 0.501273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218691,-99) , 
7, 106.923, 1, 0, 0.495443,-99) , 
2, 64.5, 0, 0, 0.503043,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342961,-99) , 
5, 1.55107, 1, 0, 0.41078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189027,-99) , 
7, 86.5004, 1, 0, 0.386121,-99) , 
3, 0.999105, 1, 0, 0.493939,-99)    );
  // itree = 1190
  fBoostWeights.push_back(0.00520822);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688877,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518432,-99) , 
3, 0.988053, 1, 0, 0.574176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457057,-99) , 
10, 0.0538983, 1, 0, 0.470829,-99) , 
6, 1.01681, 0, 0, 0.480918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.12182,-99) , 
7, 143.545, 1, 0, 0.47726,-99) , 
2, 86.5, 0, 0, 0.482929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242276,-99) , 
1, 5.5, 0, 0, 0.476928,-99)    );
  // itree = 1191
  fBoostWeights.push_back(0.0100135);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563841,-99) , 
4, 1.39149, 1, 0, 0.700343,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526333,-99) , 
8, 0.943987, 0, 0, 0.625341,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348216,-99) , 
12, 8716.61, 1, 0, 0.540182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294312,-99) , 
8, 2.27073, 1, 0, 0.499408,-99) , 
9, 84.8349, 1, 0, 0.552234,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462123,-99) , 
7, 15.0384, 0, 0, 0.497757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352144,-99) , 
5, 2.18042, 1, 0, 0.48843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486943,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110604,-99) , 
10, 0.234399, 0, 0, 0.230455,-99) , 
5, 1.27886, 1, 0, 0.33969,-99) , 
7, 28.8482, 1, 0, 0.468332,-99) , 
2, 21.5, 0, 0, 0.490061,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249113,-99) , 
1, 83.5, 1, 0, 0.485878,-99)    );
  // itree = 1192
  fBoostWeights.push_back(0.0139114);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523094,-99) , 
7, 58.7701, 1, 0, 0.655045,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623514,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414471,-99) , 
9, 105.414, 1, 0, 0.520137,-99) , 
1, 29.5, 1, 0, 0.578585,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475553,-99) , 
3, 0.997472, 1, 0, 0.583064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567138,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390538,-99) , 
7, 27.4928, 1, 0, 0.52552,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302132,-99) , 
8, 0.519981, 0, 0, 0.435284,-99) , 
9, 152.58, 0, 0, 0.470159,-99) , 
12, 6901.19, 0, 0, 0.492829,-99) , 
2, 24.5, 0, 0, 0.513033,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702749,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682153,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312107,-99) , 
8, 0.235951, 1, 0, 0.385715,-99) , 
1, 27.5, 0, 0, 0.438926,-99) , 
11, -5.86857, 1, 0, 0.484462,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528542,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287352,-99) , 
10, 0.260835, 0, 0, 0.368457,-99) , 
7, 12.0601, 1, 0, 0.420027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128713,-99) , 
7, 35.7889, 1, 0, 0.376711,-99) , 
5, 1.96445, 0, 0, 0.429269,-99) , 
4, 1.4903, 1, 0, 0.489645,-99)    );
  // itree = 1193
  fBoostWeights.push_back(0.00592074);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651227,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52893,-99) , 
6, 0.598832, 1, 0, 0.597747,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404481,-99) , 
10, 0.452367, 1, 0, 0.49743,-99) , 
2, 24.5, 0, 0, 0.513843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337993,-99) , 
1, 41.5, 1, 0, 0.506889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202499,-99) , 
7, 107.304, 1, 0, 0.50098,-99) , 
2, 66.5, 0, 0, 0.506844,-99)    );
  // itree = 1194
  fBoostWeights.push_back(0.00820579);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433796,-99) , 
7, 180.309, 1, 0, 0.647833,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449025,-99) , 
8, 2.50151, 1, 0, 0.616805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356222,-99) , 
1, 34.5, 1, 0, 0.481087,-99) , 
13, 0.5, 0, 0, 0.576951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277246,-99) , 
1, 10.5, 0, 0, 0.56475,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400508,-99) , 
7, 9.05316, 0, 0, 0.519914,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314304,-99) , 
6, 0.527579, 0, 0, 0.393592,-99) , 
9, 31.4167, 0, 0, 0.508284,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349045,-99) , 
7, 40.8466, 1, 0, 0.49981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146607,-99) , 
0, 36.5, 1, 0, 0.492502,-99) , 
2, 24.5, 0, 0, 0.508609,-99)    );
  // itree = 1195
  fBoostWeights.push_back(0.0108448);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578705,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479873,-99) , 
6, 0.930867, 1, 0, 0.55746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254107,-99) , 
6, 0.507145, 0, 0, 0.422438,-99) , 
9, 30.1403, 0, 0, 0.544086,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435971,-99) , 
10, 0.126359, 1, 0, 0.533088,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.199841,-99) , 
3, 0.970005, 0, 0, 0.368684,-99) , 
4, 1.29811, 1, 0, 0.448822,-99) , 
1, 9.5, 0, 0, 0.524017,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495062,-99) , 
10, 0.378367, 1, 0, 0.579065,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395998,-99) , 
2, 16.5, 0, 0, 0.47491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198243,-99) , 
4, 1.11381, 1, 0, 0.292828,-99) , 
11, 6.73116, 0, 0, 0.369881,-99) , 
11, -5.16729, 1, 0, 0.434396,-99) , 
3, 0.997491, 1, 0, 0.506074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364583,-99) , 
4, -0.179889, 0, 0, 0.496411,-99)    );
  // itree = 1196
  fBoostWeights.push_back(0.00908315);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534531,-99) , 
8, 1.72487, 1, 0, 0.613721,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.79062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533643,-99) , 
4, 1.66325, 0, 0, 0.545555,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449882,-99) , 
0, 33.5, 0, 0, 0.474258,-99) , 
6, 0.593166, 1, 0, 0.522788,-99) , 
6, 1.0074, 0, 0, 0.534621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352372,-99) , 
1, 71.5, 1, 0, 0.528833,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585846,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578231,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220389,-99) , 
9, 74.5672, 1, 0, 0.293708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0528401,-99) , 
10, 0.383158, 1, 0, 0.252859,-99) , 
9, 29.4532, 1, 0, 0.315984,-99) , 
2, 29.5, 0, 0, 0.377505,-99) , 
4, 1.77576, 1, 0, 0.512694,-99)    );
  // itree = 1197
  fBoostWeights.push_back(0.00738841);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.792451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604756,-99) , 
5, 1.60264, 1, 0, 0.718598,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631717,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425552,-99) , 
0, 67.5, 0, 0, 0.516949,-99) , 
1, 34.5, 1, 0, 0.612527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393581,-99) , 
7, 142.839, 1, 0, 0.572854,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470426,-99) , 
3, 0.991153, 1, 0, 0.50687,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340086,-99) , 
5, 2.3205, 1, 0, 0.502341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292057,-99) , 
1, 30.5, 1, 0, 0.49714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111607,-99) , 
7, 63.78, 1, 0, 0.49019,-99) , 
2, 30.5, 0, 0, 0.503898,-99)    );
  // itree = 1198
  fBoostWeights.push_back(0.00820901);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575069,-99) , 
8, 1.29652, 1, 0, 0.652786,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471309,-99) , 
0, 14.5, 1, 0, 0.535642,-99) , 
5, 1.34416, 1, 0, 0.572193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358975,-99) , 
10, 0.505649, 1, 0, 0.561898,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497817,-99) , 
3, 0.968646, 1, 0, 0.513609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267556,-99) , 
4, 1.72125, 1, 0, 0.41745,-99) , 
3, 0.954273, 0, 0, 0.489993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31593,-99) , 
10, 0.0993073, 0, 0, 0.477216,-99) , 
9, 158.571, 0, 0, 0.504323,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298356,-99) , 
9, 488.15, 1, 0, 0.495906,-99)    );
  // itree = 1199
  fBoostWeights.push_back(0.00862935);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574066,-99) , 
8, 1.99434, 1, 0, 0.659506,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404627,-99) , 
4, 1.59679, 1, 0, 0.519209,-99) , 
0, 10.5, 1, 0, 0.535167,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31657,-99) , 
9, 422.283, 1, 0, 0.549218,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488321,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357667,-99) , 
6, 0.449297, 1, 0, 0.421388,-99) , 
9, 170.997, 0, 0, 0.468651,-99) , 
8, 0.871378, 0, 0, 0.509324,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243239,-99) , 
1, 84.5, 1, 0, 0.505097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271605,-99) , 
7, 7.48833, 0, 0, 0.498279,-99)    );
  // itree = 1200
  fBoostWeights.push_back(0.0150392);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701037,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.786163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568915,-99) , 
4, 1.69345, 0, 0, 0.654477,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458296,-99) , 
6, 0.905157, 0, 0, 0.507083,-99) , 
12, 5991.77, 0, 0, 0.552424,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40363,-99) , 
8, 1.738, 0, 0, 0.519274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240014,-99) , 
7, 16.5982, 1, 0, 0.449332,-99) , 
2, 12.5, 0, 0, 0.514923,-99) , 
9, 68.7232, 0, 0, 0.536041,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582039,-99) , 
0, 17.5, 0, 0, 0.619039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452618,-99) , 
1, 25.5, 1, 0, 0.57709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487163,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.164516,-99) , 
4, 1.34825, 1, 0, 0.418969,-99) , 
8, 1.67546, 1, 0, 0.525942,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46308,-99) , 
4, 0.765143, 1, 0, 0.517107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371867,-99) , 
3, 0.998039, 1, 0, 0.490726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508308,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24527,-99) , 
9, 256.327, 0, 0, 0.31013,-99) , 
8, 0.23747, 1, 0, 0.365858,-99) , 
5, 1.67058, 1, 0, 0.444995,-99) , 
13, 1.5, 0, 0, 0.470153,-99) , 
9, 77.3207, 1, 0, 0.495409,-99)    );
  // itree = 1201
  fBoostWeights.push_back(0.00383511);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
0, 10.5, 1, 0, 0.516214,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353098,-99) , 
0, 36.5, 0, 0, 0.429098,-99) , 
5, 0.827392, 0, 0, 0.507761,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181436,-99) , 
4, 2.19948, 1, 0, 0.505392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295158,-99) , 
3, 0.69301, 0, 0, 0.501199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221733,-99) , 
5, 2.53076, 1, 0, 0.499003,-99)    );
  // itree = 1202
  fBoostWeights.push_back(0.00526866);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662538,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608933,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438779,-99) , 
1, 11.5, 0, 0, 0.485194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313912,-99) , 
3, 0.999397, 1, 0, 0.477728,-99) , 
11, 8.98254, 0, 0, 0.484655,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236974,-99) , 
12, 4746.45, 0, 0, 0.352862,-99) , 
9, 29.8422, 0, 0, 0.476077,-99) , 
9, 18.3171, 1, 0, 0.483288,-99)    );
  // itree = 1203
  fBoostWeights.push_back(0.00789202);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656098,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.749478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573188,-99) , 
10, 0.0869577, 0, 0, 0.663048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391677,-99) , 
4, 0.166808, 0, 0, 0.491637,-99) , 
10, 0.175016, 1, 0, 0.551458,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488667,-99) , 
5, 2.08167, 0, 0, 0.592612,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.193135,-99) , 
5, 2.3548, 1, 0, 0.454412,-99) , 
8, 0.112619, 1, 0, 0.468155,-99) , 
4, 0.666339, 1, 0, 0.486546,-99) , 
9, 18.2655, 1, 0, 0.493077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232575,-99) , 
2, 6.5, 0, 0, 0.487812,-99)    );
  // itree = 1204
  fBoostWeights.push_back(0.0118732);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675041,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474813,-99) , 
11, -0.998127, 0, 0, 0.596676,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344727,-99) , 
6, 0.417797, 0, 0, 0.43048,-99) , 
7, 24.2178, 1, 0, 0.535567,-99) , 
0, 36.5, 0, 0, 0.561183,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533489,-99) , 
7, 11.5411, 1, 0, 0.6239,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416879,-99) , 
4, 1.06275, 0, 0, 0.515177,-99) , 
11, -0.997755, 1, 0, 0.560442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43066,-99) , 
0, 43.5, 1, 0, 0.513261,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260064,-99) , 
3, 0.983321, 1, 0, 0.332621,-99) , 
7, 18.1731, 0, 0, 0.466721,-99) , 
0, 13.5, 1, 0, 0.49686,-99) , 
13, 1.5, 0, 0, 0.515332,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407875,-99) , 
9, 153.06, 0, 0, 0.534095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301464,-99) , 
8, 0.303982, 1, 0, 0.424816,-99) , 
5, 2.08843, 1, 0, 0.505742,-99)    );
  // itree = 1205
  fBoostWeights.push_back(0.0100907);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42878,-99) , 
1, 7.5, 0, 0, 0.529095,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602055,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312872,-99) , 
9, 108.483, 1, 0, 0.442758,-99) , 
6, 0.929144, 1, 0, 0.517997,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311182,-99) , 
0, 55.5, 1, 0, 0.512307,-99) , 
6, 1.01663, 0, 0, 0.523757,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507759,-99) , 
9, 35.9456, 0, 0, 0.605592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394615,-99) , 
9, 85.4079, 1, 0, 0.523511,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569606,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337593,-99) , 
9, 42.9549, 0, 0, 0.414645,-99) , 
9, 21.0158, 1, 0, 0.446358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186355,-99) , 
7, 44.2852, 1, 0, 0.40191,-99) , 
2, 29.5, 0, 0, 0.447538,-99) , 
10, 0.405893, 1, 0, 0.499787,-99)    );
  // itree = 1206
  fBoostWeights.push_back(0.0126258);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.736375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472306,-99) , 
8, 1.58156, 1, 0, 0.640372,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664404,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527409,-99) , 
7, 28.3115, 1, 0, 0.61926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450623,-99) , 
8, 0.467244, 0, 0, 0.576256,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617872,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396028,-99) , 
7, 8.68805, 0, 0, 0.559874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32163,-99) , 
2, 12.5, 0, 0, 0.423786,-99) , 
7, 11.9819, 1, 0, 0.45831,-99) , 
11, -0.690896, 1, 0, 0.511099,-99) , 
11, 4.44547, 0, 0, 0.528205,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657727,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41181,-99) , 
3, 0.993632, 1, 0, 0.485986,-99) , 
11, -7.73714, 1, 0, 0.500548,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565919,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0836532,-99) , 
2, 23.5, 0, 0, 0.329491,-99) , 
6, 1.03066, 0, 0, 0.401807,-99) , 
0, 26.5, 1, 0, 0.473814,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264814,-99) , 
6, 0.800146, 1, 0, 0.319185,-99) , 
3, 0.919797, 0, 0, 0.455342,-99) , 
6, 0.560969, 1, 0, 0.493465,-99)    );
  // itree = 1207
  fBoostWeights.push_back(0.00743943);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610951,-99) , 
3, 0.992851, 0, 0, 0.689755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499162,-99) , 
1, 71.5, 1, 0, 0.638224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220688,-99) , 
1, 22.5, 0, 0, 0.594274,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644719,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359958,-99) , 
7, 37.304, 1, 0, 0.48717,-99) , 
2, 29.5, 0, 0, 0.494482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345022,-99) , 
1, 30.5, 1, 0, 0.48698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166136,-99) , 
7, 74.2963, 1, 0, 0.479089,-99) , 
2, 42.5, 0, 0, 0.490382,-99)    );
  // itree = 1208
  fBoostWeights.push_back(0.00988899);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677983,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452095,-99) , 
5, 1.54965, 1, 0, 0.525193,-99) , 
6, 0.204976, 1, 0, 0.561934,-99) , 
3, 0.901998, 1, 0, 0.591273,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278667,-99) , 
5, 2.06605, 1, 0, 0.408107,-99) , 
0, 12.5, 0, 0, 0.549594,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47141,-99) , 
5, 1.72447, 1, 0, 0.524986,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360887,-99) , 
6, 0.0313592, 0, 0, 0.512616,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532734,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390164,-99) , 
9, 106.635, 1, 0, 0.468573,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273563,-99) , 
6, 0.732308, 0, 0, 0.436238,-99) , 
6, 0.63059, 1, 0, 0.480744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224153,-99) , 
1, 71.5, 1, 0, 0.474587,-99) , 
13, 1.5, 0, 0, 0.497351,-99)    );
  // itree = 1209
  fBoostWeights.push_back(0.00869994);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678357,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.649806,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251888,-99) , 
4, 1.86572, 1, 0, 0.463678,-99) , 
3, 0.99911, 0, 0, 0.507318,-99) , 
13, 0.5, 1, 0, 0.572172,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637625,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444834,-99) , 
5, 1.71937, 1, 0, 0.501609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0581485,-99) , 
5, 2.34427, 1, 0, 0.496429,-99) , 
8, 0.0838873, 1, 0, 0.507023,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608765,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375916,-99) , 
7, 13.2228, 1, 0, 0.428449,-99) , 
13, 1.5, 0, 0, 0.485009,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283485,-99) , 
12, 3227.08, 1, 0, 0.361743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0668019,-99) , 
5, 2.15102, 1, 0, 0.330112,-99) , 
8, 0.971174, 0, 0, 0.427508,-99) , 
9, 55.6314, 0, 0, 0.48627,-99) , 
11, 5.46383, 0, 0, 0.497538,-99)    );
  // itree = 1210
  fBoostWeights.push_back(0.00790015);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683186,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391207,-99) , 
7, 71.2969, 1, 0, 0.529533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365837,-99) , 
6, 0.364278, 1, 0, 0.516866,-99) , 
6, 0.394886, 0, 0, 0.536342,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475923,-99) , 
1, 15.5, 0, 0, 0.5823,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395384,-99) , 
6, 0.944589, 1, 0, 0.483479,-99) , 
6, 1.01497, 0, 0, 0.504084,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.192403,-99) , 
1, 23.5, 0, 0, 0.298245,-99) , 
1, 14.5, 1, 0, 0.389166,-99) , 
3, 0.941219, 0, 0, 0.483683,-99) , 
6, 0.457484, 1, 0, 0.506532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345301,-99) , 
3, 0.99947, 1, 0, 0.4991,-99)    );
  // itree = 1211
  fBoostWeights.push_back(0.00717063);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520037,-99) , 
11, -3.63251, 1, 0, 0.540907,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255689,-99) , 
0, 14.5, 1, 0, 0.469797,-99) , 
7, 12.6408, 0, 0, 0.520558,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432814,-99) , 
4, 1.10583, 1, 0, 0.517414,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0470112,-99) , 
7, 76.0083, 1, 0, 0.367586,-99) , 
2, 33.5, 0, 0, 0.452059,-99) , 
7, 40.0941, 1, 0, 0.504869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.331203,-99) , 
5, 2.30656, 1, 0, 0.499725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263086,-99) , 
3, 0.999709, 1, 0, 0.494857,-99)    );
  // itree = 1212
  fBoostWeights.push_back(0.01176);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543187,-99) , 
7, 21.6969, 1, 0, 0.636129,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632536,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423542,-99) , 
2, 11.5, 1, 0, 0.496049,-99) , 
5, 1.60518, 1, 0, 0.545912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399106,-99) , 
4, 0.828614, 0, 0, 0.520291,-99) , 
6, 0.197716, 1, 0, 0.546839,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530061,-99) , 
8, 1.42505, 1, 0, 0.614169,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419648,-99) , 
2, 11.5, 0, 0, 0.478834,-99) , 
6, 0.62994, 1, 0, 0.552016,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44481,-99) , 
3, 0.984815, 1, 0, 0.485978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324113,-99) , 
8, 0.384879, 0, 0, 0.462842,-99) , 
10, 0.129684, 1, 0, 0.496503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262849,-99) , 
3, 0.982725, 0, 0, 0.400853,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.094856,-99) , 
0, 28.5, 1, 0, 0.347473,-99) , 
8, 0.0972694, 1, 0, 0.40995,-99) , 
5, 1.89393, 1, 0, 0.479169,-99) , 
13, 1.5, 0, 0, 0.499902,-99)    );
  // itree = 1213
  fBoostWeights.push_back(0.0121479);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529182,-99) , 
8, 1.30661, 0, 0, 0.590137,-99) , 
8, 0.285266, 1, 0, 0.616803,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412535,-99) , 
12, 3022.94, 0, 0, 0.486493,-99) , 
9, 45.303, 0, 0, 0.588797,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49681,-99) , 
5, 1.90133, 1, 0, 0.602761,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362579,-99) , 
6, 0.686677, 1, 0, 0.46315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228663,-99) , 
0, 16.5, 1, 0, 0.429614,-99) , 
13, 1.5, 0, 0, 0.480467,-99) , 
2, 12.5, 0, 0, 0.542232,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698982,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527357,-99) , 
6, 0.668365, 1, 0, 0.608746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450926,-99) , 
4, 1.65834, 0, 0, 0.479962,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217357,-99) , 
5, 1.50463, 1, 0, 0.377325,-99) , 
7, 39.7866, 1, 0, 0.45769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216169,-99) , 
8, 2.91717, 1, 0, 0.444347,-99) , 
12, -6291.7, 1, 0, 0.471264,-99) , 
3, 0.989102, 1, 0, 0.508703,-99)    );
  // itree = 1214
  fBoostWeights.push_back(0.00929741);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579821,-99) , 
3, 0.98873, 1, 0, 0.628954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473127,-99) , 
8, 2.65104, 1, 0, 0.597085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411745,-99) , 
9, 91.0886, 0, 0, 0.502716,-99) , 
6, 0.996339, 1, 0, 0.570629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390052,-99) , 
8, 0.324713, 0, 0, 0.550284,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600152,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469552,-99) , 
9, 26.4005, 1, 0, 0.482413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.172407,-99) , 
1, 62.5, 1, 0, 0.475022,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171622,-99) , 
0, 11.5, 1, 0, 0.340696,-99) , 
7, 9.68888, 0, 0, 0.458861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285659,-99) , 
3, 0.999331, 1, 0, 0.449029,-99) , 
5, 1.49839, 1, 0, 0.492949,-99)    );
  // itree = 1215
  fBoostWeights.push_back(0.0125675);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483206,-99) , 
6, 0.672915, 1, 0, 0.624939,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472254,-99) , 
11, -0.40597, 1, 0, 0.637949,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511909,-99) , 
6, 0.116829, 1, 0, 0.534224,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368761,-99) , 
3, 0.987132, 1, 0, 0.437787,-99) , 
5, 1.50933, 1, 0, 0.484259,-99) , 
5, 2.21885, 0, 0, 0.496887,-99) , 
11, 5.58312, 0, 0, 0.513253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49395,-99) , 
9, 127.421, 0, 0, 0.590292,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394318,-99) , 
8, 2.20467, 0, 0, 0.432331,-99) , 
7, 10.6346, 1, 0, 0.484927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327546,-99) , 
7, 8.41081, 0, 0, 0.452893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153465,-99) , 
0, 14.5, 1, 0, 0.422368,-99) , 
2, 10.5, 0, 0, 0.491197,-99)    );
  // itree = 1216
  fBoostWeights.push_back(0.00904794);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453085,-99) , 
7, 65.2842, 1, 0, 0.574436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412138,-99) , 
12, -3128.95, 1, 0, 0.476312,-99) , 
12, 2177.3, 0, 0, 0.533762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343699,-99) , 
1, 8.5, 0, 0, 0.520426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445085,-99) , 
4, 1.38101, 0, 0, 0.48984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340616,-99) , 
5, 2.0774, 1, 0, 0.47248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231286,-99) , 
7, 24.8784, 1, 0, 0.45252,-99) , 
2, 12.5, 0, 0, 0.492895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291373,-99) , 
1, 69.5, 1, 0, 0.487874,-99)    );
  // itree = 1217
  fBoostWeights.push_back(0.00930103);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547996,-99) , 
7, 29.5601, 1, 0, 0.600168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493472,-99) , 
7, 17.6039, 0, 0, 0.569379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460366,-99) , 
5, 0.720201, 0, 0, 0.549801,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546598,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442733,-99) , 
13, 1.5, 0, 0, 0.477155,-99) , 
6, 1.00227, 0, 0, 0.490121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216315,-99) , 
7, 142.553, 1, 0, 0.485155,-99) , 
5, 1.50531, 1, 0, 0.513193,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476918,-99) , 
1, 9.5, 1, 0, 0.569528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296837,-99) , 
5, 1.88279, 1, 0, 0.517756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27465,-99) , 
12, -773.281, 0, 0, 0.466758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19361,-99) , 
0, 13.5, 1, 0, 0.426922,-99) , 
2, 9.5, 0, 0, 0.498734,-99)    );
  // itree = 1218
  fBoostWeights.push_back(0.00799502);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770036,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645819,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419422,-99) , 
12, 2697.55, 1, 0, 0.535891,-99) , 
5, 1.4978, 1, 0, 0.607656,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668145,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397084,-99) , 
1, 10.5, 0, 0, 0.508893,-99) , 
8, 1.32625, 0, 0, 0.575423,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507967,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431533,-99) , 
8, 2.15425, 1, 0, 0.486246,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327647,-99) , 
7, 8.6581, 1, 0, 0.377452,-99) , 
5, 1.97488, 1, 0, 0.4721,-99) , 
12, -4915.14, 1, 0, 0.484376,-99) , 
6, 0.0729827, 1, 0, 0.495221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22571,-99) , 
5, 2.36561, 1, 0, 0.490085,-99)    );
  // itree = 1219
  fBoostWeights.push_back(0.0120451);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609522,-99) , 
5, 1.15175, 1, 0, 0.669606,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515918,-99) , 
11, 0.218591, 0, 0, 0.606524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461814,-99) , 
4, 0.614709, 1, 0, 0.54547,-99) , 
1, 23.5, 1, 0, 0.590729,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641338,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534994,-99) , 
3, 0.994446, 1, 0, 0.601604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430958,-99) , 
8, 2.45794, 1, 0, 0.563971,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324962,-99) , 
8, 1.46249, 0, 0, 0.419246,-99) , 
10, 0.24301, 1, 0, 0.514306,-99) , 
0, 22.5, 0, 0, 0.54658,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66096,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567492,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31478,-99) , 
9, 106.7, 1, 0, 0.436312,-99) , 
5, 1.74058, 1, 0, 0.495911,-99) , 
8, 0.268548, 1, 0, 0.535294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575123,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450739,-99) , 
7, 10.3922, 1, 0, 0.475668,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204806,-99) , 
6, 0.236692, 0, 0, 0.462256,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20158,-99) , 
8, 0.505557, 1, 0, 0.292015,-99) , 
3, 0.915464, 0, 0, 0.437248,-99) , 
13, 1.5, 0, 0, 0.468308,-99) , 
4, 1.13277, 1, 0, 0.505462,-99)    );
  // itree = 1220
  fBoostWeights.push_back(0.00968252);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416926,-99) , 
3, 0.999172, 1, 0, 0.573628,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616895,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465971,-99) , 
1, 7.5, 1, 0, 0.492787,-99) , 
2, 12.5, 0, 0, 0.539033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403323,-99) , 
9, 390.48, 1, 0, 0.529052,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509161,-99) , 
7, 18.3231, 1, 0, 0.572408,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256989,-99) , 
6, 0.535289, 0, 0, 0.523485,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654393,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431263,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305276,-99) , 
5, 1.84613, 1, 0, 0.363604,-99) , 
6, 0.312736, 1, 0, 0.386669,-99) , 
9, 47.5532, 1, 0, 0.425527,-99) , 
4, 1.52476, 1, 0, 0.501565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135041,-99) , 
1, 90.5, 1, 0, 0.49569,-99)    );
  // itree = 1221
  fBoostWeights.push_back(0.00795726);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566582,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449768,-99) , 
4, 1.79981, 1, 0, 0.552537,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311327,-99) , 
8, 2.95641, 0, 0, 0.425688,-99) , 
8, 2.80205, 1, 0, 0.540803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370571,-99) , 
9, 473.021, 1, 0, 0.532416,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461833,-99) , 
3, 0.993596, 0, 0, 0.515756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251921,-99) , 
3, 0.999087, 1, 0, 0.49057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258593,-99) , 
3, 0.853763, 0, 0, 0.466011,-99) , 
13, 0.5, 0, 0, 0.511908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31581,-99) , 
5, 0.369432, 0, 0, 0.504255,-99)    );
  // itree = 1222
  fBoostWeights.push_back(0.00959894);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538896,-99) , 
4, 0.850838, 0, 0, 0.636007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434058,-99) , 
5, 1.82228, 1, 0, 0.581942,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462957,-99) , 
7, 44.96, 1, 0, 0.555997,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355249,-99) , 
5, 1.68197, 0, 0, 0.440607,-99) , 
8, 0.535306, 0, 0, 0.527057,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407209,-99) , 
6, 0.849108, 1, 0, 0.518633,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395584,-99) , 
3, 0.807504, 1, 0, 0.419002,-99) , 
11, -2.50784, 1, 0, 0.458575,-99) , 
4, 1.21141, 1, 0, 0.49535,-99) , 
11, 3.9929, 0, 0, 0.509625,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534533,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184547,-99) , 
1, 12.5, 0, 0, 0.324906,-99) , 
7, 15.0795, 1, 0, 0.393722,-99) , 
9, 344.65, 1, 0, 0.497984,-99)    );
  // itree = 1223
  fBoostWeights.push_back(0.0116787);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545021,-99) , 
3, 0.988053, 1, 0, 0.621658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389887,-99) , 
7, 21.8871, 1, 0, 0.535029,-99) , 
2, 17.5, 0, 0, 0.553424,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387469,-99) , 
9, 103.611, 1, 0, 0.515542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368869,-99) , 
2, 12.5, 0, 0, 0.485334,-99) , 
10, 0.287216, 1, 0, 0.525343,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616327,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333906,-99) , 
8, 0.945432, 0, 0, 0.539702,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0346612,-99) , 
7, 46.4623, 1, 0, 0.323458,-99) , 
9, 50.9334, 1, 0, 0.404642,-99) , 
8, 0.0963277, 1, 0, 0.444412,-99) , 
5, 1.89433, 1, 0, 0.507636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19833,-99) , 
7, 6.99944, 0, 0, 0.50159,-99)    );
  // itree = 1224
  fBoostWeights.push_back(0.0102548);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473269,-99) , 
7, 13.0022, 0, 0, 0.566554,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323627,-99) , 
3, 0.92274, 0, 0, 0.495678,-99) , 
6, 0.603981, 1, 0, 0.534077,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307387,-99) , 
10, 0.303913, 0, 0, 0.415292,-99) , 
5, 0.858532, 0, 0, 0.519817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372086,-99) , 
8, 2.91575, 1, 0, 0.509166,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413833,-99) , 
9, 109.162, 0, 0, 0.548658,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309214,-99) , 
11, 3.6879, 1, 0, 0.422748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0654457,-99) , 
0, 33.5, 1, 0, 0.389756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185248,-99) , 
3, 0.969144, 0, 0, 0.345179,-99) , 
8, 0.192806, 1, 0, 0.4195,-99) , 
5, 1.95855, 1, 0, 0.492824,-99)    );
  // itree = 1225
  fBoostWeights.push_back(0.00847919);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646883,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.65115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412951,-99) , 
8, 0.92088, 1, 0, 0.519247,-99) , 
9, 74.5345, 1, 0, 0.565431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367502,-99) , 
0, 28.5, 1, 0, 0.508114,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231206,-99) , 
11, 0.742196, 1, 0, 0.357737,-99) , 
7, 37.753, 1, 0, 0.49172,-99) , 
2, 30.5, 0, 0, 0.504583,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391231,-99) , 
8, 0.127067, 0, 0, 0.498018,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380499,-99) , 
6, 0.377998, 0, 0, 0.513595,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516555,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255586,-99) , 
9, 73.1589, 1, 0, 0.351301,-99) , 
3, 0.942976, 1, 0, 0.393447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112304,-99) , 
5, 2.28301, 1, 0, 0.353383,-99) , 
8, 0.21712, 1, 0, 0.412212,-99) , 
5, 1.98366, 1, 0, 0.484381,-99)    );
  // itree = 1226
  fBoostWeights.push_back(0.0140057);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583111,-99) , 
5, 1.06338, 1, 0, 0.626713,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46641,-99) , 
5, 0.698174, 0, 0, 0.599932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449611,-99) , 
0, 15.5, 0, 0, 0.571191,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485723,-99) , 
9, 192.899, 1, 0, 0.577892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.257243,-99) , 
5, 2.30541, 1, 0, 0.56321,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426979,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
4, 2.06204, 1, 0, 0.413486,-99) , 
5, 2.38808, 0, 0, 0.434371,-99) , 
7, 22.6752, 1, 0, 0.484526,-99) , 
5, 1.49411, 1, 0, 0.524827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477961,-99) , 
8, 1.65471, 1, 0, 0.57248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326349,-99) , 
4, 1.71264, 1, 0, 0.544027,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395577,-99) , 
7, 11.6641, 0, 0, 0.450323,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404606,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270639,-99) , 
3, 0.984498, 1, 0, 0.332185,-99) , 
8, 0.731104, 0, 0, 0.41237,-99) , 
9, 158.226, 0, 0, 0.46561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162696,-99) , 
0, 16.5, 1, 0, 0.434342,-99) , 
7, 15.0199, 0, 0, 0.495169,-99)    );
  // itree = 1227
  fBoostWeights.push_back(0.0101509);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516885,-99) , 
4, 1.48398, 1, 0, 0.63314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0502867,-99) , 
5, 1.91823, 1, 0, 0.510446,-99) , 
8, 1.4937, 1, 0, 0.589736,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.759524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526628,-99) , 
3, 0.990286, 1, 0, 0.658995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229581,-99) , 
1, 10.5, 0, 0, 0.488456,-99) , 
6, 0.27987, 1, 0, 0.539378,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478957,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319746,-99) , 
7, 40.5023, 1, 0, 0.468373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0806311,-99) , 
0, 36.5, 1, 0, 0.458925,-99) , 
2, 24.5, 0, 0, 0.482276,-99) , 
10, 0.0843174, 1, 0, 0.501872,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435581,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280815,-99) , 
4, 1.20711, 1, 0, 0.370017,-99) , 
9, 402.141, 1, 0, 0.493,-99)    );
  // itree = 1228
  fBoostWeights.push_back(0.00929997);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526889,-99) , 
3, 0.991183, 0, 0, 0.602406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381914,-99) , 
5, 2.15171, 1, 0, 0.588806,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508494,-99) , 
9, 66.6244, 0, 0, 0.556837,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408245,-99) , 
10, 0.14497, 1, 0, 0.467706,-99) , 
9, 97.6241, 1, 0, 0.509881,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350798,-99) , 
3, 0.936695, 0, 0, 0.484255,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0522725,-99) , 
7, 11.3525, 0, 0, 0.302517,-99) , 
0, 14.5, 1, 0, 0.434503,-99) , 
7, 15.2315, 0, 0, 0.488614,-99) , 
0, 10.5, 1, 0, 0.500548,-99) , 
11, -10.6441, 1, 0, 0.507066,-99)    );
  // itree = 1229
  fBoostWeights.push_back(0.0101995);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517846,-99) , 
6, 0.67204, 1, 0, 0.604181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484831,-99) , 
4, 1.02416, 1, 0, 0.541736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369525,-99) , 
6, 0.727842, 0, 0, 0.435368,-99) , 
9, 66.2091, 0, 0, 0.505509,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397,-99) , 
6, 0.706334, 1, 0, 0.486949,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443261,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290651,-99) , 
11, 1.72101, 0, 0, 0.373113,-99) , 
11, -3.71069, 1, 0, 0.420612,-99) , 
3, 0.992864, 1, 0, 0.474567,-99) , 
11, 6.90593, 0, 0, 0.486168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287392,-99) , 
7, 7.69979, 0, 0, 0.479091,-99)    );
  // itree = 1230
  fBoostWeights.push_back(0.00976651);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548698,-99) , 
11, 1.9739, 0, 0, 0.56457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432174,-99) , 
8, 0.258068, 0, 0, 0.547681,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463082,-99) , 
1, 21.5, 1, 0, 0.549241,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345442,-99) , 
5, 1.50995, 0, 0, 0.403017,-99) , 
2, 15.5, 0, 0, 0.466833,-99) , 
12, -72.2392, 0, 0, 0.527014,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312586,-99) , 
4, 1.05937, 1, 0, 0.416316,-99) , 
8, 2.6918, 1, 0, 0.513602,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421505,-99) , 
11, -3.34542, 1, 0, 0.464158,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0561663,-99) , 
7, 9.24476, 0, 0, 0.444751,-99) , 
10, 0.0425753, 1, 0, 0.470683,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0612579,-99) , 
0, 31.5, 1, 0, 0.300712,-99) , 
5, 1.99509, 0, 0, 0.427889,-99) , 
5, 1.89492, 1, 0, 0.495738,-99)    );
  // itree = 1231
  fBoostWeights.push_back(0.00738759);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526126,-99) , 
11, 5.51777, 0, 0, 0.54382,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555973,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416513,-99) , 
4, 1.60127, 0, 0, 0.467798,-99) , 
6, 0.616638, 1, 0, 0.510526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339462,-99) , 
3, 0.755338, 0, 0, 0.50428,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420467,-99) , 
10, 0.283025, 1, 0, 0.480093,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256412,-99) , 
7, 12.3615, 1, 0, 0.363767,-99) , 
7, 18.2344, 0, 0, 0.435112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242195,-99) , 
5, 2.06591, 1, 0, 0.425788,-99) , 
8, 2.3261, 1, 0, 0.48781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306024,-99) , 
4, 2.04391, 1, 0, 0.482406,-99)    );
  // itree = 1232
  fBoostWeights.push_back(0.0050908);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58893,-99) , 
1, 13.5, 0, 0, 0.638934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474269,-99) , 
13, 0.5, 0, 0, 0.592495,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486031,-99) , 
2, 52.5, 0, 0, 0.494085,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364033,-99) , 
10, 0.0404127, 0, 0, 0.48716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280147,-99) , 
3, 0.999708, 1, 0, 0.482365,-99) , 
6, 0.0807568, 1, 0, 0.494203,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.090133,-99) , 
5, 1.97579, 1, 0, 0.337217,-99) , 
7, 8.77723, 0, 0, 0.483969,-99)    );
  // itree = 1233
  fBoostWeights.push_back(0.00423836);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44378,-99) , 
6, 0.184351, 0, 0, 0.508241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306268,-99) , 
1, 40.5, 1, 0, 0.49994,-99) , 
2, 63.5, 0, 0, 0.506454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 310.574, 1, 0, 0.504538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317987,-99) , 
3, 0.755448, 0, 0, 0.498247,-99)    );
  // itree = 1234
  fBoostWeights.push_back(0.0152762);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.731088,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54489,-99) , 
6, 0.31684, 0, 0, 0.659696,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498581,-99) , 
12, 1483.75, 1, 0, 0.541825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34515,-99) , 
7, 29.5614, 1, 0, 0.520705,-99) , 
0, 20.5, 0, 0, 0.546945,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624533,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342389,-99) , 
4, 0.7309, 1, 0, 0.463033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263069,-99) , 
1, 40.5, 1, 0, 0.414857,-99) , 
2, 56.5, 0, 0, 0.466316,-99) , 
1, 20.5, 1, 0, 0.524006,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525041,-99) , 
0, 14.5, 1, 0, 0.619258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.326087,-99) , 
4, 1.96941, 1, 0, 0.589978,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.202189,-99) , 
6, 0.509318, 0, 0, 0.489902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322094,-99) , 
9, 48.1675, 1, 0, 0.431242,-99) , 
10, 0.323359, 1, 0, 0.490242,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392694,-99) , 
8, 0.838718, 1, 0, 0.476583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234335,-99) , 
5, 1.86658, 1, 0, 0.328673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0800853,-99) , 
2, 8.5, 0, 0, 0.291057,-99) , 
12, 2365.77, 1, 0, 0.384849,-99) , 
10, 0.178232, 0, 0, 0.445259,-99) , 
4, 1.40518, 1, 0, 0.496618,-99)    );
  // itree = 1235
  fBoostWeights.push_back(0.00962816);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393772,-99) , 
1, 17.5, 0, 0, 0.617531,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531853,-99) , 
9, 162.118, 0, 0, 0.594348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472759,-99) , 
13, 1.5, 0, 0, 0.499765,-99) , 
5, 1.13909, 1, 0, 0.515823,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441199,-99) , 
9, 119.582, 1, 0, 0.532146,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310977,-99) , 
6, 0.734688, 0, 0, 0.372717,-99) , 
11, 6.22436, 0, 0, 0.444107,-99) , 
12, -950.44, 0, 0, 0.499572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437732,-99) , 
7, 26.4519, 1, 0, 0.50661,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447745,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233612,-99) , 
1, 9.5, 0, 0, 0.379905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1827,-99) , 
1, 19.5, 1, 0, 0.341588,-99) , 
5, 1.37401, 1, 0, 0.407559,-99) , 
8, 2.27153, 1, 0, 0.479413,-99) , 
10, 1.85841, 0, 0, 0.488133,-99)    );
  // itree = 1236
  fBoostWeights.push_back(0.00860973);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.787011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585242,-99) , 
4, 0.158596, 0, 0, 0.67794,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495507,-99) , 
10, 0.0769444, 0, 0, 0.605023,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5365,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360013,-99) , 
6, 0.132661, 1, 0, 0.44582,-99) , 
10, 0.229437, 1, 0, 0.529647,-99) , 
2, 29.5, 0, 0, 0.566017,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.780982,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393633,-99) , 
5, 2.08508, 1, 0, 0.483414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121815,-99) , 
7, 108.595, 1, 0, 0.478364,-99) , 
2, 68.5, 0, 0, 0.484777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145423,-99) , 
1, 70.5, 1, 0, 0.478837,-99) , 
4, 0.761015, 1, 0, 0.500433,-99)    );
  // itree = 1237
  fBoostWeights.push_back(0.0102734);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741674,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529991,-99) , 
12, 6265.98, 0, 0, 0.566212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342722,-99) , 
3, 0.84689, 0, 0, 0.488132,-99) , 
6, 0.292704, 1, 0, 0.516072,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474243,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277789,-99) , 
1, 16.5, 1, 0, 0.383495,-99) , 
9, 28.0517, 0, 0, 0.5045,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439263,-99) , 
7, 13.3382, 1, 0, 0.577004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365182,-99) , 
1, 8.5, 1, 0, 0.508075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210907,-99) , 
8, 0.739435, 1, 0, 0.273533,-99) , 
11, 5.60937, 0, 0, 0.325379,-99) , 
2, 10.5, 1, 0, 0.423784,-99) , 
1, 9.5, 0, 0, 0.485049,-99) , 
12, 23345.9, 0, 0, 0.490185,-99)    );
  // itree = 1238
  fBoostWeights.push_back(0.01041);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.758614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514028,-99) , 
4, 0.163122, 1, 0, 0.652119,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54587,-99) , 
2, 18.5, 1, 0, 0.645538,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349995,-99) , 
3, 0.999041, 1, 0, 0.508325,-99) , 
12, 10323, 0, 0, 0.524851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0394451,-99) , 
7, 41.2052, 1, 0, 0.402422,-99) , 
2, 24.5, 0, 0, 0.44313,-99) , 
5, 1.84749, 1, 0, 0.504544,-99) , 
6, 0.0723363, 1, 0, 0.517702,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382933,-99) , 
12, 2909.1, 1, 0, 0.465193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.141043,-99) , 
4, 1.82508, 1, 0, 0.439775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166967,-99) , 
3, 0.946142, 0, 0, 0.385557,-99) , 
7, 10.1136, 0, 0, 0.501978,-99)    );
  // itree = 1239
  fBoostWeights.push_back(0.00952021);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542404,-99) , 
0, 11.5, 1, 0, 0.618257,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476821,-99) , 
7, 14.9331, 0, 0, 0.527121,-99) , 
1, 8.5, 1, 0, 0.547466,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441955,-99) , 
4, 1.18055, 1, 0, 0.531028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322706,-99) , 
0, 22.5, 0, 0, 0.491087,-99) , 
7, 28.0681, 1, 0, 0.526314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640078,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599807,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377588,-99) , 
2, 11.5, 0, 0, 0.527525,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121855,-99) , 
5, 2.2547, 1, 0, 0.358552,-99) , 
8, 0.263929, 1, 0, 0.418222,-99) , 
9, 21.7033, 1, 0, 0.445081,-99) , 
5, 1.8868, 1, 0, 0.50814,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271821,-99) , 
2, 12.5, 1, 0, 0.369498,-99) , 
9, 404.514, 1, 0, 0.499726,-99)    );
  // itree = 1240
  fBoostWeights.push_back(0.00373765);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543513,-99) , 
6, 0.0536506, 1, 0, 0.597716,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493058,-99) , 
11, 5.63508, 0, 0, 0.504204,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259153,-99) , 
11, -3.3474, 0, 0, 0.432032,-99) , 
6, 0.992612, 1, 0, 0.493683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376182,-99) , 
3, 0.999506, 1, 0, 0.489121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38401,-99) , 
2, 7.5, 0, 0, 0.48421,-99) , 
4, -0.0770102, 1, 0, 0.491681,-99)    );
  // itree = 1241
  fBoostWeights.push_back(0.00682927);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521284,-99) , 
3, 0.998197, 0, 0, 0.620498,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329286,-99) , 
9, 397.188, 1, 0, 0.523423,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258044,-99) , 
3, 0.998019, 1, 0, 0.465012,-99) , 
11, 0.438899, 1, 0, 0.500839,-99) , 
11, 6.72779, 0, 0, 0.511057,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575832,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343679,-99) , 
6, 0.518917, 1, 0, 0.440992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248969,-99) , 
3, 0.996384, 1, 0, 0.408274,-99) , 
1, 7.5, 1, 0, 0.44135,-99) , 
7, 12.6794, 0, 0, 0.495865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312168,-99) , 
7, 143.094, 1, 0, 0.491264,-99)    );
  // itree = 1242
  fBoostWeights.push_back(0.0127011);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665351,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542951,-99) , 
8, 1.15625, 1, 0, 0.607816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295448,-99) , 
4, 1.88735, 1, 0, 0.586584,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398942,-99) , 
9, 44.647, 1, 0, 0.476222,-99) , 
9, 70.873, 0, 0, 0.54521,-99) , 
11, -4.46993, 1, 0, 0.562358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701251,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518448,-99) , 
5, 1.39787, 0, 0, 0.62259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398073,-99) , 
7, 37.5114, 1, 0, 0.563634,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439667,-99) , 
13, 0.5, 0, 0, 0.517779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341355,-99) , 
5, 1.36926, 1, 0, 0.437254,-99) , 
3, 0.989407, 1, 0, 0.483784,-99) , 
12, 6830.06, 0, 0, 0.503375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219609,-99) , 
11, -1.88671, 1, 0, 0.297477,-99) , 
12, 259.539, 1, 0, 0.361094,-99) , 
10, 1.55538, 0, 0, 0.38847,-99) , 
5, 1.84336, 1, 0, 0.477508,-99) , 
13, 1.5, 0, 0, 0.503854,-99)    );
  // itree = 1243
  fBoostWeights.push_back(0.0110825);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576876,-99) , 
1, 8.5, 1, 0, 0.60965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453594,-99) , 
6, 1.05289, 1, 0, 0.587133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383896,-99) , 
8, 0.437617, 0, 0, 0.559638,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451868,-99) , 
1, 18.5, 0, 0, 0.475542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123652,-99) , 
1, 51.5, 1, 0, 0.465769,-99) , 
6, 0.998742, 0, 0, 0.480575,-99) , 
5, 1.54324, 1, 0, 0.518429,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595067,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386082,-99) , 
12, 2672.53, 1, 0, 0.478893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332204,-99) , 
3, 0.898994, 1, 0, 0.425382,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215067,-99) , 
12, 3186.45, 0, 0, 0.300498,-99) , 
6, 0.628824, 1, 0, 0.380279,-99) , 
4, 0.454918, 1, 0, 0.415884,-99) , 
3, 0.939545, 0, 0, 0.49749,-99)    );
  // itree = 1244
  fBoostWeights.push_back(0.00842629);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330201,-99) , 
7, 65.7741, 1, 0, 0.515824,-99) , 
0, 61.5, 0, 0, 0.523718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293146,-99) , 
7, 143.062, 1, 0, 0.519422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704731,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273624,-99) , 
2, 13.5, 0, 0, 0.433491,-99) , 
6, 0.449947, 1, 0, 0.515288,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149791,-99) , 
12, 3913.63, 1, 0, 0.313931,-99) , 
4, 1.67987, 0, 0, 0.442235,-99) , 
5, 1.9837, 1, 0, 0.506658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21462,-99) , 
1, 75.5, 1, 0, 0.500469,-99)    );
  // itree = 1245
  fBoostWeights.push_back(0.00557801);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548611,-99) , 
3, 0.984496, 1, 0, 0.598192,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419738,-99) , 
1, 20.5, 1, 0, 0.50558,-99) , 
4, 0.838812, 1, 0, 0.528859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414918,-99) , 
5, 0.731529, 0, 0, 0.520777,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545031,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298396,-99) , 
9, 121.099, 0, 0, 0.424951,-99) , 
8, 0.125559, 0, 0, 0.512798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.148715,-99) , 
4, 2.25927, 1, 0, 0.51022,-99)    );
  // itree = 1246
  fBoostWeights.push_back(0.00873574);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574788,-99) , 
8, 0.684902, 0, 0, 0.649595,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581001,-99) , 
4, 1.31006, 1, 0, 0.626501,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401536,-99) , 
8, 0.579443, 0, 0, 0.456627,-99) , 
3, 0.987295, 0, 0, 0.554389,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338641,-99) , 
0, 15.5, 0, 0, 0.427275,-99) , 
8, 1.69554, 1, 0, 0.511468,-99) , 
6, 0.218308, 1, 0, 0.543844,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517228,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377685,-99) , 
3, 0.893242, 0, 0, 0.501906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197677,-99) , 
7, 104.506, 1, 0, 0.49607,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232202,-99) , 
0, 61.5, 0, 0, 0.385927,-99) , 
1, 32.5, 1, 0, 0.482354,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268617,-99) , 
1, 5.5, 0, 0, 0.475063,-99) , 
13, 1.5, 0, 0, 0.495942,-99)    );
  // itree = 1247
  fBoostWeights.push_back(0.00817623);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71624,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566098,-99) , 
6, 0.712314, 0, 0, 0.612877,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450593,-99) , 
9, 90.7933, 0, 0, 0.506568,-99) , 
12, 7099.59, 0, 0, 0.526898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352856,-99) , 
10, 0.0281519, 0, 0, 0.517488,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499747,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402297,-99) , 
11, 0.309301, 0, 0, 0.44752,-99) , 
10, 3.43822, 0, 0, 0.469546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182947,-99) , 
0, 16.5, 0, 0, 0.448919,-99) , 
7, 28.082, 1, 0, 0.492405,-99) , 
12, 21492.9, 0, 0, 0.498516,-99)    );
  // itree = 1248
  fBoostWeights.push_back(0.00790363);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590355,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457294,-99) , 
8, 2.27058, 1, 0, 0.563524,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375344,-99) , 
10, 0.184186, 0, 0, 0.457848,-99) , 
5, 1.89425, 1, 0, 0.534987,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419036,-99) , 
8, 0.974076, 0, 0, 0.504116,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24985,-99) , 
7, 21.8375, 1, 0, 0.423443,-99) , 
2, 16.5, 0, 0, 0.458691,-99) , 
6, 0.503848, 1, 0, 0.495166,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270859,-99) , 
8, 3.00688, 0, 0, 0.347814,-99) , 
8, 2.91506, 1, 0, 0.48614,-99) , 
9, 20.4343, 1, 0, 0.494532,-99)    );
  // itree = 1249
  fBoostWeights.push_back(0.00814779);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.774699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575281,-99) , 
12, 3033.65, 0, 0, 0.677188,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499699,-99) , 
0, 17.5, 0, 0, 0.52809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406064,-99) , 
1, 16.5, 1, 0, 0.49998,-99) , 
0, 32.5, 0, 0, 0.535226,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496058,-99) , 
8, 0.594599, 0, 0, 0.584144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443853,-99) , 
8, 2.1607, 1, 0, 0.539343,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
9, 269.391, 0, 0, 0.504896,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479117,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36443,-99) , 
0, 16.5, 1, 0, 0.427295,-99) , 
8, 0.628749, 1, 0, 0.454129,-99) , 
4, 0.740903, 1, 0, 0.47599,-99) , 
13, 1.5, 0, 0, 0.494202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280787,-99) , 
7, 137.147, 1, 0, 0.488125,-99)    );
  // itree = 1250
  fBoostWeights.push_back(0.00668275);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642425,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520702,-99) , 
7, 29.0931, 1, 0, 0.618285,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387362,-99) , 
11, 0.182125, 1, 0, 0.48056,-99) , 
13, 0.5, 0, 0, 0.571999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375516,-99) , 
1, 8.5, 0, 0, 0.548255,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290998,-99) , 
1, 61.5, 1, 0, 0.477499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220812,-99) , 
3, 0.999555, 1, 0, 0.471206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269735,-99) , 
10, 0.0294955, 0, 0, 0.46477,-99) , 
6, 0.198113, 1, 0, 0.484607,-99) , 
11, -9.59668, 1, 0, 0.491973,-99)    );
  // itree = 1251
  fBoostWeights.push_back(0.0045853);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661679,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692914,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528494,-99) , 
3, 0.893665, 1, 0, 0.550887,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481033,-99) , 
11, 5.9972, 0, 0, 0.490827,-99) , 
13, 1.5, 0, 0, 0.509368,-99) , 
8, 3.0192, 0, 0, 0.51455,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481391,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285329,-99) , 
8, 1.44346, 1, 0, 0.414766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.151471,-99) , 
7, 89.1164, 1, 0, 0.389613,-99) , 
3, 0.999224, 1, 0, 0.506182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310189,-99) , 
7, 7.39098, 0, 0, 0.500518,-99)    );
  // itree = 1252
  fBoostWeights.push_back(0.0105056);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509563,-99) , 
9, 209.95, 1, 0, 0.576101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419439,-99) , 
5, 1.29045, 1, 0, 0.499625,-99) , 
7, 33.1603, 1, 0, 0.558624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386114,-99) , 
5, 0.804964, 0, 0, 0.548784,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581316,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386901,-99) , 
12, 2454.87, 0, 0, 0.475817,-99) , 
9, 77.034, 1, 0, 0.52095,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34301,-99) , 
2, 17.5, 1, 0, 0.44909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286844,-99) , 
3, 0.995706, 1, 0, 0.404887,-99) , 
6, 1.00248, 0, 0, 0.460977,-99) , 
6, 0.833631, 1, 0, 0.521045,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342173,-99) , 
10, 0.312008, 1, 0, 0.512171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231153,-99) , 
8, 0.30341, 1, 0, 0.389291,-99) , 
5, 2.06635, 1, 0, 0.506859,-99)    );
  // itree = 1253
  fBoostWeights.push_back(0.0114595);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517443,-99) , 
3, 0.996232, 0, 0, 0.55315,-99) , 
10, 0.118223, 1, 0, 0.585397,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380282,-99) , 
8, 0.99329, 0, 0, 0.531255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261981,-99) , 
3, 0.996546, 1, 0, 0.463357,-99) , 
0, 13.5, 0, 0, 0.545745,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518425,-99) , 
10, 0.0706114, 1, 0, 0.535333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403041,-99) , 
8, 0.437873, 0, 0, 0.511656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708101,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368223,-99) , 
8, 0.0707606, 1, 0, 0.392773,-99) , 
11, 8.69207, 0, 0, 0.417197,-99) , 
5, 1.65931, 1, 0, 0.472112,-99) , 
13, 1.5, 0, 0, 0.494843,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293424,-99) , 
6, 0.512017, 1, 0, 0.398139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0695905,-99) , 
5, 2.01156, 1, 0, 0.376543,-99) , 
8, 2.78278, 1, 0, 0.483256,-99)    );
  // itree = 1254
  fBoostWeights.push_back(0.0135233);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621527,-99) , 
11, 0.016834, 1, 0, 0.688147,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664115,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51471,-99) , 
9, 183.873, 0, 0, 0.550829,-99) , 
6, 0.273255, 1, 0, 0.581014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430471,-99) , 
9, 334.507, 1, 0, 0.557917,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356474,-99) , 
12, 3562.98, 1, 0, 0.465465,-99) , 
9, 61.0271, 0, 0, 0.533362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46907,-99) , 
3, 0.968859, 0, 0, 0.584094,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402267,-99) , 
10, 0.0916516, 1, 0, 0.446739,-99) , 
8, 1.38106, 1, 0, 0.531435,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346895,-99) , 
6, 0.349944, 0, 0, 0.443455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248899,-99) , 
0, 14.5, 1, 0, 0.406499,-99) , 
7, 14.3069, 0, 0, 0.476842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534259,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454387,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0381949,-99) , 
1, 12.5, 0, 0, 0.228081,-99) , 
13, 1.5, 0, 0, 0.323242,-99) , 
3, 0.935368, 1, 0, 0.371337,-99) , 
7, 31.2223, 1, 0, 0.452523,-99) , 
5, 1.50771, 1, 0, 0.488651,-99)    );
  // itree = 1255
  fBoostWeights.push_back(0.012549);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569795,-99) , 
5, 0.939562, 1, 0, 0.591067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437794,-99) , 
5, 0.575936, 0, 0, 0.576437,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41553,-99) , 
9, 32.924, 0, 0, 0.561072,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369718,-99) , 
7, 8.60715, 1, 0, 0.430105,-99) , 
7, 10.9566, 0, 0, 0.543997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542186,-99) , 
3, 0.971317, 0, 0, 0.640429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499595,-99) , 
3, 0.991787, 1, 0, 0.588684,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518487,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271235,-99) , 
9, 35.0437, 0, 0, 0.427447,-99) , 
11, -1.62131, 0, 0, 0.5405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424411,-99) , 
9, 158.179, 0, 0, 0.537254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253722,-99) , 
8, 1.08441, 1, 0, 0.328772,-99) , 
0, 10.5, 1, 0, 0.370008,-99) , 
8, 0.308878, 1, 0, 0.417948,-99) , 
9, 71.5318, 1, 0, 0.470853,-99) , 
4, 1.28948, 1, 0, 0.512294,-99)    );
  // itree = 1256
  fBoostWeights.push_back(0.0132636);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723932,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616038,-99) , 
6, 0.295328, 1, 0, 0.663706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518462,-99) , 
7, 32.4653, 1, 0, 0.59685,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367086,-99) , 
5, 1.25863, 0, 0, 0.486403,-99) , 
0, 17.5, 0, 0, 0.536782,-99) , 
11, 1.44122, 1, 0, 0.560848,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502381,-99) , 
2, 15.5, 0, 0, 0.564725,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405882,-99) , 
12, 4552.18, 1, 0, 0.459354,-99) , 
9, 145.218, 1, 0, 0.510539,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434686,-99) , 
3, 0.986124, 0, 0, 0.508413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281759,-99) , 
8, 1.08177, 0, 0, 0.409178,-99) , 
9, 55.8646, 0, 0, 0.484483,-99) , 
11, 0.672387, 0, 0, 0.51773,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378349,-99) , 
10, 0.17898, 0, 0, 0.577276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298316,-99) , 
0, 50.5, 1, 0, 0.528687,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.134699,-99) , 
7, 13.2486, 1, 0, 0.318036,-99) , 
0, 17.5, 0, 0, 0.429211,-99) , 
4, 1.72686, 1, 0, 0.505867,-99)    );
  // itree = 1257
  fBoostWeights.push_back(0.0088915);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522424,-99) , 
2, 16.5, 1, 0, 0.65369,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35409,-99) , 
6, 0.0377116, 0, 0, 0.555567,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0920112,-99) , 
7, 112.466, 1, 0, 0.472374,-99) , 
4, 1.29065, 1, 0, 0.518323,-99) , 
9, 313.876, 0, 0, 0.530815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335342,-99) , 
9, 488.344, 1, 0, 0.521775,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581282,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32961,-99) , 
5, 2.26896, 1, 0, 0.476242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313557,-99) , 
7, 50.572, 1, 0, 0.446928,-99) , 
9, 84.8821, 1, 0, 0.473176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261932,-99) , 
9, 25.9261, 1, 0, 0.341221,-99) , 
9, 56.5891, 0, 0, 0.440002,-99) , 
3, 0.964332, 0, 0, 0.497449,-99)    );
  // itree = 1258
  fBoostWeights.push_back(0.00765944);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540707,-99) , 
6, 1.1096, 1, 0, 0.594422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688433,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501456,-99) , 
2, 12.5, 0, 0, 0.601587,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477306,-99) , 
6, 0.527121, 0, 0, 0.596119,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506195,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390321,-99) , 
3, 0.991836, 1, 0, 0.478011,-99) , 
11, -5.72763, 1, 0, 0.491311,-99) , 
11, 5.31298, 0, 0, 0.502503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541445,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35976,-99) , 
11, 1.11194, 0, 0, 0.42666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246487,-99) , 
0, 13.5, 0, 0, 0.383559,-99) , 
1, 8.5, 1, 0, 0.411669,-99) , 
6, 0.861961, 1, 0, 0.484843,-99) , 
6, 1.02774, 0, 0, 0.494035,-99)    );
  // itree = 1259
  fBoostWeights.push_back(0.0092734);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471457,-99) , 
4, 0.897727, 0, 0, 0.570303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413675,-99) , 
3, 0.94429, 0, 0, 0.543372,-99) , 
3, 0.874695, 1, 0, 0.565757,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59326,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398801,-99) , 
8, 0.507992, 0, 0, 0.551606,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399358,-99) , 
0, 23.5, 1, 0, 0.479239,-99) , 
4, 0.873061, 1, 0, 0.502102,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317815,-99) , 
5, 2.3005, 1, 0, 0.497494,-99) , 
13, 1.5, 0, 0, 0.517531,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609986,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463567,-99) , 
1, 11.5, 0, 0, 0.528738,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405097,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196385,-99) , 
9, 172.118, 1, 0, 0.348455,-99) , 
11, -4.9087, 1, 0, 0.425396,-99) , 
11, 10.3274, 0, 0, 0.454001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248765,-99) , 
8, 2.68964, 1, 0, 0.429323,-99) , 
3, 0.997507, 1, 0, 0.500153,-99)    );
  // itree = 1260
  fBoostWeights.push_back(0.00615055);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70423,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511632,-99) , 
2, 17.5, 0, 0, 0.580836,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367584,-99) , 
0, 18.5, 1, 0, 0.471389,-99) , 
4, 1.19942, 1, 0, 0.524752,-99) , 
3, 0.895281, 1, 0, 0.545124,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468727,-99) , 
0, 13.5, 1, 0, 0.493629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311312,-99) , 
3, 0.999495, 1, 0, 0.487504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111954,-99) , 
7, 188.592, 1, 0, 0.483675,-99) , 
13, 1.5, 0, 0, 0.501928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301233,-99) , 
1, 69.5, 1, 0, 0.495851,-99)    );
  // itree = 1261
  fBoostWeights.push_back(0.00784127);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725925,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630291,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520393,-99) , 
12, 6868.66, 0, 0, 0.544061,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434644,-99) , 
8, 0.0622993, 1, 0, 0.46459,-99) , 
5, 1.89172, 1, 0, 0.525142,-99) , 
8, 2.18294, 0, 0, 0.532165,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742858,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223157,-99) , 
5, 1.87607, 1, 0, 0.464315,-99) , 
4, 1.90164, 0, 0, 0.487229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274612,-99) , 
9, 227.487, 1, 0, 0.450756,-99) , 
8, 2.2729, 1, 0, 0.514795,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293906,-99) , 
1, 5.5, 0, 0, 0.509361,-99)    );
  // itree = 1262
  fBoostWeights.push_back(0.00906796);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516531,-99) , 
5, 1.00473, 0, 0, 0.638512,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529502,-99) , 
5, 0.862803, 0, 0, 0.59753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4256,-99) , 
5, 1.28236, 1, 0, 0.537869,-99) , 
3, 0.9802, 1, 0, 0.582187,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644095,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430146,-99) , 
5, 1.24451, 0, 0, 0.517889,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324037,-99) , 
9, 62.5596, 1, 0, 0.411833,-99) , 
5, 1.86969, 1, 0, 0.491543,-99) , 
8, 0.0756525, 1, 0, 0.502059,-99) , 
4, 0.675026, 1, 0, 0.519276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305867,-99) , 
9, 477.371, 1, 0, 0.509216,-99)    );
  // itree = 1263
  fBoostWeights.push_back(0.0114531);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698211,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415312,-99) , 
0, 12.5, 0, 0, 0.504374,-99) , 
2, 33.5, 0, 0, 0.51868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124576,-99) , 
7, 117.524, 1, 0, 0.51096,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351504,-99) , 
8, 1.43125, 1, 0, 0.494332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24916,-99) , 
3, 0.98414, 1, 0, 0.395675,-99) , 
1, 34.5, 1, 0, 0.495532,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529471,-99) , 
9, 110.492, 1, 0, 0.591642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395693,-99) , 
11, 4.20333, 1, 0, 0.523423,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240995,-99) , 
3, 0.978505, 0, 0, 0.39603,-99) , 
11, 0.447622, 0, 0, 0.464838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245046,-99) , 
0, 13.5, 1, 0, 0.421374,-99) , 
7, 12.6649, 0, 0, 0.479224,-99)    );
  // itree = 1264
  fBoostWeights.push_back(0.0112465);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711848,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.764902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604163,-99) , 
4, 0.669132, 1, 0, 0.638271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393546,-99) , 
7, 34.6247, 1, 0, 0.591727,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3844,-99) , 
3, 0.995319, 1, 0, 0.490402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31603,-99) , 
1, 13.5, 1, 0, 0.429434,-99) , 
6, 0.668129, 1, 0, 0.531619,-99) , 
0, 38.5, 0, 0, 0.560987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646798,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52273,-99) , 
6, 0.296847, 1, 0, 0.5541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409391,-99) , 
5, 0.617977, 0, 0, 0.525367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407913,-99) , 
8, 1.01761, 0, 0, 0.557622,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504539,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395802,-99) , 
9, 204.548, 0, 0, 0.423658,-99) , 
12, 9843.96, 0, 0, 0.440175,-99) , 
5, 1.3311, 1, 0, 0.466005,-99) , 
11, 10.2454, 0, 0, 0.475093,-99) , 
13, 1.5, 0, 0, 0.50123,-99)    );
  // itree = 1265
  fBoostWeights.push_back(0.0153498);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745737,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710091,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41872,-99) , 
3, 0.99593, 0, 0, 0.499055,-99) , 
3, 0.986731, 1, 0, 0.582575,-99) , 
0, 30.5, 0, 0, 0.623803,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457164,-99) , 
11, 1.46684, 0, 0, 0.540272,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273166,-99) , 
0, 14.5, 0, 0, 0.428638,-99) , 
3, 0.99173, 1, 0, 0.49511,-99) , 
12, 3889.19, 0, 0, 0.549303,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541246,-99) , 
10, 0.194822, 1, 0, 0.591524,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455179,-99) , 
7, 16.0626, 0, 0, 0.557682,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325453,-99) , 
10, 0.279575, 1, 0, 0.417424,-99) , 
4, 1.09035, 1, 0, 0.518421,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665282,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514073,-99) , 
2, 9.5, 1, 0, 0.582463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349853,-99) , 
6, 0.191946, 0, 0, 0.531361,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0774283,-99) , 
2, 11.5, 0, 0, 0.493055,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.261883,-99) , 
7, 25.0154, 0, 0, 0.329041,-99) , 
5, 2.02423, 0, 0, 0.374807,-99) , 
0, 13.5, 1, 0, 0.438159,-99) , 
5, 1.50779, 1, 0, 0.472927,-99) , 
13, 1.5, 0, 0, 0.496547,-99)    );
  // itree = 1266
  fBoostWeights.push_back(0.0146011);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569956,-99) , 
3, 0.975825, 0, 0, 0.629362,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49326,-99) , 
9, 83.1966, 0, 0, 0.555286,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.367893,-99) , 
9, 89.6767, 1, 0, 0.468446,-99) , 
7, 34.9767, 1, 0, 0.528719,-99) , 
3, 0.983217, 1, 0, 0.548152,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
3, 0.897738, 1, 0, 0.559994,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546393,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411231,-99) , 
8, 1.42694, 0, 0, 0.47129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327261,-99) , 
13, 0.5, 0, 0, 0.424929,-99) , 
6, 0.281812, 1, 0, 0.473875,-99) , 
3, 0.964242, 0, 0, 0.526246,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709315,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.270719,-99) , 
13, 0.5, 1, 0, 0.465445,-99) , 
13, 1.5, 0, 0, 0.554893,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369783,-99) , 
12, 2734.62, 0, 0, 0.500987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486426,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0591884,-99) , 
5, 2.05044, 1, 0, 0.222246,-99) , 
8, 0.184781, 1, 0, 0.304915,-99) , 
9, 61.5709, 1, 0, 0.384048,-99) , 
3, 0.959722, 1, 0, 0.440541,-99) , 
5, 1.8705, 1, 0, 0.505422,-99)    );
  // itree = 1267
  fBoostWeights.push_back(0.00736916);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.589188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501965,-99) , 
3, 0.980471, 1, 0, 0.543244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365409,-99) , 
4, 1.82631, 1, 0, 0.529886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607809,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348999,-99) , 
3, 0.977597, 0, 0, 0.433099,-99) , 
8, 2.77589, 0, 0, 0.4575,-99) , 
9, 55.9192, 0, 0, 0.509124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281531,-99) , 
3, 0.999707, 1, 0, 0.504146,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0439753,-99) , 
4, 1.59929, 1, 0, 0.318427,-99) , 
9, 403.355, 1, 0, 0.493,-99)    );
  // itree = 1268
  fBoostWeights.push_back(0.0103362);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511847,-99) , 
2, 13.5, 0, 0, 0.612228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355184,-99) , 
6, 0.975964, 1, 0, 0.544984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420204,-99) , 
4, 1.35932, 1, 0, 0.46972,-99) , 
11, 2.78482, 0, 0, 0.493461,-99) , 
11, -6.76943, 1, 0, 0.504289,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467831,-99) , 
9, 33.1823, 0, 0, 0.597244,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307903,-99) , 
3, 0.988828, 1, 0, 0.386729,-99) , 
9, 94.9157, 1, 0, 0.489395,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22905,-99) , 
12, 3002.5, 0, 0, 0.291693,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0757302,-99) , 
7, 74.2963, 1, 0, 0.259391,-99) , 
2, 29.5, 0, 0, 0.418064,-99) , 
7, 41.1626, 1, 0, 0.486028,-99) , 
6, 0.0724018, 1, 0, 0.497389,-99)    );
  // itree = 1269
  fBoostWeights.push_back(0.0078293);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555886,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488214,-99) , 
5, 1.52759, 1, 0, 0.520714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386507,-99) , 
12, 14488.8, 1, 0, 0.511729,-99) , 
8, 2.38721, 0, 0, 0.520063,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565902,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282876,-99) , 
2, 11.5, 0, 0, 0.400644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.238953,-99) , 
0, 29.5, 1, 0, 0.365326,-99) , 
4, 0.729828, 1, 0, 0.428785,-99) , 
8, 2.53045, 1, 0, 0.504397,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237422,-99) , 
7, 10.3731, 1, 0, 0.316133,-99) , 
12, -5467.12, 1, 0, 0.372675,-99) , 
5, 2.16884, 1, 0, 0.49595,-99)    );
  // itree = 1270
  fBoostWeights.push_back(0.00988336);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571781,-99) , 
6, 0.726674, 1, 0, 0.633941,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443338,-99) , 
3, 0.98077, 1, 0, 0.517088,-99) , 
8, 0.53606, 0, 0, 0.597582,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479427,-99) , 
1, 15.5, 0, 0, 0.51771,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308595,-99) , 
4, 1.42803, 0, 0, 0.390374,-99) , 
9, 33.0138, 0, 0, 0.503642,-99) , 
13, 1.5, 0, 0, 0.531786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232972,-99) , 
7, 7.10399, 0, 0, 0.525218,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336918,-99) , 
6, 1.00132, 0, 0, 0.386546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0742228,-99) , 
7, 11.983, 0, 0, 0.340961,-99) , 
4, 1.88856, 1, 0, 0.512816,-99)    );
  // itree = 1271
  fBoostWeights.push_back(0.00697844);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.782421,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359121,-99) , 
5, 2.13275, 1, 0, 0.542161,-99) , 
5, 2.42229, 0, 0, 0.548969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334294,-99) , 
8, 2.96165, 1, 0, 0.541685,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453222,-99) , 
13, 0.5, 0, 0, 0.524921,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281673,-99) , 
12, 4491, 1, 0, 0.387806,-99) , 
6, 0.298209, 1, 0, 0.499914,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254582,-99) , 
6, 0.195685, 0, 0, 0.341632,-99) , 
1, 8.5, 0, 0, 0.478095,-99) , 
6, 0.397034, 0, 0, 0.516483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307362,-99) , 
7, 140.612, 1, 0, 0.511125,-99)    );
  // itree = 1272
  fBoostWeights.push_back(0.00932633);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492178,-99) , 
3, 0.99312, 1, 0, 0.642397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
2, 9.5, 0, 0, 0.605308,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724457,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578073,-99) , 
2, 19.5, 0, 0, 0.624539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517209,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245245,-99) , 
4, 1.6283, 1, 0, 0.500468,-99) , 
9, 56.9259, 1, 0, 0.532197,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458028,-99) , 
8, 0.544045, 1, 0, 0.621085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538104,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42116,-99) , 
9, 208.266, 0, 0, 0.452163,-99) , 
4, 1.65756, 0, 0, 0.472784,-99) , 
8, 1.29253, 0, 0, 0.501762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332192,-99) , 
4, 1.83095, 1, 0, 0.493472,-99) , 
4, 1.99737, 0, 0, 0.500772,-99)    );
  // itree = 1273
  fBoostWeights.push_back(0.00778028);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498632,-99) , 
11, 0.384303, 0, 0, 0.598249,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753075,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581819,-99) , 
9, 169.747, 0, 0, 0.642259,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385502,-99) , 
12, 7788.43, 0, 0, 0.509074,-99) , 
12, 4876.67, 1, 0, 0.59654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430319,-99) , 
12, 1285.51, 0, 0, 0.51375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351851,-99) , 
4, 1.78228, 1, 0, 0.49958,-99) , 
3, 0.975566, 0, 0, 0.532003,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363638,-99) , 
9, 28.9097, 0, 0, 0.476727,-99) , 
11, -11.7949, 1, 0, 0.48894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265616,-99) , 
3, 0.992901, 0, 0, 0.474494,-99) , 
3, 0.991629, 1, 0, 0.506247,-99) , 
7, 8.8805, 1, 0, 0.514295,-99)    );
  // itree = 1274
  fBoostWeights.push_back(0.00864886);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682944,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600165,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349762,-99) , 
7, 10.462, 1, 0, 0.496023,-99) , 
5, 1.62192, 1, 0, 0.584344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695537,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496431,-99) , 
10, 0.0689148, 1, 0, 0.511417,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336166,-99) , 
11, 4.85648, 0, 0, 0.406676,-99) , 
3, 0.997072, 1, 0, 0.494261,-99) , 
12, 15065.4, 0, 0, 0.501569,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446851,-99) , 
0, 15.5, 0, 0, 0.476051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323066,-99) , 
8, 2.58717, 1, 0, 0.452533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218374,-99) , 
0, 21.5, 1, 0, 0.428672,-99) , 
1, 11.5, 0, 0, 0.477286,-99) , 
0, 10.5, 1, 0, 0.489532,-99)    );
  // itree = 1275
  fBoostWeights.push_back(0.00956061);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.756257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61474,-99) , 
1, 33.5, 1, 0, 0.667983,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428801,-99) , 
3, 0.975127, 1, 0, 0.528109,-99) , 
5, 1.51282, 1, 0, 0.607385,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391086,-99) , 
5, 2.01842, 1, 0, 0.549231,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397757,-99) , 
2, 12.5, 0, 0, 0.467488,-99) , 
9, 87.2425, 0, 0, 0.514614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171111,-99) , 
7, 64.0515, 1, 0, 0.508091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253734,-99) , 
0, 38.5, 1, 0, 0.497657,-99) , 
2, 33.5, 0, 0, 0.512658,-99)    );
  // itree = 1276
  fBoostWeights.push_back(0.0078463);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573758,-99) , 
1, 11.5, 0, 0, 0.651868,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518984,-99) , 
8, 1.50423, 1, 0, 0.602,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486139,-99) , 
0, 17.5, 0, 0, 0.543037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389123,-99) , 
9, 399.186, 1, 0, 0.532369,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369015,-99) , 
4, 0.947756, 0, 0, 0.491885,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0933019,-99) , 
0, 18.5, 1, 0, 0.465107,-99) , 
7, 14.9965, 0, 0, 0.509472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329498,-99) , 
1, 74.5, 1, 0, 0.505284,-99) , 
12, -6038.88, 1, 0, 0.514693,-99)    );
  // itree = 1277
  fBoostWeights.push_back(0.00488394);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.778942,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508159,-99) , 
6, 0.519416, 1, 0, 0.590133,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298479,-99) , 
7, 8.55506, 0, 0, 0.49978,-99) , 
0, 10.5, 1, 0, 0.510142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355897,-99) , 
5, 2.24288, 1, 0, 0.503888,-99) , 
12, 23763.4, 0, 0, 0.508908,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235523,-99) , 
1, 5.5, 0, 0, 0.50356,-99)    );
  // itree = 1278
  fBoostWeights.push_back(0.00444088);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48614,-99) , 
7, 128.971, 1, 0, 0.600471,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491934,-99) , 
3, 0.999423, 0, 0, 0.497639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111308,-99) , 
5, 2.565, 1, 0, 0.495618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.123346,-99) , 
7, 93.0025, 1, 0, 0.490553,-99) , 
2, 50.5, 0, 0, 0.498352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267197,-99) , 
3, 0.999762, 1, 0, 0.494297,-99)    );
  // itree = 1279
  fBoostWeights.push_back(0.0114191);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59239,-99) , 
10, 0.146266, 1, 0, 0.64237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446173,-99) , 
2, 22.5, 0, 0, 0.530284,-99) , 
4, 0.0922908, 0, 0, 0.605168,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441242,-99) , 
10, 0.0625805, 0, 0, 0.582579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285741,-99) , 
9, 39.4728, 0, 0, 0.542453,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559878,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453889,-99) , 
8, 1.18039, 1, 0, 0.502254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348862,-99) , 
8, 0.13942, 0, 0, 0.489712,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198838,-99) , 
5, 2.23796, 0, 0, 0.319945,-99) , 
8, 0.109254, 1, 0, 0.390064,-99) , 
5, 2.06682, 1, 0, 0.475294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328119,-99) , 
9, 403.355, 1, 0, 0.465013,-99) , 
4, 0.833149, 1, 0, 0.488953,-99)    );
  // itree = 1280
  fBoostWeights.push_back(0.0115053);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503579,-99) , 
8, 0.432197, 0, 0, 0.622169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517563,-99) , 
8, 2.27062, 1, 0, 0.594237,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477363,-99) , 
3, 0.86232, 1, 0, 0.55365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226304,-99) , 
5, 1.66764, 1, 0, 0.382627,-99) , 
6, 0.620957, 1, 0, 0.493589,-99) , 
3, 0.954757, 0, 0, 0.549812,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.597637,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444891,-99) , 
9, 50.4217, 1, 0, 0.47308,-99) , 
4, 0.86051, 1, 0, 0.49888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33627,-99) , 
4, 0.352875, 0, 0, 0.472908,-99) , 
3, 0.991391, 1, 0, 0.515205,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217606,-99) , 
8, 0.664587, 1, 0, 0.536441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292453,-99) , 
9, 59.1745, 0, 0, 0.478565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316895,-99) , 
8, 1.44012, 1, 0, 0.446046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221097,-99) , 
2, 9.5, 0, 0, 0.410905,-99) , 
5, 2.01352, 1, 0, 0.499942,-99)    );
  // itree = 1281
  fBoostWeights.push_back(0.0104508);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771657,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371045,-99) , 
5, 1.0922, 0, 0, 0.503066,-99) , 
3, 0.998264, 0, 0, 0.522213,-99) , 
3, 0.881785, 1, 0, 0.545155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59752,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320298,-99) , 
4, 1.75397, 1, 0, 0.568754,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260356,-99) , 
0, 14.5, 1, 0, 0.391624,-99) , 
8, 2.00695, 1, 0, 0.524486,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34874,-99) , 
2, 11.5, 0, 0, 0.480779,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315454,-99) , 
9, 71.629, 1, 0, 0.396956,-99) , 
4, 1.18676, 1, 0, 0.442533,-99) , 
10, 0.118642, 1, 0, 0.469395,-99) , 
13, 1.5, 0, 0, 0.493071,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242582,-99) , 
3, 0.999625, 1, 0, 0.486507,-99)    );
  // itree = 1282
  fBoostWeights.push_back(0.00614707);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515565,-99) , 
5, 1.4095, 1, 0, 0.539185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362481,-99) , 
3, 0.736601, 0, 0, 0.533293,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390406,-99) , 
3, 0.999385, 1, 0, 0.526037,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302922,-99) , 
7, 142.826, 1, 0, 0.519198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506934,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214185,-99) , 
1, 16.5, 0, 0, 0.330822,-99) , 
5, 2.16014, 1, 0, 0.506509,-99)    );
  // itree = 1283
  fBoostWeights.push_back(0.00751761);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672438,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475485,-99) , 
10, 0.490099, 1, 0, 0.587775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452183,-99) , 
11, 2.80121, 1, 0, 0.547162,-99) , 
6, 1.01058, 1, 0, 0.568338,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519447,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380581,-99) , 
9, 335.606, 1, 0, 0.503371,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322782,-99) , 
9, 153.178, 0, 0, 0.414201,-99) , 
8, 0.32985, 0, 0, 0.484484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309725,-99) , 
8, 2.95901, 1, 0, 0.476308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280287,-99) , 
6, 0.988269, 1, 0, 0.469216,-99) , 
6, 1.00319, 0, 0, 0.483462,-99)    );
  // itree = 1284
  fBoostWeights.push_back(0.00893365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.831041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603903,-99) , 
4, 1.02394, 1, 0, 0.653376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513901,-99) , 
5, 1.19246, 0, 0, 0.622344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486351,-99) , 
9, 55.8098, 0, 0, 0.588578,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42532,-99) , 
2, 17.5, 0, 0, 0.476515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196498,-99) , 
5, 2.12452, 1, 0, 0.463711,-99) , 
8, 1.87325, 1, 0, 0.549212,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371215,-99) , 
5, 1.86862, 1, 0, 0.504895,-99) , 
8, 2.87636, 0, 0, 0.518369,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.616915,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13994,-99) , 
6, 0.533817, 0, 0, 0.387676,-99) , 
5, 2.22659, 0, 0, 0.431427,-99) , 
4, 1.52737, 1, 0, 0.49684,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305547,-99) , 
12, 15967.5, 1, 0, 0.488585,-99) , 
13, 1.5, 0, 0, 0.50724,-99)    );
  // itree = 1285
  fBoostWeights.push_back(0.00952546);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.738857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590353,-99) , 
2, 43.5, 1, 0, 0.653567,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477872,-99) , 
5, 1.05466, 0, 0, 0.574652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43442,-99) , 
7, 29.6232, 1, 0, 0.539521,-99) , 
0, 33.5, 0, 0, 0.569857,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50535,-99) , 
1, 23.5, 1, 0, 0.580622,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182218,-99) , 
0, 28.5, 1, 0, 0.476416,-99) , 
2, 23.5, 0, 0, 0.494411,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249814,-99) , 
7, 120.524, 1, 0, 0.485594,-99) , 
4, 0.883004, 1, 0, 0.512709,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471316,-99) , 
3, 0.983435, 1, 0, 0.526222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244902,-99) , 
3, 0.853757, 0, 0, 0.502283,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482013,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310271,-99) , 
9, 138.897, 0, 0, 0.377352,-99) , 
6, 0.23582, 0, 0, 0.470369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275979,-99) , 
3, 0.999121, 1, 0, 0.45557,-99) , 
13, 0.5, 0, 0, 0.493575,-99)    );
  // itree = 1286
  fBoostWeights.push_back(0.00944271);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521526,-99) , 
12, 410.082, 1, 0, 0.556721,-99) , 
8, 2.62214, 0, 0, 0.579184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385429,-99) , 
6, 0.124373, 0, 0, 0.553867,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0739141,-99) , 
5, 2.29736, 1, 0, 0.542099,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493212,-99) , 
10, 0.0934842, 1, 0, 0.563526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379255,-99) , 
7, 11.0472, 0, 0, 0.533782,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62605,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450658,-99) , 
8, 1.64327, 0, 0, 0.535648,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305311,-99) , 
7, 48.72, 1, 0, 0.44219,-99) , 
5, 1.21083, 1, 0, 0.463519,-99) , 
11, 2.54231, 0, 0, 0.482485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249069,-99) , 
3, 0.999625, 1, 0, 0.47693,-99) , 
9, 52.9057, 1, 0, 0.493594,-99)    );
  // itree = 1287
  fBoostWeights.push_back(0.00522646);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647723,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498432,-99) , 
10, 1.56945, 0, 0, 0.505862,-99) , 
9, 21.0091, 1, 0, 0.512832,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233506,-99) , 
3, 0.983635, 1, 0, 0.363992,-99) , 
9, 432.127, 1, 0, 0.503603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297593,-99) , 
9, 117.273, 0, 0, 0.393223,-99) , 
8, 0.11249, 0, 0, 0.495132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297941,-99) , 
5, 2.29868, 1, 0, 0.488936,-99)    );
  // itree = 1288
  fBoostWeights.push_back(0.00898878);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672965,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500205,-99) , 
9, 78.9906, 1, 0, 0.575134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427983,-99) , 
3, 0.956613, 0, 0, 0.532223,-99) , 
4, 0.44291, 1, 0, 0.562334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358829,-99) , 
8, 2.72353, 1, 0, 0.541282,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637785,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475467,-99) , 
4, 1.24002, 0, 0, 0.555059,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303907,-99) , 
3, 0.998773, 1, 0, 0.455816,-99) , 
12, 7572.42, 0, 0, 0.476294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.285683,-99) , 
7, 39.5784, 1, 0, 0.466843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.149942,-99) , 
5, 2.32119, 1, 0, 0.459599,-99) , 
2, 21.5, 0, 0, 0.481161,-99)    );
  // itree = 1289
  fBoostWeights.push_back(0.0119363);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703588,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534581,-99) , 
6, 0.726838, 0, 0, 0.567633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426851,-99) , 
6, 0.955915, 1, 0, 0.543749,-99) , 
4, 0.603969, 1, 0, 0.576738,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557198,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323139,-99) , 
3, 0.937531, 0, 0, 0.39037,-99) , 
11, -0.17834, 1, 0, 0.469987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248123,-99) , 
9, 45.2481, 0, 0, 0.431318,-99) , 
13, 0.5, 0, 0, 0.530471,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732606,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361955,-99) , 
5, 1.81308, 1, 0, 0.525726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515153,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359514,-99) , 
9, 57.4617, 1, 0, 0.408934,-99) , 
8, 1.79503, 1, 0, 0.47768,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345262,-99) , 
8, 0.12391, 0, 0, 0.460412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309981,-99) , 
5, 1.8123, 0, 0, 0.384328,-99) , 
8, 0.448967, 0, 0, 0.455103,-99) , 
4, 2.31967, 0, 0, 0.460791,-99) , 
3, 0.981609, 1, 0, 0.49108,-99)    );
  // itree = 1290
  fBoostWeights.push_back(0.0088799);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717711,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.549514,-99) , 
5, 2.20998, 0, 0, 0.574022,-99) , 
12, 3840.96, 0, 0, 0.597501,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429411,-99) , 
9, 103.426, 1, 0, 0.532718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414111,-99) , 
12, 8960.62, 0, 0, 0.48721,-99) , 
12, 5207.92, 1, 0, 0.559248,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389747,-99) , 
12, -2185.5, 0, 0, 0.51384,-99) , 
5, 1.44828, 0, 0, 0.537792,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477786,-99) , 
6, 0.260564, 1, 0, 0.502726,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277641,-99) , 
4, 0.766213, 1, 0, 0.360905,-99) , 
6, 0.19142, 0, 0, 0.46581,-99) , 
5, 1.5215, 1, 0, 0.496896,-99) , 
13, 1.5, 0, 0, 0.516173,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352704,-99) , 
6, 1.15345, 1, 0, 0.509248,-99)    );
  // itree = 1291
  fBoostWeights.push_back(0.0065356);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592949,-99) , 
1, 10.5, 1, 0, 0.653367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358332,-99) , 
8, 1.47207, 1, 0, 0.509635,-99) , 
5, 1.66933, 1, 0, 0.581521,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350803,-99) , 
2, 8.5, 0, 0, 0.515412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260093,-99) , 
9, 345.56, 1, 0, 0.509048,-99) , 
10, 0.105444, 1, 0, 0.527716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383756,-99) , 
10, 0.0293634, 0, 0, 0.521478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29602,-99) , 
1, 5.5, 0, 0, 0.516501,-99)    );
  // itree = 1292
  fBoostWeights.push_back(0.00778494);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.675991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403191,-99) , 
5, 1.96241, 1, 0, 0.642921,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491662,-99) , 
6, 0.720482, 0, 0, 0.521464,-99) , 
2, 20.5, 0, 0, 0.536212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293754,-99) , 
9, 157.169, 0, 0, 0.42144,-99) , 
1, 26.5, 1, 0, 0.52569,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660582,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418077,-99) , 
2, 59.5, 0, 0, 0.446799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282089,-99) , 
9, 97.3856, 1, 0, 0.419141,-99) , 
9, 18.5139, 1, 0, 0.450751,-99) , 
10, 0.508228, 1, 0, 0.50656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256906,-99) , 
1, 5.5, 0, 0, 0.501976,-99)    );
  // itree = 1293
  fBoostWeights.push_back(0.00972753);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719908,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410356,-99) , 
7, 40.9078, 1, 0, 0.5826,-99) , 
12, 8815.2, 1, 0, 0.615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417983,-99) , 
11, -2.97732, 1, 0, 0.576818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399103,-99) , 
9, 226.164, 1, 0, 0.538809,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483349,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340974,-99) , 
12, 6001.7, 1, 0, 0.475257,-99) , 
4, 1.65797, 0, 0, 0.483705,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586342,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332381,-99) , 
10, 0.453204, 1, 0, 0.501456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139345,-99) , 
2, 12.5, 0, 0, 0.375728,-99) , 
4, 1.73759, 1, 0, 0.47144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184259,-99) , 
7, 7.10788, 0, 0, 0.465525,-99) , 
12, 6762.95, 0, 0, 0.482216,-99)    );
  // itree = 1294
  fBoostWeights.push_back(0.00654252);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642849,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.788777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554074,-99) , 
0, 17.5, 0, 0, 0.639035,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419334,-99) , 
7, 64.4018, 1, 0, 0.607844,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147503,-99) , 
1, 11.5, 0, 0, 0.561251,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.207081,-99) , 
7, 57.5896, 1, 0, 0.475356,-99) , 
2, 29.5, 0, 0, 0.489576,-99) , 
12, -6088.37, 1, 0, 0.500767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277146,-99) , 
9, 24.406, 0, 0, 0.4954,-99) , 
9, 20.4343, 1, 0, 0.502278,-99)    );
  // itree = 1295
  fBoostWeights.push_back(0.00935887);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689358,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499954,-99) , 
8, 0.520747, 0, 0, 0.645968,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467892,-99) , 
5, 0.565436, 0, 0, 0.595547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295316,-99) , 
4, 0.341882, 0, 0, 0.441714,-99) , 
2, 12.5, 0, 0, 0.543631,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42758,-99) , 
10, 0.442839, 1, 0, 0.530895,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.719118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438279,-99) , 
3, 0.998879, 0, 0, 0.455963,-99) , 
8, 0.696784, 1, 0, 0.485221,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232155,-99) , 
3, 0.999629, 1, 0, 0.479432,-99) , 
4, 0.81623, 1, 0, 0.498681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274478,-99) , 
8, 3.06029, 1, 0, 0.493367,-99)    );
  // itree = 1296
  fBoostWeights.push_back(0.0139694);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723511,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534511,-99) , 
11, 2.52321, 0, 0, 0.563596,-99) , 
12, 10061.2, 0, 0, 0.578402,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299093,-99) , 
8, 0.171916, 1, 0, 0.446139,-99) , 
5, 2.0664, 1, 0, 0.560964,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491996,-99) , 
11, -1.07838, 1, 0, 0.582631,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.128741,-99) , 
9, 182.466, 1, 0, 0.30919,-99) , 
5, 1.53929, 1, 0, 0.381107,-99) , 
6, 0.645833, 0, 0, 0.44918,-99) , 
1, 9.5, 0, 0, 0.534985,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487923,-99) , 
3, 0.988197, 1, 0, 0.571149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392386,-99) , 
0, 38.5, 1, 0, 0.52422,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560104,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187183,-99) , 
6, 0.992493, 1, 0, 0.303871,-99) , 
11, -4.79793, 1, 0, 0.345531,-99) , 
6, 1.00289, 0, 0, 0.460492,-99) , 
6, 0.929379, 1, 0, 0.517899,-99)    );
  // itree = 1297
  fBoostWeights.push_back(0.0119284);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573865,-99) , 
7, 25.5128, 0, 0, 0.653617,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592753,-99) , 
8, 1.15038, 1, 0, 0.654127,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415493,-99) , 
9, 93.0809, 1, 0, 0.492639,-99) , 
13, 1.5, 0, 0, 0.543449,-99) , 
7, 32.1927, 1, 0, 0.581778,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679189,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427664,-99) , 
4, 1.67707, 0, 0, 0.515778,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.171588,-99) , 
5, 2.16876, 1, 0, 0.385051,-99) , 
8, 0.631788, 1, 0, 0.455146,-99) , 
12, 12190.1, 0, 0, 0.477778,-99) , 
5, 1.75466, 1, 0, 0.55097,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506079,-99) , 
1, 7.5, 1, 0, 0.531162,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361035,-99) , 
4, 0.347728, 0, 0, 0.514838,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375464,-99) , 
9, 127.684, 1, 0, 0.48409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27444,-99) , 
0, 14.5, 0, 0, 0.392114,-99) , 
7, 21.9084, 1, 0, 0.493006,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.153695,-99) , 
0, 27.5, 1, 0, 0.483077,-99) , 
2, 15.5, 0, 0, 0.512405,-99)    );
  // itree = 1298
  fBoostWeights.push_back(0.00626415);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538956,-99) , 
10, 0.287383, 1, 0, 0.616267,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628756,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491093,-99) , 
11, 9.51728, 0, 0, 0.499796,-99) , 
11, -6.96781, 1, 0, 0.509821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200175,-99) , 
7, 217.966, 1, 0, 0.50646,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590747,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401937,-99) , 
7, 22.1897, 0, 0, 0.458066,-99) , 
12, -1903.69, 1, 0, 0.481348,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226022,-99) , 
9, 54.4645, 1, 0, 0.315024,-99) , 
4, 1.39279, 1, 0, 0.439428,-99) , 
8, 1.86177, 1, 0, 0.485689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177073,-99) , 
5, 2.5431, 1, 0, 0.483779,-99)    );
  // itree = 1299
  fBoostWeights.push_back(0.00613315);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529885,-99) , 
11, 2.48994, 0, 0, 0.551849,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430695,-99) , 
5, 0.78195, 0, 0, 0.54141,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400859,-99) , 
8, 0.0656985, 0, 0, 0.532241,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299332,-99) , 
10, 0.307743, 1, 0, 0.436491,-99) , 
9, 50.9383, 1, 0, 0.48489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335862,-99) , 
11, 2.1897, 1, 0, 0.447372,-99) , 
8, 2.32478, 1, 0, 0.512855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342239,-99) , 
4, 1.97168, 1, 0, 0.504606,-99)    );
  // itree = 1300
  fBoostWeights.push_back(0.00588332);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579893,-99) , 
9, 173.822, 1, 0, 0.598032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374096,-99) , 
8, 2.52037, 1, 0, 0.575359,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526495,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.282499,-99) , 
10, 0.0778146, 0, 0, 0.517783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337283,-99) , 
8, 0.133561, 0, 0, 0.504975,-99) , 
9, 158.398, 0, 0, 0.528207,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391451,-99) , 
9, 481.369, 1, 0, 0.522749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353972,-99) , 
4, 2.07958, 1, 0, 0.518479,-99)    );
  // itree = 1301
  fBoostWeights.push_back(0.00733901);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627392,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478049,-99) , 
9, 84.0757, 1, 0, 0.557869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300813,-99) , 
7, 142.463, 1, 0, 0.517358,-99) , 
5, 1.26992, 1, 0, 0.583292,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448962,-99) , 
2, 11.5, 0, 0, 0.590887,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484762,-99) , 
6, 0.0460326, 1, 0, 0.493464,-99) , 
11, 5.25216, 0, 0, 0.505999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0741747,-99) , 
0, 54.5, 1, 0, 0.498696,-99) , 
2, 35.5, 0, 0, 0.509824,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337539,-99) , 
9, 477.026, 1, 0, 0.501457,-99)    );
  // itree = 1302
  fBoostWeights.push_back(0.0130893);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.803151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634154,-99) , 
4, 0.381044, 1, 0, 0.69556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55786,-99) , 
5, 0.989461, 0, 0, 0.644121,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518341,-99) , 
4, 0.948175, 1, 0, 0.585806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410101,-99) , 
4, 0.533777, 0, 0, 0.541213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429109,-99) , 
7, 16.5597, 0, 0, 0.510651,-99) , 
6, 0.45651, 1, 0, 0.555906,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696557,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508882,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283788,-99) , 
10, 0.304667, 1, 0, 0.462703,-99) , 
0, 29.5, 0, 0, 0.506879,-99) , 
9, 36.25, 1, 0, 0.538746,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390709,-99) , 
3, 0.954747, 0, 0, 0.496212,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102696,-99) , 
1, 15.5, 0, 0, 0.380225,-99) , 
7, 32.0019, 1, 0, 0.46874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265803,-99) , 
1, 6.5, 0, 0, 0.455467,-99) , 
13, 1.5, 0, 0, 0.482254,-99) , 
5, 1.36828, 1, 0, 0.506445,-99)    );
  // itree = 1303
  fBoostWeights.push_back(0.00855117);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469568,-99) , 
10, 0.138878, 1, 0, 0.573203,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653352,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434788,-99) , 
9, 225.612, 1, 0, 0.520252,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424733,-99) , 
10, 0.0376824, 1, 0, 0.449924,-99) , 
7, 15.3848, 0, 0, 0.497993,-99) , 
5, 1.86181, 0, 0, 0.504404,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631822,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433905,-99) , 
10, 0.399362, 1, 0, 0.521085,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450367,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138091,-99) , 
13, 1.5, 0, 0, 0.21766,-99) , 
3, 0.961194, 1, 0, 0.298392,-99) , 
9, 64.5435, 1, 0, 0.401473,-99) , 
5, 1.89418, 1, 0, 0.485377,-99) , 
8, 0.115972, 1, 0, 0.493416,-99)    );
  // itree = 1304
  fBoostWeights.push_back(0.00379339);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646859,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335132,-99) , 
7, 6.93507, 0, 0, 0.506363,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360304,-99) , 
7, 64.6357, 1, 0, 0.501147,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258439,-99) , 
1, 40.5, 1, 0, 0.493255,-99) , 
2, 48.5, 0, 0, 0.500058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339194,-99) , 
7, 134.621, 1, 0, 0.495068,-99)    );
  // itree = 1305
  fBoostWeights.push_back(0.00592374);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692409,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551744,-99) , 
3, 0.991515, 1, 0, 0.579478,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567661,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48122,-99) , 
2, 30.5, 0, 0, 0.495789,-99) , 
11, 3.68052, 0, 0, 0.512929,-99) , 
11, -10.2559, 1, 0, 0.520244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305292,-99) , 
7, 7.37181, 0, 0, 0.514359,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226132,-99) , 
13, 1.5, 0, 0, 0.365818,-99) , 
5, 2.15687, 1, 0, 0.504627,-99)    );
  // itree = 1306
  fBoostWeights.push_back(0.00458056);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516112,-99) , 
4, 0.467194, 1, 0, 0.522838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324688,-99) , 
6, 0.05379, 0, 0, 0.517612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286823,-99) , 
3, 0.999708, 1, 0, 0.512569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223329,-99) , 
7, 170.38, 1, 0, 0.508502,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309389,-99) , 
3, 0.976761, 1, 0, 0.398864,-99) , 
4, 0.106747, 0, 0, 0.497477,-99)    );
  // itree = 1307
  fBoostWeights.push_back(0.0104505);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49907,-99) , 
6, 0.526885, 0, 0, 0.517275,-99) , 
10, 0.07021, 1, 0, 0.537183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360119,-99) , 
10, 0.0421547, 0, 0, 0.52268,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496298,-99) , 
9, 117.878, 0, 0, 0.561456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422766,-99) , 
13, 1.5, 0, 0, 0.472912,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292404,-99) , 
13, 0.5, 1, 0, 0.350495,-99) , 
7, 16.7711, 0, 0, 0.436168,-99) , 
1, 7.5, 1, 0, 0.453934,-99) , 
6, 0.600755, 1, 0, 0.490591,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344977,-99) , 
5, 1.95116, 1, 0, 0.521108,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418166,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.218259,-99) , 
8, 1.48364, 0, 0, 0.338553,-99) , 
12, 3868.44, 0, 0, 0.398367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204525,-99) , 
7, 11.063, 0, 0, 0.366028,-99) , 
8, 0.540008, 1, 0, 0.414785,-99) , 
3, 0.938572, 0, 0, 0.47577,-99)    );
  // itree = 1308
  fBoostWeights.push_back(0.0142512);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72886,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478232,-99) , 
6, 0.624422, 0, 0, 0.550245,-99) , 
6, 0.164629, 1, 0, 0.613927,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480795,-99) , 
0, 27.5, 1, 0, 0.59356,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373545,-99) , 
2, 30.5, 0, 0, 0.462326,-99) , 
10, 0.455545, 1, 0, 0.542823,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394048,-99) , 
4, 0.926556, 0, 0, 0.437333,-99) , 
0, 14.5, 0, 0, 0.505964,-99) , 
13, 1.5, 0, 0, 0.536262,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440376,-99) , 
4, 1.87772, 1, 0, 0.590401,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441759,-99) , 
6, 0.832135, 0, 0, 0.487605,-99) , 
11, 2.81219, 0, 0, 0.516592,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237674,-99) , 
4, 2.1956, 1, 0, 0.507279,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.356984,-99) , 
9, 35.0242, 0, 0, 0.491447,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.09883, 1, 0, 0.41313,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132303,-99) , 
5, 1.66882, 1, 0, 0.235937,-99) , 
3, 0.990481, 1, 0, 0.333802,-99) , 
9, 57.4564, 1, 0, 0.389568,-99) , 
8, 1.12067, 1, 0, 0.454077,-99) , 
4, 1.20026, 1, 0, 0.496137,-99)    );
  // itree = 1309
  fBoostWeights.push_back(0.0094185);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319462,-99) , 
9, 265.939, 1, 0, 0.553828,-99) , 
10, 0.0698184, 1, 0, 0.569807,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
3, 0.920205, 1, 0, 0.527591,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271621,-99) , 
4, 1.51496, 1, 0, 0.41662,-99) , 
11, 0.775272, 0, 0, 0.498118,-99) , 
11, -0.758393, 1, 0, 0.526946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341958,-99) , 
5, 0.424931, 0, 0, 0.518992,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422032,-99) , 
5, 2.07446, 0, 0, 0.479467,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21318,-99) , 
0, 13.5, 1, 0, 0.385178,-99) , 
10, 0.0480166, 0, 0, 0.506274,-99)    );
  // itree = 1310
  fBoostWeights.push_back(0.00928023);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529033,-99) , 
10, 0.389152, 0, 0, 0.542392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574265,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39173,-99) , 
3, 0.994732, 0, 0, 0.449659,-99) , 
10, 0.454075, 1, 0, 0.517496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366015,-99) , 
12, -8526.52, 0, 0, 0.508347,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582416,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417827,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.195876,-99) , 
4, 1.62045, 1, 0, 0.400891,-99) , 
5, 1.26572, 1, 0, 0.450568,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292313,-99) , 
6, 0.959442, 1, 0, 0.420166,-99) , 
8, 2.29122, 1, 0, 0.487891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477057,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242345,-99) , 
8, 0.191705, 1, 0, 0.313341,-99) , 
4, 1.89813, 1, 0, 0.476892,-99)    );
  // itree = 1311
  fBoostWeights.push_back(0.0108608);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.733015,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531996,-99) , 
2, 16.5, 0, 0, 0.619707,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37687,-99) , 
4, 0.349483, 0, 0, 0.51995,-99) , 
6, 0.135304, 1, 0, 0.533303,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387769,-99) , 
9, 33.0612, 0, 0, 0.517858,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567055,-99) , 
9, 135.308, 0, 0, 0.64722,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288338,-99) , 
9, 57.9738, 1, 0, 0.424521,-99) , 
8, 0.410604, 1, 0, 0.516698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303694,-99) , 
6, 0.200827, 1, 0, 0.429716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201251,-99) , 
1, 9.5, 0, 0, 0.378819,-99) , 
6, 0.369904, 0, 0, 0.455728,-99) , 
5, 1.75986, 1, 0, 0.497009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35349,-99) , 
9, 496.48, 1, 0, 0.490149,-99)    );
  // itree = 1312
  fBoostWeights.push_back(0.00920552);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630938,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515652,-99) , 
12, -486.802, 1, 0, 0.536968,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220305,-99) , 
10, 0.225818, 1, 0, 0.427666,-99) , 
1, 9.5, 0, 0, 0.514321,-99) , 
11, -6.8085, 1, 0, 0.524346,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619046,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424068,-99) , 
6, 1.0715, 0, 0, 0.454428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265333,-99) , 
7, 11.4658, 0, 0, 0.428792,-99) , 
1, 7.5, 1, 0, 0.45292,-99) , 
6, 0.795932, 1, 0, 0.50098,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234675,-99) , 
7, 27.1674, 1, 0, 0.359885,-99) , 
3, 0.999225, 1, 0, 0.491425,-99)    );
  // itree = 1313
  fBoostWeights.push_back(0.0119454);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506675,-99) , 
8, 2.59271, 1, 0, 0.622072,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444944,-99) , 
10, 0.301199, 0, 0, 0.50781,-99) , 
13, 1.5, 1, 0, 0.588353,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348905,-99) , 
3, 0.98903, 1, 0, 0.473302,-99) , 
8, 0.591923, 0, 0, 0.560059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346981,-99) , 
7, 9.60743, 0, 0, 0.544526,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660074,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281579,-99) , 
4, 1.86821, 1, 0, 0.615984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469047,-99) , 
11, -7.25031, 1, 0, 0.48681,-99) , 
9, 206.201, 0, 0, 0.513322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.366761,-99) , 
9, 346.481, 1, 0, 0.498677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56172,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383546,-99) , 
3, 0.977419, 1, 0, 0.458906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215023,-99) , 
5, 2.12917, 1, 0, 0.443461,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.204801,-99) , 
11, -3.13423, 1, 0, 0.301194,-99) , 
11, -0.1337, 0, 0, 0.372073,-99) , 
8, 1.80582, 1, 0, 0.46433,-99) , 
4, 1.09069, 1, 0, 0.499412,-99)    );
  // itree = 1314
  fBoostWeights.push_back(0.00835699);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354063,-99) , 
4, 1.87404, 1, 0, 0.584038,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455167,-99) , 
5, 1.50762, 1, 0, 0.501812,-99) , 
11, -0.315498, 1, 0, 0.538387,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.154771,-99) , 
5, 2.49074, 1, 0, 0.53415,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302761,-99) , 
3, 0.722881, 0, 0, 0.523472,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450322,-99) , 
7, 26.2005, 1, 0, 0.563408,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327918,-99) , 
3, 0.993261, 0, 0, 0.457928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20997,-99) , 
8, 1.8011, 1, 0, 0.441753,-99) , 
8, 2.06772, 0, 0, 0.468011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276934,-99) , 
8, 2.8943, 1, 0, 0.457733,-99) , 
3, 0.991163, 1, 0, 0.494219,-99)    );
  // itree = 1315
  fBoostWeights.push_back(0.00979252);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641694,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524275,-99) , 
9, 107.801, 1, 0, 0.579283,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530913,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377866,-99) , 
8, 2.07451, 1, 0, 0.481919,-99) , 
7, 16.2442, 0, 0, 0.549344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272316,-99) , 
2, 9.5, 0, 0, 0.509177,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304845,-99) , 
9, 102.641, 1, 0, 0.412497,-99) , 
8, 0.796917, 1, 0, 0.4644,-99) , 
5, 1.7566, 1, 0, 0.520875,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463308,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333205,-99) , 
12, 3720.13, 1, 0, 0.410706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288747,-99) , 
8, 0.508121, 0, 0, 0.372539,-99) , 
8, 2.4255, 0, 0, 0.412436,-99) , 
9, 33.8106, 0, 0, 0.507605,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459916,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254866,-99) , 
12, 3402.66, 1, 0, 0.371101,-99) , 
9, 404.653, 1, 0, 0.497374,-99)    );
  // itree = 1316
  fBoostWeights.push_back(0.00739116);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484223,-99) , 
7, 28.4728, 1, 0, 0.612533,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511643,-99) , 
12, 419.107, 1, 0, 0.519315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0627947,-99) , 
5, 2.4999, 1, 0, 0.515605,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418048,-99) , 
3, 0.992402, 1, 0, 0.530851,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418763,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231986,-99) , 
7, 12.2234, 0, 0, 0.371911,-99) , 
9, 160.357, 0, 0, 0.432699,-99) , 
12, -65.9655, 0, 0, 0.500256,-99) , 
11, 6.8984, 0, 0, 0.50995,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277816,-99) , 
12, 2099.88, 0, 0, 0.475536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235469,-99) , 
8, 0.599714, 0, 0, 0.403271,-99) , 
10, 1.45886, 1, 0, 0.502548,-99)    );
  // itree = 1317
  fBoostWeights.push_back(0.0116907);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.769546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.599123,-99) , 
9, 157.781, 1, 0, 0.695766,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434618,-99) , 
1, 9.5, 0, 0, 0.537486,-99) , 
13, 1.5, 0, 0, 0.581032,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625083,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491965,-99) , 
6, 1.02788, 0, 0, 0.520091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360118,-99) , 
3, 0.921814, 0, 0, 0.500948,-99) , 
6, 0.461082, 1, 0, 0.532683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397453,-99) , 
9, 32.4429, 0, 0, 0.520606,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669661,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635788,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395187,-99) , 
1, 15.5, 0, 0, 0.5037,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51068,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274493,-99) , 
13, 1.5, 0, 0, 0.37324,-99) , 
8, 0.432276, 1, 0, 0.433288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200789,-99) , 
3, 0.99794, 1, 0, 0.407926,-99) , 
11, 8.00435, 0, 0, 0.431863,-99) , 
5, 1.84609, 1, 0, 0.498875,-99)    );
  // itree = 1318
  fBoostWeights.push_back(0.00667778);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694144,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401435,-99) , 
8, 0.112195, 0, 0, 0.527532,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535786,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372753,-99) , 
11, 0.322339, 0, 0, 0.450464,-99) , 
6, 0.940186, 1, 0, 0.512799,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391072,-99) , 
9, 460.907, 1, 0, 0.506248,-99) , 
4, 1.66373, 0, 0, 0.513421,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562395,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0992846,-99) , 
8, 2.21781, 1, 0, 0.364561,-99) , 
11, -6.07537, 1, 0, 0.402434,-99) , 
7, 13.0506, 1, 0, 0.449009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206478,-99) , 
7, 9.49521, 0, 0, 0.424783,-99) , 
4, 1.71188, 1, 0, 0.500051,-99)    );
  // itree = 1319
  fBoostWeights.push_back(0.00926441);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718909,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495722,-99) , 
11, -3.75115, 0, 0, 0.56665,-99) , 
5, 1.54777, 1, 0, 0.624479,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717241,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566755,-99) , 
0, 23.5, 0, 0, 0.603979,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279915,-99) , 
5, 2.13033, 1, 0, 0.503149,-99) , 
13, 1.5, 0, 0, 0.532562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351864,-99) , 
1, 38.5, 1, 0, 0.514379,-99) , 
11, -2.29552, 1, 0, 0.54154,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632075,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424326,-99) , 
9, 94.8737, 0, 0, 0.493245,-99) , 
11, -1.22763, 1, 0, 0.545053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448408,-99) , 
3, 0.999003, 0, 0, 0.467609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311503,-99) , 
8, 2.72908, 1, 0, 0.45356,-99) , 
3, 0.978181, 1, 0, 0.477242,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313505,-99) , 
3, 0.911553, 0, 0, 0.460117,-99) , 
6, 0.621818, 1, 0, 0.50591,-99)    );
  // itree = 1320
  fBoostWeights.push_back(0.00840279);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45462,-99) , 
10, 0.449539, 1, 0, 0.597641,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550441,-99) , 
12, 1058.01, 1, 0, 0.623254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339866,-99) , 
6, 0.702647, 0, 0, 0.414057,-99) , 
3, 0.994172, 1, 0, 0.560171,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430106,-99) , 
9, 103.393, 1, 0, 0.474337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196501,-99) , 
5, 2.32331, 1, 0, 0.469386,-99) , 
8, 0.357691, 1, 0, 0.491097,-99) , 
5, 1.33022, 1, 0, 0.504592,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443098,-99) , 
0, 21.5, 0, 0, 0.529595,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4562,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361334,-99) , 
8, 1.76465, 0, 0, 0.417195,-99) , 
3, 0.990776, 0, 0, 0.471002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330838,-99) , 
8, 0.886129, 0, 0, 0.438852,-99) , 
5, 1.16312, 0, 0, 0.489915,-99)    );
  // itree = 1321
  fBoostWeights.push_back(0.00782618);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56654,-99) , 
11, 5.4981, 0, 0, 0.665621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466127,-99) , 
12, -13529.7, 0, 0, 0.631406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486357,-99) , 
0, 12.5, 0, 0, 0.590626,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308613,-99) , 
8, 2.56449, 1, 0, 0.564426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71812,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.440458,-99) , 
12, 5200.41, 1, 0, 0.490604,-99) , 
12, 22484.1, 0, 0, 0.49698,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245,-99) , 
9, 20.9583, 1, 0, 0.366146,-99) , 
9, 28.0517, 0, 0, 0.485577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334053,-99) , 
9, 424.918, 1, 0, 0.477681,-99) , 
11, 3.68914, 0, 0, 0.495409,-99)    );
  // itree = 1322
  fBoostWeights.push_back(0.00805436);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717009,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459613,-99) , 
8, 0.432546, 0, 0, 0.522951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386655,-99) , 
4, 0.2091, 0, 0, 0.51089,-99) , 
2, 28.5, 0, 0, 0.521666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106004,-99) , 
7, 98.2713, 1, 0, 0.516152,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586627,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491042,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246798,-99) , 
9, 93.436, 1, 0, 0.337647,-99) , 
8, 0.940768, 1, 0, 0.403399,-99) , 
4, 0.436775, 1, 0, 0.453222,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214948,-99) , 
2, 24.5, 0, 0, 0.420797,-99) , 
1, 26.5, 1, 0, 0.500462,-99)    );
  // itree = 1323
  fBoostWeights.push_back(0.00824785);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525575,-99) , 
6, 0.636791, 1, 0, 0.603222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339556,-99) , 
7, 10.3357, 1, 0, 0.467659,-99) , 
5, 1.76937, 1, 0, 0.553963,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244594,-99) , 
3, 0.999689, 1, 0, 0.497072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241666,-99) , 
2, 9.5, 0, 0, 0.483484,-99) , 
0, 12.5, 1, 0, 0.501657,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269147,-99) , 
7, 24.5407, 1, 0, 0.380244,-99) , 
8, 2.89172, 1, 0, 0.492637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215315,-99) , 
7, 6.87561, 0, 0, 0.48858,-99)    );
  // itree = 1324
  fBoostWeights.push_back(0.00893222);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573962,-99) , 
4, 1.2463, 1, 0, 0.612787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407368,-99) , 
7, 44.1158, 1, 0, 0.587339,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560371,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425335,-99) , 
11, 3.58107, 0, 0, 0.498204,-99) , 
5, 1.29463, 0, 0, 0.560547,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690215,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505581,-99) , 
9, 76.7125, 1, 0, 0.579422,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227226,-99) , 
1, 30.5, 1, 0, 0.4621,-99) , 
2, 35.5, 0, 0, 0.477472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.126386,-99) , 
7, 6.91588, 0, 0, 0.471119,-99) , 
11, 1.53943, 0, 0, 0.502186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266,-99) , 
11, -4.96759, 1, 0, 0.35025,-99) , 
3, 0.99938, 1, 0, 0.493442,-99)    );
  // itree = 1325
  fBoostWeights.push_back(0.016409);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579908,-99) , 
6, 0.297385, 1, 0, 0.615427,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343652,-99) , 
2, 16.5, 0, 0, 0.473857,-99) , 
9, 61.6552, 0, 0, 0.575695,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509007,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363666,-99) , 
9, 142.647, 1, 0, 0.454649,-99) , 
8, 2.32508, 1, 0, 0.543072,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352165,-99) , 
6, 0.338711, 1, 0, 0.390922,-99) , 
8, 0.422404, 0, 0, 0.519407,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663416,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398816,-99) , 
8, 0.499251, 1, 0, 0.526622,-99) , 
9, 56.2827, 1, 0, 0.581654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535213,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239965,-99) , 
4, 1.8192, 1, 0, 0.49301,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363134,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0849079,-99) , 
6, 0.793222, 1, 0, 0.310218,-99) , 
8, 1.0699, 1, 0, 0.421894,-99) , 
10, 0.177137, 0, 0, 0.480679,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692488,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437849,-99) , 
5, 2.09147, 0, 0, 0.515419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277039,-99) , 
3, 0.994279, 1, 0, 0.437079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181167,-99) , 
10, 0.553109, 0, 0, 0.382467,-99) , 
10, 0.430443, 1, 0, 0.455365,-99) , 
5, 1.64464, 1, 0, 0.490627,-99)    );
  // itree = 1326
  fBoostWeights.push_back(0.00916885);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596113,-99) , 
7, 95.2314, 0, 0, 0.650182,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465019,-99) , 
10, 0.19251, 1, 0, 0.556628,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497615,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343552,-99) , 
9, 236.129, 1, 0, 0.467013,-99) , 
3, 0.972547, 0, 0, 0.504878,-99) , 
2, 31.5, 0, 0, 0.523173,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447445,-99) , 
5, 1.81162, 1, 0, 0.582504,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418215,-99) , 
2, 12.5, 0, 0, 0.518938,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685157,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386605,-99) , 
4, 2.05135, 0, 0, 0.403753,-99) , 
11, 5.01951, 0, 0, 0.443439,-99) , 
11, -8.06057, 1, 0, 0.460563,-99) , 
3, 0.991875, 1, 0, 0.495947,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247862,-99) , 
3, 0.68458, 0, 0, 0.492029,-99)    );
  // itree = 1327
  fBoostWeights.push_back(0.0109149);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.777887,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61722,-99) , 
7, 16.5205, 0, 0, 0.691788,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614984,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474442,-99) , 
8, 1.26182, 1, 0, 0.545324,-99) , 
9, 212.905, 1, 0, 0.620772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502747,-99) , 
2, 9.5, 0, 0, 0.58875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464305,-99) , 
9, 103.277, 1, 0, 0.590178,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448412,-99) , 
9, 98.457, 1, 0, 0.565571,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308716,-99) , 
8, 0.924426, 0, 0, 0.423398,-99) , 
2, 28.5, 0, 0, 0.474218,-99) , 
5, 1.44651, 0, 0, 0.507265,-99) , 
10, 0.177873, 1, 0, 0.539196,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651422,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411646,-99) , 
13, 0.5, 0, 0, 0.515857,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269115,-99) , 
9, 32.838, 0, 0, 0.417878,-99) , 
3, 0.983649, 1, 0, 0.467605,-99) , 
11, 8.0038, 0, 0, 0.482106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136145,-99) , 
7, 124.099, 1, 0, 0.475769,-99) , 
5, 1.65699, 1, 0, 0.51143,-99)    );
  // itree = 1328
  fBoostWeights.push_back(0.0048388);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413223,-99) , 
3, 0.763973, 0, 0, 0.532513,-99) , 
4, 0.930922, 1, 0, 0.578675,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517691,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444674,-99) , 
10, 0.440367, 1, 0, 0.497602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273734,-99) , 
3, 0.91149, 0, 0, 0.490847,-99) , 
3, 0.890763, 1, 0, 0.500757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.250511,-99) , 
1, 70.5, 1, 0, 0.497186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325821,-99) , 
5, 0.361159, 0, 0, 0.490266,-99)    );
  // itree = 1329
  fBoostWeights.push_back(0.00402605);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67049,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425516,-99) , 
10, 0.0479953, 0, 0, 0.512183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.147792,-99) , 
7, 162.872, 1, 0, 0.510491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374159,-99) , 
6, 1.0749, 1, 0, 0.50337,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212131,-99) , 
1, 51.5, 1, 0, 0.496328,-99) , 
2, 74.5, 0, 0, 0.501381,-99)    );
  // itree = 1330
  fBoostWeights.push_back(0.0126668);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.573323,-99) , 
10, 0.301898, 0, 0, 0.624226,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388237,-99) , 
4, 1.81935, 1, 0, 0.548558,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322649,-99) , 
1, 10.5, 0, 0, 0.441316,-99) , 
3, 0.973869, 0, 0, 0.512535,-99) , 
2, 23.5, 0, 0, 0.527236,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449338,-99) , 
8, 2.97264, 1, 0, 0.570613,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.197601,-99) , 
5, 1.80924, 1, 0, 0.398008,-99) , 
8, 2.76222, 0, 0, 0.481656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273678,-99) , 
9, 234.508, 1, 0, 0.439532,-99) , 
8, 2.27433, 1, 0, 0.507535,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496666,-99) , 
6, 0.976874, 1, 0, 0.630848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371557,-99) , 
9, 32.9429, 0, 0, 0.553872,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581904,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294295,-99) , 
12, 3006.48, 1, 0, 0.352944,-99) , 
9, 18.0429, 1, 0, 0.39937,-99) , 
2, 23.5, 0, 0, 0.468704,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294352,-99) , 
9, 103.398, 1, 0, 0.441506,-99) , 
10, 0.467166, 1, 0, 0.488816,-99)    );
  // itree = 1331
  fBoostWeights.push_back(0.00816359);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753624,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539685,-99) , 
12, -11044.2, 1, 0, 0.546494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405885,-99) , 
9, 30.0797, 0, 0, 0.538073,-99) , 
10, 1.28677, 0, 0, 0.547533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321255,-99) , 
1, 33.5, 1, 0, 0.538724,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478163,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0535411,-99) , 
0, 50.5, 0, 0, 0.280815,-99) , 
5, 1.30397, 1, 0, 0.38249,-99) , 
7, 65.6278, 1, 0, 0.520259,-99)    );
  // itree = 1332
  fBoostWeights.push_back(0.0126571);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707722,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558549,-99) , 
3, 0.985966, 1, 0, 0.631731,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566408,-99) , 
2, 15.5, 0, 0, 0.611995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380101,-99) , 
0, 42.5, 0, 0, 0.466002,-99) , 
1, 16.5, 1, 0, 0.546666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316215,-99) , 
10, 0.0909829, 1, 0, 0.422544,-99) , 
7, 15.1071, 0, 0, 0.516213,-99) , 
6, 0.198152, 1, 0, 0.540553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420787,-99) , 
3, 0.997997, 1, 0, 0.515301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370117,-99) , 
3, 0.860976, 0, 0, 0.502378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365597,-99) , 
8, 0.238997, 0, 0, 0.489253,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393824,-99) , 
4, 1.71791, 1, 0, 0.572229,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0337219,-99) , 
7, 43.5505, 1, 0, 0.385197,-99) , 
3, 0.980634, 1, 0, 0.477579,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31979,-99) , 
4, 1.8265, 0, 0, 0.381685,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1391,-99) , 
3, 0.942448, 0, 0, 0.337696,-99) , 
8, 0.832848, 1, 0, 0.406706,-99) , 
5, 1.70661, 1, 0, 0.459763,-99) , 
13, 1.5, 0, 0, 0.483768,-99)    );
  // itree = 1333
  fBoostWeights.push_back(0.00493011);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545134,-99) , 
6, 0.717346, 1, 0, 0.631388,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66163,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449889,-99) , 
5, 1.69461, 1, 0, 0.488151,-99) , 
5, 2.2642, 0, 0, 0.497516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0728962,-99) , 
5, 2.54345, 1, 0, 0.495104,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479051,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260683,-99) , 
7, 7.1946, 1, 0, 0.359397,-99) , 
7, 8.38025, 0, 0, 0.487701,-99) , 
11, -8.61263, 1, 0, 0.496237,-99)    );
  // itree = 1334
  fBoostWeights.push_back(0.012104);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614904,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485604,-99) , 
7, 9.93867, 0, 0, 0.595425,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363534,-99) , 
7, 40.8301, 1, 0, 0.577429,-99) , 
1, 24.5, 0, 0, 0.594544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284401,-99) , 
7, 137.909, 1, 0, 0.584412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722329,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430836,-99) , 
1, 9.5, 0, 0, 0.525523,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397912,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0560733,-99) , 
3, 0.867642, 0, 0, 0.367242,-99) , 
4, 1.56626, 1, 0, 0.496585,-99) , 
8, 0.0838873, 1, 0, 0.516388,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588745,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381996,-99) , 
4, 1.00313, 1, 0, 0.453247,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363196,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181243,-99) , 
8, 1.15083, 0, 0, 0.282518,-99) , 
13, 0.5, 0, 0, 0.400239,-99) , 
12, 10196, 0, 0, 0.433499,-99) , 
9, 69.3591, 0, 0, 0.488926,-99) , 
11, 2.77849, 0, 0, 0.513982,-99)    );
  // itree = 1335
  fBoostWeights.push_back(0.0104383);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5613,-99) , 
4, 0.812191, 1, 0, 0.602958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43978,-99) , 
5, 0.747976, 0, 0, 0.58166,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594991,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342914,-99) , 
2, 30.5, 0, 0, 0.476483,-99) , 
10, 0.635885, 1, 0, 0.55384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413823,-99) , 
9, 319.303, 1, 0, 0.536787,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632747,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.720024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496617,-99) , 
8, 0.736171, 1, 0, 0.611719,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29518,-99) , 
9, 39.3208, 0, 0, 0.467331,-99) , 
6, 0.495039, 0, 0, 0.490073,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67379,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422784,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232069,-99) , 
4, 1.60396, 0, 0, 0.377358,-99) , 
11, 9.62016, 0, 0, 0.408902,-99) , 
6, 0.64102, 1, 0, 0.462651,-99) , 
9, 21.0158, 1, 0, 0.474755,-99) , 
5, 1.55979, 1, 0, 0.50306,-99)    );
  // itree = 1336
  fBoostWeights.push_back(0.0064521);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492436,-99) , 
3, 0.988017, 1, 0, 0.578671,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617831,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515354,-99) , 
9, 31.4096, 0, 0, 0.574407,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268532,-99) , 
3, 0.73586, 0, 0, 0.471571,-99) , 
9, 37.2363, 1, 0, 0.486911,-99) , 
3, 0.999295, 0, 0, 0.495554,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384575,-99) , 
5, 1.50938, 1, 0, 0.454858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.184106,-99) , 
2, 29.5, 0, 0, 0.397114,-99) , 
7, 52.6926, 1, 0, 0.481799,-99) , 
4, 0.278073, 1, 0, 0.493401,-99)    );
  // itree = 1337
  fBoostWeights.push_back(0.00889053);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56523,-99) , 
9, 96.6012, 1, 0, 0.683042,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547377,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364805,-99) , 
5, 2.14074, 1, 0, 0.532446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30614,-99) , 
1, 33.5, 1, 0, 0.521238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29824,-99) , 
7, 66.148, 1, 0, 0.509594,-99) , 
2, 52.5, 0, 0, 0.52256,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561422,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4055,-99) , 
1, 9.5, 0, 0, 0.515224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.344023,-99) , 
0, 47.5, 1, 0, 0.494315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.348353,-99) , 
9, 239.167, 1, 0, 0.469012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31311,-99) , 
4, 1.66587, 1, 0, 0.451021,-99) , 
8, 1.84195, 1, 0, 0.500189,-99)    );
  // itree = 1338
  fBoostWeights.push_back(0.00960495);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54707,-99) , 
5, 1.95722, 1, 0, 0.657186,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583289,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443363,-99) , 
11, -2.89963, 1, 0, 0.530092,-99) , 
11, -1.1474, 0, 0, 0.593528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495953,-99) , 
12, -2505.39, 0, 0, 0.573197,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444196,-99) , 
7, 39.2231, 1, 0, 0.529499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369063,-99) , 
3, 0.84237, 0, 0, 0.518776,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403828,-99) , 
7, 29.6077, 1, 0, 0.487978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288479,-99) , 
7, 14.0753, 0, 0, 0.425799,-99) , 
6, 0.269363, 0, 0, 0.493464,-99) , 
13, 1.5, 0, 0, 0.516806,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482229,-99) , 
10, 0.827354, 0, 0, 0.553111,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49348,-99) , 
6, 0.43957, 1, 0, 0.550389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.328209,-99) , 
10, 0.0869577, 0, 0, 0.45118,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278346,-99) , 
10, 0.589046, 0, 0, 0.317992,-99) , 
10, 0.203133, 1, 0, 0.395558,-99) , 
9, 46.2688, 1, 0, 0.432469,-99) , 
8, 2.27153, 1, 0, 0.497539,-99)    );
  // itree = 1339
  fBoostWeights.push_back(0.00609365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767604,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570578,-99) , 
12, 4301.66, 1, 0, 0.662645,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575856,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408869,-99) , 
9, 92.0368, 1, 0, 0.502573,-99) , 
8, 1.43632, 1, 0, 0.597325,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406216,-99) , 
8, 1.33361, 0, 0, 0.47612,-99) , 
11, 1.8996, 1, 0, 0.557721,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566032,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480839,-99) , 
4, 0.739326, 1, 0, 0.5036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362271,-99) , 
9, 466.593, 1, 0, 0.496654,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241706,-99) , 
7, 9.17379, 0, 0, 0.489447,-99) , 
0, 11.5, 1, 0, 0.503594,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284377,-99) , 
5, 2.41251, 1, 0, 0.500332,-99)    );
  // itree = 1340
  fBoostWeights.push_back(0.00958565);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695519,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661585,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417865,-99) , 
9, 183.113, 1, 0, 0.509691,-99) , 
6, 0.0693946, 1, 0, 0.526312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161328,-99) , 
5, 2.39903, 1, 0, 0.520534,-99) , 
12, 9255.64, 0, 0, 0.538431,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496023,-99) , 
9, 226.788, 1, 0, 0.539519,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303327,-99) , 
8, 0.340083, 0, 0, 0.453957,-99) , 
9, 169.626, 0, 0, 0.479894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115244,-99) , 
6, 0.773661, 0, 0, 0.361891,-99) , 
4, 1.82266, 1, 0, 0.467842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144229,-99) , 
7, 61.278, 1, 0, 0.459826,-99) , 
1, 15.5, 0, 0, 0.490783,-99)    );
  // itree = 1341
  fBoostWeights.push_back(0.00473778);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687662,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490805,-99) , 
9, 204.605, 0, 0, 0.51138,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524584,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364964,-99) , 
3, 0.982987, 1, 0, 0.443968,-99) , 
8, 2.24833, 1, 0, 0.496397,-99) , 
12, 12174.1, 0, 0, 0.502769,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312114,-99) , 
3, 0.998289, 0, 0, 0.394687,-99) , 
12, 15010.1, 1, 0, 0.497238,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0705075,-99) , 
7, 249.762, 1, 0, 0.494772,-99)    );
  // itree = 1342
  fBoostWeights.push_back(0.0102412);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690326,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58723,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457267,-99) , 
5, 1.6584, 1, 0, 0.529627,-99) , 
10, 0.0693049, 1, 0, 0.568187,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554266,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467837,-99) , 
3, 0.998345, 0, 0, 0.502344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.183494,-99) , 
5, 2.38981, 1, 0, 0.498917,-99) , 
3, 0.993622, 1, 0, 0.529732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406854,-99) , 
4, 0.0261851, 0, 0, 0.519109,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478239,-99) , 
5, 1.5463, 0, 0, 0.539581,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327871,-99) , 
13, 1.5, 0, 0, 0.393604,-99) , 
4, 1.04959, 1, 0, 0.458945,-99) , 
2, 27.5, 0, 0, 0.495493,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448293,-99) , 
8, 1.39333, 0, 0, 0.497758,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.2578,-99) , 
10, 0.0834403, 0, 0, 0.424733,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212774,-99) , 
9, 65.1115, 0, 0, 0.35989,-99) , 
13, 0.5, 0, 0, 0.449412,-99) , 
3, 0.973848, 0, 0, 0.495205,-99)    );
  // itree = 1343
  fBoostWeights.push_back(0.00796897);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503267,-99) , 
6, 0.766919, 1, 0, 0.607254,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364607,-99) , 
1, 6.5, 0, 0, 0.505729,-99) , 
11, 6.41114, 0, 0, 0.516039,-99) , 
2, 29.5, 0, 0, 0.524058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347859,-99) , 
1, 33.5, 1, 0, 0.515845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474366,-99) , 
9, 77.6768, 1, 0, 0.548896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306961,-99) , 
2, 43.5, 0, 0, 0.472896,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0212674,-99) , 
1, 17.5, 0, 0, 0.411178,-99) , 
7, 65.3978, 1, 0, 0.504444,-99)    );
  // itree = 1344
  fBoostWeights.push_back(0.0074916);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579491,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500842,-99) , 
6, 0.461812, 1, 0, 0.524503,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478353,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127831,-99) , 
2, 33.5, 0, 0, 0.419518,-99) , 
7, 72.4721, 1, 0, 0.513456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.753818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505126,-99) , 
4, 0.367618, 1, 0, 0.603827,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249447,-99) , 
1, 9.5, 0, 0, 0.393283,-99) , 
1, 21.5, 0, 0, 0.445293,-99) , 
6, 0.228995, 0, 0, 0.496643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301261,-99) , 
1, 5.5, 0, 0, 0.492434,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347655,-99) , 
9, 472.721, 1, 0, 0.485365,-99)    );
  // itree = 1345
  fBoostWeights.push_back(0.0089447);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715414,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560274,-99) , 
4, 0.899671, 1, 0, 0.613894,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321819,-99) , 
7, 22.0606, 0, 0, 0.58248,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255239,-99) , 
5, 2.34236, 1, 0, 0.523124,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319831,-99) , 
7, 35.2386, 1, 0, 0.511092,-99) , 
0, 23.5, 0, 0, 0.527936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136981,-99) , 
7, 120.589, 1, 0, 0.523476,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610628,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351451,-99) , 
7, 62.2645, 0, 0, 0.516844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.276219,-99) , 
12, 2134.85, 0, 0, 0.42486,-99) , 
1, 34.5, 1, 0, 0.513043,-99)    );
  // itree = 1346
  fBoostWeights.push_back(0.0110858);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709404,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647058,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487472,-99) , 
10, 0.205255, 1, 0, 0.572122,-99) , 
4, 1.60931, 0, 0, 0.621315,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457795,-99) , 
12, 1309.31, 0, 0, 0.556091,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373851,-99) , 
4, 1.56057, 1, 0, 0.520671,-99) , 
8, 0.711465, 1, 0, 0.557094,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319605,-99) , 
4, 2.02308, 1, 0, 0.547221,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618863,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584448,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474919,-99) , 
2, 20.5, 0, 0, 0.498036,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223482,-99) , 
7, 64.7714, 1, 0, 0.480458,-99) , 
2, 61.5, 0, 0, 0.488074,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327589,-99) , 
6, 0.106405, 0, 0, 0.483404,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471406,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196738,-99) , 
4, 1.39665, 0, 0, 0.266714,-99) , 
9, 228.289, 0, 0, 0.311073,-99) , 
6, 0.274794, 1, 0, 0.380299,-99) , 
3, 0.943761, 0, 0, 0.464806,-99) , 
13, 1.5, 0, 0, 0.489272,-99)    );
  // itree = 1347
  fBoostWeights.push_back(0.00680572);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530207,-99) , 
4, 1.89319, 1, 0, 0.666639,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431412,-99) , 
10, 0.0412824, 0, 0, 0.527453,-99) , 
5, 1.86038, 0, 0, 0.577875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335175,-99) , 
7, 88.7105, 1, 0, 0.571202,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465889,-99) , 
2, 29.5, 0, 0, 0.489332,-99) , 
8, 1.67113, 0, 0, 0.507862,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43755,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297154,-99) , 
10, 0.423899, 1, 0, 0.400937,-99) , 
10, 1.04896, 0, 0, 0.42575,-99) , 
8, 2.3926, 1, 0, 0.490793,-99) , 
10, 0.0656905, 1, 0, 0.50483,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280173,-99) , 
7, 7.42721, 0, 0, 0.498224,-99)    );
  // itree = 1348
  fBoostWeights.push_back(0.0127646);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583243,-99) , 
11, 2.62665, 0, 0, 0.620984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424139,-99) , 
0, 16.5, 0, 0, 0.526554,-99) , 
6, 0.717414, 1, 0, 0.586749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636499,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458889,-99) , 
6, 0.503191, 0, 0, 0.548976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397347,-99) , 
9, 47.1439, 1, 0, 0.499694,-99) , 
9, 66.3344, 0, 0, 0.55523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412846,-99) , 
9, 363.217, 1, 0, 0.540975,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.737045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563931,-99) , 
8, 1.32822, 0, 0, 0.661089,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582229,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444671,-99) , 
10, 0.294614, 1, 0, 0.498949,-99) , 
9, 47.6277, 1, 0, 0.540307,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302054,-99) , 
9, 18.1433, 1, 0, 0.394178,-99) , 
9, 32.46, 0, 0, 0.510061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.602732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474529,-99) , 
8, 0.490865, 1, 0, 0.514508,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231424,-99) , 
7, 14.3837, 0, 0, 0.41669,-99) , 
0, 14.5, 1, 0, 0.469697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424275,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0499638,-99) , 
5, 1.76276, 1, 0, 0.316119,-99) , 
10, 0.155926, 1, 0, 0.444052,-99) , 
10, 0.205215, 0, 0, 0.476224,-99) , 
13, 1.5, 0, 0, 0.495967,-99)    );
  // itree = 1349
  fBoostWeights.push_back(0.00592086);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609428,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671528,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478353,-99) , 
6, 0.473104, 1, 0, 0.504344,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.215784,-99) , 
7, 27.9326, 1, 0, 0.400476,-99) , 
5, 1.8486, 1, 0, 0.485111,-99) , 
4, 1.99732, 0, 0, 0.492653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210967,-99) , 
5, 2.30265, 1, 0, 0.486673,-99) , 
8, 0.0712215, 1, 0, 0.494389,-99)    );
  // itree = 1350
  fBoostWeights.push_back(0.0111931);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724064,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544824,-99) , 
8, 1.14422, 0, 0, 0.592487,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409201,-99) , 
5, 2.22731, 0, 0, 0.464528,-99) , 
5, 1.87679, 1, 0, 0.56263,-99) , 
12, -1545.96, 1, 0, 0.583109,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426555,-99) , 
7, 13.4589, 0, 0, 0.539609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411707,-99) , 
8, 2.46089, 1, 0, 0.515207,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.284442,-99) , 
7, 25.8009, 1, 0, 0.412455,-99) , 
6, 1.00107, 0, 0, 0.436631,-99) , 
5, 1.64719, 1, 0, 0.483045,-99) , 
3, 0.990355, 1, 0, 0.52294,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714107,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438867,-99) , 
3, 0.887031, 1, 0, 0.550459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586572,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352551,-99) , 
11, 0.398348, 0, 0, 0.406666,-99) , 
9, 249.405, 0, 0, 0.439294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236728,-99) , 
2, 8.5, 0, 0, 0.411356,-99) , 
13, 1.5, 0, 0, 0.45273,-99) , 
3, 0.95537, 0, 0, 0.505106,-99)    );
  // itree = 1351
  fBoostWeights.push_back(0.00851013);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711288,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571023,-99) , 
8, 1.40033, 1, 0, 0.598072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459784,-99) , 
12, -3224.54, 0, 0, 0.571558,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610264,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504797,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338976,-99) , 
5, 1.13707, 0, 0, 0.42786,-99) , 
9, 165.877, 0, 0, 0.486788,-99) , 
8, 1.0475, 0, 0, 0.541478,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677844,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.510749,-99) , 
12, 2346.4, 1, 0, 0.592172,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439753,-99) , 
9, 47.7321, 1, 0, 0.466023,-99) , 
8, 0.115972, 1, 0, 0.482005,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.112479,-99) , 
1, 67, 1, 0, 0.474269,-99) , 
5, 1.46157, 1, 0, 0.500109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200661,-99) , 
1, 5.5, 0, 0, 0.49419,-99)    );
  // itree = 1352
  fBoostWeights.push_back(0.00476147);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698523,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482337,-99) , 
11, -9.35438, 1, 0, 0.488695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274936,-99) , 
7, 71.5496, 1, 0, 0.482376,-99) , 
2, 46.5, 0, 0, 0.489789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230117,-99) , 
10, 3.40585, 1, 0, 0.485841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330711,-99) , 
1, 50.5, 1, 0, 0.478215,-99)    );
  // itree = 1353
  fBoostWeights.push_back(0.00506292);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734352,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409936,-99) , 
3, 0.987979, 1, 0, 0.621704,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491395,-99) , 
11, 6.36536, 0, 0, 0.500773,-99) , 
10, 1.62523, 0, 0, 0.508537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298804,-99) , 
12, -12917.7, 0, 0, 0.502745,-99) , 
3, 0.99954, 0, 0, 0.508169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306642,-99) , 
3, 0.999742, 1, 0, 0.504705,-99)    );
  // itree = 1354
  fBoostWeights.push_back(0.00922406);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716698,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571841,-99) , 
6, 0.517843, 1, 0, 0.631253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375818,-99) , 
5, 1.93078, 1, 0, 0.601982,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592778,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.431513,-99) , 
4, 1.43238, 0, 0, 0.496793,-99) , 
10, 0.263725, 1, 0, 0.555502,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393408,-99) , 
12, 2096.03, 0, 0, 0.537834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.627119,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443871,-99) , 
9, 24.5228, 1, 0, 0.459957,-99) , 
5, 1.32155, 1, 0, 0.486162,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235412,-99) , 
7, 31.148, 1, 0, 0.353521,-99) , 
9, 342.645, 1, 0, 0.473886,-99) , 
11, 2.72201, 0, 0, 0.495001,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603554,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.297324,-99) , 
10, 0.0539339, 1, 0, 0.368665,-99) , 
5, 2.1651, 1, 0, 0.48724,-99)    );
  // itree = 1355
  fBoostWeights.push_back(0.0117822);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706309,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472559,-99) , 
3, 0.999231, 1, 0, 0.675306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468941,-99) , 
8, 0.356395, 0, 0, 0.634783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446591,-99) , 
6, 1.00209, 1, 0, 0.604898,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358749,-99) , 
9, 291.018, 1, 0, 0.567162,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509001,-99) , 
12, 2428.26, 1, 0, 0.589347,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390235,-99) , 
11, 5.83404, 1, 0, 0.567102,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557766,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415451,-99) , 
5, 1.20026, 0, 0, 0.524861,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.388506,-99) , 
11, 5.90669, 0, 0, 0.438124,-99) , 
3, 0.973232, 1, 0, 0.475172,-99) , 
10, 0.116576, 1, 0, 0.506092,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398058,-99) , 
3, 0.965415, 1, 0, 0.453754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0992618,-99) , 
5, 2.00049, 1, 0, 0.423253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288277,-99) , 
9, 69.3134, 0, 0, 0.378214,-99) , 
12, 4817.09, 1, 0, 0.484435,-99) , 
11, -3.08702, 1, 0, 0.503014,-99)    );
  // itree = 1356
  fBoostWeights.push_back(0.00883804);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359016,-99) , 
0, 13.5, 1, 0, 0.569316,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50629,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311246,-99) , 
0, 13.5, 0, 0, 0.483865,-99) , 
7, 11.8173, 1, 0, 0.498693,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288339,-99) , 
0, 16.5, 1, 0, 0.457881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.224536,-99) , 
3, 0.953638, 0, 0, 0.435912,-99) , 
1, 9.5, 0, 0, 0.483897,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0976385,-99) , 
4, 2.17775, 1, 0, 0.481224,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.104609,-99) , 
5, 2.47831, 1, 0, 0.477521,-99)    );
  // itree = 1357
  fBoostWeights.push_back(0.00923054);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689534,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68528,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499684,-99) , 
9, 66.6029, 0, 0, 0.541436,-99) , 
12, 11069.9, 0, 0, 0.559572,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629666,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469685,-99) , 
5, 1.13297, 1, 0, 0.509262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463234,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.196399,-99) , 
8, 1.98052, 1, 0, 0.389058,-99) , 
10, 0.282995, 1, 0, 0.479859,-99) , 
9, 110.552, 1, 0, 0.522322,-99) , 
0, 14.5, 1, 0, 0.532752,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612397,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492628,-99) , 
0, 10.5, 1, 0, 0.530276,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.233509,-99) , 
4, 2.01658, 1, 0, 0.523178,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.267066,-99) , 
5, 2.48092, 1, 0, 0.519883,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315111,-99) , 
0, 12.5, 0, 0, 0.401273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.17855,-99) , 
7, 30.4568, 1, 0, 0.359386,-99) , 
7, 17.3915, 1, 0, 0.482737,-99) , 
2, 12.5, 0, 0, 0.512661,-99)    );
  // itree = 1358
  fBoostWeights.push_back(0.0121898);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.683829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547216,-99) , 
7, 28.4309, 1, 0, 0.639571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258494,-99) , 
4, 2.002, 1, 0, 0.616035,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696461,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513876,-99) , 
9, 166.163, 0, 0, 0.573349,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427688,-99) , 
11, -0.325059, 1, 0, 0.473153,-99) , 
9, 218.01, 1, 0, 0.527325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365365,-99) , 
4, 1.81745, 1, 0, 0.514062,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.674768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500349,-99) , 
3, 0.91636, 1, 0, 0.542318,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271865,-99) , 
4, 1.17994, 1, 0, 0.514654,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425231,-99) , 
3, 0.967202, 1, 0, 0.453522,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186487,-99) , 
12, 4039.77, 0, 0, 0.262188,-99) , 
3, 0.947649, 0, 0, 0.414108,-99) , 
6, 0.267181, 1, 0, 0.44376,-99) , 
10, 0.153571, 1, 0, 0.47225,-99) , 
11, -6.9624, 1, 0, 0.484054,-99)    );
  // itree = 1359
  fBoostWeights.push_back(0.00919078);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767788,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482426,-99) , 
6, 0.229251, 0, 0, 0.579359,-99) , 
4, 0.528116, 1, 0, 0.626781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504974,-99) , 
6, 0.712, 1, 0, 0.591931,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617969,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389053,-99) , 
3, 0.992327, 0, 0, 0.493348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21734,-99) , 
12, 7206.85, 1, 0, 0.434169,-99) , 
4, 1.55986, 1, 0, 0.547632,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641875,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592066,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263836,-99) , 
9, 424.073, 1, 0, 0.447407,-99) , 
8, 0.0867518, 1, 0, 0.458356,-99) , 
11, -7.28565, 1, 0, 0.465879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211934,-99) , 
12, 19132.2, 1, 0, 0.459312,-99) , 
13, 1.5, 0, 0, 0.484043,-99)    );
  // itree = 1360
  fBoostWeights.push_back(0.00499692);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6794,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558915,-99) , 
6, 0.498383, 0, 0, 0.627497,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.614575,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504663,-99) , 
11, -4.10361, 1, 0, 0.521805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405974,-99) , 
8, 1.5645, 0, 0, 0.453604,-99) , 
6, 0.853069, 1, 0, 0.50307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252652,-99) , 
9, 24.4869, 0, 0, 0.496543,-99) , 
9, 21.0481, 1, 0, 0.504257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293233,-99) , 
1, 5.5, 0, 0, 0.499443,-99)    );
  // itree = 1361
  fBoostWeights.push_back(0.00684559);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.847623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505373,-99) , 
10, 0.232539, 1, 0, 0.694339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520429,-99) , 
12, 15206.1, 1, 0, 0.623743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.730792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525014,-99) , 
0, 64.5, 0, 0, 0.530798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311999,-99) , 
1, 58.5, 1, 0, 0.525808,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317206,-99) , 
5, 2.30632, 1, 0, 0.520255,-99) , 
11, -5.61666, 1, 0, 0.532541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318517,-99) , 
7, 134.82, 1, 0, 0.527509,-99)    );
  // itree = 1362
  fBoostWeights.push_back(0.0111971);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383585,-99) , 
5, 1.64365, 1, 0, 0.5398,-99) , 
12, -5600.98, 0, 0, 0.617583,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.784054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703688,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429228,-99) , 
7, 17.7839, 1, 0, 0.557604,-99) , 
2, 34.5, 0, 0, 0.604791,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442351,-99) , 
10, 0.652997, 1, 0, 0.512447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305864,-99) , 
2, 13.5, 1, 0, 0.394449,-99) , 
7, 16.1065, 0, 0, 0.492938,-99) , 
4, 1.8141, 0, 0, 0.507069,-99) , 
11, 5.11832, 0, 0, 0.522028,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475616,-99) , 
6, 0.453373, 1, 0, 0.552505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550186,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405879,-99) , 
4, 1.64039, 0, 0, 0.433201,-99) , 
13, 1.5, 0, 0, 0.466197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258398,-99) , 
7, 24.9042, 1, 0, 0.450988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124292,-99) , 
5, 2.14603, 1, 0, 0.432861,-99) , 
2, 11.5, 0, 0, 0.493787,-99)    );
  // itree = 1363
  fBoostWeights.push_back(0.00924895);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529079,-99) , 
6, 0.757746, 1, 0, 0.651493,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239408,-99) , 
4, 1.49247, 1, 0, 0.488583,-99) , 
7, 22.9719, 1, 0, 0.583883,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425131,-99) , 
12, -82.6782, 0, 0, 0.53082,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290563,-99) , 
7, 64.9808, 1, 0, 0.443157,-99) , 
6, 0.988436, 1, 0, 0.513869,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306056,-99) , 
13, 1.5, 0, 0, 0.388428,-99) , 
8, 0.102076, 1, 0, 0.441699,-99) , 
5, 1.89471, 1, 0, 0.499079,-99) , 
12, -3218.85, 1, 0, 0.511211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21327,-99) , 
3, 0.99974, 1, 0, 0.507162,-99)    );
  // itree = 1364
  fBoostWeights.push_back(0.00722599);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728582,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.644851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50938,-99) , 
12, -1878.82, 0, 0, 0.558942,-99) , 
10, 0.683756, 0, 0, 0.584631,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4026,-99) , 
8, 2.58869, 1, 0, 0.562873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702207,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560925,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455892,-99) , 
12, 7677.65, 0, 0, 0.48336,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307977,-99) , 
7, 72.7438, 1, 0, 0.471494,-99) , 
0, 114.5, 0, 0, 0.478269,-99) , 
11, 2.78362, 0, 0, 0.499461,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268214,-99) , 
9, 18.0747, 1, 0, 0.341972,-99) , 
9, 23.2798, 0, 0, 0.491283,-99)    );
  // itree = 1365
  fBoostWeights.push_back(0.00460039);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693125,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678054,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283989,-99) , 
5, 2.41089, 1, 0, 0.509146,-99) , 
7, 54.5372, 0, 0, 0.515511,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.327453,-99) , 
7, 65.2842, 1, 0, 0.505894,-99) , 
2, 52.5, 0, 0, 0.514671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300885,-99) , 
1, 76.5, 1, 0, 0.510134,-99)    );
  // itree = 1366
  fBoostWeights.push_back(0.0068493);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.681086,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473752,-99) , 
12, 16121, 1, 0, 0.578944,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378836,-99) , 
6, 0.02905, 0, 0, 0.508818,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307346,-99) , 
4, 0.780458, 1, 0, 0.432863,-99) , 
5, 1.09187, 0, 0, 0.493562,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.301355,-99) , 
0, 18.5, 1, 0, 0.353711,-99) , 
9, 29.0205, 0, 0, 0.483342,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198505,-99) , 
6, 0.940403, 0, 0, 0.3343,-99) , 
4, 1.85595, 1, 0, 0.473344,-99) , 
11, -6.56812, 1, 0, 0.483289,-99)    );
  // itree = 1367
  fBoostWeights.push_back(0.0158668);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.767499,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641569,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425464,-99) , 
6, 0.845008, 1, 0, 0.564565,-99) , 
10, 0.500538, 1, 0, 0.611561,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243123,-99) , 
5, 2.06273, 1, 0, 0.431517,-99) , 
7, 17.3889, 1, 0, 0.501612,-99) , 
0, 22.5, 0, 0, 0.557014,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457672,-99) , 
7, 27.7387, 1, 0, 0.551658,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50468,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.245192,-99) , 
8, 1.3632, 1, 0, 0.426286,-99) , 
4, 1.28127, 1, 0, 0.501403,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.30807,-99) , 
1, 33.5, 1, 0, 0.472256,-99) , 
9, 107.709, 1, 0, 0.516416,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647393,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.389394,-99) , 
10, 0.0483933, 0, 0, 0.460849,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.248127,-99) , 
12, 4218.02, 1, 0, 0.349765,-99) , 
10, 0.153277, 1, 0, 0.424067,-99) , 
3, 0.998636, 0, 0, 0.446816,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22556,-99) , 
2, 13.5, 1, 0, 0.422564,-99) , 
7, 14.3951, 0, 0, 0.487995,-99)    );
  // itree = 1368
  fBoostWeights.push_back(0.00727264);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.735103,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662613,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507817,-99) , 
6, 0.277862, 1, 0, 0.552079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319091,-99) , 
9, 28.1796, 0, 0, 0.532409,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490832,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221443,-99) , 
0, 25.5, 1, 0, 0.483692,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.124034,-99) , 
7, 45.319, 1, 0, 0.475743,-99) , 
2, 19.5, 0, 0, 0.494619,-99) , 
12, 24562.9, 0, 0, 0.499401,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228784,-99) , 
10, 0.0219111, 0, 0, 0.493636,-99)    );
  // itree = 1369
  fBoostWeights.push_back(0.00969029);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480797,-99) , 
10, 0.492711, 1, 0, 0.582415,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.745996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538459,-99) , 
0, 12.5, 0, 0, 0.632874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57996,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378158,-99) , 
7, 22.3573, 0, 0, 0.528384,-99) , 
7, 16.9462, 1, 0, 0.567964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.319999,-99) , 
8, 2.68386, 1, 0, 0.539474,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629106,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463694,-99) , 
10, 1.21592, 0, 0, 0.475747,-99) , 
4, 1.432, 0, 0, 0.488429,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375743,-99) , 
11, 6.24615, 0, 0, 0.40478,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114109,-99) , 
3, 0.872042, 0, 0, 0.382236,-99) , 
4, 1.50608, 1, 0, 0.460498,-99) , 
13, 1.5, 0, 0, 0.485556,-99) , 
6, 1.01393, 0, 0, 0.49675,-99)    );
  // itree = 1370
  fBoostWeights.push_back(0.00899616);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48878,-99) , 
9, 39.4902, 0, 0, 0.603702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39774,-99) , 
7, 9.20925, 0, 0, 0.586175,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648415,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505561,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.228005,-99) , 
7, 40.4969, 1, 0, 0.465489,-99) , 
1, 18.5, 0, 0, 0.500916,-99) , 
11, -4.11617, 0, 0, 0.55367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429807,-99) , 
10, 0.159515, 0, 0, 0.482895,-99) , 
10, 0.0366235, 1, 0, 0.494185,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386875,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139801,-99) , 
5, 1.78167, 1, 0, 0.321262,-99) , 
10, 1.12861, 1, 0, 0.476981,-99) , 
11, -0.393524, 1, 0, 0.511244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316092,-99) , 
9, 490.577, 1, 0, 0.502376,-99)    );
  // itree = 1371
  fBoostWeights.push_back(0.00631648);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669074,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546344,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226318,-99) , 
4, 1.81594, 1, 0, 0.536874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.138694,-99) , 
5, 2.13216, 1, 0, 0.520852,-99) , 
8, 0.25198, 1, 0, 0.548308,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68529,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49772,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418606,-99) , 
8, 0.534572, 0, 0, 0.476998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160833,-99) , 
7, 142.694, 1, 0, 0.472871,-99) , 
0, 100.5, 0, 0, 0.479898,-99) , 
10, 0.116639, 1, 0, 0.500762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.243204,-99) , 
1, 93.5, 1, 0, 0.49642,-99)    );
  // itree = 1372
  fBoostWeights.push_back(0.00866446);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.529001,-99) , 
5, 1.2939, 0, 0, 0.614029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476426,-99) , 
9, 45.0246, 0, 0, 0.588133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370636,-99) , 
1, 8.5, 0, 0, 0.56201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
6, 0.762204, 1, 0, 0.586237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390007,-99) , 
3, 0.993268, 1, 0, 0.477791,-99) , 
11, 2.56194, 0, 0, 0.51143,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320318,-99) , 
11, 4.50319, 1, 0, 0.455409,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242637,-99) , 
7, 30.11, 0, 0, 0.431137,-99) , 
0, 27.5, 1, 0, 0.48788,-99) , 
6, 0.297337, 1, 0, 0.511438,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332538,-99) , 
7, 7.56122, 1, 0, 0.388065,-99) , 
7, 9.08071, 0, 0, 0.501969,-99)    );
  // itree = 1373
  fBoostWeights.push_back(0.00919494);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.751908,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392814,-99) , 
5, 1.91928, 1, 0, 0.641209,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458984,-99) , 
7, 24.5937, 0, 0, 0.527621,-99) , 
0, 12.5, 1, 0, 0.54924,-99) , 
11, -9.49081, 1, 0, 0.558127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402986,-99) , 
7, 9.68332, 0, 0, 0.54559,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629329,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62796,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503532,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378247,-99) , 
7, 25.2552, 1, 0, 0.457675,-99) , 
3, 0.849301, 1, 0, 0.476586,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.187056,-99) , 
6, 0.997653, 1, 0, 0.464602,-99) , 
6, 1.01241, 0, 0, 0.48288,-99) , 
9, 109.268, 1, 0, 0.514838,-99)    );
  // itree = 1374
  fBoostWeights.push_back(0.00659485);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67635,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511802,-99) , 
4, 1.39393, 1, 0, 0.623669,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442991,-99) , 
13, 0.5, 0, 0, 0.511515,-99) , 
12, 2223.31, 0, 0, 0.529748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433538,-99) , 
10, 0.129319, 0, 0, 0.498151,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515432,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375772,-99) , 
8, 1.60242, 0, 0, 0.430446,-99) , 
10, 0.329244, 1, 0, 0.473369,-99) , 
12, 2994.06, 1, 0, 0.500496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255764,-99) , 
10, 4.69713, 1, 0, 0.497636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237006,-99) , 
5, 2.31858, 1, 0, 0.491058,-99)    );
  // itree = 1375
  fBoostWeights.push_back(0.00748402);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.800753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.579953,-99) , 
6, 0.987077, 0, 0, 0.644446,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647223,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421248,-99) , 
1, 30.5, 1, 0, 0.527182,-99) , 
12, 2152.36, 0, 0, 0.546757,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.371164,-99) , 
4, 1.73718, 1, 0, 0.531197,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173501,-99) , 
5, 2.17503, 1, 0, 0.471352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.25256,-99) , 
1, 28.5, 1, 0, 0.453162,-99) , 
2, 48.5, 0, 0, 0.46535,-99) , 
12, 2805.66, 1, 0, 0.496847,-99) , 
4, 1.99643, 0, 0, 0.50701,-99)    );
  // itree = 1376
  fBoostWeights.push_back(0.00904434);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539266,-99) , 
2, 31.5, 0, 0, 0.553798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379501,-99) , 
7, 98.2058, 1, 0, 0.545016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.364821,-99) , 
9, 24.3256, 0, 0, 0.534657,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353742,-99) , 
3, 0.999416, 1, 0, 0.521885,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.68027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514816,-99) , 
12, 9190.21, 0, 0, 0.618171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409922,-99) , 
7, 32.1979, 1, 0, 0.553584,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.640229,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402742,-99) , 
11, -2.40054, 0, 0, 0.469481,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386769,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139161,-99) , 
0, 33.5, 1, 0, 0.357588,-99) , 
4, 1.19546, 1, 0, 0.418013,-99) , 
2, 50.5, 0, 0, 0.433208,-99) , 
3, 0.997188, 0, 0, 0.459101,-99) , 
11, 0.186585, 0, 0, 0.489671,-99)    );
  // itree = 1377
  fBoostWeights.push_back(0.00897741);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651337,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411609,-99) , 
8, 0.423768, 0, 0, 0.525656,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448029,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253366,-99) , 
5, 2.28739, 1, 0, 0.437275,-99) , 
5, 1.67006, 1, 0, 0.49205,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253508,-99) , 
2, 7.5, 0, 0, 0.482758,-99) , 
8, 0.076513, 1, 0, 0.492851,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62691,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292804,-99) , 
13, 0.5, 1, 0, 0.403119,-99) , 
13, 1.5, 0, 0, 0.473853,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21034,-99) , 
9, 29.8494, 0, 0, 0.311266,-99) , 
8, 1.03989, 0, 0, 0.408232,-99) , 
9, 41.5924, 0, 0, 0.47737,-99)    );
  // itree = 1378
  fBoostWeights.push_back(0.0072789);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.697375,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421635,-99) , 
0, 27.5, 1, 0, 0.608317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378211,-99) , 
7, 11.3133, 0, 0, 0.570831,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503522,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335335,-99) , 
8, 0.391062, 0, 0, 0.494454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302813,-99) , 
5, 2.10959, 1, 0, 0.484419,-99) , 
8, 0.304543, 1, 0, 0.499882,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.253682,-99) , 
2, 47.5, 0, 0, 0.357435,-99) , 
1, 37.5, 1, 0, 0.490652,-99) , 
2, 82.5, 0, 0, 0.497706,-99)    );
  // itree = 1379
  fBoostWeights.push_back(0.00688267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659743,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655442,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.525329,-99) , 
12, 10068.5, 0, 0, 0.540325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296462,-99) , 
7, 176.736, 1, 0, 0.533115,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572608,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449132,-99) , 
10, 0.0798593, 1, 0, 0.491808,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54955,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309459,-99) , 
12, 259.41, 1, 0, 0.391865,-99) , 
5, 1.87029, 1, 0, 0.471635,-99) , 
10, 0.239316, 0, 0, 0.501245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249195,-99) , 
5, 2.29449, 1, 0, 0.495594,-99) , 
8, 0.0755887, 1, 0, 0.505908,-99)    );
  // itree = 1380
  fBoostWeights.push_back(0.0144083);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.784937,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474363,-99) , 
9, 193.08, 1, 0, 0.626681,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417307,-99) , 
10, 0.463455, 1, 0, 0.481017,-99) , 
8, 1.08393, 0, 0, 0.571436,-99) , 
11, 5.05833, 0, 0, 0.59377,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427104,-99) , 
12, 2829.93, 1, 0, 0.495536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318032,-99) , 
10, 0.262585, 1, 0, 0.448891,-99) , 
2, 12.5, 0, 0, 0.543327,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480855,-99) , 
4, 1.75927, 1, 0, 0.592203,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427994,-99) , 
2, 9.5, 1, 0, 0.492185,-99) , 
4, 1.55147, 0, 0, 0.535493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190964,-99) , 
4, 2.00547, 1, 0, 0.519756,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56307,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410506,-99) , 
11, 1.4246, 0, 0, 0.458741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264117,-99) , 
1, 10.5, 0, 0, 0.429826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.11334,-99) , 
7, 11.3362, 0, 0, 0.413912,-99) , 
0, 14.5, 1, 0, 0.461228,-99) , 
5, 1.5263, 1, 0, 0.497868,-99)    );
  // itree = 1381
  fBoostWeights.push_back(0.0101038);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613384,-99) , 
8, 1.70673, 1, 0, 0.690474,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474882,-99) , 
7, 85.8409, 0, 0, 0.532682,-99) , 
1, 22.5, 1, 0, 0.595793,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468959,-99) , 
9, 129.608, 0, 0, 0.562787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391838,-99) , 
4, 0.519244, 0, 0, 0.48673,-99) , 
0, 18.5, 0, 0, 0.545623,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506443,-99) , 
2, 11.5, 0, 0, 0.604669,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554738,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44932,-99) , 
7, 13.0914, 1, 0, 0.493843,-99) , 
11, 3.49202, 0, 0, 0.516724,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503589,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277147,-99) , 
2, 16.5, 0, 0, 0.465643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.296775,-99) , 
4, 1.11072, 0, 0, 0.420112,-99) , 
7, 25.586, 1, 0, 0.483967,-99) , 
4, 0.917584, 1, 0, 0.50381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370083,-99) , 
1, 6.5, 0, 0, 0.49796,-99)    );
  // itree = 1382
  fBoostWeights.push_back(0.00971658);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718753,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639711,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508148,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329708,-99) , 
8, 0.371172, 0, 0, 0.470073,-99) , 
11, -5.87129, 1, 0, 0.492686,-99) , 
6, 0.153181, 1, 0, 0.519652,-99) , 
3, 0.917357, 1, 0, 0.546906,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643113,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493122,-99) , 
12, 5326.04, 0, 0, 0.540804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.378195,-99) , 
8, 0.385543, 0, 0, 0.514227,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393646,-99) , 
11, -0.777281, 1, 0, 0.43633,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.113721,-99) , 
10, 0.0280006, 0, 0, 0.424062,-99) , 
4, 1.09223, 1, 0, 0.466667,-99) , 
11, 8.48147, 0, 0, 0.477595,-99) , 
13, 1.5, 0, 0, 0.499008,-99)    );
  // itree = 1383
  fBoostWeights.push_back(0.0081357);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73279,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491771,-99) , 
3, 0.988085, 1, 0, 0.63495,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.712474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5136,-99) , 
4, 2.0527, 0, 0, 0.523459,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343727,-99) , 
1, 39.5, 1, 0, 0.509608,-99) , 
10, 1.22429, 0, 0, 0.523858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322943,-99) , 
1, 74.5, 1, 0, 0.515181,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594385,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381226,-99) , 
6, 0.378875, 0, 0, 0.461328,-99) , 
7, 7.55543, 1, 0, 0.474981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241022,-99) , 
5, 2.15764, 1, 0, 0.463177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0495539,-99) , 
7, 58.0647, 1, 0, 0.453005,-99) , 
1, 11.5, 0, 0, 0.490075,-99)    );
  // itree = 1384
  fBoostWeights.push_back(0.0134903);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724015,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39496,-99) , 
5, 2.13976, 1, 0, 0.60737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456666,-99) , 
4, 0.773381, 0, 0, 0.569214,-99) , 
0, 31.5, 0, 0, 0.599424,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.341911,-99) , 
6, 0.497433, 0, 0, 0.444455,-99) , 
9, 193.414, 1, 0, 0.561155,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596304,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354291,-99) , 
5, 2.0227, 1, 0, 0.579382,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393643,-99) , 
10, 0.0470048, 0, 0, 0.562695,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659341,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421472,-99) , 
9, 115.82, 0, 0, 0.552978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41716,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.251861,-99) , 
9, 158.456, 1, 0, 0.344117,-99) , 
8, 0.254069, 1, 0, 0.459823,-99) , 
8, 0.5881, 0, 0, 0.527061,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477225,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322071,-99) , 
6, 0.711466, 0, 0, 0.459317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 219.959, 1, 0, 0.452412,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487497,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180087,-99) , 
8, 0.797672, 1, 0, 0.306316,-99) , 
11, 4.2621, 1, 0, 0.425731,-99) , 
6, 0.630123, 1, 0, 0.485129,-99) , 
13, 1.5, 0, 0, 0.508754,-99)    );
  // itree = 1385
  fBoostWeights.push_back(0.0101477);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.770959,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.72145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.505383,-99) , 
0, 43.5, 0, 0, 0.542736,-99) , 
6, 0.13549, 1, 0, 0.579095,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.611477,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489812,-99) , 
7, 32.2914, 1, 0, 0.54918,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665677,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42877,-99) , 
9, 26.9942, 1, 0, 0.456275,-99) , 
5, 1.54681, 1, 0, 0.505411,-99) , 
13, 1.5, 0, 0, 0.527374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321939,-99) , 
3, 0.99962, 1, 0, 0.518711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631579,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456765,-99) , 
8, 0.251323, 1, 0, 0.480728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.27162, 1, 0, 0.473673,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.223227,-99) , 
4, 1.98318, 1, 0, 0.464935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.139755,-99) , 
7, 28.8036, 1, 0, 0.450382,-99) , 
2, 11.5, 0, 0, 0.495865,-99)    );
  // itree = 1386
  fBoostWeights.push_back(0.0040097);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664304,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519163,-99) , 
12, 13572, 0, 0, 0.530697,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.213326,-99) , 
3, 0.999445, 1, 0, 0.469796,-99) , 
5, 1.67233, 1, 0, 0.507331,-99) , 
5, 2.20819, 0, 0, 0.512002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339513,-99) , 
5, 2.29473, 1, 0, 0.507188,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.260809,-99) , 
7, 7.11511, 0, 0, 0.503248,-99)    );
  // itree = 1387
  fBoostWeights.push_back(0.00811999);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71103,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591202,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361438,-99) , 
4, 1.81409, 1, 0, 0.568512,-99) , 
12, 8022.25, 1, 0, 0.607948,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435952,-99) , 
9, 33.3719, 0, 0, 0.58526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38185,-99) , 
10, 0.0571326, 0, 0, 0.562207,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684625,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478567,-99) , 
12, 755.234, 1, 0, 0.58159,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50335,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430589,-99) , 
4, 1.44733, 1, 0, 0.480801,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.338983,-99) , 
11, 1.89771, 0, 0, 0.4006,-99) , 
8, 2.3262, 1, 0, 0.463547,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220438,-99) , 
2, 7.5, 0, 0, 0.455452,-99) , 
0, 10.5, 1, 0, 0.470147,-99) , 
11, -3.08331, 1, 0, 0.48973,-99)    );
  // itree = 1388
  fBoostWeights.push_back(0.00766499);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678822,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.641146,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436669,-99) , 
10, 0.162128, 1, 0, 0.526994,-99) , 
4, 1.01519, 1, 0, 0.601301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384479,-99) , 
1, 10.5, 0, 0, 0.56749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
2, 11.5, 0, 0, 0.596253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424786,-99) , 
7, 54.3082, 1, 0, 0.570123,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572818,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464447,-99) , 
2, 24.5, 0, 0, 0.48237,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.21615,-99) , 
2, 61.5, 0, 0, 0.350294,-99) , 
1, 39.5, 1, 0, 0.472005,-99) , 
11, 6.0126, 0, 0, 0.485308,-99) , 
3, 0.897402, 1, 0, 0.496525,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32536,-99) , 
9, 476.805, 1, 0, 0.488574,-99)    );
  // itree = 1389
  fBoostWeights.push_back(0.00422075);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656868,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.439235,-99) , 
3, 0.998958, 1, 0, 0.528159,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190135,-99) , 
7, 100.572, 1, 0, 0.523081,-99) , 
2, 55.5, 0, 0, 0.529322,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370842,-99) , 
4, 2.05981, 1, 0, 0.524902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263965,-99) , 
1, 83.5, 1, 0, 0.519987,-99)    );
  // itree = 1390
  fBoostWeights.push_back(0.00844651);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.794131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595029,-99) , 
11, 7.91378, 1, 0, 0.673253,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501654,-99) , 
0, 12.5, 0, 0, 0.616063,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427243,-99) , 
9, 112.241, 1, 0, 0.57499,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689651,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479426,-99) , 
2, 28.5, 0, 0, 0.487102,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449987,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.122281,-99) , 
2, 23.5, 0, 0, 0.35475,-99) , 
1, 28.5, 1, 0, 0.476022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292006,-99) , 
7, 66.0073, 1, 0, 0.465635,-99) , 
2, 51.5, 0, 0, 0.473606,-99) , 
11, 6.26947, 0, 0, 0.489806,-99)    );
  // itree = 1391
  fBoostWeights.push_back(0.011058);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591408,-99) , 
0, 12.5, 0, 0, 0.71209,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.727481,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559793,-99) , 
12, 4271.23, 0, 0, 0.64889,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484901,-99) , 
6, 0.428103, 1, 0, 0.566199,-99) , 
11, 1.95167, 0, 0, 0.61367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.754254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526631,-99) , 
1, 39.5, 1, 0, 0.627734,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365617,-99) , 
7, 33.5779, 1, 0, 0.445117,-99) , 
0, 35.5, 0, 0, 0.521664,-99) , 
7, 25.407, 1, 0, 0.573391,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.45803,-99) , 
8, 0.483795, 0, 0, 0.517372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313515,-99) , 
2, 7.5, 0, 0, 0.507659,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.040978,-99) , 
7, 133.341, 1, 0, 0.501893,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241894,-99) , 
2, 60.5, 0, 0, 0.365822,-99) , 
1, 33.5, 1, 0, 0.487912,-99) , 
13, 1.5, 0, 0, 0.51393,-99)    );
  // itree = 1392
  fBoostWeights.push_back(0.00519116);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653897,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518576,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390614,-99) , 
9, 44.5393, 0, 0, 0.509562,-99) , 
10, 1.22123, 0, 0, 0.517247,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.555356,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.347514,-99) , 
8, 0.667003, 0, 0, 0.490248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.264292,-99) , 
10, 0.548874, 0, 0, 0.438343,-99) , 
9, 33.6329, 0, 0, 0.507364,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.384081,-99) , 
9, 534.014, 1, 0, 0.50272,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504052,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205608,-99) , 
5, 1.60142, 1, 0, 0.390887,-99) , 
3, 0.999375, 1, 0, 0.496392,-99)    );
  // itree = 1393
  fBoostWeights.push_back(0.0155914);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785718,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637227,-99) , 
3, 0.994714, 0, 0, 0.711273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588162,-99) , 
1, 36.5, 1, 0, 0.658566,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508042,-99) , 
3, 0.988598, 1, 0, 0.593556,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506593,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324401,-99) , 
7, 13.9998, 0, 0, 0.46874,-99) , 
10, 0.138486, 1, 0, 0.52563,-99) , 
2, 24.5, 0, 0, 0.554639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353497,-99) , 
5, 0.525475, 0, 0, 0.537584,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523639,-99) , 
8, 0.902537, 1, 0, 0.607226,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339839,-99) , 
6, 0.304096, 0, 0, 0.578435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275527,-99) , 
4, 1.82266, 1, 0, 0.5344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424513,-99) , 
4, 1.62586, 0, 0, 0.535157,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603539,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351255,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230946,-99) , 
8, 2.38408, 1, 0, 0.325918,-99) , 
10, 1.13514, 0, 0, 0.375368,-99) , 
8, 0.332158, 1, 0, 0.420093,-99) , 
0, 13.5, 1, 0, 0.464525,-99) , 
4, 1.19258, 1, 0, 0.502162,-99)    );
  // itree = 1394
  fBoostWeights.push_back(0.0106412);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.755379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625442,-99) , 
11, 1.39724, 0, 0, 0.664203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471975,-99) , 
4, 1.1869, 1, 0, 0.631559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410148,-99) , 
3, 0.996339, 1, 0, 0.581458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.607748,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556025,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453306,-99) , 
11, 2.67432, 0, 0, 0.482199,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31877,-99) , 
7, 71.8003, 1, 0, 0.46629,-99) , 
6, 1.02788, 0, 0, 0.483807,-99) , 
6, 0.275835, 1, 0, 0.512482,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610552,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493343,-99) , 
1, 11.5, 0, 0, 0.562862,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335354,-99) , 
7, 22.2233, 0, 0, 0.391185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185895,-99) , 
1, 34.5, 1, 0, 0.369622,-99) , 
9, 263.208, 0, 0, 0.403532,-99) , 
12, 6753.6, 0, 0, 0.439457,-99) , 
13, 0.5, 0, 0, 0.48859,-99)    );
  // itree = 1395
  fBoostWeights.push_back(0.00797565);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.647024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480501,-99) , 
9, 94.6329, 1, 0, 0.55431,-99) , 
7, 29.3127, 1, 0, 0.605621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448259,-99) , 
2, 10.5, 0, 0, 0.57025,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513572,-99) , 
3, 0.997151, 0, 0, 0.572156,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379016,-99) , 
1, 9.5, 0, 0, 0.492461,-99) , 
1, 8.5, 1, 0, 0.510373,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709043,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442035,-99) , 
5, 2.14589, 0, 0, 0.477503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227095,-99) , 
1, 14.5, 0, 0, 0.429445,-99) , 
7, 42.8742, 1, 0, 0.495463,-99) , 
4, 0.697186, 1, 0, 0.511366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.302832,-99) , 
3, 0.999623, 1, 0, 0.505044,-99)    );
  // itree = 1396
  fBoostWeights.push_back(0.0143618);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574533,-99) , 
7, 10.4039, 0, 0, 0.678101,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513333,-99) , 
9, 315.505, 1, 0, 0.63569,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707999,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496686,-99) , 
11, -4.45059, 1, 0, 0.55559,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391549,-99) , 
9, 117.264, 0, 0, 0.515823,-99) , 
3, 0.98438, 1, 0, 0.573398,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495552,-99) , 
6, 0.147097, 0, 0, 0.600265,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560929,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401926,-99) , 
12, 3187.52, 0, 0, 0.471289,-99) , 
9, 72.804, 1, 0, 0.528513,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.56408,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.478042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286776,-99) , 
7, 18.9939, 1, 0, 0.376294,-99) , 
13, 1.5, 0, 0, 0.428582,-99) , 
1, 15.5, 0, 0, 0.485584,-99) , 
10, 0.209062, 1, 0, 0.52841,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.656905,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669529,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.353389,-99) , 
2, 15.5, 0, 0, 0.533472,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477039,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350071,-99) , 
0, 12.5, 1, 0, 0.398501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142249,-99) , 
5, 2.32331, 1, 0, 0.389059,-99) , 
8, 0.173893, 1, 0, 0.416387,-99) , 
9, 22.1568, 1, 0, 0.437504,-99) , 
4, 1.46971, 1, 0, 0.501391,-99)    );
  // itree = 1397
  fBoostWeights.push_back(0.0117537);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.658287,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490914,-99) , 
9, 216.249, 1, 0, 0.622608,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458487,-99) , 
2, 30.5, 0, 0, 0.513757,-99) , 
6, 0.826158, 1, 0, 0.579388,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.446839,-99) , 
8, 0.382545, 0, 0, 0.560843,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639854,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466538,-99) , 
9, 116.68, 0, 0, 0.559335,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575286,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369096,-99) , 
9, 49.6603, 1, 0, 0.436997,-99) , 
8, 0.693479, 1, 0, 0.499578,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.127461,-99) , 
1, 53.5, 1, 0, 0.481909,-99) , 
5, 1.67241, 1, 0, 0.529202,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685269,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561492,-99) , 
6, 0.693806, 1, 0, 0.626248,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444067,-99) , 
4, 1.63981, 0, 0, 0.460942,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308903,-99) , 
4, 1.75591, 1, 0, 0.446359,-99) , 
12, -4157.61, 1, 0, 0.475062,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161496,-99) , 
0, 25.5, 1, 0, 0.459684,-99) , 
1, 11.5, 0, 0, 0.501039,-99)    );
  // itree = 1398
  fBoostWeights.push_back(0.00496796);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.685839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460322,-99) , 
5, 1.97053, 1, 0, 0.640961,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527281,-99) , 
1, 8.5, 1, 0, 0.542586,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0474206,-99) , 
6, 0.163999, 0, 0, 0.478264,-99) , 
4, 1.23188, 1, 0, 0.51392,-99) , 
11, -8.1062, 1, 0, 0.520954,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.120408,-99) , 
7, 369.472, 1, 0, 0.519257,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359648,-99) , 
7, 7.93027, 0, 0, 0.512687,-99)    );
  // itree = 1399
  fBoostWeights.push_back(0.00856473);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307898,-99) , 
5, 2.25371, 1, 0, 0.601005,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553708,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346187,-99) , 
6, 0.820742, 1, 0, 0.478646,-99) , 
11, -4.22584, 0, 0, 0.559677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626396,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506798,-99) , 
8, 0.313864, 1, 0, 0.525794,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.161791,-99) , 
7, 9.81236, 0, 0, 0.432307,-99) , 
4, 1.48405, 1, 0, 0.503154,-99) , 
11, -0.987952, 1, 0, 0.525293,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572505,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414227,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19753,-99) , 
3, 0.998241, 0, 0, 0.359932,-99) , 
1, 8.5, 1, 0, 0.408065,-99) , 
5, 1.17854, 1, 0, 0.445502,-99) , 
3, 0.99747, 1, 0, 0.511103,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375209,-99) , 
1, 6.5, 0, 0, 0.504706,-99)    );
  // itree = 1400
  fBoostWeights.push_back(0.0134076);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541539,-99) , 
10, 0.779777, 1, 0, 0.654219,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49926,-99) , 
8, 0.596103, 0, 0, 0.616131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590033,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36921,-99) , 
0, 61.5, 0, 0, 0.479748,-99) , 
1, 29.5, 1, 0, 0.57944,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684028,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507946,-99) , 
8, 1.3544, 1, 0, 0.590928,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504674,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312978,-99) , 
6, 0.689458, 1, 0, 0.42503,-99) , 
10, 0.104464, 1, 0, 0.501421,-99) , 
2, 13.5, 0, 0, 0.548984,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.760248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606122,-99) , 
11, 0.269681, 1, 0, 0.683742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490898,-99) , 
9, 72.3368, 0, 0, 0.613078,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547302,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.38183,-99) , 
6, 0.59107, 1, 0, 0.475104,-99) , 
3, 0.986707, 1, 0, 0.54406,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566732,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414254,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.089863,-99) , 
5, 2.3205, 1, 0, 0.404599,-99) , 
8, 0.0863653, 1, 0, 0.423537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
7, 117.928, 1, 0, 0.414812,-99) , 
13, 1.5, 0, 0, 0.459871,-99) , 
5, 1.60207, 1, 0, 0.506589,-99)    );
  // itree = 1401
  fBoostWeights.push_back(0.0105661);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419193,-99) , 
5, 1.9477, 1, 0, 0.669422,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511769,-99) , 
4, 1.58939, 0, 0, 0.545669,-99) , 
7, 16.0955, 0, 0, 0.567978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40254,-99) , 
0, 18.5, 1, 0, 0.553848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254948,-99) , 
3, 0.750385, 0, 0, 0.544512,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679176,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544794,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437054,-99) , 
0, 18.5, 0, 0, 0.524015,-99) , 
5, 1.77536, 0, 0, 0.543919,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377323,-99) , 
7, 22.8598, 0, 0, 0.521822,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550312,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368006,-99) , 
6, 0.835101, 0, 0, 0.462426,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274239,-99) , 
2, 15.5, 0, 0, 0.41016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.106679,-99) , 
7, 113.497, 1, 0, 0.392826,-99) , 
4, 1.40425, 1, 0, 0.485528,-99) , 
7, 19.7011, 1, 0, 0.513563,-99)    );
  // itree = 1402
  fBoostWeights.push_back(0.00498166);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642403,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.793109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.557853,-99) , 
0, 17.5, 0, 0, 0.657681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474873,-99) , 
6, 0.82773, 1, 0, 0.591221,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.500958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.312899,-99) , 
1, 68.5, 1, 0, 0.495857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.109049,-99) , 
4, 2.19959, 1, 0, 0.49327,-99) , 
11, -5.70892, 1, 0, 0.503918,-99) , 
11, 9.39579, 0, 0, 0.510577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.236089,-99) , 
3, 0.999776, 1, 0, 0.506187,-99)    );
  // itree = 1403
  fBoostWeights.push_back(0.0075369);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581702,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426414,-99) , 
9, 55.9809, 0, 0, 0.543378,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521531,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387054,-99) , 
9, 92.3337, 1, 0, 0.440406,-99) , 
11, 2.99981, 1, 0, 0.519024,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665392,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.417522,-99) , 
7, 10.4894, 1, 0, 0.43677,-99) , 
9, 18.5139, 1, 0, 0.450063,-99) , 
5, 1.5263, 1, 0, 0.480397,-99) , 
12, -10105.7, 1, 0, 0.487982,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.20867,-99) , 
0, 10.5, 1, 0, 0.334103,-99) , 
7, 8.33734, 0, 0, 0.480131,-99)    );
  // itree = 1404
  fBoostWeights.push_back(0.00940813);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702547,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.784547,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562313,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369904,-99) , 
7, 11.0967, 0, 0, 0.530534,-99) , 
5, 2.28736, 0, 0, 0.546935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.3445,-99) , 
9, 346.492, 1, 0, 0.52578,-99) , 
12, 1164.26, 0, 0, 0.545845,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604907,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480389,-99) , 
6, 0.315362, 1, 0, 0.503421,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615095,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369377,-99) , 
8, 0.130299, 1, 0, 0.422747,-99) , 
5, 1.73073, 1, 0, 0.475688,-99) , 
9, 41.1355, 1, 0, 0.483692,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548748,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.33518,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185978,-99) , 
9, 29.5371, 1, 0, 0.269536,-99) , 
9, 20.9198, 1, 0, 0.376237,-99) , 
9, 34.4227, 0, 0, 0.470866,-99) , 
11, 2.71851, 0, 0, 0.491538,-99)    );
  // itree = 1405
  fBoostWeights.push_back(0.00984212);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532558,-99) , 
6, 0.508691, 1, 0, 0.593106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59719,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47878,-99) , 
3, 0.993963, 0, 0, 0.520914,-99) , 
10, 0.229821, 1, 0, 0.554852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390644,-99) , 
9, 356.405, 1, 0, 0.5416,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67169,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518783,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.212994,-99) , 
9, 90.2958, 1, 0, 0.411723,-99) , 
8, 1.77411, 1, 0, 0.48835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.307686,-99) , 
8, 1.38882, 0, 0, 0.423328,-99) , 
5, 1.908, 1, 0, 0.52468,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600779,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349716,-99) , 
0, 11.5, 0, 0, 0.477746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.229512,-99) , 
7, 64.5164, 1, 0, 0.461382,-99) , 
3, 0.924934, 1, 0, 0.486047,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322476,-99) , 
4, 0.629529, 0, 0, 0.455572,-99) , 
8, 0.447221, 0, 0, 0.508388,-99)    );
  // itree = 1406
  fBoostWeights.push_back(0.00473145);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677135,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463026,-99) , 
7, 34.6056, 1, 0, 0.603763,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.677647,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449278,-99) , 
6, 0.824093, 1, 0, 0.589529,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460407,-99) , 
12, 1542.04, 1, 0, 0.489204,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298911,-99) , 
1, 39.5, 1, 0, 0.481666,-99) , 
2, 51.5, 0, 0, 0.48958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299616,-99) , 
3, 0.999586, 1, 0, 0.485191,-99) , 
11, -8.14074, 1, 0, 0.49199,-99)    );
  // itree = 1407
  fBoostWeights.push_back(0.00897722);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538884,-99) , 
11, 8.28325, 1, 0, 0.640597,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567607,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415927,-99) , 
5, 0.823429, 0, 0, 0.550556,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55191,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405084,-99) , 
12, 6912.6, 0, 0, 0.472451,-99) , 
3, 0.99306, 1, 0, 0.523973,-99) , 
11, 6.00161, 0, 0, 0.538407,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279464,-99) , 
3, 0.999746, 1, 0, 0.532456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381762,-99) , 
5, 1.23602, 0, 0, 0.514081,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137237,-99) , 
4, 2.01865, 1, 0, 0.507419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.318184,-99) , 
11, 5.64085, 1, 0, 0.485536,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.219702,-99) , 
7, 24.8708, 1, 0, 0.464635,-99) , 
2, 11.5, 0, 0, 0.509135,-99)    );
  // itree = 1408
  fBoostWeights.push_back(0.00631438);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418372,-99) , 
7, 164.019, 1, 0, 0.600703,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521231,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286297,-99) , 
4, 2.24711, 1, 0, 0.518862,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322959,-99) , 
4, 1.5886, 0, 0, 0.393054,-99) , 
7, 8.33206, 0, 0, 0.510439,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484805,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242144,-99) , 
3, 0.951628, 1, 0, 0.352743,-99) , 
1, 32.5, 1, 0, 0.501112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.200668,-99) , 
7, 86.6581, 1, 0, 0.492799,-99) , 
2, 52.5, 0, 0, 0.500134,-99)    );
  // itree = 1409
  fBoostWeights.push_back(0.00422227);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705457,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400371,-99) , 
7, 19.8296, 0, 0, 0.50575,-99) , 
12, 1372.6, 1, 0, 0.575622,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482215,-99) , 
11, 6.51275, 0, 0, 0.489835,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349589,-99) , 
5, 2.18998, 1, 0, 0.482749,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334763,-99) , 
11, 11.1179, 1, 0, 0.477708,-99) , 
6, 0.0751571, 1, 0, 0.487271,-99) , 
9, 18.0747, 1, 0, 0.493495,-99)    );
  // itree = 1410
  fBoostWeights.push_back(0.0077507);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471734,-99) , 
9, 64.0811, 0, 0, 0.523668,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.176566,-99) , 
0, 12.5, 1, 0, 0.432046,-99) , 
2, 8.5, 0, 0, 0.513712,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24,-99) , 
5, 1.78591, 1, 0, 0.400271,-99) , 
3, 0.999386, 1, 0, 0.50697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.24601,-99) , 
0, 66.5, 1, 0, 0.503024,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43276,-99) , 
9, 93.436, 1, 0, 0.5203,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130114,-99) , 
1, 16.5, 0, 0, 0.482177,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13878,-99) , 
2, 35.5, 0, 0, 0.40876,-99) , 
7, 71.7097, 1, 0, 0.493246,-99)    );
  // itree = 1411
  fBoostWeights.push_back(0.00359005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.726135,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520454,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.398817,-99) , 
1, 6.5, 0, 0, 0.514334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.383105,-99) , 
3, 0.762973, 0, 0, 0.508701,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0986119,-99) , 
5, 2.56465, 1, 0, 0.506593,-99) , 
12, 23290, 0, 0, 0.511201,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321736,-99) , 
8, 1.07872, 0, 0, 0.395474,-99) , 
4, 0.0887264, 0, 0, 0.500494,-99)    );
  // itree = 1412
  fBoostWeights.push_back(0.0129643);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.678359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550153,-99) , 
2, 13.5, 0, 0, 0.612458,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54268,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.273696,-99) , 
2, 14.5, 1, 0, 0.466772,-99) , 
5, 1.6647, 1, 0, 0.557968,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.456518,-99) , 
8, 0.607275, 1, 0, 0.548899,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322964,-99) , 
2, 16.5, 0, 0, 0.401596,-99) , 
10, 0.132952, 1, 0, 0.471088,-99) , 
8, 0.880875, 0, 0, 0.522827,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66221,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622874,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429854,-99) , 
4, 1.96134, 0, 0, 0.449599,-99) , 
2, 49.5, 0, 0, 0.476603,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420154,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240864,-99) , 
4, 1.1038, 1, 0, 0.340299,-99) , 
9, 80.0274, 1, 0, 0.448184,-99) , 
10, 0.433979, 1, 0, 0.497589,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601946,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390224,-99) , 
0, 13.5, 1, 0, 0.504665,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310736,-99) , 
9, 304.618, 0, 0, 0.440185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239304,-99) , 
8, 1.79468, 1, 0, 0.384305,-99) , 
10, 0.0497332, 0, 0, 0.484877,-99)    );
  // itree = 1413
  fBoostWeights.push_back(0.00535636);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.655367,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.711077,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503753,-99) , 
3, 0.945023, 1, 0, 0.564285,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492893,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217531,-99) , 
3, 0.750597, 0, 0, 0.485762,-99) , 
8, 0.299578, 1, 0, 0.500821,-99) , 
4, 0.425831, 1, 0, 0.509434,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464385,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.335638,-99) , 
5, 0.854365, 0, 0, 0.40742,-99) , 
4, 0.138001, 0, 0, 0.500373,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31121,-99) , 
1, 76.5, 1, 0, 0.495755,-99)    );
  // itree = 1414
  fBoostWeights.push_back(0.0103037);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464869,-99) , 
7, 33.8543, 1, 0, 0.636978,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.750179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466574,-99) , 
5, 1.81226, 1, 0, 0.646679,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.70777,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381077,-99) , 
7, 145.211, 1, 0, 0.623204,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498189,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.256611,-99) , 
7, 74.4349, 1, 0, 0.490637,-99) , 
2, 48.5, 0, 0, 0.501893,-99) , 
6, 0.0571209, 1, 0, 0.513035,-99) , 
11, 6.00503, 0, 0, 0.526888,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414741,-99) , 
10, 0.0435233, 0, 0, 0.558748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.354921,-99) , 
6, 0.235944, 0, 0, 0.491653,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46881,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.186445,-99) , 
0, 17.5, 1, 0, 0.288464,-99) , 
11, 0.539701, 0, 0, 0.372911,-99) , 
8, 0.893394, 1, 0, 0.430725,-99) , 
9, 236.41, 1, 0, 0.507503,-99)    );
  // itree = 1415
  fBoostWeights.push_back(0.0126292);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.684362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521047,-99) , 
5, 1.16335, 0, 0, 0.60621,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.397869,-99) , 
4, 0.608064, 1, 0, 0.483623,-99) , 
10, 0.453409, 1, 0, 0.576821,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454711,-99) , 
7, 13.502, 0, 0, 0.549028,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508378,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309099,-99) , 
10, 1.1604, 0, 0, 0.385528,-99) , 
9, 54.3274, 0, 0, 0.513042,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704046,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358763,-99) , 
6, 0.523441, 1, 0, 0.483949,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162795,-99) , 
5, 2.1368, 1, 0, 0.451518,-99) , 
11, -1.89693, 1, 0, 0.535746,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.631997,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427193,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144145,-99) , 
10, 1.44323, 1, 0, 0.420424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165159,-99) , 
1, 50.5, 1, 0, 0.409509,-99) , 
9, 22.3561, 1, 0, 0.425473,-99) , 
7, 11.8164, 1, 0, 0.452091,-99) , 
5, 1.51289, 1, 0, 0.478517,-99)    );
  // itree = 1416
  fBoostWeights.push_back(0.0105182);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.75864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582233,-99) , 
7, 32.3062, 1, 0, 0.676742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461619,-99) , 
8, 0.676579, 1, 0, 0.562878,-99) , 
5, 1.4282, 1, 0, 0.600807,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399165,-99) , 
7, 28.6944, 0, 0, 0.485212,-99) , 
9, 47.8556, 0, 0, 0.578129,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376061,-99) , 
7, 87.173, 1, 0, 0.509928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272633,-99) , 
3, 0.999707, 1, 0, 0.501959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160375,-99) , 
5, 2.36524, 1, 0, 0.496188,-99) , 
3, 0.980279, 1, 0, 0.530946,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590636,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314547,-99) , 
10, 0.0729, 1, 0, 0.396044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189777,-99) , 
8, 1.95618, 1, 0, 0.344749,-99) , 
10, 0.238769, 0, 0, 0.396294,-99) , 
2, 8.5, 0, 0, 0.517708,-99)    );
  // itree = 1417
  fBoostWeights.push_back(0.00761738);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.724743,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536764,-99) , 
12, -11712.2, 0, 0, 0.65901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491461,-99) , 
2, 12.5, 0, 0, 0.59136,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278183,-99) , 
4, 1.89203, 1, 0, 0.574874,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.316811,-99) , 
2, 9.5, 0, 0, 0.490224,-99) , 
0, 12.5, 1, 0, 0.512516,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.255798,-99) , 
7, 6.99301, 0, 0, 0.507363,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630105,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608933,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.41359,-99) , 
12, 23193.7, 0, 0, 0.432788,-99) , 
12, 1511.22, 1, 0, 0.457375,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447737,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.216251,-99) , 
2, 17.5, 0, 0, 0.333816,-99) , 
11, 3.32358, 1, 0, 0.435686,-99) , 
3, 0.99319, 1, 0, 0.484573,-99) , 
11, 6.26443, 0, 0, 0.495932,-99)    );
  // itree = 1418
  fBoostWeights.push_back(0.01378);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.723314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574193,-99) , 
1, 9.5, 0, 0, 0.669131,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722504,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.578066,-99) , 
13, 1.5, 0, 0, 0.622024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436555,-99) , 
9, 55.3999, 0, 0, 0.578046,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290002,-99) , 
3, 0.921696, 0, 0, 0.420637,-99) , 
6, 0.627004, 1, 0, 0.52915,-99) , 
0, 12.5, 1, 0, 0.563942,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61248,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.48817,-99) , 
5, 1.73125, 1, 0, 0.56656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332184,-99) , 
1, 23.5, 1, 0, 0.548356,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569443,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429578,-99) , 
5, 1.83079, 1, 0, 0.496621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.355449,-99) , 
5, 1.50018, 0, 0, 0.4459,-99) , 
7, 13.6852, 0, 0, 0.512972,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454552,-99) , 
9, 120.05, 1, 0, 0.560783,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436479,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.1299,-99) , 
7, 131.454, 1, 0, 0.388645,-99) , 
5, 1.38568, 1, 0, 0.483214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.170189,-99) , 
0, 26.5, 0, 0, 0.432017,-99) , 
7, 39.9032, 1, 0, 0.494442,-99) , 
3, 0.962661, 1, 0, 0.515605,-99)    );
  // itree = 1419
  fBoostWeights.push_back(0.0134247);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743437,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421996,-99) , 
8, 0.334931, 0, 0, 0.555755,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235782,-99) , 
11, -0.403968, 1, 0, 0.423052,-99) , 
5, 1.92047, 1, 0, 0.52954,-99) , 
12, 2547.95, 1, 0, 0.555414,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.680205,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5983,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427328,-99) , 
7, 18.1427, 0, 0, 0.507903,-99) , 
12, -1228.23, 1, 0, 0.568844,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570315,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435004,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214721,-99) , 
3, 0.935828, 0, 0, 0.310497,-99) , 
6, 0.187441, 1, 0, 0.381726,-99) , 
3, 0.965545, 0, 0, 0.474272,-99) , 
12, 2168.06, 0, 0, 0.526907,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671237,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458367,-99) , 
2, 15.5, 0, 0, 0.556157,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517059,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349645,-99) , 
5, 0.81743, 0, 0, 0.477257,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532216,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362727,-99) , 
10, 0.0555926, 1, 0, 0.39443,-99) , 
5, 1.54725, 1, 0, 0.438653,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.209409,-99) , 
5, 2.16519, 1, 0, 0.426256,-99) , 
11, 6.26527, 0, 0, 0.456374,-99) , 
3, 0.988546, 1, 0, 0.49377,-99)    );
  // itree = 1420
  fBoostWeights.push_back(0.00749182);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601746,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508252,-99) , 
8, 1.4891, 0, 0, 0.544222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49413,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189539,-99) , 
3, 0.999441, 1, 0, 0.482322,-99) , 
4, 1.38944, 1, 0, 0.521122,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528726,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269701,-99) , 
11, -0.372806, 1, 0, 0.399074,-99) , 
7, 8.89207, 0, 0, 0.512217,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.18804,-99) , 
1, 84, 1, 0, 0.506882,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577169,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351762,-99) , 
8, 2.96629, 0, 0, 0.440214,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.241366,-99) , 
9, 155.496, 1, 0, 0.394371,-99) , 
8, 2.72381, 1, 0, 0.494506,-99)    );
  // itree = 1421
  fBoostWeights.push_back(0.0108365);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.622697,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560496,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467395,-99) , 
10, 0.162393, 0, 0, 0.499303,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445622,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269378,-99) , 
3, 0.982937, 1, 0, 0.3608,-99) , 
5, 1.92253, 1, 0, 0.478763,-99) , 
8, 0.161507, 1, 0, 0.495577,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.650842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429629,-99) , 
5, 1.52905, 1, 0, 0.566718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.46597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.180498,-99) , 
7, 148.682, 1, 0, 0.414018,-99) , 
9, 98.172, 1, 0, 0.503547,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454469,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304866,-99) , 
8, 0.288221, 0, 0, 0.4299,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173716,-99) , 
7, 44.8593, 1, 0, 0.391803,-99) , 
2, 28.5, 0, 0, 0.432276,-99) , 
10, 0.290164, 1, 0, 0.470131,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.22868,-99) , 
10, 0.0240495, 0, 0, 0.465656,-99)    );
  // itree = 1422
  fBoostWeights.push_back(0.00805913);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.707779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516917,-99) , 
9, 113.583, 1, 0, 0.632485,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485616,-99) , 
6, 0.364153, 1, 0, 0.520379,-99) , 
10, 0.0712753, 1, 0, 0.53907,-99) , 
0, 31.5, 0, 0, 0.558181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34992,-99) , 
9, 402.778, 1, 0, 0.548553,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.553639,-99) , 
11, 4.65858, 1, 0, 0.590644,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402722,-99) , 
5, 1.92464, 1, 0, 0.550122,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487709,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.291157,-99) , 
9, 32.8895, 0, 0, 0.470183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.208057,-99) , 
1, 74.5, 1, 0, 0.460063,-99) , 
11, 3.58464, 0, 0, 0.488817,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230511,-99) , 
3, 0.999579, 1, 0, 0.482225,-99) , 
11, -0.759107, 1, 0, 0.509108,-99)    );
  // itree = 1423
  fBoostWeights.push_back(0.00905802);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.701584,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36832,-99) , 
5, 1.80675, 0, 0, 0.479268,-99) , 
6, 0.620714, 1, 0, 0.579424,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.634921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480715,-99) , 
3, 0.98572, 1, 0, 0.549785,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.114881,-99) , 
0, 36.5, 1, 0, 0.467034,-99) , 
2, 24.5, 0, 0, 0.485396,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.222714,-99) , 
9, 20.9466, 1, 0, 0.359288,-99) , 
9, 29.558, 0, 0, 0.474602,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263728,-99) , 
4, 2.01003, 1, 0, 0.468375,-99) , 
12, 11084.2, 0, 0, 0.479917,-99)    );
  // itree = 1424
  fBoostWeights.push_back(0.0169338);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.809656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64348,-99) , 
3, 0.946048, 0, 0, 0.731856,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414096,-99) , 
11, -0.325234, 1, 0, 0.528892,-99) , 
12, 2623.97, 1, 0, 0.625005,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688412,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501282,-99) , 
7, 21.2297, 1, 0, 0.556096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345425,-99) , 
5, 1.84756, 1, 0, 0.517884,-99) , 
6, 0.361835, 1, 0, 0.565637,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565964,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310269,-99) , 
5, 1.97686, 1, 0, 0.525488,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.190604,-99) , 
5, 2.06411, 1, 0, 0.343359,-99) , 
10, 0.108823, 1, 0, 0.436849,-99) , 
1, 11.5, 0, 0, 0.525527,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.742464,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543646,-99) , 
11, 0.577671, 0, 0, 0.615888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464362,-99) , 
12, -2946.41, 0, 0, 0.576805,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332253,-99) , 
4, 1.54697, 0, 0, 0.390649,-99) , 
3, 0.994647, 0, 0, 0.511814,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450774,-99) , 
5, 1.61404, 1, 0, 0.545493,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481876,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.29015,-99) , 
9, 141.101, 0, 0, 0.40939,-99) , 
12, 6487.36, 0, 0, 0.459232,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52894,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.343686,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132405,-99) , 
4, 1.42749, 1, 0, 0.300732,-99) , 
11, 5.11407, 0, 0, 0.358473,-99) , 
8, 1.42524, 1, 0, 0.420109,-99) , 
9, 71.7582, 1, 0, 0.452935,-99) , 
3, 0.985396, 1, 0, 0.486148,-99)    );
  // itree = 1425
  fBoostWeights.push_back(0.0177768);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.757431,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426129,-99) , 
10, 0.126691, 0, 0, 0.545661,-99) , 
13, 0.5, 1, 0, 0.617887,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596742,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386896,-99) , 
4, 0.350439, 0, 0, 0.483872,-99) , 
9, 108.31, 1, 0, 0.514178,-99) , 
12, 3841.07, 0, 0, 0.559022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670929,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574855,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365566,-99) , 
5, 1.30565, 0, 0, 0.471858,-99) , 
2, 29.5, 0, 0, 0.520977,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340303,-99) , 
12, 5686.7, 1, 0, 0.46699,-99) , 
9, 66.0812, 0, 0, 0.530342,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.747863,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566236,-99) , 
0, 15.5, 1, 0, 0.635361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661084,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40523,-99) , 
5, 2.20503, 0, 0, 0.462425,-99) , 
0, 12.5, 0, 0, 0.57556,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362533,-99) , 
10, 0.428172, 1, 0, 0.525991,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661496,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572714,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279024,-99) , 
8, 2.12073, 0, 0, 0.434333,-99) , 
4, 1.83909, 0, 0, 0.509775,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509992,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271125,-99) , 
5, 1.89437, 1, 0, 0.434104,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.40423,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189484,-99) , 
13, 1.5, 0, 0, 0.260739,-99) , 
0, 14.5, 1, 0, 0.346402,-99) , 
9, 52.3604, 1, 0, 0.404247,-99) , 
8, 0.720705, 1, 0, 0.463147,-99) , 
5, 1.64762, 1, 0, 0.501141,-99)    );
  // itree = 1426
  fBoostWeights.push_back(0.00938977);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.679986,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.624183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.43935,-99) , 
9, 172.925, 0, 0, 0.509628,-99) , 
3, 0.968698, 1, 0, 0.571694,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.55066,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452405,-99) , 
5, 1.76492, 1, 0, 0.527984,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.426975,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.28735,-99) , 
3, 0.992522, 1, 0, 0.365293,-99) , 
9, 236.574, 1, 0, 0.500451,-99) , 
8, 0.662446, 1, 0, 0.522535,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495099,-99) , 
11, -5.46992, 0, 0, 0.56593,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385601,-99) , 
8, 1.35768, 0, 0, 0.449661,-99) , 
12, 6716.77, 0, 0, 0.4806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262048,-99) , 
1, 34.5, 1, 0, 0.460425,-99) , 
13, 0.5, 0, 0, 0.500993,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52393,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268012,-99) , 
10, 0.418585, 0, 0, 0.364893,-99) , 
5, 2.15713, 1, 0, 0.491616,-99)    );
  // itree = 1427
  fBoostWeights.push_back(0.0120617);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688406,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604574,-99) , 
9, 346.481, 0, 0, 0.645498,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432473,-99) , 
4, 1.59875, 1, 0, 0.61136,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642379,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516713,-99) , 
5, 1.56987, 0, 0, 0.572809,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517642,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252067,-99) , 
8, 0.352005, 0, 0, 0.471883,-99) , 
1, 14.5, 0, 0, 0.534011,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538712,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305008,-99) , 
5, 1.91258, 1, 0, 0.496716,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.411859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246207,-99) , 
2, 20.5, 0, 0, 0.349429,-99) , 
0, 22.5, 1, 0, 0.455185,-99) , 
10, 0.210582, 0, 0, 0.501387,-99) , 
10, 0.0534775, 1, 0, 0.515715,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.672302,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339556,-99) , 
7, 13.5309, 0, 0, 0.469179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.258446,-99) , 
7, 57.3849, 1, 0, 0.437048,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235844,-99) , 
3, 0.997908, 0, 0, 0.403829,-99) , 
12, 19775.8, 0, 0, 0.433921,-99) , 
3, 0.997472, 1, 0, 0.499287,-99)    );
  // itree = 1428
  fBoostWeights.push_back(0.0100451);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.729962,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.580693,-99) , 
12, 4922.02, 1, 0, 0.677126,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517344,-99) , 
0, 27.5, 1, 0, 0.630842,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594112,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410457,-99) , 
7, 47.1755, 0, 0, 0.468826,-99) , 
4, 0.109235, 0, 0, 0.566814,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.67301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520456,-99) , 
8, 2.06856, 0, 0, 0.562223,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492609,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332697,-99) , 
9, 32.4865, 0, 0, 0.477553,-99) , 
6, 0.880266, 0, 0, 0.504456,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.086946,-99) , 
5, 2.19399, 1, 0, 0.481821,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352332,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.201191,-99) , 
6, 0.617417, 1, 0, 0.291482,-99) , 
0, 19.5, 1, 0, 0.399578,-99) , 
3, 0.935177, 0, 0, 0.486521,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173074,-99) , 
7, 137.147, 1, 0, 0.480236,-99) , 
4, 0.740277, 1, 0, 0.501902,-99)    );
  // itree = 1429
  fBoostWeights.push_back(0.0101333);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698016,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54391,-99) , 
11, -6.05868, 0, 0, 0.6292,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628801,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374525,-99) , 
10, 0.0788358, 1, 0, 0.491864,-99) , 
9, 121.517, 1, 0, 0.574445,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.785748,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.621949,-99) , 
12, 1770.05, 0, 0, 0.711837,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304441,-99) , 
8, 2.27073, 1, 0, 0.498574,-99) , 
9, 78.334, 1, 0, 0.565459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482703,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329737,-99) , 
11, -3.41565, 0, 0, 0.47063,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.247627,-99) , 
10, 0.636664, 1, 0, 0.461006,-99) , 
2, 24.5, 0, 0, 0.484401,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496892,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321937,-99) , 
6, 0.67159, 1, 0, 0.414471,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.220143,-99) , 
8, 0.532316, 0, 0, 0.355781,-99) , 
9, 32.4003, 0, 0, 0.472124,-99) , 
12, 8613.65, 0, 0, 0.488539,-99)    );
  // itree = 1430
  fBoostWeights.push_back(0.0093956);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515198,-99) , 
1, 34.5, 1, 0, 0.626663,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.537372,-99) , 
0, 13.5, 0, 0, 0.608049,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58376,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410879,-99) , 
12, 3277.26, 0, 0, 0.493662,-99) , 
3, 0.99803, 1, 0, 0.584829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404289,-99) , 
7, 10.8025, 0, 0, 0.561604,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670113,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.66945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483993,-99) , 
8, 0.237953, 1, 0, 0.52242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.387117,-99) , 
13, 1.5, 0, 0, 0.430108,-99) , 
10, 0.104207, 1, 0, 0.46441,-99) , 
9, 22.2149, 1, 0, 0.476557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.110278,-99) , 
10, 4.69555, 1, 0, 0.472096,-99) , 
5, 1.51921, 1, 0, 0.511545,-99)    );
  // itree = 1431
  fBoostWeights.push_back(0.00602414);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.699439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546112,-99) , 
4, 1.40084, 0, 0, 0.620865,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587038,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475581,-99) , 
9, 70.3757, 0, 0, 0.54198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402268,-99) , 
10, 0.0469238, 0, 0, 0.52795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50501,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409039,-99) , 
3, 0.994582, 0, 0, 0.467905,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0193571,-99) , 
7, 231.509, 1, 0, 0.463519,-99) , 
3, 0.987411, 1, 0, 0.498454,-99) , 
11, 6.24008, 0, 0, 0.510118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309328,-99) , 
12, -15254.4, 0, 0, 0.505,-99)    );
  // itree = 1432
  fBoostWeights.push_back(0.00649236);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591774,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520496,-99) , 
5, 1.42405, 1, 0, 0.559336,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.561939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44145,-99) , 
2, 35.5, 0, 0, 0.484449,-99) , 
10, 0.434409, 1, 0, 0.535323,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702476,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488833,-99) , 
8, 2.225, 0, 0, 0.548594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.403899,-99) , 
8, 0.164278, 1, 0, 0.443919,-99) , 
9, 51.5449, 1, 0, 0.475886,-99) , 
5, 1.71591, 1, 0, 0.511941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314984,-99) , 
12, -13438.4, 0, 0, 0.50555,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292519,-99) , 
10, 0.0242438, 0, 0, 0.499827,-99)    );
  // itree = 1433
  fBoostWeights.push_back(0.00786839);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533008,-99) , 
12, 3668.3, 1, 0, 0.64867,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.601489,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412659,-99) , 
8, 1.63835, 1, 0, 0.545611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.194611,-99) , 
4, 1.71355, 1, 0, 0.511643,-99) , 
7, 13.7321, 0, 0, 0.563411,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59452,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481377,-99) , 
7, 28.1414, 1, 0, 0.545081,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.325089,-99) , 
9, 24.4093, 0, 0, 0.469078,-99) , 
8, 1.59444, 0, 0, 0.499148,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482943,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.304714,-99) , 
6, 0.427381, 1, 0, 0.390656,-99) , 
10, 0.124776, 0, 0, 0.484706,-99) , 
10, 0.0848019, 1, 0, 0.499548,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352558,-99) , 
9, 472.721, 1, 0, 0.49288,-99)    );
  // itree = 1434
  fBoostWeights.push_back(0.0104209);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69252,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582753,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.455603,-99) , 
8, 0.873384, 0, 0, 0.543088,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515482,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370871,-99) , 
12, 912.459, 0, 0, 0.471987,-99) , 
4, 1.21052, 1, 0, 0.515254,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4096,-99) , 
12, 1160.51, 0, 0, 0.482375,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.32452,-99) , 
6, 0.227604, 0, 0, 0.445025,-99) , 
1, 9.5, 0, 0, 0.498193,-99) , 
11, -10.6744, 1, 0, 0.504103,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695711,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.360757,-99) , 
2, 15.5, 0, 0, 0.541427,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449127,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.14845,-99) , 
8, 2.26543, 0, 0, 0.230855,-99) , 
8, 0.242417, 1, 0, 0.390081,-99) , 
5, 2.06597, 1, 0, 0.491998,-99)    );
  // itree = 1435
  fBoostWeights.push_back(0.00741009);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692006,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42365,-99) , 
4, 1.06489, 1, 0, 0.564632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.323335,-99) , 
7, 129.613, 1, 0, 0.509868,-99) , 
9, 77.9291, 1, 0, 0.583482,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519351,-99) , 
3, 0.99474, 1, 0, 0.5568,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47621,-99) , 
9, 21.0158, 1, 0, 0.485933,-99) , 
11, 3.68313, 0, 0, 0.501623,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274472,-99) , 
1, 33.5, 1, 0, 0.494001,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198439,-99) , 
7, 64.9334, 1, 0, 0.485988,-99) , 
2, 37.5, 0, 0, 0.49769,-99)    );
  // itree = 1436
  fBoostWeights.push_back(0.0139829);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472026,-99) , 
4, 1.73935, 1, 0, 0.605616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428381,-99) , 
7, 60.6105, 1, 0, 0.589706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472282,-99) , 
5, 1.18968, 0, 0, 0.565379,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47164,-99) , 
5, 1.8545, 0, 0, 0.523688,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453846,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286203,-99) , 
11, 4.46037, 1, 0, 0.381659,-99) , 
11, 6.73116, 0, 0, 0.458851,-99) , 
3, 0.995525, 1, 0, 0.528264,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62473,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464237,-99) , 
9, 202.822, 1, 0, 0.577444,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393008,-99) , 
9, 40.8383, 0, 0, 0.53991,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392432,-99) , 
12, 9126.19, 0, 0, 0.512432,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409742,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239969,-99) , 
3, 0.995422, 0, 0, 0.352094,-99) , 
5, 1.46042, 1, 0, 0.41636,-99) , 
3, 0.988706, 1, 0, 0.474863,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551428,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476098,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262931,-99) , 
6, 0.292636, 1, 0, 0.340151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.162344,-99) , 
1, 32.5, 1, 0, 0.299746,-99) , 
9, 258.377, 0, 0, 0.339498,-99) , 
11, -0.41201, 1, 0, 0.447558,-99) , 
11, 0.462385, 0, 0, 0.485248,-99)    );
  // itree = 1437
  fBoostWeights.push_back(0.00771494);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608486,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513503,-99) , 
2, 14.5, 1, 0, 0.545718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495696,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.286868,-99) , 
7, 23.9657, 1, 0, 0.480176,-99) , 
2, 11.5, 0, 0, 0.521533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.373493,-99) , 
1, 34.5, 1, 0, 0.515064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339435,-99) , 
7, 7.92631, 0, 0, 0.50765,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693266,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.324788,-99) , 
5, 1.37972, 1, 0, 0.429399,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0421476,-99) , 
1, 16.5, 0, 0, 0.395061,-99) , 
12, 9863.7, 0, 0, 0.441205,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0901423,-99) , 
2, 27.5, 0, 0, 0.405906,-99) , 
7, 64.9637, 1, 0, 0.496661,-99)    );
  // itree = 1438
  fBoostWeights.push_back(0.00376161);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6779,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51573,-99) , 
5, 1.54334, 1, 0, 0.611236,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.507697,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333883,-99) , 
1, 39.5, 1, 0, 0.502096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288983,-99) , 
7, 77.3706, 1, 0, 0.494795,-99) , 
2, 52.5, 0, 0, 0.502054,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287199,-99) , 
7, 176.736, 1, 0, 0.499258,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.279433,-99) , 
2, 6.5, 0, 0, 0.495806,-99)    );
  // itree = 1439
  fBoostWeights.push_back(0.0060525);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.691002,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550794,-99) , 
10, 0.296089, 0, 0, 0.610808,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.682212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.444504,-99) , 
12, 831.524, 1, 0, 0.511114,-99) , 
4, 0.348312, 0, 0, 0.565594,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509334,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402244,-99) , 
6, 0.224865, 0, 0, 0.497472,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.160777,-99) , 
7, 142.675, 1, 0, 0.49357,-99) , 
4, 0.808664, 1, 0, 0.515192,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359769,-99) , 
1, 69.5, 1, 0, 0.510253,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400273,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268586,-99) , 
10, 0.0791859, 1, 0, 0.349947,-99) , 
7, 8.12465, 0, 0, 0.501948,-99)    );
  // itree = 1440
  fBoostWeights.push_back(0.0109886);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721323,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.570796,-99) , 
6, 0.446202, 1, 0, 0.628592,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551627,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362917,-99) , 
1, 68.5, 1, 0, 0.54018,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528096,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322032,-99) , 
2, 10.5, 1, 0, 0.446246,-99) , 
7, 14.9294, 0, 0, 0.519269,-99) , 
10, 0.0860082, 1, 0, 0.535183,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395313,-99) , 
10, 0.0441233, 0, 0, 0.52278,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693664,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569318,-99) , 
9, 171.542, 1, 0, 0.627513,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.441797,-99) , 
12, 3963.7, 1, 0, 0.570866,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.333721,-99) , 
9, 59.96, 0, 0, 0.514936,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0670117,-99) , 
2, 8.5, 0, 0, 0.443899,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211825,-99) , 
7, 17.0769, 1, 0, 0.341034,-99) , 
8, 0.406954, 1, 0, 0.429686,-99) , 
5, 1.89437, 1, 0, 0.503778,-99)    );
  // itree = 1441
  fBoostWeights.push_back(0.0127971);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700513,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536298,-99) , 
11, 5.19481, 0, 0, 0.555888,-99) , 
6, 0.176915, 1, 0, 0.577987,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.575909,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454417,-99) , 
4, 0.951982, 0, 0, 0.524543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393673,-99) , 
6, 0.983129, 1, 0, 0.499927,-99) , 
2, 15.5, 0, 0, 0.534594,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.533041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337836,-99) , 
4, 0.991286, 0, 0, 0.422751,-99) , 
8, 0.326504, 0, 0, 0.520467,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695595,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438517,-99) , 
12, 2514.81, 1, 0, 0.603343,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550474,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.361694,-99) , 
4, 1.66894, 0, 0, 0.456485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.108864,-99) , 
7, 8.82054, 0, 0, 0.425361,-99) , 
8, 0.227742, 1, 0, 0.486289,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416383,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.111005,-99) , 
1, 32.5, 1, 0, 0.338512,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0661029,-99) , 
7, 18.0052, 0, 0, 0.281861,-99) , 
10, 0.391172, 1, 0, 0.434117,-99) , 
5, 1.84753, 1, 0, 0.498979,-99)    );
  // itree = 1442
  fBoostWeights.push_back(0.0114277);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.795587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587874,-99) , 
0, 30.5, 0, 0, 0.639243,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544879,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437479,-99) , 
5, 1.14992, 0, 0, 0.526404,-99) , 
7, 29.344, 0, 0, 0.547616,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300737,-99) , 
1, 30.5, 1, 0, 0.538201,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.717398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.583767,-99) , 
7, 85.1133, 0, 0, 0.637113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349899,-99) , 
1, 15.5, 0, 0, 0.592167,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.457024,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303079,-99) , 
10, 0.27544, 0, 0, 0.419492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.135908,-99) , 
1, 12.5, 0, 0, 0.392817,-99) , 
9, 75.0318, 1, 0, 0.472359,-99) , 
7, 44.2852, 1, 0, 0.522339,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.625881,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569782,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414336,-99) , 
11, 0.074241, 0, 0, 0.525316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311612,-99) , 
10, 0.114309, 1, 0, 0.439535,-99) , 
11, -2.75956, 1, 0, 0.478381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.182266,-99) , 
0, 14.5, 1, 0, 0.44416,-99) , 
2, 9.5, 0, 0, 0.509293,-99)    );
  // itree = 1443
  fBoostWeights.push_back(0.00618914);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.63971,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635095,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.499368,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358834,-99) , 
9, 29.0066, 0, 0, 0.488229,-99) , 
5, 1.81913, 0, 0, 0.49813,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.609177,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51184,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31164,-99) , 
13, 1.5, 0, 0, 0.396683,-99) , 
8, 0.0813982, 1, 0, 0.431305,-99) , 
5, 1.87238, 1, 0, 0.48305,-99) , 
11, -9.3623, 1, 0, 0.490233,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346854,-99) , 
9, 465.588, 1, 0, 0.483834,-99)    );
  // itree = 1444
  fBoostWeights.push_back(0.00609826);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.686544,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535397,-99) , 
6, 0.663086, 1, 0, 0.610058,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716099,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496822,-99) , 
4, 0.701604, 1, 0, 0.547149,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.475953,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321713,-99) , 
3, 0.997652, 1, 0, 0.460946,-99) , 
11, -4.72798, 1, 0, 0.47455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.265163,-99) , 
4, 2.10572, 1, 0, 0.471398,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278163,-99) , 
1, 5.5, 0, 0, 0.466353,-99) , 
12, -6027.05, 1, 0, 0.478986,-99)    );
  // itree = 1445
  fBoostWeights.push_back(0.00656016);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603597,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528931,-99) , 
6, 0.292742, 1, 0, 0.551454,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.645787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.407666,-99) , 
8, 0.113718, 1, 0, 0.46753,-99) , 
5, 1.93765, 1, 0, 0.537499,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346234,-99) , 
4, 1.46101, 0, 0, 0.445863,-99) , 
9, 32.3067, 0, 0, 0.52682,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27338,-99) , 
2, 13.5, 1, 0, 0.40185,-99) , 
9, 476.805, 1, 0, 0.520345,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317227,-99) , 
1, 5.5, 0, 0, 0.515329,-99)    );
  // itree = 1446
  fBoostWeights.push_back(0.0109079);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7725,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592522,-99) , 
2, 16.5, 0, 0, 0.673988,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474266,-99) , 
7, 64.2837, 1, 0, 0.633021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419639,-99) , 
11, -4.1165, 0, 0, 0.586053,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.728632,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569109,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34616,-99) , 
5, 2.05846, 1, 0, 0.544111,-99) , 
12, 48.0432, 0, 0, 0.578544,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.58451,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345617,-99) , 
10, 1.07105, 0, 0, 0.43047,-99) , 
10, 0.420414, 1, 0, 0.53737,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467121,-99) , 
5, 1.53779, 1, 0, 0.601741,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482064,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.169241,-99) , 
7, 56.8818, 1, 0, 0.469075,-99) , 
2, 35.5, 0, 0, 0.482449,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454137,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272607,-99) , 
10, 0.219383, 0, 0, 0.3533,-99) , 
11, 1.25301, 1, 0, 0.464787,-99) , 
11, 2.48247, 0, 0, 0.484621,-99) , 
6, 1.00327, 0, 0, 0.498036,-99)    );
  // itree = 1447
  fBoostWeights.push_back(0.00839681);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703441,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413805,-99) , 
5, 1.68354, 1, 0, 0.603861,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.623646,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493695,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.40048, 1, 0, 0.489731,-99) , 
8, 0.0970345, 1, 0, 0.502799,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497167,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.235487,-99) , 
9, 20.6878, 1, 0, 0.362709,-99) , 
9, 29.5854, 0, 0, 0.492744,-99) , 
8, 1.88021, 0, 0, 0.504494,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617698,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.585021,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469466,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.308201,-99) , 
4, 0.945827, 0, 0, 0.405456,-99) , 
1, 29.5, 0, 0, 0.431144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.277362,-99) , 
9, 236.574, 1, 0, 0.406081,-99) , 
0, 10.5, 1, 0, 0.432748,-99) , 
8, 2.30108, 1, 0, 0.489488,-99)    );
  // itree = 1448
  fBoostWeights.push_back(0.00946619);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.61841,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524852,-99) , 
4, 0.78975, 1, 0, 0.550295,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272917,-99) , 
7, 145.163, 1, 0, 0.543369,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342375,-99) , 
4, 1.36243, 0, 0, 0.437075,-99) , 
9, 32.4865, 0, 0, 0.53025,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547122,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400042,-99) , 
6, 0.915515, 1, 0, 0.509424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.320218,-99) , 
5, 1.96583, 1, 0, 0.478686,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400689,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.116654,-99) , 
7, 25.4444, 1, 0, 0.301768,-99) , 
10, 0.314309, 1, 0, 0.433716,-99) , 
1, 9.5, 0, 0, 0.507358,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.465297,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.232112,-99) , 
9, 597.447, 0, 0, 0.336597,-99) , 
9, 425.972, 1, 0, 0.49767,-99)    );
  // itree = 1449
  fBoostWeights.push_back(0.0127334);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.739149,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700643,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508471,-99) , 
9, 158.932, 1, 0, 0.605042,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463271,-99) , 
9, 69.8529, 0, 0, 0.556397,-99) , 
4, 0.719571, 1, 0, 0.605236,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.620956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516112,-99) , 
11, 3.89683, 0, 0, 0.540053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396707,-99) , 
1, 43.5, 1, 0, 0.522868,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.281302,-99) , 
9, 81.5272, 0, 0, 0.411716,-99) , 
7, 12.6741, 0, 0, 0.49787,-99) , 
12, 7081.4, 0, 0, 0.521344,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.6232,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345672,-99) , 
0, 16.5, 1, 0, 0.574084,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.477542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332691,-99) , 
12, 1810.75, 0, 0, 0.428706,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115317,-99) , 
5, 2.44126, 1, 0, 0.417329,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0222754,-99) , 
8, 1.71049, 1, 0, 0.245781,-99) , 
10, 0.191921, 0, 0, 0.368527,-99) , 
10, 0.0732253, 1, 0, 0.416824,-99) , 
5, 1.84319, 1, 0, 0.494684,-99)    );
  // itree = 1450
  fBoostWeights.push_back(0.0101691);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.700795,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.732,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.519403,-99) , 
12, 4214.37, 0, 0, 0.619826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.409089,-99) , 
9, 103.661, 1, 0, 0.552126,-99) , 
10, 0.401915, 1, 0, 0.589185,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.487933,-99) , 
11, -5.51622, 0, 0, 0.638218,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522655,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.165463,-99) , 
4, 2.04229, 1, 0, 0.511048,-99) , 
12, 7225.54, 0, 0, 0.543405,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748359,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424792,-99) , 
3, 0.749845, 0, 0, 0.608008,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.4881,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.381274,-99) , 
8, 1.9266, 1, 0, 0.454698,-99) , 
3, 0.836909, 1, 0, 0.469065,-99) , 
6, 0.696365, 0, 0, 0.497679,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.259298,-99) , 
7, 64.3777, 1, 0, 0.490776,-99) , 
2, 36.5, 0, 0, 0.502694,-99)    );
  // itree = 1451
  fBoostWeights.push_back(0.0105165);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.541051,-99) , 
4, 1.05329, 1, 0, 0.614947,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448142,-99) , 
0, 50.5, 0, 0, 0.519788,-99) , 
1, 22.5, 1, 0, 0.569012,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.605828,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49312,-99) , 
5, 1.42558, 1, 0, 0.530567,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345938,-99) , 
5, 1.05493, 0, 0, 0.49813,-99) , 
2, 16.5, 0, 0, 0.52629,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.615881,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.470503,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234573,-99) , 
5, 2.29997, 1, 0, 0.456386,-99) , 
8, 0.430621, 1, 0, 0.520667,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594274,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329614,-99) , 
2, 11.5, 0, 0, 0.499492,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.345436,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
12, 2337.52, 0, 0, 0.317618,-99) , 
4, 1.52789, 1, 0, 0.400308,-99) , 
11, 0.723714, 0, 0, 0.456181,-99) , 
5, 1.84767, 1, 0, 0.50803,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.299031,-99) , 
7, 141.156, 1, 0, 0.502661,-99)    );
  // itree = 1452
  fBoostWeights.push_back(0.00701417);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.671449,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.556513,-99) , 
0, 21.5, 0, 0, 0.590652,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.39827,-99) , 
1, 40.5, 1, 0, 0.572668,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.693009,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.498472,-99) , 
4, 1.43577, 0, 0, 0.565733,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415095,-99) , 
7, 28.7398, 1, 0, 0.483848,-99) , 
6, 1.0062, 0, 0, 0.50154,-99) , 
6, 0.362583, 1, 0, 0.527665,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.524239,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313303,-99) , 
11, 0.190434, 0, 0, 0.415168,-99) , 
10, 0.0441414, 0, 0, 0.517538,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332461,-99) , 
5, 2.30291, 1, 0, 0.512116,-99)    );
  // itree = 1453
  fBoostWeights.push_back(0.00699554);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.705137,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.552554,-99) , 
11, -6.19549, 1, 0, 0.573453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428543,-99) , 
3, 0.971732, 0, 0, 0.538236,-99) , 
3, 0.88234, 1, 0, 0.55956,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528901,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305946,-99) , 
1, 33.5, 1, 0, 0.521436,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479526,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0204882,-99) , 
1, 14.5, 0, 0, 0.409407,-99) , 
7, 59.9342, 1, 0, 0.507851,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.311172,-99) , 
3, 0.747139, 0, 0, 0.501291,-99) , 
13, 1.5, 0, 0, 0.518994,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.368511,-99) , 
5, 2.31824, 1, 0, 0.514887,-99)    );
  // itree = 1454
  fBoostWeights.push_back(0.0101951);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.746796,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598058,-99) , 
0, 22.5, 0, 0, 0.646194,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496424,-99) , 
1, 29.5, 1, 0, 0.609744,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.408843,-99) , 
9, 56.8528, 0, 0, 0.565711,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667602,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554541,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173705,-99) , 
4, 1.74338, 1, 0, 0.506187,-99) , 
11, -1.84185, 1, 0, 0.568908,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586981,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476939,-99) , 
12, -2563.3, 1, 0, 0.495297,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438978,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136162,-99) , 
6, 0.335964, 0, 0, 0.364916,-99) , 
0, 12.5, 0, 0, 0.475085,-99) , 
7, 11.8926, 1, 0, 0.489608,-99) , 
4, 0.56795, 1, 0, 0.504694,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463041,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.246024,-99) , 
4, 1.36598, 0, 0, 0.346356,-99) , 
7, 9.09872, 0, 0, 0.491513,-99)    );
  // itree = 1455
  fBoostWeights.push_back(0.00725152);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688654,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646282,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661246,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.494224,-99) , 
7, 53.0796, 1, 0, 0.618933,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518787,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.339077,-99) , 
5, 1.35819, 1, 0, 0.44997,-99) , 
9, 86.9954, 0, 0, 0.548292,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567182,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464156,-99) , 
6, 1.01103, 0, 0, 0.476377,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.535389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.288437,-99) , 
11, 9.09481, 0, 0, 0.379619,-99) , 
3, 0.998138, 1, 0, 0.464132,-99) , 
4, 0.677262, 1, 0, 0.484786,-99) , 
9, 18.2655, 1, 0, 0.491109,-99) , 
11, -10.7248, 1, 0, 0.497378,-99)    );
  // itree = 1456
  fBoostWeights.push_back(0.0103744);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76176,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540676,-99) , 
5, 1.79623, 1, 0, 0.690281,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503313,-99) , 
11, 7.38869, 1, 0, 0.620106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569223,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.362867,-99) , 
2, 29.5, 0, 0, 0.44384,-99) , 
10, 0.298708, 1, 0, 0.554358,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.676414,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51731,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394088,-99) , 
4, 1.48215, 1, 0, 0.489638,-99) , 
9, 21.7098, 1, 0, 0.502077,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.572682,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413265,-99) , 
3, 0.994538, 0, 0, 0.454431,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206251,-99) , 
0, 16.5, 1, 0, 0.424713,-99) , 
7, 15.9966, 0, 0, 0.474693,-99) , 
11, 3.68501, 0, 0, 0.490771,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.225715,-99) , 
9, 660.182, 1, 0, 0.48573,-99)    );
  // itree = 1457
  fBoostWeights.push_back(0.0116109);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.54195,-99) , 
9, 226.662, 1, 0, 0.631483,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587848,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.484492,-99) , 
11, -0.775782, 1, 0, 0.521852,-99) , 
13, 1.5, 0, 0, 0.552749,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586067,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432141,-99) , 
12, 2024.05, 1, 0, 0.502389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.351352,-99) , 
9, 46.6631, 1, 0, 0.460783,-99) , 
9, 56.028, 0, 0, 0.530139,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.358837,-99) , 
7, 108.52, 1, 0, 0.519387,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654439,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.413839,-99) , 
7, 35.2048, 1, 0, 0.58869,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590012,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442959,-99) , 
6, 0.710935, 0, 0, 0.526291,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530776,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332826,-99) , 
9, 22.1616, 1, 0, 0.388855,-99) , 
10, 0.469067, 1, 0, 0.467841,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.547211,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271978,-99) , 
9, 158.739, 0, 0, 0.4365,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393019,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.226796,-99) , 
12, 786.554, 1, 0, 0.275005,-99) , 
2, 10.5, 1, 0, 0.357054,-99) , 
10, 0.183315, 0, 0, 0.418907,-99) , 
6, 1.00445, 0, 0, 0.443215,-99) , 
4, 1.34904, 1, 0, 0.490893,-99)    );
  // itree = 1458
  fBoostWeights.push_back(0.00844448);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.765382,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497395,-99) , 
12, 8460.12, 0, 0, 0.513839,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567249,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239725,-99) , 
10, 0.776879, 0, 0, 0.352947,-99) , 
7, 45.6094, 1, 0, 0.502412,-99) , 
2, 35.5, 0, 0, 0.513187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.227681,-99) , 
7, 100.76, 1, 0, 0.507274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.574386,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.365069,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.105639,-99) , 
2, 30.5, 0, 0, 0.322782,-99) , 
7, 122.541, 0, 0, 0.401327,-99) , 
1, 37.5, 1, 0, 0.497913,-99)    );
  // itree = 1459
  fBoostWeights.push_back(0.0112723);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.845826,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.53589,-99) , 
1, 40.5, 1, 0, 0.692765,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463544,-99) , 
7, 135.173, 1, 0, 0.638249,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545861,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402516,-99) , 
7, 52.2466, 1, 0, 0.534798,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.289335,-99) , 
1, 34.5, 1, 0, 0.52152,-99) , 
2, 41.5, 0, 0, 0.535618,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.306868,-99) , 
1, 71.5, 1, 0, 0.526875,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.695201,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449207,-99) , 
3, 0.995986, 0, 0, 0.56843,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496179,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379453,-99) , 
4, 1.28316, 1, 0, 0.444754,-99) , 
4, 1.63816, 0, 0, 0.478571,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271424,-99) , 
6, 0.0963496, 0, 0, 0.45596,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.10586,-99) , 
7, 44.3409, 1, 0, 0.442516,-99) , 
1, 10.5, 0, 0, 0.498581,-99)    );
  // itree = 1460
  fBoostWeights.push_back(0.00802689);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.694222,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502114,-99) , 
3, 0.898035, 1, 0, 0.52762,-99) , 
11, -5.46714, 1, 0, 0.544176,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.629428,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481716,-99) , 
2, 30.5, 0, 0, 0.496634,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.337017,-99) , 
1, 33.5, 1, 0, 0.480961,-99) , 
6, 0.662173, 1, 0, 0.516027,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.336015,-99) , 
8, 0.126396, 0, 0, 0.506167,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.626301,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.451558,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.206316,-99) , 
7, 23.5428, 1, 0, 0.409576,-99) , 
2, 24.5, 0, 0, 0.443325,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.178246,-99) , 
10, 1.8567, 1, 0, 0.427362,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.132476,-99) , 
8, 2.93122, 1, 0, 0.417538,-99) , 
5, 1.97574, 1, 0, 0.492067,-99)    );
  // itree = 1461
  fBoostWeights.push_back(0.00531078);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.721675,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474203,-99) , 
6, 0.749357, 1, 0, 0.61544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.689939,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543742,-99) , 
8, 0.906778, 0, 0, 0.629221,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509974,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.377862,-99) , 
8, 2.95986, 1, 0, 0.503418,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.349127,-99) , 
9, 29.9013, 0, 0, 0.494526,-99) , 
10, 1.2547, 0, 0, 0.503569,-99) , 
11, -6.63895, 1, 0, 0.511995,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.295853,-99) , 
7, 129.527, 1, 0, 0.504067,-99)    );
  // itree = 1462
  fBoostWeights.push_back(0.00781384);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704729,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618078,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.506149,-99) , 
12, 1797.72, 0, 0, 0.579796,-99) , 
8, 2.21258, 0, 0, 0.623072,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472099,-99) , 
4, 0.647177, 0, 0, 0.596915,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394652,-99) , 
8, 0.293653, 0, 0, 0.561978,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.788728,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591737,-99) , 
7, 59.0588, 0, 0, 0.690125,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485994,-99) , 
13, 0.5, 0, 0, 0.614319,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.503681,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.340325,-99) , 
5, 2.15713, 1, 0, 0.494577,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292038,-99) , 
7, 45.6807, 1, 0, 0.483885,-99) , 
2, 29.5, 0, 0, 0.500956,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342369,-99) , 
7, 92.7946, 1, 0, 0.492002,-99) , 
9, 46.5812, 1, 0, 0.507581,-99)    );
  // itree = 1463
  fBoostWeights.push_back(0.00780398);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.722825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546953,-99) , 
10, 0.310014, 0, 0, 0.621133,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688218,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598563,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42582,-99) , 
10, 0.329633, 1, 0, 0.523543,-99) , 
8, 0.786107, 1, 0, 0.57866,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.534811,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.462652,-99) , 
9, 109.52, 1, 0, 0.495775,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.198565,-99) , 
1, 58.5, 1, 0, 0.488843,-99) , 
4, 0.619756, 1, 0, 0.507564,-99) , 
6, 1.0139, 0, 0, 0.518926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.543598,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.424621,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.230638,-99) , 
7, 21.8633, 0, 0, 0.331479,-99) , 
4, 1.63012, 0, 0, 0.406521,-99) , 
9, 33.0515, 0, 0, 0.506557,-99)    );
  // itree = 1464
  fBoostWeights.push_back(0.00783005);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.795847,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.628693,-99) , 
1, 27.5, 1, 0, 0.706769,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.696515,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376797,-99) , 
9, 76.9667, 1, 0, 0.513339,-99) , 
0, 52.5, 1, 0, 0.606228,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508209,-99) , 
3, 0.85225, 1, 0, 0.51864,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.137428,-99) , 
0, 40.5, 1, 0, 0.511417,-99) , 
2, 29.5, 0, 0, 0.522987,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.546997,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473587,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.266413,-99) , 
11, 5.42893, 0, 0, 0.377135,-99) , 
12, 8875.23, 0, 0, 0.42419,-99) , 
3, 0.998796, 1, 0, 0.511998,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.305799,-99) , 
1, 63.5, 1, 0, 0.506616,-99)    );
  // itree = 1465
  fBoostWeights.push_back(0.00943267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.748328,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563866,-99) , 
11, -4.17315, 1, 0, 0.672853,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704185,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544906,-99) , 
3, 0.919148, 0, 0, 0.637839,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471134,-99) , 
3, 0.990084, 1, 0, 0.595426,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64011,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.471131,-99) , 
10, 1.07511, 0, 0, 0.504455,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.173205,-99) , 
5, 1.96385, 1, 0, 0.483637,-99) , 
8, 0.70827, 1, 0, 0.52138,-99) , 
12, 7068.82, 0, 0, 0.551619,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.633908,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643447,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489611,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.346443,-99) , 
0, 18.5, 1, 0, 0.472702,-99) , 
10, 0.702532, 0, 0, 0.482775,-99) , 
5, 0.919028, 1, 0, 0.494026,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303245,-99) , 
7, 34.7038, 1, 0, 0.478987,-99) , 
1, 15.5, 0, 0, 0.506621,-99)    );
  // itree = 1466
  fBoostWeights.push_back(0.00950291);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.734855,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.567565,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.432978,-99) , 
7, 21.0476, 0, 0, 0.539459,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495424,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34292,-99) , 
10, 0.455961, 1, 0, 0.465212,-99) , 
1, 14.5, 0, 0, 0.497445,-99) , 
10, 0.0353633, 1, 0, 0.507389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.321604,-99) , 
9, 483.199, 1, 0, 0.500289,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.715246,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.551262,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.369222,-99) , 
10, 0.445004, 1, 0, 0.484777,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27253,-99) , 
3, 0.965573, 1, 0, 0.340482,-99) , 
5, 1.57403, 1, 0, 0.427783,-99) , 
4, 1.89452, 0, 0, 0.44683,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.254024,-99) , 
2, 9.5, 0, 0, 0.417951,-99) , 
8, 2.29136, 1, 0, 0.482434,-99)    );
  // itree = 1467
  fBoostWeights.push_back(0.0121267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.725785,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.653421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496615,-99) , 
7, 41.8583, 1, 0, 0.559156,-99) , 
8, 0.768689, 1, 0, 0.594766,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.654918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522634,-99) , 
3, 0.954442, 0, 0, 0.584666,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34907,-99) , 
10, 0.265377, 1, 0, 0.447059,-99) , 
3, 0.985186, 1, 0, 0.51647,-99) , 
2, 18.5, 0, 0, 0.545319,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.433211,-99) , 
8, 0.262047, 0, 0, 0.532461,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.667003,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.460554,-99) , 
9, 284.366, 0, 0, 0.491479,-99) , 
6, 0.966335, 0, 0, 0.528869,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652534,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.467182,-99) , 
7, 27.1728, 0, 0, 0.53314,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379419,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.072619,-99) , 
4, 2.01174, 1, 0, 0.365447,-99) , 
8, 0.519159, 1, 0, 0.430791,-99) , 
7, 14.6835, 1, 0, 0.472907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.249361,-99) , 
7, 45.9813, 1, 0, 0.446962,-99) , 
4, 1.28374, 1, 0, 0.495679,-99)    );
  // itree = 1468
  fBoostWeights.push_back(0.00320518);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652891,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.648535,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.515348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.461746,-99) , 
12, 5611.95, 1, 0, 0.498145,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.189595,-99) , 
7, 119.362, 1, 0, 0.495596,-99) , 
12, -10653.9, 1, 0, 0.501297,-99) , 
2, 52.5, 0, 0, 0.50842,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300742,-99) , 
1, 70.5, 1, 0, 0.503753,-99)    );
  // itree = 1469
  fBoostWeights.push_back(0.0085424);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522091,-99) , 
3, 0.998589, 0, 0, 0.530508,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.496149,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.287093,-99) , 
7, 27.0367, 1, 0, 0.406537,-99) , 
3, 0.999096, 1, 0, 0.519857,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.370529,-99) , 
3, 0.823671, 0, 0, 0.509804,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.121667,-99) , 
5, 2.30111, 1, 0, 0.505098,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.659049,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463276,-99) , 
4, 1.85633, 1, 0, 0.559022,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.536564,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.434936,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.271716,-99) , 
7, 22.5068, 0, 0, 0.349082,-99) , 
8, 0.179172, 0, 0, 0.426463,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262965,-99) , 
8, 0.315366, 1, 0, 0.378077,-99) , 
4, 1.65023, 0, 0, 0.433147,-99) , 
8, 0.445111, 0, 0, 0.487109,-99)    );
  // itree = 1470
  fBoostWeights.push_back(0.00684462);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.706671,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.596595,-99) , 
0, 19.5, 0, 0, 0.632292,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.492121,-99) , 
6, 0.851423, 1, 0, 0.588246,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.761079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.511364,-99) , 
10, 0.0945934, 1, 0, 0.65144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448145,-99) , 
12, 3647.06, 1, 0, 0.582544,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539046,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.404015,-99) , 
7, 72.3836, 1, 0, 0.514834,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.508917,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400714,-99) , 
9, 168.03, 0, 0, 0.438905,-99) , 
7, 19.8298, 0, 0, 0.480911,-99) , 
0, 10.5, 1, 0, 0.493045,-99) , 
11, -5.57534, 1, 0, 0.503865,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313674,-99) , 
4, 2.0612, 1, 0, 0.498796,-99)    );
  // itree = 1471
  fBoostWeights.push_back(0.0104268);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.762272,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542615,-99) , 
4, 0.586508, 1, 0, 0.614764,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.660775,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577022,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.453874,-99) , 
2, 30.5, 0, 0, 0.511279,-99) , 
9, 56.5514, 1, 0, 0.57362,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520715,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334839,-99) , 
10, 0.507156, 1, 0, 0.431895,-99) , 
3, 0.980928, 0, 0, 0.516482,-99) , 
10, 0.177521, 1, 0, 0.550196,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657515,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502935,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239427,-99) , 
5, 2.32402, 1, 0, 0.494792,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.263251,-99) , 
1, 19.5, 1, 0, 0.480575,-99) , 
2, 21.5, 0, 0, 0.493113,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.637145,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458348,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.244118,-99) , 
3, 0.995402, 1, 0, 0.412451,-99) , 
4, 1.79497, 0, 0, 0.455493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.237199,-99) , 
1, 15.5, 0, 0, 0.409969,-99) , 
7, 32.0094, 1, 0, 0.474393,-99) , 
5, 1.32111, 1, 0, 0.497495,-99)    );
  // itree = 1472
  fBoostWeights.push_back(0.00756815);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.664973,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.560707,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414272,-99) , 
9, 24.1173, 0, 0, 0.54345,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.449656,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0876522,-99) , 
9, 71.3592, 1, 0, 0.385666,-99) , 
5, 2.06682, 1, 0, 0.525311,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.531972,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.415995,-99) , 
2, 11.5, 0, 0, 0.486542,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491922,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.231035,-99) , 
8, 0.74287, 1, 0, 0.315737,-99) , 
10, 0.28389, 1, 0, 0.465443,-99) , 
9, 116.087, 1, 0, 0.496579,-99) , 
11, -10.7136, 1, 0, 0.501485,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.313006,-99) , 
1, 5.5, 0, 0, 0.496023,-99)    );
  // itree = 1473
  fBoostWeights.push_back(0.00674001);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673986,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603198,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.512714,-99) , 
10, 0.105601, 1, 0, 0.54087,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.559921,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.399337,-99) , 
8, 0.704016, 1, 0, 0.476907,-99) , 
4, 1.36064, 1, 0, 0.51724,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509423,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.410528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280479,-99) , 
8, 1.17558, 0, 0, 0.344318,-99) , 
10, 1.11945, 0, 0, 0.393025,-99) , 
9, 40.6181, 0, 0, 0.501806,-99) , 
9, 20.9683, 1, 0, 0.50931,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280132,-99) , 
10, 4.00257, 1, 0, 0.505093,-99)    );
  // itree = 1474
  fBoostWeights.push_back(0.0104654);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.718149,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.668361,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.632639,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488128,-99) , 
2, 35.5, 0, 0, 0.529644,-99) , 
10, 0.149585, 1, 0, 0.565768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421891,-99) , 
2, 10.5, 0, 0, 0.54012,-99) , 
5, 1.23394, 0, 0, 0.560693,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.714614,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.544767,-99) , 
5, 1.87132, 1, 0, 0.643352,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.497965,-99) , 
1, 10.5, 0, 0, 0.590998,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608877,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.454671,-99) , 
5, 1.95015, 1, 0, 0.563718,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548823,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.419072,-99) , 
12, 6755.96, 0, 0, 0.449183,-99) , 
13, 1.5, 0, 0, 0.48442,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.60181,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36833,-99) , 
0, 23.5, 0, 0, 0.412333,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.136633,-99) , 
7, 50.6308, 1, 0, 0.386685,-99) , 
8, 1.96314, 1, 0, 0.460645,-99) , 
9, 35.2, 1, 0, 0.479124,-99) , 
5, 1.28972, 1, 0, 0.503854,-99)    );
  // itree = 1475
  fBoostWeights.push_back(0.00951434);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588829,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.474559,-99) , 
12, -2172.92, 0, 0, 0.562651,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504161,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.342831,-99) , 
4, 1.14933, 0, 0, 0.451329,-99) , 
8, 0.450515, 0, 0, 0.538588,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372933,-99) , 
12, 16127.4, 1, 0, 0.527721,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.558962,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.463267,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.12532, 1, 0, 0.451071,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.385928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.130903,-99) , 
6, 0.459657, 1, 0, 0.272884,-99) , 
12, 2189.35, 0, 0, 0.395054,-99) , 
8, 0.410493, 1, 0, 0.433457,-99) , 
3, 0.946393, 0, 0, 0.505275,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47736,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.239779,-99) , 
12, 4002.64, 1, 0, 0.334958,-99) , 
8, 0.518315, 1, 0, 0.38537,-99) , 
9, 334.373, 1, 0, 0.491149,-99)    );
  // itree = 1476
  fBoostWeights.push_back(0.00417741);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.713294,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.509735,-99) , 
5, 1.61222, 1, 0, 0.623468,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526971,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380143,-99) , 
7, 137.17, 1, 0, 0.522319,-99) , 
8, 2.84518, 0, 0, 0.531316,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.392849,-99) , 
1, 6.5, 0, 0, 0.52506,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.372856,-99) , 
9, 461.387, 1, 0, 0.518155,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.332596,-99) , 
3, 0.999499, 1, 0, 0.51062,-99)    );
  // itree = 1477
  fBoostWeights.push_back(0.00779563);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.577133,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.485656,-99) , 
3, 0.991874, 1, 0, 0.537131,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566951,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412007,-99) , 
4, 1.61089, 0, 0, 0.460544,-99) , 
9, 55.9609, 0, 0, 0.515173,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.571073,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430676,-99) , 
4, 1.56461, 0, 0, 0.470493,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211016,-99) , 
0, 11.5, 1, 0, 0.404375,-99) , 
7, 9.16204, 0, 0, 0.504869,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.310473,-99) , 
9, 547.558, 1, 0, 0.499409,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.562706,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.395717,-99) , 
4, 0.66423, 1, 0, 0.436113,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.268868,-99) , 
5, 1.67906, 1, 0, 0.400103,-99) , 
9, 47.1899, 1, 0, 0.435762,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210005,-99) , 
5, 1.9586, 1, 0, 0.414317,-99) , 
8, 2.39751, 1, 0, 0.482944,-99)    );
  // itree = 1478
  fBoostWeights.push_back(0.0107484);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.80105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542803,-99) , 
10, 0.170423, 1, 0, 0.676848,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.610989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.483106,-99) , 
9, 140.018, 1, 0, 0.562791,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.435926,-99) , 
4, 1.45587, 1, 0, 0.540276,-99) , 
3, 0.960903, 1, 0, 0.577493,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.666974,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.687945,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473378,-99) , 
6, 0.130344, 1, 0, 0.535624,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.221795,-99) , 
12, 4081.09, 1, 0, 0.425968,-99) , 
5, 1.50715, 1, 0, 0.464797,-99) , 
6, 0.556598, 0, 0, 0.482934,-99) , 
11, -0.524478, 1, 0, 0.520932,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.590709,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.568907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.416721,-99) , 
6, 1.01662, 0, 0, 0.46792,-99) , 
7, 19.3839, 1, 0, 0.48995,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.468806,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.115639,-99) , 
4, 2.04346, 1, 0, 0.454632,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234002,-99) , 
1, 12.5, 1, 0, 0.417261,-99) , 
7, 15.8842, 0, 0, 0.464245,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.175655,-99) , 
3, 0.999623, 1, 0, 0.458379,-99) , 
6, 0.624199, 1, 0, 0.49318,-99)    );
  // itree = 1479
  fBoostWeights.push_back(0.00836747);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.670453,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.514107,-99) , 
6, 0.983092, 1, 0, 0.620838,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.49624,-99) , 
8, 2.2681, 1, 0, 0.587601,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.594079,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459736,-99) , 
9, 99.916, 0, 0, 0.530389,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35151,-99) , 
12, 2645.01, 1, 0, 0.506789,-99) , 
5, 1.45402, 1, 0, 0.539118,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.314594,-99) , 
3, 0.99959, 1, 0, 0.530594,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.617941,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486964,-99) , 
8, 0.802082, 1, 0, 0.508152,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.545619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.31437,-99) , 
1, 14.5, 0, 0, 0.415231,-99) , 
8, 0.462495, 0, 0, 0.490468,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.5637,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330275,-99) , 
8, 0.198159, 1, 0, 0.40611,-99) , 
5, 1.98329, 1, 0, 0.47825,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.309372,-99) , 
3, 0.763495, 0, 0, 0.46849,-99) , 
11, 0.236165, 0, 0, 0.499089,-99)    );
  // itree = 1480
  fBoostWeights.push_back(0.0119175);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.716396,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.698045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.593002,-99) , 
8, 1.55402, 1, 0, 0.643864,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.708129,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.517771,-99) , 
11, -4.76753, 1, 0, 0.538272,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.52543,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.36005,-99) , 
7, 42.3329, 0, 0, 0.429924,-99) , 
6, 0.702632, 1, 0, 0.514013,-99) , 
4, 1.05874, 0, 0, 0.53461,-99) , 
9, 382.406, 0, 0, 0.552335,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59612,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.489162,-99) , 
6, 0.88001, 0, 0, 0.526907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27186,-99) , 
0, 69.5, 1, 0, 0.516816,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.64048,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.486699,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300843,-99) , 
5, 1.65051, 1, 0, 0.37006,-99) , 
8, 0.169364, 1, 0, 0.421301,-99) , 
9, 113.812, 1, 0, 0.474793,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0496094,-99) , 
3, 0.999712, 1, 0, 0.466955,-99) , 
4, 1.18127, 1, 0, 0.509987,-99)    );
  // itree = 1481
  fBoostWeights.push_back(0.00809809);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.669995,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.7384,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427317,-99) , 
11, -2.78484, 1, 0, 0.50346,-99) , 
5, 1.29227, 1, 0, 0.583893,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.709517,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.469926,-99) , 
3, 0.750532, 0, 0, 0.612822,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.527959,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.458592,-99) , 
9, 148.784, 0, 0, 0.484324,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.493528,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.234647,-99) , 
0, 36.5, 0, 0, 0.326883,-99) , 
7, 53.3785, 1, 0, 0.474086,-99) , 
3, 0.84442, 1, 0, 0.485306,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.133394,-99) , 
0, 53.5, 1, 0, 0.47873,-99) , 
2, 38.5, 0, 0, 0.490721,-99)    );
  // itree = 1482
  fBoostWeights.push_back(0.0104757);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.771082,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.563578,-99) , 
10, 0.475273, 1, 0, 0.705062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.587018,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.447975,-99) , 
1, 14.5, 0, 0, 0.549649,-99) , 
3, 0.995353, 0, 0, 0.587366,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.636311,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.502786,-99) , 
6, 1.01581, 0, 0, 0.54798,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.528724,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.303675,-99) , 
6, 0.976018, 1, 0, 0.423449,-99) , 
11, -4.02137, 0, 0, 0.521803,-99) , 
6, 0.639555, 1, 0, 0.555132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.379474,-99) , 
3, 0.999359, 1, 0, 0.542617,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.592636,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.490091,-99) , 
10, 0.196964, 0, 0, 0.5271,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.293044,-99) , 
5, 2.24201, 1, 0, 0.515926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501572,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292763,-99) , 
9, 98.5245, 0, 0, 0.400429,-99) , 
4, 0.925138, 0, 0, 0.486989,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.146669,-99) , 
7, 30.895, 1, 0, 0.475516,-99) , 
2, 12.5, 0, 0, 0.515115,-99)    );
  // itree = 1483
  fBoostWeights.push_back(0.0125596);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.635586,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.598257,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.638591,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.473348,-99) , 
8, 2.04064, 0, 0, 0.49062,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480527,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.23127,-99) , 
5, 1.44557, 1, 0, 0.393469,-99) , 
8, 2.37667, 1, 0, 0.468598,-99) , 
3, 0.858919, 1, 0, 0.483679,-99) , 
11, 5.40939, 0, 0, 0.49958,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.692864,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652121,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.443535,-99) , 
4, 1.73639, 1, 0, 0.513699,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436928,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.27612,-99) , 
9, 57.0538, 1, 0, 0.372465,-99) , 
4, 1.60384, 0, 0, 0.44893,-99) , 
10, 0.290599, 1, 0, 0.484412,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.639174,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.412672,-99) , 
11, -0.191996, 1, 0, 0.451978,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.414021,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240117,-99) , 
8, 0.797909, 1, 0, 0.328501,-99) , 
12, 3765, 1, 0, 0.403367,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0428205,-99) , 
8, 2.71695, 1, 0, 0.384495,-99) , 
10, 0.248428, 0, 0, 0.43192,-99) , 
4, 1.29104, 1, 0, 0.471326,-99)    );
  // itree = 1484
  fBoostWeights.push_back(0.00549628);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.576852,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.420198,-99) , 
5, 1.02704, 0, 0, 0.551386,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.185209,-99) , 
4, 2.06017, 1, 0, 0.541129,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.630461,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.142836,-99) , 
0, 68.5, 1, 0, 0.46773,-99) , 
2, 55.5, 0, 0, 0.474584,-99) , 
13, 1.5, 0, 0, 0.495537,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.292401,-99) , 
10, 0.0235994, 0, 0, 0.491136,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.205777,-99) , 
1, 84.5, 1, 0, 0.487139,-99)    );
  // itree = 1485
  fBoostWeights.push_back(0.0057226);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.743702,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.595767,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.418658,-99) , 
4, 0.987069, 0, 0, 0.531089,-99) , 
5, 2.08636, 0, 0, 0.5728,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643236,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.448411,-99) , 
13, 0.5, 0, 0, 0.573242,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.516446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.442015,-99) , 
12, 1752.82, 0, 0, 0.486497,-99) , 
6, 0.114555, 1, 0, 0.498711,-99) , 
10, 0.0633418, 1, 0, 0.510985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35801,-99) , 
7, 7.39156, 0, 0, 0.506902,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.252581,-99) , 
3, 0.999746, 1, 0, 0.502295,-99)    );
  // itree = 1486
  fBoostWeights.push_back(0.00578385);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.646331,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.532721,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.476315,-99) , 
11, 0.553091, 0, 0, 0.502212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0375642,-99) , 
7, 104.909, 1, 0, 0.498221,-99) , 
2, 48.5, 0, 0, 0.504175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.217181,-99) , 
4, 2.19571, 1, 0, 0.501041,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.464836,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.166463,-99) , 
2, 71.5, 0, 0, 0.299724,-99) , 
1, 51.5, 1, 0, 0.490571,-99)    );
  // itree = 1487
  fBoostWeights.push_back(0.0147557);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.618859,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495489,-99) , 
8, 0.385819, 0, 0, 0.599259,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.438694,-99) , 
3, 0.999009, 1, 0, 0.585484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.376813,-99) , 
1, 40.5, 1, 0, 0.56658,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652579,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.565564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.396674,-99) , 
9, 71.4541, 1, 0, 0.490569,-99) , 
10, 0.120002, 1, 0, 0.550204,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.554985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.423999,-99) , 
6, 0.689571, 1, 0, 0.513558,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.425053,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.214342,-99) , 
5, 1.43449, 1, 0, 0.338078,-99) , 
1, 11.5, 0, 0, 0.448052,-99) , 
4, 1.3745, 0, 0, 0.475411,-99) , 
11, -0.0958615, 0, 0, 0.522459,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.76156,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550546,-99) , 
0, 21.5, 0, 0, 0.634372,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.436893,-99) , 
5, 2.1095, 0, 0, 0.547609,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651166,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.459339,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.19315,-99) , 
8, 0.878273, 0, 0, 0.403754,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.143112,-99) , 
11, 0.640854, 1, 0, 0.313996,-99) , 
7, 8.64282, 1, 0, 0.353163,-99) , 
8, 0.407643, 1, 0, 0.449927,-99) , 
5, 1.89427, 1, 0, 0.506258,-99)    );
  // itree = 1488
  fBoostWeights.push_back(0.00681671);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.530888,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.401531,-99) , 
1, 42.5, 1, 0, 0.521958,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.177214,-99) , 
7, 237.164, 1, 0, 0.51815,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.35015,-99) , 
1, 6.5, 0, 0, 0.510535,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0,-99) , 
5, 2.36596, 1, 0, 0.506373,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.539658,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.380102,-99) , 
12, 2826.94, 1, 0, 0.46421,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.211245,-99) , 
10, 0.450103, 1, 0, 0.391708,-99) , 
8, 0.176543, 0, 0, 0.492261,-99)    );
  // itree = 1489
  fBoostWeights.push_back(0.0082723);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.741274,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.581574,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.501664,-99) , 
3, 0.987284, 1, 0, 0.542329,-99) , 
11, -10.6441, 1, 0, 0.548918,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.394086,-99) , 
5, 0.511725, 0, 0, 0.541187,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363203,-99) , 
8, 0.0996564, 0, 0, 0.531675,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.642244,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.466841,-99) , 
8, 0.0752584, 1, 0, 0.548106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.663262,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.350132,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.0723907,-99) , 
6, 0.233248, 0, 0, 0.270117,-99) , 
10, 0.04017, 1, 0, 0.335549,-99) , 
8, 0.300535, 1, 0, 0.440703,-99) , 
5, 2.01841, 1, 0, 0.519119,-99)    );
  // itree = 1490
  fBoostWeights.push_back(0.0127012);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.790985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.57702,-99) , 
11, -2.49038, 1, 0, 0.625734,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.542927,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.322317,-99) , 
7, 29.0624, 1, 0, 0.511956,-99) , 
0, 25.5, 0, 0, 0.540853,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.584985,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.421217,-99) , 
3, 0.988109, 1, 0, 0.481044,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329532,-99) , 
3, 0.916414, 0, 0, 0.46051,-99) , 
6, 0.806436, 1, 0, 0.512509,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.363778,-99) , 
8, 0.120145, 0, 0, 0.504173,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.673677,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.661065,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.452883,-99) , 
8, 0.282808, 0, 0, 0.514474,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.540346,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.274585,-99) , 
7, 11.6308, 1, 0, 0.359324,-99) , 
8, 0.410066, 1, 0, 0.428599,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.129388,-99) , 
3, 0.998488, 1, 0, 0.402179,-99) , 
6, 0.99651, 0, 0, 0.424065,-99) , 
5, 1.87787, 1, 0, 0.485901,-99)    );
  // itree = 1491
  fBoostWeights.push_back(0.012121);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74151,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.688741,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523305,-99) , 
4, 1.56931, 0, 0, 0.59206,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.210722,-99) , 
7, 129.079, 1, 0, 0.549515,-99) , 
5, 1.28545, 1, 0, 0.623212,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.393517,-99) , 
1, 57.5, 1, 0, 0.566184,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.69045,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.51642,-99) , 
11, 2.4697, 0, 0, 0.535717,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.619,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.422331,-99) , 
0, 10.5, 1, 0, 0.454497,-99) , 
3, 0.986906, 1, 0, 0.494106,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.662437,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.591768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.317062,-99) , 
10, 0.0322484, 1, 0, 0.353437,-99) , 
3, 0.999066, 0, 0, 0.389167,-99) , 
5, 1.98394, 1, 0, 0.477402,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145573,-99) , 
0, 40.5, 1, 0, 0.470152,-99) , 
2, 30.5, 0, 0, 0.485884,-99)    );
  // itree = 1492
  fBoostWeights.push_back(0.00965995);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.62374,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.480175,-99) , 
9, 224.515, 1, 0, 0.595881,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.550858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.357409,-99) , 
11, -2.49072, 0, 0, 0.519924,-99) , 
3, 0.991361, 0, 0, 0.55491,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.586911,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.405234,-99) , 
7, 28.3136, 0, 0, 0.47229,-99) , 
8, 0.435392, 0, 0, 0.542906,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.400034,-99) , 
5, 0.525475, 0, 0, 0.532903,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.71021,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.603768,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.406182,-99) , 
8, 0.791178, 1, 0, 0.518533,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.315228,-99) , 
12, 4212.48, 1, 0, 0.474186,-99) , 
3, 0.928791, 0, 0, 0.544146,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.600557,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.44452,-99) , 
9, 92.5801, 0, 0, 0.532994,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.479993,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.34129,-99) , 
10, 0.109272, 1, 0, 0.398925,-99) , 
2, 21.5, 0, 0, 0.428175,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.144172,-99) , 
7, 117.625, 1, 0, 0.421802,-99) , 
3, 0.948811, 1, 0, 0.455029,-99) , 
5, 1.73082, 1, 0, 0.504544,-99)    );
  // itree = 1493
  fBoostWeights.push_back(0.00870279);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.74314,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.566853,-99) , 
8, 1.34196, 1, 0, 0.663523,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.50937,-99) , 
2, 13.5, 0, 0, 0.58633,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652768,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522369,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.386202,-99) , 
6, 0.929254, 1, 0, 0.507802,-99) , 
6, 1.01643, 0, 0, 0.518288,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.612789,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.445796,-99) , 
5, 1.14257, 1, 0, 0.505189,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.437446,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.13789,-99) , 
1, 15.5, 0, 0, 0.342748,-99) , 
8, 1.04176, 0, 0, 0.437104,-99) , 
10, 0.501306, 1, 0, 0.497927,-99) , 
11, 5.21747, 0, 0, 0.50925,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.588809,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.283748,-99) , 
8, 0.177586, 1, 0, 0.383745,-99) , 
4, 1.88936, 1, 0, 0.501179,-99)    );
  // itree = 1494
  fBoostWeights.push_back(0.00732354);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.690161,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.538542,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.427805,-99) , 
1, 35.5, 1, 0, 0.528293,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.523315,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.298311,-99) , 
9, 136.672, 0, 0, 0.388513,-99) , 
3, 0.883483, 0, 0, 0.515318,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.518564,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.402889,-99) , 
3, 0.96797, 0, 0, 0.479482,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.330676,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.098516,-99) , 
6, 0.54149, 1, 0, 0.263468,-99) , 
5, 1.96514, 1, 0, 0.444715,-99) , 
2, 11.5, 0, 0, 0.491151,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.290607,-99) , 
7, 145.185, 1, 0, 0.486206,-99) , 
8, 3.05713, 0, 0, 0.493357,-99)    );
  // itree = 1495
  fBoostWeights.push_back(0.00605969);
  fForest.push_back( 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.613655,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59739,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.450872,-99) , 
5, 1.51441, 1, 0, 0.542751,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.482144,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.262378,-99) , 
7, 39.5743, 1, 0, 0.462167,-99) , 
2, 29.5, 0, 0, 0.475317,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.294415,-99) , 
7, 177.233, 1, 0, 0.472143,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.329142,-99) , 
1, 6.5, 0, 0, 0.465945,-99) , 
11, -8.9166, 1, 0, 0.47336,-99)    );
  // itree = 1496
  fBoostWeights.push_back(0.012495);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.774171,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.608546,-99) , 
9, 105.813, 0, 0, 0.711142,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
4, 1.89836, 1, 0, 0.635145,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.703105,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.520778,-99) , 
4, 0.889782, 1, 0, 0.594541,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.606298,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.391904,-99) , 
10, 0.12276, 1, 0, 0.469336,-99) , 
8, 0.334931, 0, 0, 0.529934,-99) , 
4, 1.57792, 0, 0, 0.564456,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.390868,-99) , 
9, 469.788, 1, 0, 0.555031,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.651843,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.504702,-99) , 
4, 0.882282, 0, 0, 0.556654,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.491926,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.242575,-99) , 
6, 0.390682, 0, 0, 0.468113,-99) , 
4, 1.20499, 1, 0, 0.518611,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.522484,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300994,-99) , 
1, 10.5, 0, 0, 0.447858,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.181093,-99) , 
10, 0.228216, 1, 0, 0.414603,-99) , 
9, 180.615, 1, 0, 0.492494,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.145872,-99) , 
5, 2.29997, 1, 0, 0.488732,-99) , 
8, 0.69067, 1, 0, 0.512625,-99)    );
  // itree = 1497
  fBoostWeights.push_back(0.00825581);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.73429,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.564699,-99) , 
5, 1.29929, 1, 0, 0.616871,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.374416,-99) , 
8, 2.65863, 1, 0, 0.58947,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.488076,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.334214,-99) , 
3, 0.986783, 1, 0, 0.395176,-99) , 
0, 11.5, 0, 0, 0.549299,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.702535,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.472624,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.102939,-99) , 
7, 99.5099, 1, 0, 0.468962,-99) , 
2, 56.5, 0, 0, 0.477301,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.269108,-99) , 
1, 70.5, 1, 0, 0.471934,-99) , 
9, 166.507, 0, 0, 0.494256,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.300966,-99) , 
9, 461.782, 1, 0, 0.485661,-99)    );
  // itree = 1498
  fBoostWeights.push_back(0.0112467);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.779438,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.428445,-99) , 
4, 1.34047, 1, 0, 0.65742,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.665873,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.526435,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.375642,-99) , 
1, 43.5, 1, 0, 0.514132,-99) , 
12, 2234.27, 0, 0, 0.530318,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.604124,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.643862,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.352789,-99) , 
4, 1.74086, 0, 0, 0.393619,-99) , 
11, -0.960401, 1, 0, 0.447023,-99) , 
12, 2725.15, 1, 0, 0.514364,-99) , 
12, 4006.22, 0, 0, 0.531046,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.652976,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.47381,-99) , 
6, 0.321913, 0, 0, 0.586195,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.513014,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359863,-99) , 
11, -4.28125, 1, 0, 0.480033,-99) , 
11, -3.33978, 0, 0, 0.516391,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.430546,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.272521,-99) , 
1, 13.5, 1, 0, 0.344137,-99) , 
12, 5950.55, 0, 0, 0.481305,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.280583,-99) , 
10, 0.0602648, 0, 0, 0.457106,-99) , 
12, 4922.28, 1, 0, 0.506461,-99)    );
  // itree = 1499
  fBoostWeights.push_back(0.0130267);
  fForest.push_back( 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.704492,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.521908,-99) , 
11, 1.28287, 1, 0, 0.630424,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.710357,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.495341,-99) , 
6, 0.452318, 0, 0, 0.601263,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.548907,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.278818,-99) , 
8, 2.12037, 0, 0, 0.398424,-99) , 
8, 0.798204, 1, 0, 0.522733,-99) , 
5, 1.50962, 1, 0, 0.568585,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.657197,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.240366,-99) , 
5, 2.36375, 1, 0, 0.640781,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.37797,-99) , 
7, 27.0296, 1, 0, 0.611662,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.582812,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.359805,-99) , 
8, 0.525982, 1, 0, 0.463177,-99) , 
1, 12.5, 1, 0, 0.555128,-99) , 
new BDTNode(
new BDTNode(
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.569381,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.429166,-99) , 
8, 2.19126, 1, 0, 0.53209,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, 1, 0.59394,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.382221,-99) , 
7, 47.9997, 0, 0, 0.427998,-99) , 
9, 55.9809, 0, 0, 0.496926,-99) , 
new BDTNode(
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.42505,-99) , 
new BDTNode(
0, 
0, 
-1, 0, 1, -1, 0.275278,-99) , 
11, -0.573491, 1, 0, 0.340905,-99) , 
4, 1.41847, 1, 0, 0.476224,-99) , 
4, 1.57912, 0, 0, 0.496986,-99) , 
9, 200.233, 1, 0, 0.515677,-99)    );
   return;
}
 
// Clean up
inline void ReadBDT::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
